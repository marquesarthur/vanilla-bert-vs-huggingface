{
    "task": "Quick Actions don't get displayed on Android 7.0",
    "description": "### Expected behavior\n\nObviously, when this setting is enabled for \"single\" or \"all\", the delete button should appear for the appropriate number of messages being present.\n### Actual behavior\n\nNotification appears, WITHOUT the delete button\n### Steps to reproduce\n1. Enable notification delete button\n2. Exit k9\n3. receive an email\n### Environment\n\nK-9 Mail version: 5.114\n\nAndroid version:\n7.0 (Nexus 6) or 7.1 (Pixel).\n\nAccount type (IMAP, POP3, WebDAV/Exchange):\nIMAP / not applicable.\n",
    "type": "GIT",
    "link": "https://github.com/k9mail/k-9/issues/1741",
    "question_id": "1741",
    "resources": {
        "api": [
            {
                "link": "https://developer.android.com/training/notify-user/build-notification",
                "type": "android",
                "content": [
                    "Notifications provide short, timely information about events in your app while it's not in use.",
                    "This page teaches you how to create a notification with various features for Android 4.0 ( API level 14 ) and higher.",
                    "For an introduction to how notifications appear on Android, see the Notifications Overview.",
                    "For sample code that uses notifications, see the Android Notifications Sample.",
                    "Notice that the code on this page uses the NotificationCompat APIs from the Android support library.",
                    "These APIs allow you to add features available only on newer versions of Android while still providing compatibility back to Android 4.0 ( API level 14 ).",
                    "However, some new features such as the inline reply action result in a no-op on older versions.",
                    "Although most projects created with Android Studio include the necessary dependencies to use NotificationCompat, you should verify that your module-level build.gradle file includes the following dependency:",
                    "A notification in its most basic and compact form ( also known as collapsed form ) displays an icon, a title, and a small amount of content text.",
                    "In this section, you'll learn how to create a notification that the user can click on to launch an activity in your app.",
                    "A notification with a title and text",
                    "For more details about each part of a notification, read about the notification anatomy.",
                    "To get started, you need to set the notification's content and channel using a NotificationCompat.Builder object.",
                    "The following example shows how to create a notification with the following:",
                    "Notice that the NotificationCompat.Builder constructor requires that you provide a channel ID.",
                    "This is required for compatibility with Android 8.0 ( API level 26 ) and higher, but is ignored by older versions.",
                    "By default, the notification's text content is truncated to fit one line.",
                    "If you want your notification to be longer, you can enable an expandable notification by adding a style template with setStyle ( ).",
                    "For example, the following code creates a larger text area:",
                    "For more information about other large notification styles, including how to add an image and media playback controls, see Create a Notification with Expandable Detail.",
                    "Before you can deliver the notification on Android 8.0 and higher, you must register your app's notification channel with the system by passing an instance of NotificationChannel to createNotificationChannel ( ).",
                    "So the following code is blocked by a condition on the SDK_INT version:",
                    "Because you must create the notification channel before posting any notifications on Android 8.0 and higher, you should execute this code as soon as your app starts.",
                    "It's safe to call this repeatedly because creating an existing notification channel performs no operation.",
                    "Notice that the NotificationChannel constructor requires an importance, using one of the constants from the NotificationManager class.",
                    "This parameter determines how to interrupt the user for any notification that belongs to this channel -- though you must also set the priority with setPriority ( ) to support Android 7.1 and lower ( as shown above ).",
                    "Although you must set the notification importance/priority as shown here, the system does not guarantee the alert behavior you'll get.",
                    "In some cases the system might change the importance level based other factors, and the user can always redefine what the importance level is for a given channel.",
                    "For more information about what the different levels mean, read about notification importance levels.",
                    "Every notification should respond to a tap, usually to open an activity in your app that corresponds to the notification.",
                    "To do so, you must specify a content intent defined with a PendingIntent object and pass it to setContentIntent ( ).",
                    "The following snippet shows how to create a basic intent to open an activity when the user taps the notification:",
                    "Notice this code calls setAutoCancel ( ), which automatically removes the notification when the user taps it.",
                    "The setFlags ( ) method shown above helps preserve the user's expected navigation experience after they open your app via the notification.",
                    "But whether you want to use that depends on what type of activity you're starting, which may be one of the following:",
                    "For more about the different ways to configure your notification's intent, read Start an Activity from a Notification.",
                    "To make the notification appear, call NotificationManagerCompat.notify ( ), passing it a unique ID for the notification and the result of NotificationCompat.Builder.build ( ).",
                    "Remember to save the notification ID that you pass to NotificationManagerCompat.notify ( ) because you'll need it later if you want to update or remove the notification.",
                    "A notification can offer up to three action buttons that allow the user to respond quickly, such as snooze a reminder or even reply to a text message.",
                    "But these action buttons should not duplicate the action performed when the user taps the notification.",
                    "A notification with one action button",
                    "To add an action button, pass a PendingIntent to the addAction ( ) method.",
                    "This is just like setting up the notification's default tap action, except instead of launching an activity, you can do a variety of other things such as start a BroadcastReceiver that performs a job in the background so the action does not interrupt the app that's already open.",
                    "For example, the following code shows how to send a broadcast to a specific receiver:",
                    "For more information about building a BroadcastReceiver to run background work, see the Broadcasts guide.",
                    "If you're instead trying to build a notification with media playback buttons ( such as to pause and skip tracks ), see how to create a notification with media controls.",
                    "The direct reply action, introduced in Android 7.0 ( API level 24 ), allows users to enter text directly into the notification, which is delivered to your app without opening an activity.",
                    "For example, you can use a direct reply action to let users reply to text messages or update task lists from within the notification.",
                    "Tapping the `` Reply'' button opens the text input",
                    "The direct reply action appears as an additional button in the notification that opens a text input.",
                    "When the user finishes typing, the system attaches the text response to the intent you had specified for the notification action and sends the intent to your app.",
                    "To create a notification action that supports direct reply:",
                    "Caution: If you re-use a PendingIntent, a user may reply to a different conversation than the one they thought they did.",
                    "You must either provide a request code that is different for each conversation or provide an intent that doesn't return true when you call equals ( ) on the reply intent of any other conversation.",
                    "The conversation ID is frequently passed as part of the intent's extras bundle, but is ignored when you call equals ( ).",
                    "The system prompts the user to input a response when they trigger the notification action, as shown in figure 3.",
                    "To receive user input from the notification's reply UI, call RemoteInput.getResultsFromIntent ( ), passing it the Intent received by your BroadcastReceiver:",
                    "After you've processed the text, you must update the notification by calling NotificationManagerCompat.notify ( ) with the same ID and tag ( if used ).",
                    "This is necessary to hide direct reply UI and confirm to the user that their reply was received and processed correctly.",
                    "When working with this new notification, use the context that's passed to the receiver's onReceive ( ) method.",
                    "You should also append the reply to the bottom of the notification by calling setRemoteInputHistory ( ).",
                    "However, if you're building a messaging app, you should create a messaging-style notification and append the new message to the conversation.",
                    "For more advice for notifications from a messaging apps, see best practices for messaging apps.",
                    "Notifications can include an animated progress indicator that shows users the status of an ongoing operation.",
                    "The progress bar during and after the operation.",
                    "If you can estimate how much of the operation is complete at any time, use the `` determinate'' form of the indicator ( as shown in figure 4 ) by calling setProgress ( max, progress, false ).",
                    "The first parameter is what the `` complete'' value is ( such as 100 ) ; the second is how much is currently complete, and the last indicates this is a determinate progress bar.",
                    "As your operation proceeds, continuously call setProgress ( max, progress, false ) with an updated value for progress and re-issue the notification.",
                    "At the end of the operation, progress should equal max.",
                    "You can either leave the progress bar showing when the operation is done, or remove it.",
                    "In either case, remember to update the notification text to show that the operation is complete.",
                    "To remove the progress bar, call setProgress ( 0, 0, false ).",
                    "To display an indeterminate progress bar ( a bar that does not indicate percentage complete ), call setProgress ( 0, 0, true ).",
                    "The result is an indicator that has the same style as the progress bar above, except the progress bar is a continuous animation that does not indicate completion.",
                    "The progress animation runs until you call setProgress ( 0, 0, false ) and then update the notification to remove the activity indicator.",
                    "Remember to change the notification text to indicate that the operation is complete.",
                    "Android uses some pre-defined system-wide categories to determine whether to disturb the user with a given notification when the user has enabled Do Not Disturb mode.",
                    "If your notification falls into one of the pre-defined notification categories defined in NotificationCompat -- such as CATEGORY_ALARM, CATEGORY_REMINDER, CATEGORY_EVENT, or CATEGORY_CALL -- you should declare it as such by passing the appropriate category to setCategory ( ).",
                    "This information about your notification category is used by the system to make decisions about displaying your notification when the device is in Do Not Disturb mode.",
                    "However, you are not required to set a system-wide category and should only do so if your notifications match one of the categories defined by in NotificationCompat.",
                    "Your app might need to display an urgent, time-sensitive message, such as an incoming phone call or a ringing alarm.",
                    "In these situations, you can associate a full-screen intent with your notification.",
                    "When the notification is invoked, users see one of the following, depending on the device's lock status:",
                    "The following code snippet demonstrates how to associate your notification with a full-screen intent:",
                    "To control the level of detail visible in the notification from the lock screen, call setVisibility ( ) and specify one of the following values:",
                    "When VISIBILITY_PRIVATE is set, you can also provide an alternate version of the notification content which hides certain details.",
                    "For example, an SMS app might display a notification that shows You have 3 new text messages, but hides the message contents and senders.",
                    "To provide this alternative notification, first create the alternative notification with NotificationCompat.Builder as usual.",
                    "Then attach the alternative notification to the normal notification with setPublicVersion ( ).",
                    "However, the user always has final control over whether their notifications are visible on the lock screen and can even control that based on your app's notification channels.",
                    "To update this notification after you've issued it, call NotificationManagerCompat.notify ( ) again, passing it a notification with the same ID you used previously.",
                    "If the previous notification has been dismissed, a new notification is created instead.",
                    "You can optionally call setOnlyAlertOnce ( ) so your notification interupts the user ( with sound, vibration, or visual clues ) only the first time the notification appears and not for later updates.",
                    "Notifications remain visible until one of the following happens:",
                    "Use the best practices listed here as a quick reference of what to keep in mind when creating notifications for your messaging and chat apps.",
                    "Starting in Android 7.0 ( API level 24 ), Android provides a notification style template specifically for messaging content.",
                    "Using the NotificationCompat.MessagingStyle class, you can change several of the labels displayed on the notification, including the conversation title, additional messages, and the content view for the notification.",
                    "The following code snippet demonstrates how to customize a notification's style using the MessagingStyle class.",
                    "Starting in Android 8.0 ( API level 26 ), notifications that use the NotificationCompat.MessagingStyle class display more content in their collapsed form.",
                    "You can also use the addHistoricMessage ( ) method to provide context to a conversation by adding historic messages to messaging-related notifications.",
                    "Direct Reply allows a user to reply inline to a message.",
                    "A small icon, set by setSmallIcon ( ).",
                    "This is the only user-visible content that's required.",
                    "A title, set by setContentTitle ( ).",
                    "The body text, set by setContentText ( ).",
                    "The notification priority, set by setPriority ( ).",
                    "The priority determines how intrusive the notification should be on Android 7.1 and lower.",
                    "( For Android 8.0 and higher, you must instead set the channel importance -- shown in the next section. )",
                    "An activity that exists exclusively for responses to the notification.",
                    "There's no reason the user would navigate to this activity during normal app use, so the activity starts a new task instead of being added to your app's existing task and back stack.",
                    "This is the type of intent created in the sample above.",
                    "An activity that exists in your app's regular app flow.",
                    "In this case, starting the activity should create a back stack so that the user's expectations for the Back and Up buttons is preserved.",
                    "Create an instance of RemoteInput.Builder that you can add to your notification action.",
                    "This class's constructor accepts a string that the system uses as the key for the text input.",
                    "Later, your handheld app uses that key to retrieve the text of the input.",
                    "Create a PendingIntent for the reply action.",
                    "Kotlin Java Caution: If you re-use a PendingIntent, a user may reply to a different conversation than the one they thought they did.",
                    "Attach the RemoteInput object to an action using addRemoteInput ( ).",
                    "Apply the action to a notification and issue the notification.",
                    "If the user's device is locked, a full-screen activity appears, covering the lockscreen.",
                    "If the user's device is unlocked, the notification appears in an expanded form that includes options for handling or dismissing the notification.",
                    "VISIBILITY_PUBLIC shows the notification's full content.",
                    "VISIBILITY_SECRET doesn't show any part of this notification on the lock screen.",
                    "VISIBILITY_PRIVATE shows basic information, such as the notification's icon and the content title, but hides the notification's full content.",
                    "The user dismisses the notification.",
                    "The user clicks the notification, and you called setAutoCancel ( ) when you created the notification.",
                    "You call cancel ( ) for a specific notification ID.",
                    "This method also deletes ongoing notifications.",
                    "You call cancelAll ( ), which removes all of the notifications you previously issued.",
                    "If you set a timeout when creating a notification using setTimeoutAfter ( ), the system cancels the notification after the specified duration elapses.",
                    "If required, you can cancel a notification before the specified timeout duration elapses.",
                    "Call MessagingStyle.setConversationTitle ( ) to set a title for group chats with more than two people.",
                    "A good conversation title might be the name of the group chat or, if it doesn't have a specific name, a list of the participants in the conversation.",
                    "Without this, the message may be mistaken as belonging to a one-to-one conversation with the sender of the most recent message in the conversation.",
                    "Use the MessagingStyle.setData ( ) method to include media messages such as images.",
                    "MIME types, of the pattern image / * are currently supported.",
                    "After a user replies with the inline reply action, use MessagingStyle.addMessage ( ) to update the MessagingStyle notification and do not retract or cancel the notification.",
                    "Not cancelling the notification allows a user to send multiple replies from the notification.",
                    "To make the inline reply action compatible with Wear OS, call Action.WearableExtender.setHintDisplayInlineAction ( true ).",
                    "Use the addHistoricMessage ( ) method to provide context to a direct reply conversation by adding historic messages to the notification.",
                    "To enable Smart Reply, call setAllowGeneratedResponses ( true ) on the reply action.",
                    "This causes Smart Reply responses to be available to users when the notification is bridged to a Wear OS device.",
                    "Smart Reply responses are generated by an entirely on-watch machine learning model using the context provided by the NotificationCompat.MessagingStyle notification, and no data is uploaded to the Internet to generate the responses.",
                    "Assign notification metadata to tell the system how to handle your app notifications when the device is in Do Not Disturb mode.",
                    "For example, use the addPerson ( ) or setCategory ( Notification.CATEGORY _ MESSAGE ) method to override the Do Not Disturb mode.",
                    ""
                ],
                "title": "Create a Notification \u00a0|\u00a0 Android Developers"
            }
        ],
        "git": [
            {
                "link": "https://github.com/light-launcher/Light-Android-Launcher/issues/16",
                "content": [
                    "Shortcut to enable greyscale, or view describing how to do it \u00b7 Issue # 16 \u00b7 light-launcher/Light-Android-Launcher \u00b7 GitHub",
                    "Shortcut to enable greyscale, or view describing how to do it",
                    "We could have a shortcut on top of the AllAppsActivity ( or on the bottom ) to enable greyscale mode on the phone globally, if it supports it:",
                    "This makes the phone much less distracting and helps you use it less.",
                    "( Yes this is an iOS screenshot, but I couldn't find a good Android one.",
                    "The text was updated successfully, but these errors were encountered:",
                    "I have no idea if this is possible from a launcher ( @postapczuk will have to chime in on this one ) what I do is use the Titles from the status bar.",
                    "You'll need the paid Tiles app, but you can change monochromacy from the status bar.",
                    "Could be a better solution as it might be frustrating having to go back to the launcher every single time, imo it's much easier to just drag down.",
                    "I don't disable monochromacy very often anyway.",
                    "Screenshotting bypasses the monochromacy setting, but it looks black and white usually.",
                    "@snug ah, good resource, didn't know that app.",
                    "It seems that the app provides this overflow of settings, where we want single specific things.",
                    "Tiles makes use of the new Quick Settings Tile API ( https://developer.android.com/about/versions/nougat/android-7.0.html#tile_api ) to provide new tiles that can be added to Quick Settings to change system settings and take quick actions without leaving the context of the current app.",
                    "So we could simply do the same.",
                    "Then not in the launcher but by adding one tile for monochromacy.",
                    "( That's better than requiring a separate app just for this little toggle.",
                    "@snug do you use any other toggles from that app which might be useful for the Light Launcher ?",
                    "@jancborchardt Only problem is that it requires that you add android.permission.WRITE _ SECURE_SETTINGS via adb, so plugging it into a computer and running commands, not a huge issue but might cause some problems.",
                    "Otherwise, not many others that would really fit the apps design.",
                    "I think monochromacy is an important thing to have on a phone though.",
                    "Only problem is that it requires that you add android.permission.WRITE _ SECURE_SETTINGS via adb, so plugging it into a computer and running commands, not a huge issue but might cause some problems.",
                    "Oh wow, that is necessary for all of the switches, also monochromacy ?",
                    "I guess it makes sense as on Android it's only available in the development settings.",
                    "But this is too nerdy, we can't require people to install adb and connect to their computer.",
                    "Maybe a good first step is just having an entry on the bottom of the all apps view `` Switch phone to greyscale'' or so, which simply opens a new view with the instructions:",
                    "Switch your phone to greyscale for a distraction-less experience:",
                    "Go to Settings \u2192 System \u2192 About phone ( could be linked ? )",
                    "Scroll down to Build number and tap on it 7 times until it says `` You are a developer !''",
                    "Go back to the previous list and open Developer options",
                    "Scroll down to Hardware accelerated rendering section",
                    "For Simulate color space, chose Monochromacy",
                    "Depending on your phone it might slow down performance, so if you have an older model try if it works for you.",
                    "Just tested these steps on a Fairphone 2 with Android 8.1 ( Lineage ) and a Moto G1 with Android 5.1.1 ( Cyanogen ).",
                    "Works for both of them, but on the older Moto G1 there is a slight performance impact, which is why I added the note on the bottom.",
                    "For reference, there's also a new app on F-Droid specifically converting the display to greyscale, Monochromatic by @RichyHBM.",
                    "But it basically also needs what @snug wrote:",
                    "it requires that you add android.permission.WRITE _ SECURE_SETTINGS via adb, so plugging it into a computer and running commands",
                    "So I'm not sure if that's really so easy.",
                    "The instructions I wrote above at # 16 ( comment ) work even when you only have your phone, and don't require you to install anything new.",
                    "Hello, as @jancborchardt and @snug mentioned, WRITE_SECURE_SETTINGS is needed to be able to change one of the developer settings that enables the greyscale",
                    ""
                ],
                "title": "Shortcut to enable greyscale, or view describing how to do it \u00b7 Issue # 16 \u00b7 light-launcher/Light-Android-Launcher \u00b7 GitHub"
            }
        ],
        "qa": [
            {
                "uid": "3059155",
                "link": "https://stackoverflow.com/questions/3059155",
                "title": "Android Quick Actions UI Pattern",
                "answers": [
                    {
                        "uid": 3060286,
                        "score": 3,
                        "text": [
                            "Interesting Question.",
                            "Android uses this pattern in their Contacts-App.",
                            "You can get the source using git:",
                            "I did this and quickly grepped it, but I didn't get a conclusive result.",
                            "I think that's done in `` Contacts/src/com/android/contacts/ui/QuickContactWindow.java'', but I am not completely sure.",
                            "I you google for LINK, there are a lot of images that show exactly the kind of menu that you want, so it seems likely that it is indeed called QuickContact in that context.",
                            "Looking at the LINK, I don't see any inherited classes that you could use to do this for something other than contacts.",
                            "So, a few starting points, but no solution from me ; - -RRB-"
                        ]
                    },
                    {
                        "uid": 3619450,
                        "score": 57,
                        "text": [
                            "Till the official Twitter app is open sourced by Google, you may want to take a look at this implementation: LINK",
                            "Really easy to use and works great."
                        ]
                    },
                    {
                        "uid": 3781796,
                        "score": 3,
                        "text": [
                            "This open source project has the same look and feel for the quick actions popup as the twitter app:",
                            "LINK",
                            "It helps to download the whole project because you need a number of drawables, images, and other resources from that project.",
                            "The main demo class is called WHSListActivity.java.",
                            "The other classes you need is QuickActionWindow.java, and QuickActionItem.java.",
                            "After that, it's really easy and works great.",
                            "I use it for my apps."
                        ]
                    }
                ],
                "tags": [
                    "android"
                ]
            }
        ],
        "other": [
            {
                "link": "https://medium.com/@andreworobator/implementing-android-app-shortcuts-74feb524959b",
                "type": "misc",
                "content": [
                    "Get startedOpen in appAndrew Orobator411 FollowersAboutFollowSign inGet startedFollow411 FollowersAboutGet startedOpen in appImplementing Android App ShortcutsAndrew OrobatorDec 19, 2016 \u00b7 8 min readWith every release of Android, there comes a myriad of new features and Android Nougat 7.1 is no different.",
                    "One of these new features is App Shortcuts.",
                    "App Shortcuts allow the user to access primary actions in your app straight from the launcher, taking the user deep into your application, by long pressing on your app icon.",
                    "Users can also pin these shortcuts to the home screen for even quicker access to your app's primary actions.",
                    "In this tutorial, we'll cover how to boost your user's experience by implementing App Shortcuts in your app.To the left are the App Shortcuts presented when Google Maps is long pressed.",
                    "To the right I've pinned the Work shortcut to the home screen.",
                    "Clicking the Work shortcut opens navigation to work from your current location.The first thing you should know about implementing App Shortcuts is that there are two types of shortcuts: static and dynamic.",
                    "Static shortcuts are generated from an XML file that you create.",
                    "This means that they can only be updated when the user updates the app.",
                    "On the other hand, dynamic shortcuts can be created and destroyed at runtime, meaning you can do things like show different shortcuts based on frequency of use.",
                    "I've created a sample app in Kotlin called Konstellations demonstrating the use of both types of shortcuts and the source is on Github.",
                    "I'll be going through the source code of Konstellations as I explain how to implement App Shortcuts, so you can get your hands on a real world example.Static ShortcutsThe first kind of shortcut we'll implement is a static shortcut.",
                    "In your AndroidManifest.xml, we have to add some metadata to your launcher activity, but in practice, any Activity with the intent filter set to the android.intent.action.MAIN action and the android.intent.category.LAUNCHER category will do.",
                    "In my manifest, I added the <meta-data> tag to MainActivity which is my launcher activity.",
                    "The name attribute is set to `` android.app.shortcuts'' and the resource attribute is set to `` @xml / shortcuts''.",
                    "xmlNow we need to actually make the file where the shortcuts are defined.",
                    "I created mine as res/xml-v25/shortcuts.xml.",
                    "Note the resource qualifier ; I had to add this so Android Studio would stop yelling at me.",
                    "It's a good practice regardless because this feature is only available on API level 25 and above.",
                    "A copy of my shortcuts.xml is below.Konstellations / app/src/main / res/xml-v 25/shortcuts.",
                    "xmlAs you can see, this needs a root <shortcuts> tag, then you can add a <shortcut> tag to add a shortcut.",
                    "Don't go too crazy adding shortcuts though.",
                    "Android only allows you to have up to five shortcuts, but the documentation strongly suggests providing four ( any combination of static and dynamic ).",
                    "Oddly enough, I couldn't get a fifth shortcut to show up, so it seems their `` suggestion'' is actually enforced.",
                    "Add any more than five shortcuts and your app will crash !",
                    "Now let's take a closer look at the <shortcut> tag attributes.android: enabled is a boolean describing whether or not the shortcut is enabled.",
                    "If disabled, the shortcut will not appear in the list of shortcuts when a user long presses on your app icon in their launcher.",
                    "In addition, if this shortcut was previously pinned to the user's home screen, it will appear grayed out, and an error message will appear when the user clicks on it.",
                    "The default message is `` Shortcut isn't available'', but you can override that by using android: shortcutDisabledMessage and providing a string resource.The shortcut Aries is disabled, and when clicked, displays a Toast indicating that it's disabled.You use android: icon to provide an icon for your shortcut.",
                    "I strongly recommend following the design guidelines here so that you can provide your user with an experience that's consistent across apps.",
                    "For the basics though, you'll want to have a 48dp x 48dp circle that's Material Grey 100 ( or #F5F5F5 ).",
                    "Then drop a 24dp x 24dp icon in the middle of that circle and you'll be golden.Each shortcut needs a unique android: id so Android can recognize the shortcut.Both android: shortcutLongLabel and android: shortcutShortLabel are labels shown to the user displaying the name of the shortcut.",
                    "It's recommended that the short label be less than or equal to 10 characters, and the long label be less than or equal to 25 characters.",
                    "Android will pick the appropriate one to display based on the space available, but I've noticed that the short label is usually used when placed on the home screen.",
                    "The long label is usually used whenever there is space in the app shortcut menu.Note how the shortcut uses `` Aries, the Ram'' the long label for the app shortcuts menu, but uses `` Aries'' the short label when the shortcut is pinned.Each <shortcut> tag needs to have at least one <intent> tag specifying the Activity to be launched when the shortcut is clicked.",
                    "The android: action attribute is mandatory, even if you don't need an actual action.",
                    "If you don't have an action to specify, I'd recommend just using `` android.intent.action.VIEW'' although the actual string you use doesn't really matter.",
                    "It's okay to put multiple <intent> tags in a <shortcut> tag.",
                    "Android will handle this by launching the last <intent> specified, and putting the other <intent> s in the backstack.",
                    "You can also specify the category of a shortcut using the <categories> tag, but as of this writing, the only supported category is `` android.shortcut.conversation''.",
                    "I'd imagine this would only be useful for messaging apps.Dynamic ShortcutsDynamic shortcuts are the second type of shortcuts, and to interact with them ( create/destroy/update ) you'll need to use the ShortcutManager.",
                    "You can get a hold of a ShortcutManager usingI wrote a small inline helper function to check the API version every time I used the ShortcutManager, so I wouldn't have to do it all over the app.",
                    "It's defined below in ShortcutHelper.kt: Konstellations/app/src / main/kotlin/com / orobator/konstellations/ShortcutHelper.",
                    "ktOn application startup in KonstellationApplication.kt, I use the shortcut action to update all the shortcuts.",
                    "The code for updating shortcuts is as follows: Konstellations/app/src / main/kotlin/com / orobator/konstellations/ShortcutHelper.",
                    "ktHere we're creating a List <ShortcutInfo> and setting this as the list of dynamic shortcuts that Android will display.",
                    "First, we get all of the Constellations and sort them by the number of times they were visited in descending order.",
                    "Then we have a call to map, which is really the bulk of this function.",
                    "In it we are providing a function that takes a Constellation enum and returns a ShortcutInfo object representing that Constellation.",
                    "As you can see, the builder API for ShortcutInfo is very similar to the XML used to create static shortcuts.",
                    "In the constructor, we provide a Context object and the ID for the shortcut.",
                    "Then we provide a short and a long label, as well as the icon for the shortcut and the Intents that should be launched when it's clicked.",
                    "Finally, we only take the first three ShortcutInfo objects to avoid exceeding the limit of shortcuts.",
                    "There's a hard limit of five total shortcuts, but Android recommends only showing four.",
                    "The fourth shortcut comes from the static shortcut we created earlier.In this example, I'm replacing the list of dynamic shortcuts entirely, but you can also modify the list of dynamic shortcuts via ShortcutManager.addDynamicShortcuts ( List ), ShortcutManager.updateShortcuts ( List ), and ShortcutManager.removeDynamicShortcuts ( List ).",
                    "Enabling/Disabling ShortcutsNow that we know how to make both types of shortcuts, let's talk about turning them on and off.",
                    "Like I mentioned before, it's possible to disable a shortcut if it isn't relevant anymore, or re-enable it when it does become relevant through the `` enabled'' attribute.",
                    "In Konstellations, I do this with a toggle in the overflow menu of ConstellationDetailActivity.ktThe overflow menu for ConstellationDetailActivity.ktKonstellations / app/src/main / kotlin/com/orobator / konstellations/ConstellationDetailActivity.",
                    "ktWhen `` Enable Shortcut'' is clicked, we call ShortcutManager.enableShortcuts ( List ) and pass in the list of shortcuts we want to enable.",
                    "When `` Disable Shortcut'' is clicked, we call ShortcutManager.disableShortcuts ( List ) and pass in the shortcuts to disable.Best PracticesNow that we've got the basics down, there's a couple more things you should know about app shortcuts.",
                    "Every time a user navigates to a part of your app accessible via shortcut, whether they got there using the shortcut or just navigating through the app, you should call ShortcutManager.reportShortcutUsed ( String ).",
                    "This gives launcher apps the information they need to to build a prediction model so that they can promote the shortcuts that are likely to be used at the moment.",
                    "In my onCreate of ConstellationDetailActivity, I make a call to ShortcutHelper.trackShortcutUsed ( ... ) like so: Konstellations/app/src / main/kotlin/com / orobator/konstellations/ConstellationDetailActivity.",
                    "ktand the implementation for trackShortcutUsed ( ... ) is below: Konstellations/app/src / main/kotlin/com / orobator/konstellations/ShortcutHelper.",
                    "ktIn this method, I'm calling the aforementioned reportShortcutUsed ( String ) method.",
                    "Afterwards, I keep count of how many times the shortcut has been used via SharedPreferences, so that I can directly provide the most used shortcuts to the ShortcutManager.",
                    "This is the logic that makes my dynamic shortcuts truly dynamic.",
                    "For your dynamic shortcuts, you should do whatever makes the most sense for your own application.",
                    "For example, if you were writing a messaging app, you might provide shortcuts for the most recent conversations.This next best practice is important if you allow the user to back up your app via android: allowBackup = `` true'' in the manifest.",
                    "The only shortcuts that will be automatically restored to the user's homescreen are the static shortcuts that were pinned.",
                    "Because dynamic shortcuts are not backed up, you'll have to write logic to re-publish them if a user opens your app on a new device.",
                    "The Android documentation recommends that you check the number of shortcuts returned by getDynamicShortcuts ( ) each time you launch your app and re-publish dynamic shortcuts as needed.",
                    "They provide the following Java sample code as an example: When you're actively developing, you'll probably be using the updateShortcuts ( ), setDynamicShortcuts ( ), and addDynamicShortcuts ( ) methods quite frequently.",
                    "It's important to know that Android limits how often these methods can be called if your app is backgrounded ( no foreground Activities or Services ).",
                    "In a production environment, this limit can be reset by bringing your app to the foreground.",
                    "When in a development environment, you can go to Settings > Developer Options > Reset ShortcutManager rate-limiting to get rid of this limit.",
                    "If you prefer using the command line, you can execute the following command: And with that you should be well on your way to implementing Android 7.1's new feature App Shortcuts !",
                    "You can find Android's official documentation for App Shortcuts here.The full code to this repository is here.Feel free to leave any questions in the comments, and thanks for reading!Be sure to to follow me on Twitter @AOrobator for more awesome Android tips.",
                    "If you found this article helpful, make sure to hit the green heart!Andrew OrobatorAndroid Dev @ genevachat.com Twitter: @AOrobatorFollow448 4 448 448 4 Android App DevelopmentAndroidUser ExperienceMore from Andrew OrobatorFollowAndroid Dev @ genevachat.com Twitter: @AOrobatorMore From MediumRendering PDFs on Android the easy wayFred Porci\u00fancula in ProAndroidDevAndroid App-Specific Language Change Programmatically Using KotlinArul mani in The StartupXamarin.Forms Country Picker with Rg.Plugins.PopupBohdan BenetskyiAndroid AlarmManager As Deep As PossibleMyrick Chow in ProAndroidDevAndroid Bottom SheetSatya Pavan Kantamani in Programming GeeksWorking with ExoPlayer -- The clean way -- and customizationPrashant Barahi in MindOrksFullscreen Bottom SheetMustufa Ansari in Better ProgrammingNoisy Code \ud83d\udde3 with Kotlin ScopesChetan Gupta in ProAndroidDevAboutHelpLegalGet the Medium app",
                    "Implementing Android App ShortcutsAndrew OrobatorDec 19, 2016 \u00b7 8 min readWith every release of Android, there comes a myriad of new features and Android Nougat 7.1 is no different.",
                    "If you found this article helpful, make sure to hit the green heart !",
                    "You can find Android's official documentation for App Shortcuts here.The full code to this repository is here.Feel free to leave any questions in the comments, and thanks for reading !",
                    "Implementing Android App ShortcutsAndrew OrobatorDec 19, 2016 \u00b7 8 min read",
                    "Andrew OrobatorDec 19, 2016 \u00b7 8 min read",
                    ""
                ],
                "title": "Implementing Android App Shortcuts | by Andrew Orobator | Medium"
            }
        ]
    },
    "parsed": true
}