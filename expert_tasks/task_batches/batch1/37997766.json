{
    "task": "Enums support with Realm?",
    "description": "I'm working on an android app and Realm, and I need to create an enum attribute for one of my objects ; but I discovered in this post that Realm doesn't support enum yet.\nMy object is like this:\nand my enum class ( ShuttleTypes ) corresponds with:\nCan anybody suggest me how to do it ?",
    "type": "SO",
    "link": "https://stackoverflow.com/questions/37997766",
    "question_id": "37997766",
    "resources": {
        "api": [],
        "git": [
            {
                "link": "https://github.com/realm/realm-java/issues/776",
                "content": [
                    "Enums support \u00b7 Issue # 776 \u00b7 realm/realm-java \u00b7 GitHub",
                    "I was hoping enums are supported, as they're a better alternative to ints for enumerations.",
                    "The text was updated successfully, but these errors were encountered:",
                    "Enums are on our wishlist as well, but there are some challenges involved as one of the primary design goals of Realm is cross-platform compatibility and enums doesn't exist in Objective-C like they do in Java.",
                    "Hi @cmelchior and thanks for the response,",
                    "Enums can easily be converted into simple ints and back, I think typedefs are the closest feature that Objective-C provides ( my knowledge of Objective-C is close to zero ).",
                    "Hence it shouldn't be hard to represent enums internally in a way that both platforms could work with it.",
                    "True, but that would be very brittle with regard to modifying the enums afterwards.",
                    "See here for a discussion on the topic: http://stackoverflow.com/questions/229856/ways-to-save-enums-in-database.",
                    "It is possible to find a solution, but right now we want to prioritise other features.",
                    "I would also like to see enum support.",
                    "is it possible to help you to speed up enum support ?",
                    "Right now we are focusing on other bigger features ( custom methods, null, async queries and migration API ).",
                    "However once we open up for custom methods it will be possible to work around this by doing the conversion yourself in the getter/setter.",
                    "That said we still want to add support for it, but proper support will take a bit longer.",
                    "I don't know if it can help anybody, but here is what I use as a workaround:",
                    "@ashk3156 Please create another issue than reusing this one, and please add the code that actually throw the NullPointer as well.",
                    "Reporting a case where lack of enums support made things less pretty: in Kotlin, I created an interface Contact and a class ContactRealm implementing that interface.",
                    "The idea was to use Contact wherever possible and keep its implementation decoupled, so that later I could plug a ContactORM implementing same interface, for example.",
                    "Contact has a field ` sex' which would be best represented as an enum but due to Realm's limitation I had to declare it as a String in the first place, otherwise wouldn't be able to override the field in ContactRealm later.",
                    "otherwise wouldn't be able to override the field in ContactRealm later.",
                    "@Zhuinden the field sexin Contact can't be a Sex, as it needs to be overridden in ContactRealm and Realm doesn't support enums.",
                    "I ran into this thread while trying to solve the same problem.",
                    "Here was my approach to this in kotlin",
                    "basically I used a private string property taken as a string to construct a computed property with that enum correspondance.",
                    "Not sure this is very `` realm'' friendly since I'm new to Android development but I thought this worked actually pretty well.",
                    "I think this is a subset of # 1694.",
                    "Yes, it will most likely be implemented that way since the concept of a Java enum doesn't easily transfer to other platforms.",
                    "I investigated ObjectBox today ( don't worry ; I'm sticking with Realm \ud83d\ude1c ), and came up with something like this for getting enums supported.",
                    "Would something like that work here ?",
                    "how to store list of enum in realm android ?",
                    "RealmList <String> although then it becomes non-queryable as per https://github.com/realm/realm-object-store/issues/513 so it should probably be combined to a comma separated list in a single String value.",
                    ""
                ],
                "title": "Enums support \u00b7 Issue # 776 \u00b7 realm/realm-java \u00b7 GitHub"
            }
        ],
        "qa": [
            {
                "uid": "33464677",
                "link": "https://stackoverflow.com/questions/33464677",
                "title": "How to store enums in Realm?",
                "answers": [
                    {
                        "uid": 33473384,
                        "score": 6,
                        "text": [
                            "Without custom methods it is unfortunately slightly cumbersome at the moment, but you can store the string representation instead and convert that to/from the enum."
                        ]
                    }
                ],
                "tags": [
                    "java",
                    "enums",
                    "realm"
                ]
            }
        ],
        "other": [
            {
                "link": "https://www.raywenderlich.com/20517888-kotlin-enums-tutorial-for-android-getting-started",
                "type": "misc",
                "content": [
                    "Browse the entire Android & Kotlin library",
                    "2021 Graduation Book Sale -- 50 % Off !",
                    "Our entire catalog of online books is on sale for 50 % off for a limited time.",
                    "It's our 2021 Graduation Sale -- come see what's new !",
                    "Kotlin Enums Tutorial for Android: Getting Started",
                    "Are Enums Bad for Memory Management ?",
                    "Displaying an Avatar for Each Enum Case",
                    "Add Extra Data to Enums",
                    "Replace when ( ) With Enum Property",
                    "Using the Name of an Enum Case",
                    "Caveats of the name Property",
                    "Obtaining Data From the Intent",
                    "Enum Extras: Interfaces and Synthetic Methods",
                    "Where to Go From Here ?",
                    "Kotlin Enums Tutorial for Android: Getting Started In this tutorial, you'll build an Android app, using the full potential of Kotlin Enums to handle a list of cartoon avatars and help your users easily create their profiles.",
                    "Mar 24 2021 \u00b7 Article ( 25 mins ) \u00b7 Beginner",
                    "Kotlin enums are a crucial part of the language.",
                    "They are, in their most basic form, collections of predefined constant elements.",
                    "Now that's a mouthful !",
                    "In this tutorial, you'll learn what that means, plus what enums are capable of in Kotlin.",
                    "You'll build an the app that uses enums to create a cartoon avatar selection feature, and learn about:",
                    "What enums are -- and aren't -- useful for How to use when ( ) for flow control with enums A way to add extra functionality to enums How to reference an enum constant using its name An overview of best practices and gotchas to look out for",
                    "Ready to learn more ?",
                    "Getting Started Download the starter project by clicking the Download Materials button at the top or bottom of the tutorial.",
                    "Open your project on Android Studio 4.1 or higher.",
                    "Select Open an Existing Project and point it to the starter project you just extracted:",
                    "The starter project has a few files you should get acquainted with:",
                    "MainActivity.kt: Your app's main user interface, which is what you see when you run the project",
                    "CartoonAvatarAdapter.kt: This file contains a ListAdapter.",
                    "MainActivity uses this adapter to populate the RecyclerView containing all the avatar options below the `` Pick an avatar'' TextView ( which is empty for now ).",
                    "AvatarSelectedActivity.kt: You'll use this activity to display the user's selection.",
                    "For now, there's nothing starting it.",
                    "Utils.kt: This contains a small extension method that returns the first letter of a string and capitalizes it.",
                    "You'll use this method in AvatarSelectedActivity to display the user's initial.",
                    "Note: For more details about RecyclerView, read our Android RecyclerView Tutorial.",
                    "Additionally, some strings you'll use in this tutorial are already conveniently included for you.",
                    "Build and run the project.",
                    "You'll see a screen that says `` Enter your details to continue'':",
                    "This app doesn't do anything yet.",
                    "Next, you'll make it come to life -- and learn about Kotlin enums in the process !",
                    "But first, an introduction to enums.",
                    "Kotlin Enums In short, Kotlin enums are a way to describe a set of predefined constants in your code.",
                    "But what does this mean, exactly ?",
                    "When you're modeling your app's data, some concepts will have a limited set of possibilities.",
                    "An example is an app that supports light and dark modes.",
                    "In a case like this, you define an enum with two predefined cases: LIGHT and DARK.",
                    "No other cases are possible -- those are the only possible modes.",
                    "When you have a well-defined realm of possibilities, enums are a great candidate.",
                    "By using them, your code has compile-time checks that prevent the developer from using an undefined case.",
                    "You can't reference an app mode called COLORFUL when the only options are LIGHT and DARK.",
                    "That same characteristic makes enums unsuitable for variable or dynamic sets of data.",
                    "You can't define enum cases at runtime, and there's no reason to: It would defeat their purpose of holding a predefined set of values.",
                    "It's also better for performance, as you won't have to compare String values, for instance.",
                    "The question of whether enums are bad for memory management emerged a long time ago, way before Google announced that Kotlin was its preferred language for Android app developers.",
                    "The short answer is: not anymore.",
                    "There are two improvements that contributed to this:",
                    "Dalvik vs ART: Before Lollipop, Android used a runtime called Dalvik.",
                    "Engineers designed this runtime for a different reality than today: Devices had minimal resources back then.",
                    "Since enums are constant values, they're always using their necessary memory, and memory allocations then were very expensive.",
                    "Fast-forward to Lollipop, and the default runtime changed to Android Runtime, or ART.",
                    "This is a vast improvement for modern devices, and the concerns around enums are no longer relevant.",
                    "You can find more information about this in the Android Runtime ( ART ) and Dalvik article from Android's documentation.",
                    "R8: Another concern about enums was the app size overhead, as they use significantly more space than integer constants.",
                    "Without diving too deep into this, R8 is a compiler that cleans and optimizes your code when building your app.",
                    "Among its many other features, R8 helps remove the overhead from enums whenever possible by understanding how your code uses them.",
                    "The Android documentation has more details about this in the Shrink, obfuscate, and optimize your app guide.",
                    "Now that you know enums are good, it's time to define them.",
                    "Defining a Basic Enum In Android Studio, open CartoonAvatarAdapter.kt.",
                    "Inside the adapter class, you'll see a data class called Item.",
                    "Notice how it contains imageResource, which is an Android resource ID for the avatar image.",
                    "You'll change that now to instead use an enum.",
                    "Right-click your main package, com.raywenderlich.android.cartoonsocialclub, and select New > Kotlin File/Class",
                    "In the pop-up, name your file CartoonAvatar, select Enum class and press enter.",
                    "Inside the newly created CartoonAvatar.kt add the following code:",
                    "Now, you've got your enum for the different types of avatars that the app will support.",
                    "Congratulations on creating your first enum !",
                    "Using The Enum Now that you have an enum with all possible avatar selections, it's time to use it with your code.",
                    "Go back to CartoonAvatarAdapter.kt, find / / TODO 1 and replace Item with the following:",
                    "Here's what the code above does:",
                    "Instead of receiving the Android drawable resource directly, Item now receives an instance of your new enum, CartoonAvatar.",
                    "In doing so, you'll ensure that an item can only be one of the possible cartoon avatars.",
                    "Now, imageResource is a computed property.",
                    "Using when ( ), your logic defines which image resource to use based on the CartoonAvatar passed.",
                    "Now the user of Item doesn't need to know about Android image resources.",
                    "Benefits of Enums When you use enums to define a set of constants, you get extra help from the IDE.",
                    "Auto-complete can easily understand all the possible cases of CartoonAvatar and suggest code for you.",
                    "Additionally, it's possible to validate that code is exhaustive.",
                    "What that means is, since you predefine all enum cases, it's easy to automatically detect if your when ( ) expression doesn't handle them all.",
                    "Give it a try: Remove one of the lines in when ( ).",
                    "Android Studio will instantly complain that your expression isn't exhaustive.",
                    "Add that line back now, of course.",
                    "You'll see the same screen as before ; nothing has changed yet:",
                    "But now it's time to start mixing things up !",
                    "Displaying an Avatar for Each Enum Case So far, all those changes you did had no effect on how the app looks.",
                    "This is about to change.",
                    "Open MainActivity.kt and populate avatarChoices by replacing emptyList <Item> ( ) below / / TODO 2 with the following:",
                    "The code above uses values ( ) to get an array of all CartoonAvatar cases.",
                    "This method is present in all Kotlin enums.",
                    "Then, you call map ( ) in this array to convert it to a list of Item, which is what the adapter takes.",
                    "-LSB- TODO: Is Item correct or should it be Items ? -RSB-",
                    "Since the adapter is set up using this property further down in MainActivity, it now has a list of all possible cartoon avatars a user can select.",
                    "You can see that isSelected is set to false by default.",
                    "You'll now see a screen with a selection of avatar options:",
                    "Next, you'll start adding data to your enums.",
                    "Add Extra Data to Enums Enum constants can also have data attached to them.",
                    "This is helpful for cases where you need to translate an enum case to a different type.",
                    "Each cartoon character has a respective drawable resource, so you'll use this enum feature instead of when ( ) to simplify your code even more.",
                    "Open CartoonAvatar.kt and replace the class with the code below:",
                    "In the code above, you added drawableRes to CartoonAvatar.",
                    "All those values are constant, so each case has a predefined drawableRes defined.",
                    "With this, you're now able to map each enum case to its respective drawable resource.",
                    "Replace when ( ) With Enum Property Go back to CartoonAvatarAdapter.",
                    "Inside Item, replace the entire imageResource property with the following:",
                    "The code above is using the drawableRes you just defined in the enum to replace the when ( ) expression.",
                    "Your adapter code is now a little simpler.",
                    "It'll look the same as before:",
                    "Enums Automatically Implement Equality Your app isn't reacting to changes yet.",
                    "When the user types their name and selects an avatar, a button should show up to let them move to the next step.",
                    "You'll implement that logic now.",
                    "Open MainActivity.kt and add the following property below / / TODO 3:",
                    "Here, you created a property that will hold the selected avatar when the user taps one.",
                    "Next, find selectAvatar ( ) and add the following lines below / / TODO 4:",
                    "The adapter calls the method above when the user selects an avatar option.",
                    "This logic has been set up for you in setupRecyclerView ( ) in the starter project.",
                    "Here's what the code above is doing:",
                    "Updates the value of selectedAvatar with the new selection.",
                    "Updates avatarChoices in the activity to set isSelected to true in the newly selected item.",
                    "Here, you're using another useful feature of Kotlin enums: They implement equality automatically.",
                    "That's why you can use == to compare them inside forEach.",
                    "After you update the list to set isSelected, cartoonAvatarAdapter.notifyDataSetChanged ( ) takes care of updating the adapter.",
                    "The adpter will then reflect the changes in the view.",
                    "Now select one of the avatar options and the view will reflect it:",
                    "See the selected avatar ?",
                    "Using the Name of an Enum Case When your user selects an avatar and types their name, they'll be ready to move to the next step.",
                    "To do that, open AvatarSelectedActivity.kt and paste the following code below / / TODO 5:",
                    "You've created a companion object with a method called newIntent ( ).",
                    "Here's what the code does in detail:",
                    "Defines two constants that you'll use to reference Intent extras later",
                    "newIntent ( ) is an Android convention: It takes the data an activity needs and returns an Intent to start it.",
                    "Another enum goodie: Kotlin provides name for all enum cases.",
                    "It's a string, and using it, you'll be able to get a reference to that same case later with CartoonAvatar.valueOf ( name ).",
                    "This property's value will be something like `` MONSTER''.",
                    "Next, go back to MainActivity and add the following method below / / TODO 6:",
                    "Tells fullNameEditText to execute the following logic when its text changes.",
                    "If the user has typed their full name and selected an avatar, the Continue button is visible.",
                    "Adds an onClickListener to the Continue button that starts the AvatarSelectedActivity when the user taps it.",
                    "The Intent holds the user selections.",
                    "Now, add a call to setupContinueButton ( ) at the end of onCreate ( ), below / / TODO 7.",
                    "And finally, paste the following lines at the end of selectAvatar ( ):",
                    "The code above makes the Continue button visible when the user selects an avatar if they already typed their name.",
                    "Type your name, select your avatar and press Continue.",
                    "The app will take you to the next step:",
                    "But before continuing, you'll learn a bit about name.",
                    "Caveats of the name Property You shouldn't use name for user-facing text.",
                    "These strings are not localized, which means there's no easy way to translate them to different languages if your app supports that.",
                    "Instead, you can use name for:",
                    "Programmatically referencing enum cases: A great example is the above.",
                    "When your app needs to pass enum cases around via Intent, you can use its name to reference it.",
                    "Debugging: It can be useful to log a given enum case for debugging purposes.",
                    "For example: You could log the selected avatar name to help identify a bug in your code.",
                    "With that said, you should not hardcode those strings to reference them later.",
                    "Renaming an enum case will change its name, and the hardcoded string will no longer work.",
                    "A special case to look out for is that of using the name to persist data that references enums.",
                    "This can lead to trouble !",
                    "Imagine if you rename DOG to SUNGLASS_DOG.",
                    "The new version is no longer backwards compatible, and the persisted string now references a non-existent case !",
                    "Make sure to account for the possibility of changing names when designing your code to avoid trouble later.",
                    "The Enum ordinal Property In addition to name, enums also have an ordinal property.",
                    "This references the zero-based position at which the enum case appears in code.",
                    "Using CartoonAvatar as an example, see what each case's ordinal is:",
                    "Note: The ordinal can change as you move cases around, add more, remove some, etc..",
                    "For that reason, be mindful when using it.",
                    "Avoid hardcoding ordinal values to reference enum cases.",
                    "Use name to reference them instead of ordinal.",
                    "Now, you'll continue with the app.",
                    "Obtaining Data From the Intent Open AvatarSelectedActivity.kt and add the following method below / / TODO 8:",
                    "Populates the fullNameTextView with the full name passed via Intent",
                    "Using when ( ) with an else clause, you're able to omit having to reference all cases individually.",
                    "If the selected CartoonAvatar is NONE, populating the view means placing the user's name's initial in the initialTextView and hiding the selected avatar image.",
                    "For all other cases, it means hiding the initialTextView and displaying the selected avatar's image.",
                    "Now, paste the following below / / TODO 9:",
                    "Here's what you're doing in the code above:",
                    "Read the data passed via Intent, using the constants defined in the companion object.",
                    "If you started the activity incorrectly -- without using the newIntent ( ) method -- this finishes it because there's nothing it can do.",
                    "Enums have a static method called valueOf ( ) that returns the enum case from its name.",
                    "Using this method, you recover the case that the user selected in the previous screen.",
                    "With all the necessary data, you call populateView ( ).",
                    "To combine everything, find / / TODO 10 at the end of onCreate ( ) and add the following below it:",
                    "After typing your name and selecting an avatar, press Continue.",
                    "As you can see above, the view will now show the name and avatar.",
                    "Enums Can Have Methods The last part your app is missing is a description of the selected avatar in AvatarSelectedActivity.",
                    "Here, you'll use another functionality enums provide: They can have methods.",
                    "So, open CartoonAvatar.kt and add ; right after the last case of the enum so that it looks like the following:",
                    "This is necessary to separate the cases from the rest of the enum body.",
                    "Between NONE and -RCB-, paste the following code:",
                    "The line above defines a method that every enum case must implement.",
                    "Since this is an abstract method and none of your cases implement that yet, Android Studio will start complaining.",
                    "To fix it, right-click the case highlighted in red and select Show Context Actions \u25b8 Implement Members like below:",
                    "Select Implement members in the pop-up above.",
                    "A window will show up.",
                    "See the image below for reference:",
                    "Make sure to select the missing method and then press OK.",
                    "Repeat the steps above for all enum cases.",
                    "Android Studio will add TODO ( ) marks to those methods.",
                    "Replace them with the following code: DOG:",
                    "The code above returns a string like `` Your selected avatar: Dog With Sunglasses'', depending on which character received the call to selectionDescription ( ).",
                    "For the special case of NONE, it returns an empty string.",
                    "Finally, plug all that in by opening AvatarSelectedActivity.kt and adding the following line inside populateView ( ), below fullNameTextView.text = fullName:",
                    "The code above sets the description you just defined in the enum as the text for selectedAvatarDescriptionTextView.",
                    "After making all selections, you'll see the description below the profile picture and name card:",
                    "But what if you want to know more about enums ?",
                    "Enum Extras: Interfaces and Synthetic Methods What else can you do with enums ?",
                    "As such, they can implement interfaces.",
                    "Then, each enum case can implement methods and properties separately, or the enum definition can provide a general implementation.",
                    "Note that enums can not extend from other classes.",
                    "There are global functions to allow accessing enums in a generic way: enumValues ( ) and enumValueOf ( ).",
                    "Note: While the features above are available for specific cases, it's generally bad practice to add a lot of extra functionality to enums.",
                    "An example of a bad practice is adding too much data to enum constants.",
                    "Unlike instances of classes, which the garbage collector helps deallocate when they are no longer needed, enum constants may stay in memory for the lifetime of your application.",
                    "So, be mindful of your app's memory consumption.",
                    "For examples and a quick overview of the main features of enums, check out Kotlin's official documentation on enum classes.",
                    "Download the final project using the Download Materials button at the top or bottom of this tutorial.",
                    "In this tutorial, you learned:",
                    "What enums are and how to use them when you need a predefined set of constants How ART and R8 helped reduce the performance hit that used to be a problem with enums in the past How to use when ( ) for flow control using enums Why exhaustive code matters and how enums help with this How to add extra data to enum constants How every enum in Kotlin implements equality automatically The use of name to pass enum cases via Intent",
                    "How to add methods to enums",
                    "To learn even more about enums and their functionality, check out the Kotlin and Android: Beyond the Basics with Sealed Classes tutorial.",
                    "We hope you enjoyed this tutorial.",
                    "If you have any questions or comments, please join the forum discussion below !",
                    "Getting Started Android & Kotlin Tutorials",
                    "raywenderlich.com Weekly The raywenderlich.com newsletter is the easiest way to stay up-to-date on everything you need to know as a mobile developer.",
                    "Get a weekly digest of our tutorials and courses, and receive a free in-depth email course as a bonus !",
                    "Add a rating for this content",
                    "Sign in to add a rating",
                    "The mobile development world moves quickly -- and you don't want to get left behind.",
                    "Learn iOS, Swift, Android, Kotlin, Dart, Flutter and more with the largest and highest-quality catalog of video courses and books on the internet.",
                    "Mark Complete ( All Chapters ) Clear Progress ( All Chapters )",
                    "New Announcing Our 2021 Graduation Book Sale -- 50 % Off !",
                    "iOS & Swift Announcements Jun 16 2021 \u00b7 Article ( 15 mins )",
                    "Jun 16 2021 \u00b7 Article ( 15 mins )",
                    "New App Actions: Getting Started Android & Kotlin Tools & Libraries Jun 16 2021 \u00b7 Article ( 15 mins )",
                    "App Actions allow Google Assistant to access your app and launch specific actions within the app.",
                    "This tutorial teaches you how to implement App Actions for your app so users can interact with your app directly through Google Assistant.",
                    "New Dart Basics Flutter Getting Started Jun 15 2021 \u00b7 Article ( 35 mins )",
                    "Get an introduction to the basics of the Dart programming language, used for development with the Flutter SDK for mobile, web and beyond.",
                    "Jun 15 2021 \u00b7 Article ( 35 mins )",
                    "New Opportunity: Full-Time Android Video Instructor at Razeware Android & Kotlin Announcements Jun 15 2021 \u00b7 Article ( 5 mins )",
                    "Razeware is currently hiring a full-time video instructor to create top-of-the line Android video courses at raywenderlich.com.",
                    "Jun 15 2021 \u00b7 Article ( 5 mins )",
                    "Caio Fukelmann Landau Caio is a software engineer with experience on Android and iOS, along with front-end Javascript.",
                    "His first contact with ... Author",
                    "Alain Muller Alain is the Lead Android Engineer at AriadNEXT, France.",
                    "He has fallen in love with Android since its Eclair version.",
                    "Natalye Childress Natalye Childress is an editor living in Berlin.",
                    "She's passionate about storytelling, immaculate grammar, clean copy, and ... Editor",
                    "Julia Zinchenko Graphic designer and illustrator based in Ukraine Illustrator",
                    "Zac Lippard Zac is a Senior Mobile Engineer at GoDaddy working on their suite of Android and iOS apps.",
                    "He is passionate about Android and, ... Fpe",
                    "Eric Soto Eric is Android Tutorial Team Lead and a Professional Software Engineer and certified Agile-Scrum Master focusing on Apple iOS ... Team Lead",
                    "In this tutorial, you'll build an Android app, using the full potential of Kotlin Enums to handle a list of cartoon avatars and help your users easily create their profiles.",
                    ""
                ],
                "title": "Kotlin Enums Tutorial for Android: Getting Started | raywenderlich.com"
            }
        ]
    },
    "parsed": true
}