{
    "task": "Write and Read a json data to internal storage android",
    "description": "I have a json array received from php\nWhat i want is to write this data in a file_name.\nanyextension in my apps data folder or anywhere safe.\nAlso read this data from file_name.\nanyextension and convert it to a valid json array that can be further edited.\nCan anyone show me a way how can i possibly to this thing ?",
    "type": "SO",
    "link": "https://stackoverflow.com/questions/28646757",
    "question_id": "28646757",
    "resources": {
        "api": [
            {
                "link": "https://developer.android.com/guide/topics/providers/content-provider-creating",
                "type": "android",
                "content": [
                    "A content provider manages access to a central repository of data.",
                    "You implement a provider as one or more classes in an Android application, along with elements in the manifest file.",
                    "One of your classes implements a subclass ContentProvider, which is the interface between your provider and other applications.",
                    "Although content providers are meant to make data available to other applications, you may of course have activities in your application that allow the user to query and modify the data managed by your provider.",
                    "The rest of this topic is a basic list of steps for building a content provider and a list of APIs to use.",
                    "Before you start building a provider, consider the following:",
                    "You don't need a provider to use databases or other types of persistent storage if the use is entirely within your own application and you don't need any of the features listed above.",
                    "Instead, you can use one of the storage systems described on the Saving App Data page.",
                    "Next, follow these steps to build your provider:",
                    "A content provider is the interface to data saved in a structured format.",
                    "Before you create the interface, you must decide how to store the data.",
                    "You can store the data in any form you like, and then design the interface to read and write the data as necessary.",
                    "These are some of the data storage technologies that are available in Android:",
                    "Remember that you don't have to use a database to implement your repository.",
                    "A provider appears externally as a set of tables, similar to a relational database, but this is not a requirement for the provider's internal implementation.",
                    "Note: If you make a change to your repository that isn't backwards-compatible, you need to mark the repository with a new version number.",
                    "You also need to increase the version number for your app that implements the new content provider.",
                    "Making this change prevents system downgrades from causing the system to crash when it attempts to reinstall an app that has an incompatible content provider.",
                    "Here are some tips for designing your provider's data structure:",
                    "You can also use a BLOB to implement a schema-independent table.",
                    "In this type of table, you define a primary key column, a MIME type column, and one or more generic columns as BLOB.",
                    "The meaning of the data in the BLOB columns is indicated by the value in the MIME type column.",
                    "This allows you to store different row types in the same table.",
                    "The Contacts Provider's `` data'' table ContactsContract.Data is an example of a schema-independent table.",
                    "A content URI is a URI that identifies data in a provider.",
                    "Content URIs include the symbolic name of the entire provider ( its authority ) and a name that points to a table or file ( a path ).",
                    "The optional id part points to an individual row in a table.",
                    "Every data access method of ContentProvider has a content URI as an argument ; this allows you to determine the table, row, or file to access.",
                    "The basics of content URIs are described in the topic Content provider basics.",
                    "A provider usually has a single authority, which serves as its Android-internal name.",
                    "To avoid conflicts with other providers, you should use Internet domain ownership ( in reverse ) as the basis of your provider authority.",
                    "Because this recommendation is also true for Android package names, you can define your provider authority as an extension of the name of the package containing the provider.",
                    "For example, if your Android package name is com.example.",
                    "<appname>, you should give your provider the authority com.example.",
                    "Developers usually create content URIs from the authority by appending paths that point to individual tables.",
                    "For example, if you have two tables table1 and table2, you combine the authority from the previous example to yield the content URIs com.example.",
                    "Paths aren't limited to a single segment, and there doesn't have to be a table for each level of the path.",
                    "By convention, providers offer access to a single row in a table by accepting a content URI with an ID value for the row at the end of the URI.",
                    "Also by convention, providers match the ID value to the table's _ ID column, and perform the requested access against the row that matches.",
                    "This convention facilitates a common design pattern for apps accessing a provider.",
                    "The app does a query against the provider and displays the resulting Cursor in a ListView using a CursorAdapter.",
                    "The definition of CursorAdapter requires one of the columns in the Cursor to be _ ID",
                    "The user then picks one of the displayed rows from the UI in order to look at or modify the data.",
                    "The app gets the corresponding row from the Cursor backing the ListView, gets the _ ID value for this row, appends it to the content URI, and sends the access request to the provider.",
                    "The provider can then do the query or modification against the exact row the user picked.",
                    "To help you choose which action to take for an incoming content URI, the provider API includes the convenience class UriMatcher, which maps content URI `` patterns'' to integer values.",
                    "You can use the integer values in a switch statement that chooses the desired action for the content URI or URIs that match a particular pattern.",
                    "A content URI pattern matches content URIs using wildcard characters:",
                    "As an example of designing and coding content URI handling, consider a provider with the authority com.example.app.provider that recognizes the following content URIs pointing to tables:",
                    "The provider also recognizes these content URIs if they have a row ID appended to them, as for example content: / / com.example.app.provider / table3/1 for the row identified by 1 in table3.",
                    "The following content URI patterns would be possible:",
                    "The following code snippet shows how the methods in UriMatcher work.",
                    "This code handles URIs for an entire table differently from URIs for a single row, by using the content URI pattern content: / / <authority> / <path> for tables, and content: / / <authority> / <path> / <id> for single rows.",
                    "The method addURI ( ) maps an authority and path to an integer value.",
                    "The method match ( ) returns the integer value for a URI.",
                    "A switch statement chooses between querying the entire table, and querying for a single record:",
                    "Another class, ContentUris, provides convenience methods for working with the id part of content URIs.",
                    "The classes Uri and Uri.Builder include convenience methods for parsing existing Uri objects and building new ones.",
                    "The ContentProvider instance manages access to a structured set of data by handling requests from other applications.",
                    "All forms of access eventually call ContentResolver, which then calls a concrete method of ContentProvider to get access.",
                    "The abstract class ContentProvider defines six abstract methods that you must implement as part of your own concrete subclass.",
                    "All of these methods except onCreate ( ) are called by a client application that is attempting to access your content provider:",
                    "Notice that these methods have the same signature as the identically-named ContentResolver methods.",
                    "Your implementation of these methods should account for the following:",
                    "The ContentProvider.query ( ) method must return a Cursor object, or if it fails, throw an Exception.",
                    "If you are using an SQLite database as your data storage, you can simply return the Cursor returned by one of the query ( ) methods of the SQLiteDatabase class.",
                    "If the query does not match any rows, you should return a Cursor instance whose getCount ( ) method returns 0.",
                    "You should return null only if an internal error occurred during the query process.",
                    "If you aren't using an SQLite database as your data storage, use one of the concrete subclasses of Cursor.",
                    "For example, the MatrixCursor class implements a cursor in which each row is an array of Object.",
                    "With this class, use addRow ( ) to add a new row.",
                    "Remember that the Android system must be able to communicate the Exception across process boundaries.",
                    "Android can do this for the following exceptions that may be useful in handling query errors:",
                    "The insert ( ) method adds a new row to the appropriate table, using the values in the ContentValues argument.",
                    "If a column name is not in the ContentValues argument, you may want to provide a default value for it either in your provider code or in your database schema.",
                    "This method should return the content URI for the new row.",
                    "To construct this, append the new row's _ ID ( or other primary key ) value to the table's content URI, using withAppendedId ( ).",
                    "The delete ( ) method does not have to physically delete rows from your data storage.",
                    "If you are using a sync adapter with your provider, you should consider marking a deleted row with a `` delete'' flag rather than removing the row entirely.",
                    "The sync adapter can check for deleted rows and remove them from the server before deleting them from the provider.",
                    "The update ( ) method takes the same ContentValues argument used by insert ( ), and the same selection and selectionArgs arguments used by delete ( ) and ContentProvider.query ( ).",
                    "This may allow you to re-use code between these methods.",
                    "The Android system calls onCreate ( ) when it starts up the provider.",
                    "You should perform only fast-running initialization tasks in this method, and defer database creation and data loading until the provider actually receives a request for the data.",
                    "If you do lengthy tasks in onCreate ( ), you will slow down your provider's startup.",
                    "In turn, this will slow down the response from the provider to other applications.",
                    "The following two snippets demonstrate the interaction between ContentProvider.onCreate ( ) and Room.databaseBuilder ( ).",
                    "This snippet shows the implementation of ContentProvider.onCreate ( ) where the database object is built and handles to the data access objects are created:",
                    "The ContentProvider class has two methods for returning MIME types:",
                    "The getType ( ) method returns a String in MIME format that describes the type of data returned by the content URI argument.",
                    "The Uri argument can be a pattern rather than a specific URI ; in this case, you should return the type of data associated with content URIs that match the pattern.",
                    "For common types of data such as as text, HTML, or JPEG, getType ( ) should return the standard MIME type for that data.",
                    "A full list of these standard types is available on the IANA MIME Media Types website.",
                    "For content URIs that point to a row or rows of table data, getType ( ) should return a MIME type in Android's vendor-specific MIME format:",
                    "You supply the <name> and <type>.",
                    "The <name> value should be globally unique, and the <type> value should be unique to the corresponding URI pattern.",
                    "A good choice for <name> is your company's name or some part of your application's Android package name.",
                    "A good choice for the <type> is a string that identifies the table associated with the URI.",
                    "For example, if a provider's authority is com.example.app.provider, and it exposes a table named table1, the MIME type for multiple rows in table1 is:",
                    "For a single row of table1, the MIME type is:",
                    "If your provider offers files, implement getStreamTypes ( ).",
                    "The method returns a String array of MIME types for the files your provider can return for a given content URI.",
                    "You should filter the MIME types you offer by the MIME type filter argument, so that you return only those MIME types that the client wants to handle.",
                    "For example, consider a provider that offers photo images as files in.",
                    "If an application calls ContentResolver.getStreamTypes ( ) with the filter string image / * ( something that is an `` image'' ), then the ContentProvider.getStreamTypes ( ) method should return the array:",
                    "If the app is only interested in.",
                    "jpg files, then it can call ContentResolver.getStreamTypes ( ) with the filter string * / jpeg, and ContentProvider.getStreamTypes ( ) should return:",
                    "If your provider doesn't offer any of the MIME types requested in the filter string, getStreamTypes ( ) should return null.",
                    "A contract class is a public final class that contains constant definitions for the URIs, column names, MIME types, and other meta-data that pertain to the provider.",
                    "The class establishes a contract between the provider and other applications by ensuring that the provider can be correctly accessed even if there are changes to the actual values of URIs, column names, and so forth.",
                    "A contract class also helps developers because it usually has mnemonic names for its constants, so developers are less likely to use incorrect values for column names or URIs.",
                    "Since it's a class, it can contain Javadoc documentation.",
                    "Integrated development environments such as Android Studio can auto-complete constant names from the contract class and display Javadoc for the constants.",
                    "Developers can't access the contract class's class file from your application, but they can statically compile it into their application from a.",
                    "The ContactsContract class and its nested classes are examples of contract classes.",
                    "Permissions and access for all aspects of the Android system are described in detail in the topic Security and permissions.",
                    "The topic Data storage also described the security and permissions in effect for various types of storage.",
                    "In brief, the important points are:",
                    "If you want to use content provider permissions to control access to your data, then you should store your data in internal files, SQLite databases, or the `` cloud'' ( for example, on a remote server ), and you should keep files and databases private to your application.",
                    "All applications can read from or write to your provider, even if the underlying data is private, because by default your provider does not have permissions set.",
                    "To change this, set permissions for your provider in your manifest file, using attributes or child elements of the <provider> element.",
                    "You can set permissions that apply to the entire provider, or to certain tables, or even to certain records, or all three.",
                    "You define permissions for your provider with one or more <permission> elements in your manifest file.",
                    "To make the permission unique to your provider, use Java-style scoping for the android: name attribute.",
                    "For example, name the read permission com.example.app.provider.permission.READ _ PROVIDER.",
                    "The following list describes the scope of provider permissions, starting with the permissions that apply to the entire provider and then becoming more fine-grained.",
                    "More fine-grained permissions take precedence over ones with larger scope:",
                    "Consider the permissions you need to implement an email provider and app, when you want to allow an outside image viewer application to display photo attachments from your provider.",
                    "To give the image viewer the necessary access without requiring permissions, set up temporary permissions for content URIs for photos.",
                    "Design your email app so that when the user wants to display a photo, the app sends an intent containing the photo's content URI and permission flags to the image viewer.",
                    "The image viewer can then query your email provider to retrieve the photo, even though the viewer doesn't have the normal read permission for your provider.",
                    "To turn on temporary permissions, either set the android: grantUriPermissions attribute of the <provider> element, or add one or more <grant-uri-permission> child elements to your <provider> element.",
                    "If you use temporary permissions, you have to call Context.revokeUriPermission ( ) whenever you remove support for a content URI from your provider, and the content URI is associated with a temporary permission.",
                    "The attribute's value determines how much of your provider is made accessible.",
                    "If the attribute is set to true, then the system will grant temporary permission to your entire provider, overriding any other permissions that are required by your provider-level or path-level permissions.",
                    "If this flag is set to false, then you must add <grant-uri-permission> child elements to your <provider> element.",
                    "Each child element specifies the content URI or URIs for which temporary access is granted.",
                    "To delegate temporary access to an application, an intent must contain the FLAG_GRANT_READ_URI_PERMISSION or the FLAG_GRANT_WRITE_URI_PERMISSION flags, or both.",
                    "These are set with the setFlags ( ) method.",
                    "If the android: grantUriPermissions attribute is not present, it's assumed to be false.",
                    "Like Activity and Service components, a subclass of ContentProvider must be defined in the manifest file for its application, using the <provider> element.",
                    "The Android system gets the following information from the element:",
                    "Permissions and their corresponding attributes are described in more detail in the section Implementing Content provider permissions.",
                    "The attributes are fully documented in the dev guide topic for the <provider> element.",
                    "Applications can access a content provider indirectly with an Intent.",
                    "The application does not call any of the methods of ContentResolver or ContentProvider.",
                    "Instead, it sends an intent that starts an activity, which is often part of the provider's own application.",
                    "The destination activity is in charge of retrieving and displaying the data in its UI.",
                    "Depending on the action in the intent, the destination activity may also prompt the user to make modifications to the provider's data.",
                    "An intent may also contain `` extras'' data that the destination activity displays in the UI ; the user then has the option of changing this data before using it to modify the data in the provider.",
                    "You may want to use intent access to help ensure data integrity.",
                    "Your provider may depend on having data inserted, updated, and deleted according to strictly defined business logic.",
                    "If this is the case, allowing other applications to directly modify your data may lead to invalid data.",
                    "If you want developers to use intent access, be sure to document it thoroughly.",
                    "Explain to them why intent access using your own application's UI is better than trying to modify the data with their code.",
                    "Handling an incoming intent that wishes to modify your provider's data is no different from handling other intents.",
                    "You can learn more about using intents by reading the topic Intents and Intent Filters.",
                    "For sample code related to this page, refer to the Note Pad sample application.",
                    "For additional related information, refer to Calendar Provider.",
                    "Decide if you need a content provider.",
                    "You need to build a content provider if you want to provide one or more of the following features: You want to offer complex data or files to other applications.",
                    "You want to allow users to copy complex data from your app into other apps.",
                    "You want to provide custom search suggestions using the search framework.",
                    "You want to expose your application data to widgets.",
                    "You want to implement the AbstractThreadedSyncAdapter, CursorAdapter, or CursorLoader classes.",
                    "You want to offer complex data or files to other applications.",
                    "If you haven't done so already, read the topic Content provider basics to learn more about providers and how they work.",
                    "Design the raw storage for your data.",
                    "A content provider offers data in two ways: File data Data that normally goes into files, such as photos, audio, or videos.",
                    "Store the files in your application's private space.",
                    "In response to a request for a file from another application, your provider can offer a handle to the file.",
                    "`` Structured'' data Data that normally goes into a database, array, or similar structure.",
                    "Store the data in a form that's compatible with tables of rows and columns.",
                    "A row represents an entity, such as a person or an item in inventory.",
                    "A column represents some data for the entity, such a person's name or an item's price.",
                    "A common way to store this type of data is in an SQLite database, but you can use any type of persistent storage.",
                    "To learn more about the storage types available in the Android system, see the section Designing data storage.",
                    "Define a concrete implementation of the ContentProvider class and its required methods.",
                    "This class is the interface between your data and the rest of the Android system.",
                    "For more information about this class, see the section Implementing the ContentProvider class.",
                    "Define the provider's authority string, its content URIs, and column names.",
                    "If you want the provider's application to handle intents, also define intent actions, extras data, and flags.",
                    "Also define the permissions that you will require for applications that want to access your data.",
                    "You should consider defining all of these values as constants in a separate contract class ; later, you can expose this class to other developers.",
                    "For more information about content URIs, see the section Designing Content URIs.",
                    "For more information about intents, see the section Intents and Data Access.",
                    "Add other optional pieces, such as sample data or an implementation of AbstractThreadedSyncAdapter that can synchronize data between the provider and cloud-based data.",
                    "If you are working with structured data then consider either a relational database such as SQLite, or a non relational key-value datastore such as LevelDB.",
                    "If you are working with unstructured data such as audio, image, or video media then consider storing the data as files.",
                    "You can mix and match several different types of storage, and expose them using a single content provider if necessary.",
                    "The Android system can interact with the Room persistence library, which provides access to the SQLite database API that Android's own providers use to store table-oriented data.",
                    "To create a database using this library, instantiate a subclass of RoomDatabase, as described in the Room persistence library guide.",
                    "For storing file data, Android has a variety of file-oriented APIs.",
                    "To learn more about file storage, read the topic Data Storage.",
                    "If you're designing a provider that offers media-related data such as music or videos, you can have a provider that combines table data and files.",
                    "In rare cases, you might benefit from implementing more than one content provider for a single application.",
                    "For example, you might want to share some data with a widget using one content provider, and expose a different set of data for sharing with other applications.",
                    "For working with network-based data, use classes in java.net and android.net.",
                    "You can also synchronize network-based data to a local data store such as a database, and then offer the data as tables or files.",
                    "The Basic Sync Adapter sample application demonstrates this type of synchronization.",
                    "Table data should always have a `` primary key'' column that the provider maintains as a unique numeric value for each row.",
                    "You can use this value to link the row to related rows in other tables ( using it as a `` foreign key'' ).",
                    "Although you can use any name for this column, using BaseColumns.",
                    "_ ID is the best choice, because linking the results of a provider query to a ListView requires one of the retrieved columns to have the name _ ID.",
                    "If you want to provide bitmap images or other very large pieces of file-oriented data, store the data in a file and then provide it indirectly rather than storing it directly in a table.",
                    "If you do this, you need to tell users of your provider that they need to use a ContentResolver file method to access the data.",
                    "Use the Binary Large OBject ( BLOB ) data type to store data that varies in size or has a varying structure.",
                    "For example, you can use a BLOB column to store a protocol buffer or JSON structure.",
                    "*: Matches a string of any valid characters of any length.",
                    "#: Matches a string of numeric characters of any length.",
                    "content: / / com.example.app.provider / table1: A table called table1.",
                    "content: / / com.example.app.provider / table2/dataset1: A table called dataset1.",
                    "content: / / com.example.app.provider / table2/dataset2: A table called dataset2.",
                    "content: / / com.example.app.provider / table3: A table called table3.",
                    "All of these methods except onCreate ( ) can be called by multiple threads at once, so they must be thread-safe.",
                    "To learn more about multiple threads, see the topic Processes and Threads.",
                    "Avoid doing lengthy operations in onCreate ( ).",
                    "Defer initialization tasks until they are actually needed.",
                    "The section Implementing the onCreate ( ) method discusses this in more detail.",
                    "Although you must implement these methods, your code does not have to do anything except return the expected data type.",
                    "For example, you may want to prevent other applications from inserting data into some tables.",
                    "To do this, you can ignore the call to insert ( ) and return 0.",
                    "IllegalArgumentException ( You may choose to throw this if your provider receives an invalid content URI )",
                    "Subtype part: If the URI pattern is for a single row: android.cursor.item / If the URI pattern is for more than one row: android.cursor.dir /",
                    "If the URI pattern is for a single row: android.cursor.item /",
                    "If the URI pattern is for more than one row: android.cursor.dir /",
                    "<type> You supply the <name> and <type>.",
                    "By default, data files stored on the device's internal storage are private to your application and provider.",
                    "SQLiteDatabase databases you create are private to your application and provider.",
                    "By default, data files that you save to external storage are public and world-readable.",
                    "You can't use a content provider to restrict access to files in external storage, because other applications can use other API calls to read and write them.",
                    "The method calls for opening or creating files or SQLite databases on your device's internal storage can potentially give both read and write access to all other applications.",
                    "If you use an internal file or database as your provider's repository, and you give it `` world-readable'' or `` world-writeable'' access, the permissions you set for your provider in its manifest won't protect your data.",
                    "The default access for files and databases in internal storage is `` private'', and for your provider's repository you shouldn't change this.",
                    "android: grantUriPermissions: Temporary permission flag.",
                    "android: permission: Single provider-wide read/write permission.",
                    "android: readPermission: Provider-wide read permission.",
                    "android: writePermission: Provider-wide write permission.",
                    "android: enabled: Flag allowing the system to start the provider.",
                    "android: exported: Flag allowing other applications to use this provider.",
                    "android: initOrder: The order in which this provider should be started, relative to other providers in the same process.",
                    "android: multiProcess: Flag allowing the system to start the provider in the same process as the calling client.",
                    "android: process: The name of the process in which the provider should run.",
                    "android: syncable: Flag indicating that the provider's data is to be sync ` ed with data on a server.",
                    "android: icon: A drawable resource containing an icon for the provider.",
                    "The icon appears next to the provider's label in the list of apps in Settings > Apps > All.",
                    "android: label: An informational label describing the provider or its data, or both.",
                    "The label appears in the list of apps in Settings > Apps > All.",
                    ""
                ],
                "title": "Creating a content provider \u00a0|\u00a0 Android Developers"
            }
        ],
        "git": [
            {
                "link": "https://github.com/invertase/react-native-firebase/issues/302",
                "content": [
                    "Firebase Storage fail on JSON/Text data \u00b7 Issue # 302 \u00b7 invertase/react-native-firebase \u00b7 GitHub",
                    "Firebase Storage fail on JSON/Text data",
                    "Development Operating System ( e.g. macOS Sierra, Windows 10 ): macOS Sierra 10.12.6",
                    "Build tools ( Xcode or Android Studio version, iOS or Android SDK version, if relevant ): Xcode, iOS 10.3",
                    "I'm at a loss in making Storage work with putFile ( ) ( copying # 170 ( comment ) ).",
                    "Chrome console output from firebase.storage ( ) would always fail, with",
                    "Here's a chunk of xcode console output on error.",
                    "I'm not sure what's `` unexpected'' about the responses as it says:",
                    "FYI, it's not my security rules being the issue, I haven't changed the default rules ( below ) and I have firebase.auth ( ).",
                    "signInAnonymously ( ) before the storage calls.",
                    "Looking at my Firebase console, I would see files created at the correct path, but with all files with this as content: ( instead of the serialized json first written to local file )",
                    "The text was updated successfully, but these errors were encountered:",
                    "@fungilation Are you able to upload a full example somewhere so that we can help you debug it ?",
                    "I've been looking at putFile on iOS but only have code to run through the image / asset upload path, not the specific file upload path.",
                    "If I can put something together using your example then I'll be able to help.",
                    "Workflow: Waiting for User Response",
                    "Is RNFirebase v3 making changes to interface with Firebase Storage ?",
                    "If so, I should test against that, in giving you a more full and isolated test case.",
                    "@fungilation The interface with Firebase Storage is remaining the same in v3 so I just need a full example of generating the JSON file, saving it to disk, then using putFile for me to be able to debug and fix.",
                    "Ok I've updated my original post with how exactly I generate the sha3 hash for path name, with the jsSHA package, and pasted a sample result object ( stringified ) which is the text to be stored in Firebase.",
                    "Let me know @chrisbianca if you need more details still in setting up a reproducible test case.",
                    "The result object includes data from both public and private APIs so I think testing on a sample is easier.",
                    "Do you still need more details on reproducing ?",
                    "@fungilation Sorry, things have been a bit hectic our end, but this is very much on my list as soon as we get v3 out of the door in the next couple of weeks ...",
                    "I think there should be enough information available for me to reproduce - I will shout if that's not the case.",
                    "Great !",
                    "I'm not rushing, and I understand you want to take care of v3 first and test/fix against that after release.",
                    "@chrisbianca I am facing the same problem.",
                    "I am uploading an image using RNFirebase v 3.0.2 and instead of the content of the image, the server uploads a jSON with `` name'', `` size'' and `` contentType'' keys.",
                    "The putFile ( ) returns an error `` an unknown error has occurred.''",
                    "Any help to resolve the issue would be welcome",
                    "I am having the exact same behavior as @waqqas mentioned.",
                    "Was there any resolution to this problem ?",
                    "This is a cross-post from several related issues where I had commented:",
                    "Found it, in my case at least.",
                    "The URI of the image from the ImagePicker had a % character in it from the local app cache.",
                    "This percent was being URI encoded to' %' which resulted in the file not being found by the putFile code.",
                    "Adding a decodeURI call around the uri fixed the issue.",
                    "Thanks all for reporting this issue and the discussion around it.",
                    "We're aware that Storage has fallen behind slightly on React Native Firebase and would like to bring it up to speed again.",
                    "I will close this issue for now and track it as well as other issues collectively over on the Storage improvements proposal to be addressed in a future release.",
                    "@dethell @fungilation @waqqas ; pushed up quite a few fixes/tweaks for storage in preparation for the v4 .3.0 release.",
                    "The two relevant for this issue are:",
                    "fixed content/mime type detection/customisation issues",
                    "added automatic check to decodeURI if necessary",
                    "Keep and eye out for the v4 .3.0 release.",
                    "Thanks for the feedback \ud83d\udc4c",
                    "Fixes now live in the v4 .3.0 release.",
                    "Loving react-native-firebase and the support we provide ?",
                    "Please consider supporting us with any of the below:",
                    "Back financially via Open Collective",
                    "Follow React Native Firebase and Invertase on Twitter",
                    "Star this repo on GitHub \u2b50\ufe0f",
                    "Hey @fungilation - just thought you'd like to know the v6 re-write PR is up and well into dev, which includes many improvements including putString ( ) support - so you'd no longer need to write a file \ud83c\udf89",
                    ""
                ],
                "title": "Firebase Storage fail on JSON/Text data \u00b7 Issue # 302 \u00b7 invertase/react-native-firebase \u00b7 GitHub"
            }
        ],
        "qa": [
            {
                "uid": "40168601",
                "link": "https://stackoverflow.com/questions/40168601",
                "title": "ANDROID: How to save JSON data in a file and retrieve it?",
                "answers": [
                    {
                        "uid": 40168829,
                        "score": 15,
                        "text": [
                            "Every android app has its own internal storage only that app can access, you can read from there or write to it.",
                            "In you case, you first want to check if you such file exist before creating one.",
                            "onCreate of the Activity, you can use do the following",
                            "reference LINK"
                        ]
                    }
                ],
                "tags": [
                    "android",
                    "json",
                    "file"
                ]
            }
        ],
        "other": [
            {
                "link": "https://medium.com/@nayantala259/android-how-to-read-and-write-parse-data-from-json-file-226f821e957a",
                "type": "misc",
                "content": [
                    "Get startedOpen in appNayan Tala13 FollowersAboutFollowSign inGet startedFollow13 FollowersAboutGet startedOpen in appAndroid -- How to Read and Write ( Parse ) data from JSON File ?",
                    "Nayan TalaMar 15, 2020 \u00b7 4 min readHow to Insert, Update and Delete the data available in JSON File in Android ?",
                    "Android provides several ways of dealing with app data within the system or local storage.",
                    "We are going to be dealing with app-specific storage of data in directory available in Internal or External Storage of system.App-specific StorageInternal Storage: Sensitive data, No other application access it.External Storage: Other application can access it like Images.What we are going to do ?",
                    "We will generate a JSON file, which will be stored in Internal storage of application.",
                    "From android application user will add ( WRITE ) data, which will be converted into JSON format ( JSON Object ) and then stored in JSON file.We will access ( READ ) the data from JSON file and converted into app usable format like string, arrays etc.We will also UPDATE the data from JSON file and save it back to JSON file.We will also perform the DELETION operation on JSON file data/Objects.",
                    "Write Data into JSON File: - Get Data From ApplicationData will be taken in terms of Java Object and transferred to JSON File.Flow of Data to JSON parsingJava-object will be passed to JsonObject, which will convert the java object into JsonObject which means the value is now associated with a key because JSON works as Key-Value pairs.Now we will store this JsonObject to our JSON File available at Internal Storage, For this we need to define the path and then we will store the JSON object as a String into.",
                    "Json file.At this point, Data has entered into JSON file.",
                    "How can I see where the data is transferred into Android Studio \u2192 Device File Explorer.Contect.getFilesDir will store into ` files' folderJSON File will have data stored Like this: -2.",
                    "Read Data From JSON FIle: - Now we have to access the data which is available in JSON file.This responce is available in String Json Format, but we have to access it in Java Object form so that we can apply it wherever we want in our application.So we have to get the data available in responce ( String ) using Key and assign those value to our Java Object.Now We can access this javaObject and have value which was stored in JSON file.javaObject data displayed on List3.",
                    "Update and Delete the Data to JSON FIle: - Edit the given data and save it to JSON FileNow This updated Java Object again perform WRITE operation ( repeat step 1 ) on JSON file and Edited data will be displayed when we read ( repeat step 2 ) the JSON object from file.DELETE will remove the current object and perform the step 1 and step 2 procedure.Now we can display the data whichever way we want ... Java object data displayed in list formatWhat is a web design ?",
                    "-LSB- New perspective -RSB- medium.comNayan TalaFlutter DeveloperFollow100 3 100 100 3 AndroidAndroid App DevelopmentJsonReadFilesMore from Nayan TalaFollowFlutter DeveloperMore From MediumJavaScript Features I Will Use in 2021M.",
                    "Vissers in The StartupHow to publish packages that can be used in browsers and NodeZell Liew in freeCodeCamp.orgBuilding an MP3 Audio Player in Vue.jsMuhammad At-TauhidiHow to Use Optimistic UI in React and Apollo GraphQLAmichaud Romain in The StartupNew way to build Dynamic Reactive Form In AngularAjay OjhaSearching through a list reactively in AngularImab Asghar in Code\u9053Binary Search Tree and Me & Recursion Again ( again ) Carlie AnglemireAlgorithms and Data Structures Part IVBrian Butterly in The StartupAboutHelpLegalGet the Medium app",
                    "Android -- How to Read and Write ( Parse ) data from JSON File ?",
                    "-LSB- New perspective -RSB- medium.com",
                    "Nayan TalaMar 15, 2020 \u00b7 4 min read",
                    ""
                ],
                "title": "Android \u2014 How to Read and Write (Parse) data from JSON File ? | by Nayan Tala | Medium"
            },
            {
                "link": "http://amyamyzhu.github.io/2018/06/28/Read-and-Store-Json-Files-in-Internal-Storage",
                "type": "misc",
                "content": [
                    "Amy Zhu To learn without thinking is blindness, to think without learning is idleness.",
                    "Read and Store Json Files in Internal Storage",
                    "Understanding the storages in an Android device, you can easily check or transfer files in both directions: your app and the device.",
                    "For example, if your app have a licence file, and you want to check the permission, you can store licence file in Android device for further updating and changing.",
                    "Storages in an Android DeviceTo work with your device's file system, do the following:",
                    "Open the device file browser by clicking View > Tool Windows > Device File Explorer.",
                    "Select a device from the drop-down list.",
                    "There two useful storages you can store your data:",
                    "one is the internal storage, which is located at: data/data/app _ name / another one is the external user storage, which is located at: sdcard /",
                    "Examples for Creating filesHere is a sample code that creates a file in the internal storage:",
                    "To learn without thinking is blindness, to think without learning is idleness.",
                    ""
                ],
                "title": "Read and Store Json Files in Internal Storage - AmyZhu's Blog"
            }
        ]
    },
    "parsed": true
}