[
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "index Beautiful Soup 4.9.0 documentation'' Beautiful Soup Documentation"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup is a Python library for pulling data out of HTML and XML files."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It commonly saves programmers hours or days of work."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These instructions illustrate all major features of Beautiful Soup 4, with examples."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I show you what the library is good for, how it works, how to use it, how to make it do what you want, and what to do when it violates your expectations."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This document covers Beautiful Soup version 4.10.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The examples in this documentation were written for Python 3.8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You might be looking for the documentation for Beautiful Soup 3."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If so, you should know that Beautiful Soup 3 is no longer being developed and that all support for it was dropped on December 31, 2020."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to learn about the differences between Beautiful Soup 3 and Beautiful Soup 4, see Porting code to BS4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This documentation has been translated into other languages by Beautiful Soup users:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "\u3053\u306e\u30da\u30fc\u30b8\u306f\u65e5\u672c\u8a9e\u3067\u5229\u7528\u3067\u304d\u307e\u3059 ( \u5916\u90e8\u30ea\u30f3\u30af ) \uc774 \ubb38\uc11c\ub294 \ud55c\uad6d\uc5b4 \ubc88\uc5ed\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Este documento tamb\u00e9m est\u00e1 dispon\u00edvel em Portugu\u00eas do Brasil."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "\u042d\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c \u044f\u0437\u044b\u043a\u0435."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you have questions about Beautiful Soup, or run into problems, send mail to the discussion group."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If your problem involves parsing an HTML document, be sure to mention what the diagnose ( ) function says about that document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's an HTML document I'll be using as an example throughout this document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's part of a story from Alice in Wonderland:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Running the `` three sisters'' document through Beautiful Soup gives us a BeautifulSoup object, which represents the document as a nested data structure:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here are some simple ways to navigate that data structure:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One common task is extracting all the URLs found within a page's <a> tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Another common task is extracting all the text from a page:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Does this look like what you need ?"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're using a recent version of Debian or Ubuntu Linux, you can install Beautiful Soup with the system package manager: $ apt-get install python3-bs4 Beautiful Soup 4 is published through PyPi, so if you can't install it with the system packager, you can install it with easy_install or pip."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The package name is beautifulsoup4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Make sure you use the right version of pip or easy_install for your Python version ( these may be named pip3 and easy_install3 respectively )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "$ easy_install beautifulsoup4 $ pip install beautifulsoup4 ( The BeautifulSoup package is not what you want."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "That's the previous major release, Beautiful Soup 3."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Lots of software uses BS3, so it's still available, but if you're writing new code you should install beautifulsoup4. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't have easy_install or pip installed, you can download the Beautiful Soup 4 source tarball and install it with setup.py."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "$ python setup.py install If all else fails, the license for Beautiful Soup allows you to package the entire library with your application."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can download the tarball, copy its bs4 directory into your application's codebase, and use Beautiful Soup without installing it at all."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I use Python 3.8 to develop Beautiful Soup, but it should work with other recent versions."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup supports the HTML parser included in Python's standard library, but it also supports a number of third-party Python parsers."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One is the lxml parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Depending on your setup, you might install lxml with one of these commands: $ apt-get install python-lxml $ easy_install lxml $ pip install lxml Another alternative is the pure-Python html5lib parser, which parses HTML the way a web browser does."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Depending on your setup, you might install html5lib with one of these commands: $ apt-get install python-html5lib $ easy_install html5lib $ pip install html5lib This table summarizes the advantages and disadvantages of each parser library:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Parser Typical usage Advantages Disadvantages"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Python's html.parser BeautifulSoup ( markup, `` html.parser'' )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Batteries included Decent speed Lenient ( As of Python 3.2 )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Not as fast as lxml, less lenient than html5lib."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "lxml's HTML parser BeautifulSoup ( markup, `` lxml'' )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "lxml's XML parser BeautifulSoup ( markup, `` lxml-xml'' ) BeautifulSoup ( markup, `` xml'' )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Very fast The only currently supported XML parser"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "html5lib BeautifulSoup ( markup, `` html5lib'' )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Extremely lenient Parses pages the same way a web browser does Creates valid HTML5"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Very slow External Python dependency"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you can, I recommend you install and use lxml for speed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're using a very old version of Python -- earlier than 3.2.2 -- it's essential that you install lxml or html5lib."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Python's built-in HTML parser is just not very good in those old versions."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that if a document is invalid, different parsers will generate different Beautiful Soup trees for it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "See Differences between parsers for details."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "To parse a document, pass it into the BeautifulSoup constructor."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can pass in a string or an open filehandle:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "First, the document is converted to Unicode, and HTML entities are converted to Unicode characters:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup then parses the document using the best available parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It will use an HTML parser unless you specifically tell it to use an XML parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( See Parsing XML. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup transforms a complex HTML document into a complex tree of Python objects."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But you'll only ever have to deal with about four kinds of objects: Tag, NavigableString, BeautifulSoup, and Comment."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A Tag object corresponds to an XML or HTML tag in the original document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tags have a lot of attributes and methods, and I'll cover most of them in Navigating the tree and Searching the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For now, the most important features of a tag are its name and attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Every tag has a name, accessible as."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you change a tag's name, the change will be reflected in any HTML markup generated by Beautiful Soup:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A tag may have any number of attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The tag < b id = `` boldest'' > has an attribute `` id'' whose value is `` boldest''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can access a tag's attributes by treating the tag like a dictionary:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can access that dictionary directly as."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can add, remove, and modify a tag's attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Again, this is done by treating the tag as a dictionary:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "HTML 4 defines a few attributes that can have multiple values."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "HTML 5 removes a couple of them, but defines a few more."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The most common multi-valued attribute is class ( that is, a tag can have more than one CSS class )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Others include rel, rev, accept-charset, headers, and accesskey."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup presents the value ( s ) of a multi-valued attribute as a list:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If an attribute looks like it has more than one value, but it's not a multi-valued attribute as defined by any version of the HTML standard, Beautiful Soup will leave the attribute alone:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When you turn a tag back into a string, multiple attribute values are consolidated:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can disable this by passing multi_valued_attributes = None as a keyword argument into the BeautifulSoup constructor:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use get_attribute_list to get a value that's always a list, whether or not it's a multi-valued atribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you parse a document as XML, there are no multi-valued attributes:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Again, you can configure this using the multi_valued_attributes argument:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You probably won't need to do this, but if you do, use the defaults as a guide."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "They implement the rules described in the HTML specification:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A string corresponds to a bit of text within a tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup uses the NavigableString class to contain these bits of text:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A NavigableString is just like a Python Unicode string, except that it also supports some of the features described in Navigating the tree and Searching the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can convert a NavigableString to a Unicode string with str:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can't edit a string in place, but you can replace one string with another, using replace_with ( ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "NavigableString supports most of the features described in Navigating the tree and Searching the tree, but not all of them."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In particular, since a string can't contain anything ( the way a tag may contain a string or another tag ), strings don't support the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string attributes, or the find ( ) method."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to use a NavigableString outside of Beautiful Soup, you should call unicode ( ) on it to turn it into a normal Python Unicode string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't, your string will carry around a reference to the entire Beautiful Soup parse tree, even when you're done using Beautiful Soup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is a big waste of memory."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The BeautifulSoup object represents the parsed document as a whole."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For most purposes, you can treat it as a Tag object."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This means it supports most of the methods described in Navigating the tree and Searching the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also pass a BeautifulSoup object into one of the methods defined in Modifying the tree, just as you would a Tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This lets you do things like combine two parsed documents:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Since the BeautifulSoup object doesn't correspond to an actual HTML or XML tag, it has no name and no attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But sometimes it's useful to look at its."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "name, so it's been given the special."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Comments and other special strings"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag, NavigableString, and BeautifulSoup cover almost everything you'll see in an HTML or XML file, but there are a few leftover bits."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The main one you'll probably encounter is the comment:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The Comment object is just a special type of NavigableString:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But when it appears as part of an HTML document, a Comment is displayed with special formatting:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup also defines classes called Stylesheet, Script, and TemplateString, for embedded CSS stylesheets ( any strings found inside a <style> tag ), embedded Javascript ( any strings found in a <script> tag ), and HTML templates ( any strings inside a <template> tag )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These classes work exactly the same way as NavigableString ; their only purpose is to make it easier to pick out the main body of the page, by ignoring strings that represent something else."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( These classes are new in Beautiful Soup 4.9.0, and the html5lib parser doesn't use them. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup defines classes for anything else that might show up in an XML document: CData, ProcessingInstruction, Declaration, and Doctype."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Like Comment, these classes are subclasses of NavigableString that add something extra to the string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's an example that replaces the comment with a CDATA block:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's the `` Three sisters'' HTML document again:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I'll use this as an example to show you how to move from one part of a document to another."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tags may contain strings and other tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These elements are the tag's children."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup provides a lot of different attributes for navigating and iterating over a tag's children."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that Beautiful Soup strings don't support any of these attributes, because a string can't have children."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The simplest way to navigate the parse tree is to say the name of the tag you want."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want the <head> tag, just say soup.head:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can do use this trick again and again to zoom in on a certain part of the parse tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code gets the first <b> tag beneath the <body> tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Using a tag name as an attribute will give you only the first tag by that name:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you need to get all the <a> tags, or anything more complicated than the first tag with a certain name, you'll need to use one of the methods described in Searching the tree, such as find_all ( ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A tag's children are available in a list called."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The BeautifulSoup object itself has children."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In this case, the <html> tag is the child of the BeautifulSoup object.:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A string does not have."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "contents, because it can't contain anything:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead of getting them as a list, you can iterate over a tag's children using the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "children attributes only consider a tag's direct children."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For instance, the <head> tag has a single direct child -- the <title> tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But the <title> tag itself has a child: the string `` The Dormouse's story''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There's a sense in which that string is also a child of the <head> tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "descendants attribute lets you iterate over all of a tag's children, recursively: its direct children, the children of its direct children, and so on:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The <head> tag has only one child, but it has two descendants: the <title> tag and the <title> tag's child."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The BeautifulSoup object only has one direct child ( the <html> tag ), but it has a whole lot of descendants:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If a tag has only one child, and that child is a NavigableString, the child is made available as."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If a tag's only child is another tag, and that tag has a."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string, then the parent tag is considered to have the same."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If a tag contains more than one thing, then it's not clear what."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string should refer to, so."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string is defined to be None:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If there's more than one thing inside a tag, you can still look at just the strings."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These strings tend to have a lot of extra whitespace, which you can remove by using the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here, strings consisting entirely of whitespace are ignored, and whitespace at the beginning and end of strings is removed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Continuing the `` family tree'' analogy, every tag and every string has a parent: the tag that contains it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can access an element's parent with the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In the example `` three sisters'' document, the <head> tag is the parent of the <title> tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The title string itself has a parent: the <title> tag that contains it:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The parent of a top-level tag like <html> is the BeautifulSoup object itself:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "parent of a BeautifulSoup object is defined as None:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can iterate over all of an element's parents with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "parents to travel from an <a> tag buried deep within the document, to the very top of the document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Consider a simple document like this:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The <b> tag and the <c> tag are at the same level: they're both direct children of the same tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When a document is pretty-printed, siblings show up at the same indentation level."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also use this relationship in the code you write."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_sibling to navigate between page elements that are on the same level of the parse tree:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_sibling, because there's nothing before the <b> tag on the same level of the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For the same reason, the <c> tag has a."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The strings `` text1'' and `` text2'' are not siblings, because they don't have the same parent:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_sibling of a tag will usually be a string containing whitespace."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Going back to the `` three sisters'' document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You might think that the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_sibling of the first <a> tag would be the second <a> tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But actually, it's a string: the comma and newline that separate the first <a> tag from the second:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The second <a> tag is actually the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can iterate over a tag's siblings with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Take a look at the beginning of the `` three sisters'' document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "An HTML parser takes this string of characters and turns it into a series of events: `` open an <html> tag'', `` open a <head> tag'', `` open a <title> tag'', `` add a string'', `` close the <title> tag'', `` open a <p> tag'', and so on."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup offers tools for reconstructing the initial parse of the document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_element attribute of a string or tag points to whatever was parsed immediately afterwards."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It might be the same as."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_sibling, but it's usually drastically different."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's the final <a> tag in the `` three sisters'' document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_sibling is a string: the conclusion of the sentence that was interrupted by the start of the <a> tag.:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_element of that <a> tag, the thing that was parsed immediately after the <a> tag, is not the rest of that sentence: it's the word `` Tillie'':"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "That's because in the original markup, the word `` Tillie'' appeared before that semicolon."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The parser encountered an <a> tag, then the word `` Tillie'', then the closing </a> tag, then the semicolon and rest of the sentence."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The semicolon is on the same level as the <a> tag, but the word `` Tillie'' was encountered first."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_element attribute is the exact opposite of."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It points to whatever element was parsed immediately before this one:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You should get the idea by now."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use these iterators to move forward or backward in the document as it was parsed:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup defines a lot of methods for searching the parse tree, but they're all very similar."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I'm going to spend a lot of time explaining the two most popular methods: find ( ) and find_all ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The other methods take almost exactly the same arguments, so I'll just cover them briefly."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Once again, I'll be using the `` three sisters'' document as an example:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "By passing in a filter to an argument like find_all ( ), you can zoom in on the parts of the document you're interested in."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Before talking in detail about find_all ( ) and similar methods, I want to show examples of different filters you can pass into these methods."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These filters show up again and again, throughout the search API."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use them to filter based on a tag's name, on its attributes, on the text of a string, or on some combination of these."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The simplest filter is a string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Pass a string to a search method and Beautiful Soup will perform a match against that exact string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all the <b> tags in the document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a byte string, Beautiful Soup will assume the string is encoded as UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can avoid this by passing in a Unicode string instead."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a regular expression object, Beautiful Soup will filter against that regular expression using its search ( ) method."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all the tags whose names start with the letter `` b'' ; in this case, the <body> tag and the <b> tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all the tags whose names contain the letter ` t':"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a list, Beautiful Soup will allow a string match against any item in that list."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all the <a> tags and all the <b> tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The value True matches everything it can."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all the tags in the document, but none of the text strings:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If none of the other matches work for you, define a function that takes an element as its only argument."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The function should return True if the argument matches, and False otherwise."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a function that returns True if a tag defines the `` class'' attribute but doesn't define the `` id'' attribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Pass this function into find_all ( ) and you'll pick up all the <p> tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This function only picks up the <p> tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It doesn't pick up the <a> tags, because those tags define both `` class'' and `` id''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It doesn't pick up tags like <html> and <title>, because those tags don't define `` class''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a function to filter on a specific attribute like href, the argument passed into the function will be the attribute value, not the whole tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a function that finds all a tags whose href attribute does not match a regular expression:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The function can be as complicated as you need it to be."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a function that returns True if a tag is surrounded by string objects:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Now we're ready to look at the search methods in detail."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_all ( name, attrs, recursive, string, limit, ** kwargs ) The find_all ( ) method looks through a tag's descendants and retrieves all descendants that match your filters."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I gave several examples in Kinds of filters, but here are a few more:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Some of these should look familiar, but others are new."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "What does it mean to pass in a value for string, or id ?"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Why does find_all ( `` p'', `` title'' ) find a <p> tag with the CSS class `` title'' ?"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Let's look at the arguments to find_all ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Pass in a value for name and you'll tell Beautiful Soup to only consider tags with certain names."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Text strings will be ignored, as will tags whose names that don't match."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is the simplest usage:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Recall from Kinds of filters that the value to name can be a string, a regular expression, a list, a function, or the value True."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Any argument that's not recognized will be turned into a filter on one of a tag's attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a value for an argument called id, Beautiful Soup will filter against each tag's ` id' attribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in a value for href, Beautiful Soup will filter against each tag's ` href' attribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can filter an attribute based on a string, a regular expression, a list, a function, or the value True."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds all tags whose id attribute has a value, regardless of what the value is:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can filter multiple attributes at once by passing in more than one keyword argument:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Some attributes, like the data - * attributes in HTML 5, have names that can't be used as the names of keyword arguments:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use these attributes in searches by putting them into a dictionary and passing the dictionary into find_all ( ) as the attrs argument:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can't use a keyword argument to search for HTML's ` name' element, because Beautiful Soup uses the name argument to contain the name of the tag itself."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead, you can give a value to ` name' in the attrs argument:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's very useful to search for a tag that has a certain CSS class, but the name of the CSS attribute, `` class'', is a reserved word in Python."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Using class as a keyword argument will give you a syntax error."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "As of Beautiful Soup 4.1.2, you can search by CSS class using the keyword argument class _:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "As with any keyword argument, you can pass class _ a string, a regular expression, a function, or True:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Remember that a single tag can have multiple values for its `` class'' attribute."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When you search for a tag that matches a certain CSS class, you're matching against any of its CSS classes:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also search for the exact string value of the class attribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But searching for variants of the string value won't work:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to search for tags that match two or more CSS classes, you should use a CSS selector:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In older versions of Beautiful Soup, which don't have the class _ shortcut, you can use the attrs trick mentioned above."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Create a dictionary whose value for `` class'' is the string ( or regular expression, or whatever ) you want to search for:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "With string you can search for strings instead of tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "As with name and the keyword arguments, you can pass in a string, a regular expression, a list, a function, or the value True."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Although string is for finding strings, you can combine it with arguments that find tags: Beautiful Soup will find all tags whose."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string matches your value for string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This code finds the <a> tags whose."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The string argument is new in Beautiful Soup 4.4.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In earlier versions it was called text:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "find_all ( ) returns all the tags and strings that match your filters."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This can take a while if the document is large."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't need all the results, you can pass in a number for limit."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This works just like the LIMIT keyword in SQL."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It tells Beautiful Soup to stop gathering results after it's found a certain number."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are three links in the `` three sisters'' document, but this code only finds the first two:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you call mytag.find _ all ( ), Beautiful Soup will examine all the descendants of mytag: its children, its children's children, and so on."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you only want Beautiful Soup to consider direct children, you can pass in recursive = False."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's that part of the document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The <title> tag is beneath the <html> tag, but it's not directly beneath the <html> tag: the <head> tag is in the way."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup finds the <title> tag when it's allowed to look at all descendants of the <html> tag, but when recursive = False restricts it to the <html> tag's immediate children, it finds nothing."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup offers a lot of tree-searching methods ( covered below ), and they mostly take the same arguments as find_all ( ): name, attrs, string, limit, and the keyword arguments."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But the recursive argument is different: find_all ( ) and find ( ) are the only methods that support it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Passing recursive = False into a method like find_parents ( ) wouldn't be very useful."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Calling a tag is like calling find_all ( )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Because find_all ( ) is the most popular method in the Beautiful Soup search API, you can use a shortcut for it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you treat the BeautifulSoup object or a Tag object as though it were a function, then it's the same as calling find_all ( ) on that object."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These two lines of code are equivalent:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These two lines are also equivalent:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find ( name, attrs, recursive, string, ** kwargs ) The find_all ( ) method scans the entire document looking for results, but sometimes you only want to find one result."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you know a document only has one <body> tag, it's a waste of time to scan the entire document looking for more."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Rather than passing in limit = 1 every time you call find_all, you can use the find ( ) method."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These two lines of code are nearly equivalent:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The only difference is that find_all ( ) returns a list containing the single result, and find ( ) just returns the result."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If find_all ( ) can't find anything, it returns an empty list."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If find ( ) can't find anything, it returns None:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Remember the soup.head.title trick from Navigating using tag names ?"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "That trick works by repeatedly calling find ( ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_parents ( name, attrs, string, limit, ** kwargs ) Method signature: find_parent ( name, attrs, string, ** kwargs ) I spent a lot of time above covering find_all ( ) and find ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The Beautiful Soup API defines ten other methods for searching the tree, but don't be afraid."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Five of these methods are basically the same as find_all ( ), and the other five are basically the same as find ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The only differences are in what parts of the tree they search."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "First let's consider find_parents ( ) and find_parent ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Remember that find_all ( ) and find ( ) work their way down the tree, looking at tag's descendants."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These methods do the opposite: they work their way up the tree, looking at a tag's ( or a string's ) parents."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Let's try them out, starting from a string buried deep in the `` three daughters'' document:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One of the three <a> tags is the direct parent of the string in question, so our search finds it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One of the three <p> tags is an indirect parent of the string, and our search finds that as well."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There's a <p> tag with the CSS class `` title'' somewhere in the document, but it's not one of this string's parents, so we can't find it with find_parents ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You may have made the connection between find_parent ( ) and find_parents ( ), and the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The connection is very strong."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These search methods actually use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "parents to iterate over all the parents, and check each one against the provided filter to see if it matches."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_next_siblings ( name, attrs, string, limit, ** kwargs ) Method signature: find_next_sibling ( name, attrs, string, ** kwargs ) These methods use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_siblings to iterate over the rest of an element's siblings in the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The find_next_siblings ( ) method returns all the siblings that match, and find_next_sibling ( ) only returns the first one:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "find_previous_siblings ( ) and find_previous_sibling ( )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_previous_siblings ( name, attrs, string, limit, ** kwargs ) Method signature: find_previous_sibling ( name, attrs, string, ** kwargs ) These methods use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_siblings to iterate over an element's siblings that precede it in the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The find_previous_siblings ( ) method returns all the siblings that match, and find_previous_sibling ( ) only returns the first one:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_all_next ( name, attrs, string, limit, ** kwargs ) Method signature: find_next ( name, attrs, string, ** kwargs ) These methods use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "next_elements to iterate over whatever tags and strings that come after it in the document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The find_all_next ( ) method returns all matches, and find_next ( ) only returns the first match:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In the first example, the string `` Elsie'' showed up, even though it was contained within the <a> tag we started from."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In the second example, the last <p> tag in the document showed up, even though it's not in the same part of the tree as the <a> tag we started from."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For these methods, all that matters is that an element match the filter, and show up later in the document than the starting element."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Method signature: find_all_previous ( name, attrs, string, limit, ** kwargs ) Method signature: find_previous ( name, attrs, string, ** kwargs ) These methods use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "previous_elements to iterate over the tags and strings that came before it in the document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The find_all_previous ( ) method returns all matches, and find_previous ( ) only returns the first match:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The call to find_all_previous ( `` p'' ) found the first paragraph in the document ( the one with class ='' title'' ), but it also finds the second paragraph, the <p> tag that contains the <a> tag we started with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This shouldn't be too surprising: we're looking at all the tags that show up earlier in the document than the one we started with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "A <p> tag that contains an <a> tag must have shown up before the <a> tag it contains."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "select ( ) method which uses the SoupSieve package to run a CSS selector against a parsed document and return all the matching elements."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag has a similar method which runs a CSS selector against the contents of a single tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( The SoupSieve integration was added in Beautiful Soup 4.7.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Earlier versions also have the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "select ( ) method, but only the most commonly-used CSS selectors are supported."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you installed Beautiful Soup through pip, SoupSieve was installed at the same time, so you don't have to do anything extra. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The SoupSieve documentation lists all the currently supported CSS selectors, but here are some of the basics: You can find tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find tags beneath other tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find tags directly beneath other tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find the siblings of tags:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find tags by CSS class:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find tags that match any selector from a list of selectors:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Test for the existence of an attribute:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Find tags by attribute value:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There's also a method called select_one ( ), which finds only the first tag that matches a selector:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you've parsed XML that defines namespaces, you can use them in CSS selectors.:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When handling a CSS selector that uses namespaces, Beautiful Soup always tries to use namespace prefixes that make sense based on what it saw while parsing the document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can always provide your own dictionary of abbreviations:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "All this CSS selector stuff is a convenience for people who already know the CSS selector syntax."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can do all of this with the Beautiful Soup API."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "And if CSS selectors are all you need, you should parse the document with lxml: it's a lot faster."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But this lets you combine CSS selectors with the Beautiful Soup API."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup's main strength is in searching the parse tree, but you can also modify the tree and write your changes as a new HTML or XML document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Changing tag names and attributes"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I covered this earlier, in Attributes, but it bears repeating."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can rename a tag, change the values of its attributes, add new attributes, and delete attributes:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you set a tag's."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string attribute to a new string, the tag's contents are replaced with that string:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Be careful: if the tag contained other tags, they and all their contents will be destroyed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can add to a tag's contents with Tag.append ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It works just like calling."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "append ( ) on a Python list:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Starting in Beautiful Soup 4.7.0, Tag also supports a method called."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "extend ( ), which adds every element of a list to a Tag, in order:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you need to add a string to a document, no problem -- you can pass a Python string in to append ( ), or you can call the NavigableString constructor:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to create a comment or some other subclass of NavigableString, just call the constructor:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( This is a new feature in Beautiful Soup 4.4.0. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "What if you need to create a whole new tag ?"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The best solution is to call the factory method BeautifulSoup.new _ tag ( ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Only the first argument, the tag name, is required."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag.insert ( ) is just like Tag.append ( ), except the new element doesn't necessarily go at the end of its parent's."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It'll be inserted at whatever numeric position you say."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "insert ( ) on a Python list:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The insert_before ( ) method inserts tags or strings immediately before something else in the parse tree:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The insert_after ( ) method inserts tags or strings immediately following something else in the parse tree:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag.clear ( ) removes the contents of a tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "PageElement.extract ( ) removes a tag or string from the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It returns the tag or string that was extracted:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "At this point you effectively have two parse trees: one rooted at the BeautifulSoup object you used to parse the document, and one rooted at the tag that was extracted."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can go on to call extract on a child of the element you extracted:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag.decompose ( ) removes a tag from the tree, then completely destroys it and its contents:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The behavior of a decomposed Tag or NavigableString is not defined and you should not use it for anything."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're not sure whether something has been decomposed, you can check its."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "decomposed property ( new in Beautiful Soup 4.9.0 ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "PageElement.replace _ with ( ) removes a tag or string from the tree, and replaces it with one or more tags or strings of your choice:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "replace_with ( ) returns the tag or string that got replaced, so that you can examine it or add it back to another part of the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The ability to pass multiple arguments into replace_with ( ) is new in Beautiful Soup 4.10.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "PageElement.wrap ( ) wraps an element in the tag you specify."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It returns the new wrapper:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This method is new in Beautiful Soup 4.0.5."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag.unwrap ( ) is the opposite of wrap ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It replaces a tag with whatever's inside that tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's good for stripping out markup:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Like replace_with ( ), unwrap ( ) returns the tag that was replaced."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "After calling a bunch of methods that modify the parse tree, you may end up with two or more NavigableString objects next to each other."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup doesn't have any problems with this, but since it can't happen in a freshly parsed document, you might not expect behavior like the following:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can call Tag.smooth ( ) to clean up the parse tree by consolidating adjacent strings:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This method is new in Beautiful Soup 4.8.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The prettify ( ) method will turn a Beautiful Soup parse tree into a nicely formatted Unicode string, with a separate line for each tag and each string:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can call prettify ( ) on the top-level BeautifulSoup object, or on any of its Tag objects:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Since it adds whitespace ( in the form of newlines ), prettify ( ) changes the meaning of an HTML document and should not be used to reformat one."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The goal of prettify ( ) is to help you visually understand the structure of the documents you work with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you just want a string, with no fancy formatting, you can call str ( ) on a BeautifulSoup object, or on a Tag within it:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The str ( ) function returns a string encoded in UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "See Encodings for other options."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also call encode ( ) to get a bytestring, and decode ( ) to get Unicode."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you give Beautiful Soup a document that contains HTML entities like `` & lquot ;'', they'll be converted to Unicode characters:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you then convert the document to a bytestring, the Unicode characters will be encoded as UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You won't get the HTML entities back:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "By default, the only characters that are escaped upon output are bare ampersands and angle brackets."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These get turned into `` &'', `` <'', and `` >'', so that Beautiful Soup doesn't inadvertently generate invalid HTML or XML:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can change this behavior by providing a value for the formatter argument to prettify ( ), encode ( ), or decode ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup recognizes five possible values for formatter."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The default is formatter = `` minimal''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Strings will only be processed enough to ensure that Beautiful Soup generates valid HTML/XML:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in formatter = `` html'', Beautiful Soup will convert Unicode characters to HTML entities whenever possible:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in formatter = `` html5'', it's similar to formatter = `` html'', but Beautiful Soup will omit the closing slash in HTML void tags like `` br'':"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In addition, any attributes whose values are the empty string will become HTML-style boolean attributes:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( This behavior is new as of Beautiful Soup 4.10.0. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass in formatter = None, Beautiful Soup will not modify strings at all on output."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is the fastest option, but it may lead to Beautiful Soup generating invalid HTML/XML, as in these examples:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you need more sophisticated control over your output, you can use Beautiful Soup's Formatter class."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a formatter that converts strings to uppercase, whether they occur in a text node or in an attribute value:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Subclassing HTMLFormatter or XMLFormatter will give you even more control over the output."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For example, Beautiful Soup sorts the attributes in every tag by default:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "To turn this off, you can subclass the Formatter.attributes ( ) method, which controls which attributes are output and in what order."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This implementation also filters out the attribute called `` m'' whenever it appears:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One last caveat: if you create a CData object, the text inside that object is always presented exactly as it appears, with no formatting."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup will call your entity substitution function, just in case you've written a custom function that counts all the strings in the document or something, but it will ignore the return value:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you only want the human-readable text inside a document or tag, you can use the get_text ( ) method."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It returns all the text in a document or beneath a tag, as a single Unicode string:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can specify a string to be used to join the bits of text together:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can tell Beautiful Soup to strip whitespace from the beginning and end of each bit of text:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But at that point you might want to use the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "stripped_strings generator instead, and process the text yourself:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "As of Beautiful Soup version 4.9.0, when lxml or html.parser are in use, the contents of <script>, <style>, and <template> tags are generally not considered to be ` text', since those tags are not part of the human-visible content of the page."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "As of Beautiful Soup version 4.10.0, you can call get_text ( ),."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "stripped_strings on a NavigableString object."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It will either return the object itself, or nothing, so the only reason to do this is when you're iterating over a mixed list."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Specifying the parser to use"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you just need to parse some HTML, you can dump the markup into the BeautifulSoup constructor, and it'll probably be fine."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup will pick a parser for you and parse the data."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But there are a few additional arguments you can pass in to the constructor to change which parser is used."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The first argument to the BeautifulSoup constructor is a string or an open filehandle -- the markup you want parsed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The second argument is how you'd like the markup parsed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't specify anything, you'll get the best HTML parser that's installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup ranks lxml's parser as being the best, then html5lib's, then Python's built-in parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can override this by specifying one of the following:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "What type of markup you want to parse."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Currently supported are `` html'', `` xml'', and `` html5''."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The name of the parser library you want to use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Currently supported options are `` lxml'', `` html5lib'', and `` html.parser'' ( Python's built-in HTML parser )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The section Installing a parser contrasts the supported parsers."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't have an appropriate parser installed, Beautiful Soup will ignore your request and pick a different parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Right now, the only supported XML parser is lxml."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't have lxml installed, asking for an XML parser won't give you one, and asking for `` lxml'' won't work either."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup presents the same interface to a number of different parsers, but each parser is different."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Different parsers will create different parse trees from the same document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The biggest differences are between the HTML parsers and the XML parsers."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a short document, parsed as HTML using the parser that comes with Python:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Since a standalone <b/> tag is not valid HTML, html.parser turns it into a <b> </b> tag pair."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's the same document parsed as XML ( running this requires that you have lxml installed )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that the standalone <b/> tag is left alone, and that the document is given an XML declaration instead of being put into an <html> tag.:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are also differences between HTML parsers."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you give Beautiful Soup a perfectly-formed HTML document, these differences won't matter."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "One parser will be faster than another, but they'll all give you a data structure that looks exactly like the original HTML document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But if the document is not perfectly-formed, different parsers will give different results."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a short, invalid document parsed using lxml's HTML parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that the <a> tag gets wrapped in <body> and <html> tags, and the dangling </p> tag is simply ignored:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's the same document parsed using html5lib:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead of ignoring the dangling </p> tag, html5lib pairs it with an opening <p> tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "html5lib also adds an empty <head> tag ; lxml didn't bother."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's the same document parsed with Python's built-in HTML parser:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Like html5lib, this parser ignores the closing </p> tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Unlike html5lib or lxml, this parser makes no attempt to create a well-formed HTML document by adding <html> or <body> tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Since the document `` <a> </p>'' is invalid, none of these techniques is the ` correct' way to handle it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The html5lib parser uses techniques that are part of the HTML5 standard, so it has the best claim on being the ` correct' way, but all three techniques are legitimate."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Differences between parsers can affect your script."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're planning on distributing your script to other people, or running it on multiple machines, you should specify a parser in the BeautifulSoup constructor."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "That will reduce the chances that your users parse a document differently from the way you parse it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Any HTML or XML document is written in a specific encoding like ASCII or UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But when you load that document into Beautiful Soup, you'll discover it's been converted to Unicode:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( That sure would be nice. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup uses a sub-library called Unicode, Dammit to detect a document's encoding and convert it to Unicode."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The autodetected encoding is available as the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "original_encoding attribute of the BeautifulSoup object:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Unicode, Dammit guesses correctly most of the time, but sometimes it makes mistakes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Sometimes it guesses correctly, but only after a byte-by-byte search of the document that takes a very long time."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you happen to know a document's encoding ahead of time, you can avoid mistakes and delays by passing it to the BeautifulSoup constructor as from_encoding."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a document written in ISO-8859-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The document is so short that Unicode, Dammit can't get a lock on it, and misidentifies it as ISO-8859-7:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "We can fix this by passing in the correct from_encoding:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't know what the correct encoding is, but you know that Unicode, Dammit is guessing wrong, you can pass the wrong guesses in as exclude_encodings:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Windows-1255 isn't 100 % correct, but that encoding is a compatible superset of ISO-8859-8, so it's close enough."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( exclude_encodings is a new feature in Beautiful Soup 4.4.0. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In rare cases ( usually when a UTF-8 document contains text written in a completely different encoding ), the only way to get Unicode may be to replace some characters with the special Unicode character `` REPLACEMENT CHARACTER'' ( U+FFFD, )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If Unicode, Dammit needs to do this, it will set the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "contains_replacement_characters attribute to True on the UnicodeDammit or BeautifulSoup object."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This lets you know that the Unicode representation is not an exact representation of the original -- some data was lost."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If a document contains, but."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "contains_replacement_characters is False, you'll know that the was there originally ( as it is in this paragraph ) and doesn't stand in for missing data."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When you write out a document from Beautiful Soup, you get a UTF-8 document, even if the document wasn't in UTF-8 to begin with."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a document written in the Latin-1 encoding:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that the <meta> tag has been rewritten to reflect the fact that the document is now in UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you don't want UTF-8, you can pass an encoding into prettify ( ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also call encode ( ) on the BeautifulSoup object, or any element in the soup, just as if it were a Python string:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Any characters that can't be represented in your chosen encoding will be converted into numeric XML entity references."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's a document that includes the Unicode character SNOWMAN:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The SNOWMAN character can be part of a UTF-8 document ( it looks like \u2603 ), but there's no representation for that character in ISO-Latin-1 or ASCII, so it's converted into `` & # 9731'' for those encodings:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use Unicode, Dammit without using Beautiful Soup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's useful whenever you have data in an unknown encoding and you just want it to become Unicode:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Unicode, Dammit's guesses will get a lot more accurate if you install one of these Python libraries: charset-normalizer, chardet, or cchardet."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The more data you give Unicode, Dammit, the more accurately it will guess."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you have your own suspicions as to what the encoding might be, you can pass them in as a list:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Unicode, Dammit has two special features that Beautiful Soup doesn't use."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use Unicode, Dammit to convert Microsoft smart quotes to HTML or XML entities:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also convert Microsoft smart quotes to ASCII quotes:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Hopefully you'll find this feature useful, but Beautiful Soup doesn't use it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup prefers the default behavior, which is to convert Microsoft smart quotes to Unicode characters along with everything else:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Sometimes a document is mostly in UTF-8, but contains Windows-1252 characters such as ( again ) Microsoft smart quotes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This can happen when a website includes data from multiple sources."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use UnicodeDammit.detwingle ( ) to turn such a document into pure UTF-8."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This document is a mess."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The snowmen are in UTF-8 and the quotes are in Windows-1252."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can display the snowmen or the quotes, but not both:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Decoding the document as UTF-8 raises a UnicodeDecodeError, and decoding it as Windows-1252 gives you gibberish."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Fortunately, UnicodeDammit.detwingle ( ) will convert the string to pure UTF-8, allowing you to decode it to Unicode and display the snowmen and quote marks simultaneously:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "UnicodeDammit.detwingle ( ) only knows how to handle Windows-1252 embedded in UTF-8 ( or vice versa, I suppose ), but this is the most common case."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that you must know to call UnicodeDammit.detwingle ( ) on your data before passing it into BeautifulSoup or the UnicodeDammit constructor."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup assumes that a document has a single encoding, whatever it might be."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass it a document that contains both UTF-8 and Windows-1252, it's likely to think the whole document is Windows-1252, and the document will come out looking like \u00e2\u02dc\u0192\u00e2\u02dc\u0192\u00e2\u02dc\u0192 `` I like snowmen !''"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "UnicodeDammit.detwingle ( ) is new in Beautiful Soup 4.1.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The html.parser and html5lib parsers can keep track of where in the original document each Tag was found."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can access this information as Tag.sourceline ( line number ) and Tag.sourcepos ( position of the start tag within a line ):"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Note that the two parsers mean slightly different things by sourceline and sourcepos."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For html.parser, these numbers represent the position of the initial less-than sign."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For html5lib, these numbers represent the position of the final greater-than sign:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can shut off this feature by passing store_line_numbers = False ` into the `` BeautifulSoup constructor:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This feature is new in 4.8.1, and the parsers based on lxml don't support it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup says that two NavigableString or Tag objects are equal when they represent the same HTML or XML markup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In this example, the two <b> tags are treated as equal, even though they live in different parts of the object tree, because they both look like `` <b> pizza </b>'':"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to see whether two variables refer to exactly the same object, use is:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can use copy.copy ( ) to create a copy of any Tag or NavigableString:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The copy is considered equal to the original, since it represents the same markup as the original, but it's not the same object:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The only real difference is that the copy is completely detached from the original Beautiful Soup object tree, just as if extract ( ) had been called on it:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is because two different Tag objects can't occupy the same space at the same time."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup offers a number of ways to customize how the parser treats incoming HTML and XML."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This section covers the most commonly used customization techniques."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Parsing only part of a document"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Let's say you want to use Beautiful Soup look at a document's <a> tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's a waste of time and memory to parse the entire document and then go over it again looking for <a> tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It would be much faster to ignore everything that wasn't an <a> tag in the first place."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The SoupStrainer class allows you to choose which parts of an incoming document are parsed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You just create a SoupStrainer and pass it in to the BeautifulSoup constructor as the parse_only argument."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( Note that this feature won't work if you're using the html5lib parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you use html5lib, the whole document will be parsed, no matter what."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is because html5lib constantly rearranges the parse tree as it works, and if some part of the document didn't actually make it into the parse tree, it'll crash."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "To avoid confusion, in the examples below I'll be forcing Beautiful Soup to use Python's built-in parser. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The SoupStrainer class takes the same arguments as a typical method from Searching the tree: name, attrs, string, and ** kwargs."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here are three SoupStrainer objects:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I'm going to bring back the `` three sisters'' document one more time, and we'll see what the document looks like when it's parsed with these three SoupStrainer objects:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can also pass a SoupStrainer into any of the methods covered in Searching the tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This probably isn't terribly useful, but I thought I'd mention it:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In an HTML document, an attribute like class is given a list of values, and an attribute like id is given a single value, because the HTML specification treats those attributes differently:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can turn this off by passing in multi_valued_attributes = None."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Than all attributes will be given a single value:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can customize this behavior quite a bit by passing in a dictionary for multi_valued_attributes."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you need this, look at HTMLTreeBuilder.DEFAULT _ CDATA_LIST_ATTRIBUTES to see the configuration Beautiful Soup uses by default, which is based on the HTML specification."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( This is a new feature in Beautiful Soup 4.8.0. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When using the html.parser parser, you can use the on_duplicate_attribute constructor argument to customize what Beautiful Soup does when it encounters a tag that defines the same attribute more than once:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The default behavior is to use the last value found for the tag:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "With on_duplicate_attribute = ` ignore' you can tell Beautiful Soup to use the first value found and ignore the rest:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( lxml and html5lib always do it this way ; their behavior can't be configured from within Beautiful Soup. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you need more, you can pass in a function that's called on each duplicate value:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( This is a new feature in Beautiful Soup 4.9.1. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "When a parser tells Beautiful Soup about a tag or a string, Beautiful Soup will instantiate a Tag or NavigableString object to contain that information."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead of that default behavior, you can tell Beautiful Soup to instantiate subclasses of Tag or NavigableString, subclasses you define with custom behavior:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This can be useful when incorporating Beautiful Soup into a test framework."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( This is a new feature in Beautiful Soup 4.8.1. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're having trouble understanding what Beautiful Soup does to a document, pass the document into the diagnose ( ) function."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup will print out a report showing you how different parsers handle the document, and tell you if you're missing a parser that Beautiful Soup could be using:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Just looking at the output of diagnose ( ) may show you how to solve the problem."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Even if not, you can paste the output of diagnose ( ) when asking for help."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Errors when parsing a document"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are two different kinds of parse errors."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are crashes, where you feed a document to Beautiful Soup and it raises an exception, usually an HTMLParser.HTMLParseError."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "And there is unexpected behavior, where a Beautiful Soup parse tree looks a lot different than the document used to create it."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Almost none of these problems turn out to be problems with Beautiful Soup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is not because Beautiful Soup is an amazingly well-written piece of software."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's because Beautiful Soup doesn't include any parsing code."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead, it relies on external parsers."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If one parser isn't working on a certain document, the best solution is to try a different parser."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "See Installing a parser for details and a parser comparison."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The most common parse errors are HTMLParser.HTMLParseError: malformed start tag and HTMLParser.HTMLParseError: bad end tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These are both generated by Python's built-in HTML parser library, and the solution is to install lxml or html5lib."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The most common type of unexpected behavior is that you can't find a tag that you know is in the document."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You saw it going in, but find_all ( ) returns -LSB- -RSB- or find ( ) returns None."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This is another common problem with Python's built-in HTML parser, which sometimes skips tags it doesn't understand."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Again, the best solution is to install lxml or html5lib."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "SyntaxError: Invalid syntax ( on the line ROOT_TAG_NAME =' -LSB- document -RSB-' ): Caused by running an old Python 2 version of Beautiful Soup under Python 3, without converting the code."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "ImportError: No module named HTMLParser - Caused by running an old Python 2 version of Beautiful Soup under Python 3."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "ImportError: No module named html.parser - Caused by running the Python 3 version of Beautiful Soup under Python 2."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "ImportError: No module named BeautifulSoup - Caused by running Beautiful Soup 3 code on a system that doesn't have BS3 installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Or, by writing Beautiful Soup 4 code without knowing that the package name has changed to bs4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "ImportError: No module named bs4 - Caused by running Beautiful Soup 4 code on a system that doesn't have BS4 installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "By default, Beautiful Soup parses documents as HTML."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "To parse a document as XML, pass in `` xml'' as the second argument to the BeautifulSoup constructor:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You'll need to have lxml installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If your script works on one computer but not another, or in one virtual environment but not another, or outside the virtual environment but not inside, it's probably because the two environments have different parser libraries available."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For example, you may have developed the script on a computer that has lxml installed, and then tried to run it on a computer that only has html5lib installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "See Differences between parsers for why this matters, and fix the problem by mentioning a specific parser library in the BeautifulSoup constructor."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Because HTML tags and attributes are case-insensitive, all three HTML parsers convert tag and attribute names to lowercase."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to preserve mixed-case or uppercase tags and attributes, you'll need to parse the document as XML."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "UnicodeEncodeError: ` charmap' codec can't encode character ` xfoo' in position bar ( or just about any other UnicodeEncodeError ) - This problem shows up in two main situations."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "First, when you try to print a Unicode character that your console doesn't know how to display."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( See this page on the Python wiki for help. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Second, when you're writing to a file and you pass in a Unicode character that's not supported by your default encoding."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In this case, the simplest solution is to explicitly encode the Unicode string into UTF-8 with u.encode ( `` utf8'' )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "KeyError: -LSB- attr -RSB- - Caused by accessing tag -LSB- ` attr' -RSB- when the tag in question doesn't define the attr attribute."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The most common errors are KeyError: ` href' and KeyError: ` class'."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Use tag.get ( ` attr' ) if you're not sure attr is defined, just as you would with a Python dictionary."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "AttributeError: ` ResultSet' object has no attribute ` foo' - This usually happens because you expected find_all ( ) to return a single tag or string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But find_all ( ) returns a _ list _ of tags and strings -- a ResultSet object."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You need to iterate over the list and look at the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Or, if you really only want one result, you need to use find ( ) instead of find_all ( )."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "AttributeError: ` NoneType' object has no attribute ` foo' - This usually happens because you called find ( ) and then tried to access the."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "foo ` attribute of the result."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "But in your case, find ( ) didn't find anything, so it returned None, instead of returning a tag or a string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You need to figure out why your find ( ) call isn't returning anything."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "AttributeError: ` NavigableString' object has no attribute ` foo' - This usually happens because you're treating a string as though it were a tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You may be iterating over a list, expecting that it contains nothing but tags, when it actually contains both tags and strings."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup will never be as fast as the parsers it sits on top of."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If response time is critical, if you're paying for computer time by the hour, or if there's any other reason why computer time is more valuable than programmer time, you should forget about Beautiful Soup and work directly atop lxml."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "That said, there are things you can do to speed up Beautiful Soup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you're not using lxml as the underlying parser, my advice is to start."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup parses documents significantly faster using lxml than using html.parser or html5lib."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You can speed up encoding detection significantly by installing the cchardet library."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Parsing only part of a document won't save you much time parsing the document, but it can save a lot of memory, and it'll make searching the document much faster."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "New translations of the Beautiful Soup documentation are greatly appreciated."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Translations should be licensed under the MIT license, just like Beautiful Soup and its English documentation are."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are two ways of getting your translation into the main code base and onto the Beautiful Soup website:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Create a branch of the Beautiful Soup repository, add your translation, and propose a merge with the main branch, the same as you would do with a proposed change to the source code."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Send a message to the Beautiful Soup discussion group with a link to your translation, or attach your translation to the message."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Use the Chinese or Brazilian Portuguese translations as your model."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "In particular, please translate the source file doc/source/index."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "rst, rather than the HTML version of the documentation."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This makes it possible to publish the documentation in a variety of formats, not just HTML."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup 3 is the previous release series, and is no longer being actively developed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's currently packaged with all major Linux distributions: $ apt-get install python-beautifulsoup It's also published through PyPi as BeautifulSoup.: $ easy_install BeautifulSoup $ pip install BeautifulSoup You can also download a tarball of Beautiful Soup 3.2.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you ran easy_install beautifulsoup or easy_install BeautifulSoup, but your code doesn't work, you installed Beautiful Soup 3 by mistake."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "You need to run easy_install beautifulsoup4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The documentation for Beautiful Soup 3 is archived online."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Most code written against Beautiful Soup 3 will work against Beautiful Soup 4 with one simple change."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "All you should have to do is change the package name from BeautifulSoup to bs4."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you get the ImportError `` No module named BeautifulSoup'', your problem is that you're trying to run Beautiful Soup 3 code, but you only have Beautiful Soup 4 installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you get the ImportError `` No module named bs4'', your problem is that you're trying to run Beautiful Soup 4 code, but you only have Beautiful Soup 3 installed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Although BS4 is mostly backwards-compatible with BS3, most of its methods have been deprecated and given new names for PEP 8 compliance."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are numerous other renames and changes, and a few of them break backwards compatibility."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Here's what you'll need to know to convert your BS3 code and habits to BS4:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup 3 used Python's SGMLParser, a module that was deprecated and removed in Python 3.0."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup 4 uses html.parser by default, but you can plug in lxml or html5lib and use that instead."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "See Installing a parser for a comparison."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Since html.parser is not the same parser as SGMLParser, you may find that Beautiful Soup 4 gives you a different parse tree than Beautiful Soup 3 for the same markup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you swap out html.parser for lxml or html5lib, you may find that the parse tree changes yet again."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If this happens, you'll need to update your scraping code to deal with the new tree."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "renderContents - > encode_contents replaceWith - > replace_with replaceWithChildren - > unwrap findAll - > find_all findAllNext - > find_all_next findAllPrevious - > find_all_previous findNext - > find_next findNextSibling - > find_next_sibling findNextSiblings - > find_next_siblings findParent - > find_parent findParents - > find_parents findPrevious - > find_previous findPreviousSibling - > find_previous_sibling findPreviousSiblings - > find_previous_siblings getText - > get_text nextSibling - > next_sibling previousSibling - > previous_sibling"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Some arguments to the Beautiful Soup constructor were renamed for the same reasons:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I renamed one method for compatibility with Python 3:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I renamed one attribute to use more accurate terminology:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag.isSelfClosing - > Tag.is _ empty_element"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I renamed three attributes to avoid using words that have special meaning to Python."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Unlike the others, these changes are not backwards compatible."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you used these attributes in BS3, your code will break on BS4 until you change them."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "UnicodeDammit.unicode - > UnicodeDammit.unicode _ markup Tag.next - > Tag.next _ element Tag.previous - > Tag.previous _ element"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "These methods are left over from the Beautiful Soup 2 API."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "They've been deprecated since 2006, and should not be used at all:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "I gave the generators PEP 8-compliant names, and transformed them into properties:"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "childGenerator ( ) - > children nextGenerator ( ) - > next_elements nextSiblingGenerator ( ) - > next_siblings previousGenerator ( ) - > previous_elements previousSiblingGenerator ( ) - > previous_siblings recursiveChildGenerator ( ) - > descendants parentGenerator ( ) - > parents"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( But the old code will still work. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Some of the generators used to yield None after they were done, and then stop."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Now the generators just stop."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There are two new generators,."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "strings yields NavigableString objects, and."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "stripped_strings yields Python strings that have had whitespace stripped."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "There is no longer a BeautifulStoneSoup class for parsing XML."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "To parse XML you pass in `` xml'' as the second argument to the BeautifulSoup constructor."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "For the same reason, the BeautifulSoup constructor no longer recognizes the isHTML argument."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup's handling of empty-element XML tags has been improved."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Previously when you parsed XML you had to explicitly say which tags were considered empty-element tags."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The selfClosingTags argument to the constructor is no longer recognized."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Instead, Beautiful Soup considers any empty tag to be an empty-element tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you add a child to an empty-element tag, it stops being an empty-element tag."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "An incoming HTML or XML entity is always converted into the corresponding Unicode character."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup 3 had a number of overlapping ways of dealing with entities, which have been removed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The BeautifulSoup constructor no longer recognizes the smartQuotesTo or convertEntities arguments."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( Unicode, Dammit still has smart_quotes_to, but its default is now to turn smart quotes into Unicode. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The constants HTML_ENTITIES, XML_ENTITIES, and XHTML_ENTITIES have been removed, since they configure a feature ( transforming some but not all entities into Unicode characters ) that no longer exists."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you want to turn Unicode characters back into HTML entities on output, rather than turning them into UTF-8 characters, you need to use an output formatter."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If tag A contains a single tag B and nothing else, then A.string is the same as B.string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "( Previously, it was None. )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Multi-valued attributes like class have lists of strings as their values, not strings."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This may affect the way you search by CSS class."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Tag objects now implement the __ hash __ method, such that two Tag objects are considered equal if they generate the same markup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "This may change your script's behavior if you put Tag objects into a dictionary or set."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "If you pass one of the find * methods both string and a tag-specific argument like name, Beautiful Soup will search for tags that match your tag-specific criteria and whose Tag.string matches your value for string."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It will not find the strings themselves."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Previously, Beautiful Soup ignored the tag-specific arguments and looked for strings."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The BeautifulSoup constructor no longer recognizes the markupMassage argument."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's now the parser's responsibility to handle markup correctly."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The rarely-used alternate parser classes like ICantBelieveItsBeautifulSoup and BeautifulSOAP have been removed."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "It's now the parser's decision how to handle ambiguous markup."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "The prettify ( ) method now returns a Unicode string, not a bytestring."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Beautiful Soup Documentation Getting help"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Quick Start Installing Beautiful Soup Installing a parser"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Making the soup Kinds of objects Tag Name Attributes Multi-valued attributes"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "NavigableString BeautifulSoup Comments and other special strings"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Navigating the tree Going down Navigating using tag names."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Searching the tree Kinds of filters A string A regular expression A list True A function"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "find_all ( ) The name argument The keyword arguments Searching by CSS class The string argument The limit argument The recursive argument"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Calling a tag is like calling find_all ( ) find ( ) find_parents ( ) and find_parent ( ) find_next_siblings ( ) and find_next_sibling ( ) find_previous_siblings ( ) and find_previous_sibling ( ) find_all_next ( ) and find_next ( ) find_all_previous ( ) and find_previous ( ) CSS selectors"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Modifying the tree Changing tag names and attributes Modifying."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "string append ( ) extend ( ) NavigableString ( ) and."
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Output Pretty-printing Non-pretty printing Output formatters get_text ( )"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Specifying the parser to use Differences between parsers"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Encodings Output encoding Unicode, Dammit Smart quotes Inconsistent encodings"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Line numbers Comparing objects for equality Copying Beautiful Soup objects Advanced parser customization Parsing only part of a document SoupStrainer"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Customizing multi-valued attributes Handling duplicate attributes Instantiating custom subclasses"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Troubleshooting diagnose ( ) Errors when parsing a document Version mismatch problems Parsing XML Other parser problems Miscellaneous Improving Performance"
    },
    {
        "task": "New York Times web scrapper",
        "description": "Given a string representing the url for NY Times Today's, you must write a python script using the BeautifulSoup and requests modules to scrap all the headlines of that page.",
        "source": "Beautiful Soup Documentation \u2014 Beautiful Soup 4.9.0 documentation",
        "text": "Translating this documentation Beautiful Soup 3 Porting code to BS4 You need a parser Method names Generators XML Entities Miscellaneous"
    }
]