{
    "The gravity is not working on the TextView in some situation.": [
        "Relational_quantity",
        "Working_on"
    ],
    "A user interface element the user can tap or click to perform an action.": [
        "Ingredients",
        "Intentionally_act",
        "Intentionally_act",
        "Attaching",
        "Capability",
        "Sounds"
    ],
    "An extension to TextView that supports the Checkable interface and displays.": [
        "Make_agreement_on_action",
        "Supporting"
    ],
    "Class that implements a simple timer.": [
        "Gizmo"
    ],
    "A user interface element for entering and modifying text.": [
        "Cause_change",
        "Execution",
        "Ingredients"
    ],
    "TextClock can display the current date and/or time as a formatted string.": [
        "Food",
        "Measure_duration",
        "Gizmo",
        "Temporal_collocation",
        "Capability"
    ],
    "An editable text view that shows completion suggestions automatically while the user is typing.": [
        "Opinion",
        "Text_creation",
        "Activity_finish",
        "Evidence"
    ],
    "A checkbox is a specific type of two-states button that can be either checked or unchecked.": [
        "Clothing_parts",
        "Inspecting",
        "Likelihood"
    ],
    "A button with two states, checked and unchecked.": [
        "Clothing_parts",
        "Political_locales",
        "Inspecting",
        "Cardinal_numbers"
    ],
    "* Specialization of EditText for showing and interacting with the extracted text in a full-screen input method.": [
        "Reasoning",
        "Execution"
    ],
    "An editable text view, extending AutoCompleteTextView, that can show completion suggestions for the substring of the text where the user is typing instead of necessarily for the entire thing.": [
        "Opinion",
        "Reasoning",
        "Text_creation",
        "Expansion",
        "Ranked_expectation",
        "Capability",
        "Locative_relation",
        "Activity_finish"
    ],
    "A radio button is a two-states button that can be either checked or unchecked.": [
        "Contacting",
        "Closure",
        "Inspecting",
        "Likelihood"
    ],
    "A Switch is a two-state toggle switch widget that can select between two options.": [
        "Possibilities",
        "Cardinal_numbers",
        "Capability",
        "Choosing"
    ],
    "Displays checked/unchecked states as a button with a `` light'' indicator and by default accompanied with the text `` ON'' or `` OFF''.": [
        "Political_locales",
        "Clothing_parts",
        "Cotheme"
    ],
    "A user interface element that displays text to the user.": [
        "Ingredients"
    ],
    "To provide user-editable text, see EditText.": [
        "Grasp",
        "Supply"
    ],
    "The following code sample shows a typical use, with an XML layout and code to modify the contents of the text view:": [
        "Relative_time",
        "Cause_change",
        "Opinion",
        "Evidence"
    ],
    "This code sample demonstrates how to modify the contents of the text view defined in the previous XML layout:": [
        "Time_vector",
        "Opinion",
        "Cause_change",
        "Categorization",
        "Evidence"
    ],
    "To customize the appearance of TextView, see Styles and Themes.": [
        "Hair_configuration",
        "Topic",
        "Grasp"
    ],
    "See TextView Attributes, View Attributes": [
        "Categorization",
        "Grasp"
    ],
    "Type of the text buffer that defines the characteristics of the text such as static, styleable, or editable.": [
        "Categorization",
        "Distinctiveness"
    ],
    "Interface definition for a callback to be invoked when an action is performed on the editor.": [
        "Communicate_categorization",
        "Temporal_collocation",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "User interface state that is stored by TextView for implementing View #onSaveInstanceState.": [
        "Execute_plan",
        "Perception_active",
        "Storing"
    ],
    "The TextView does not auto-size text ( default ).": [
        "Intentionally_act"
    ],
    "The TextView scales text size both horizontally and vertically to fit within the container.": [
        "Containers",
        "Suitability"
    ],
    "Adds a TextWatcher to the list of those whose methods are called whenever this TextView's text changes.": [
        "Execution",
        "Undergo_change",
        "Execution"
    ],
    "Convenience method to append the specified text to the TextView's display buffer, upgrading it to android.widget.TextView.BufferType #EDITABLE if it was not already editable.": [
        "Time_vector",
        "Attaching",
        "Execution"
    ],
    "Convenience method to append the specified text slice to the TextView's display buffer, upgrading it to android.widget.TextView.BufferType #EDITABLE if it was not already editable.": [
        "Part_piece",
        "Time_vector",
        "Attaching",
        "Execution"
    ],
    "Move the point, specified by the offset, into the view if it is needed.": [
        "Locale",
        "Opinion",
        "Motion",
        "Required_event"
    ],
    "Use BaseInputConnection.removeComposingSpans ( ) to remove any IME composing state from this text view.": [
        "Political_locales",
        "Quantity",
        "Opinion",
        "Text_creation",
        "Removing"
    ],
    "Returns true, only while processing a touch gesture, if the initial touch down event caused focus to move to the text view and as a result its selection changed.": [
        "Execution",
        "Sole_instance",
        "Processing_materials",
        "Quantity",
        "Gesture",
        "Place_weight_on",
        "Causation",
        "Version_sequence",
        "Opinion",
        "Cause_change",
        "Event",
        "Motion",
        "Causation"
    ],
    "If this TextView contains editable content, extract a portion of it based on the information in request in to outText.": [
        "Information",
        "Execution",
        "Part_whole",
        "Inclusion",
        "Removing"
    ],
    "Gets the autolink mask of the text.": [
        "Accoutrements",
        "Bringing"
    ],
    "Returns the type of auto-size set for this widget.": [
        "Execution",
        "Execution"
    ],
    "Describes the autofill type of this view, so an android.service.autofill.AutofillService can create the proper AutofillValue when autofilling the view.": [
        "Opinion",
        "Proper_reference",
        "Capability",
        "Temporal_collocation",
        "Creating"
    ],
    "Gets the TextView's current text for AutoFill.": [
        "Temporal_collocation",
        "Bringing"
    ],
    "Gets the current strategy for breaking paragraphs into lines.": [
        "Temporal_collocation",
        "Compliance",
        "Bringing"
    ],
    "Returns the padding between the compound drawables and the text.": [
        "Execution"
    ],
    "Returns the blending mode used to apply the tint to the compound drawables, if specified.": [
        "Cause_to_amalgamate",
        "Execution",
        "Using",
        "Using"
    ],
    "Returns drawables for the left, top, right, and bottom borders.": [
        "Execution",
        "Part_orientational",
        "Correctness",
        "Boundary",
        "Part_orientational",
        "Part_orientational"
    ],
    "Returns drawables for the start, top, end, and bottom borders.": [
        "Execution",
        "Part_orientational",
        "Temporal_subregion",
        "Boundary",
        "Part_orientational",
        "Temporal_subregion"
    ],
    "Returns the bottom padding of the view, plus space for the bottom Drawable if any.": [
        "Opinion",
        "Quantity",
        "Part_orientational",
        "Execution"
    ],
    "Returns the end padding of the view, plus space for the end Drawable if any.": [
        "Execution",
        "Opinion",
        "Temporal_subregion",
        "Quantity"
    ],
    "Returns the left padding of the view, plus space for the left Drawable if any.": [
        "Opinion",
        "Quantity",
        "Direction",
        "Execution"
    ],
    "Returns the right padding of the view, plus space for the right Drawable if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Correctness"
    ],
    "Returns the start padding of the view, plus space for the start Drawable if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Self_motion",
        "Temporal_subregion"
    ],
    "Returns the top padding of the view, plus space for the top Drawable if any.": [
        "Opinion",
        "Quantity",
        "Occupy_rank",
        "Execution"
    ],
    "Return the current color selected to paint the hint text.": [
        "Stimulus_focus",
        "Temporal_collocation",
        "Filling",
        "Choosing",
        "Execution"
    ],
    "Return the current color selected for normal text.": [
        "Stimulus_focus",
        "Temporal_collocation",
        "Mental_property",
        "Execution",
        "Choosing"
    ],
    "Retrieves the value set in setCustomInsertionActionModeCallback.": [
        "Intentionally_create"
    ],
    "Retrieves the value set in setCustomSelectionActionModeCallback.": [
        "Intentionally_create"
    ],
    "Return the text that TextView is displaying as an Editable object.": [
        "Execution"
    ],
    "Returns where, if anywhere, words that are longer than the view is wide should be ellipsized.": [
        "Execution",
        "Simple_name",
        "Opinion",
        "Dimension",
        "Locative_relation",
        "Being_obligated"
    ],
    "Returns the error message that was set to be displayed with #setError, or null if no error was set or if it the error was cleared by the widget after user input.": [
        "Quantity",
        "Execution",
        "Removing",
        "Intentionally_create"
    ],
    "Returns the extended bottom padding of the view, including both the bottom Drawable if any and any extra space to keep more than maxLines of text from showing.": [
        "Opinion",
        "Quantity",
        "Reasoning",
        "Expansion",
        "Part_orientational",
        "Increment",
        "Quantity",
        "Activity_ongoing",
        "Inclusion",
        "Execution"
    ],
    "Returns the extended top padding of the view, including both the top Drawable if any and any extra space to keep more than maxLines of text from showing.": [
        "Duration_attribute",
        "Opinion",
        "Quantity",
        "Reasoning",
        "Occupy_rank",
        "Increment",
        "Quantity",
        "Activity_ongoing",
        "Inclusion",
        "Execution"
    ],
    "Returns the current list of input filters.": [
        "Temporal_collocation",
        "Execution"
    ],
    "Returns the distance between the first text baseline and the top of this TextView.": [
        "Range",
        "Ordinal_numbers",
        "Part_orientational",
        "Execution"
    ],
    "Returns the font feature settings.": [
        "Execution"
    ],
    "Returns the font variation settings.": [
        "Execution",
        "Cause_change"
    ],
    "Return whether this text view is including its entire text contents in frozen icicles.": [
        "Execution",
        "Altered_phase",
        "Opinion",
        "Ranked_expectation",
        "Inclusion"
    ],
    "Returns the horizontal and vertical alignment of this TextView.": [
        "Execution"
    ],
    "Returns the hint that is displayed when the text of the TextView is empty.": [
        "Temporal_collocation",
        "Execution",
        "Fullness"
    ],
    "Gets the current frequency of automatic hyphenation to be used when determining word breaks.": [
        "Simple_name",
        "Cause_harm",
        "Temporal_collocation",
        "Coming_to_believe",
        "Bringing",
        "Temporal_collocation",
        "Using",
        "Frequency"
    ],
    "Get the IME action ID previous set with setImeActionLabel.": [
        "Time_vector",
        "Intentionally_act",
        "Execution",
        "Execution"
    ],
    "Get the IME action label previous set with setImeActionLabel.": [
        "Execution",
        "Intentionally_act",
        "Labeling",
        "Time_vector",
        "Execution"
    ],
    "Get the type of the Input Method Editor ( IME ).": [
        "Execution",
        "Execution"
    ],
    "Gets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent.": [
        "Mental_property",
        "Traversing",
        "Part_orientational",
        "Traversing",
        "Occupy_rank",
        "Becoming",
        "Building_subparts",
        "Causation",
        "Inclusion",
        "Bringing"
    ],
    "Retrieve the input extras currently associated with the text view, which can be viewed as well as modified.": [
        "Opinion",
        "Cause_change",
        "Likelihood",
        "Temporal_collocation",
        "Cognitive_connection",
        "Categorization"
    ],
    "Get the type of the editable content.": [
        "Execution"
    ],
    "Gets the current KeyListener for the TextView.": [
        "Temporal_collocation",
        "Bringing"
    ],
    "Returns the distance between the last text baseline and the bottom of this TextView.": [
        "Range",
        "Relative_time",
        "Part_orientational",
        "Execution"
    ],
    "Gets the android.text.Layout that is currently being used to display the text.": [
        "Temporal_collocation",
        "Bringing",
        "Using"
    ],
    "Gets the text letter-space value, which determines the spacing between characters.": [
        "Physical_artworks",
        "Coming_to_believe",
        "Bringing"
    ],
    "Return the baseline for the specified line ( 0 ... getLineCount ( ) - 1 ) If bounds is not null, return the top, left, right, bottom extents of the specified line in it.": [
        "Part_orientational",
        "Direction",
        "Correctness",
        "Execution",
        "Being_in_effect",
        "Part_orientational",
        "Execution"
    ],
    "Return the number of lines of text, or 0 if the internal Layout has not been built.": [
        "Quantity",
        "Execution",
        "Building"
    ],
    "Gets the vertical distance between lines of text, in pixels.": [
        "Getting",
        "Range"
    ],
    "Gets the line spacing extra space": [
        "Bringing"
    ],
    "Gets the line spacing multiplier": [
        "Bringing"
    ],
    "Returns whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask has been set to nonzero and links are detected in #setText.": [
        "Execution",
        "Make_cognitive_connection",
        "Execution",
        "Intentionally_create",
        "Becoming_aware"
    ],
    "Gets the number of times the marquee animation is repeated.": [
        "Timespan",
        "Quantity",
        "Frequency",
        "Bringing"
    ],
    "Returns the maximum width of TextView in terms of ems or -1 if the maximum width was set using setMaxWidth ( int ) or setWidth ( int ).": [
        "Execution",
        "Simple_name",
        "Extreme_value",
        "Dimension",
        "Using",
        "Intentionally_create"
    ],
    "Returns the maximum height of TextView in terms of pixels or -1 if the maximum height was set using setMaxLines ( int ) or setLines ( int ).": [
        "Execution",
        "Simple_name",
        "Dimension",
        "Extreme_value",
        "Using",
        "Intentionally_create"
    ],
    "Returns the maximum height of TextView in terms of number of lines or -1 if the maximum height was set using setMaxHeight ( int ) or setHeight ( int ).": [
        "Simple_name",
        "Extreme_value",
        "Dimension",
        "Using",
        "Quantity",
        "Intentionally_create",
        "Execution"
    ],
    "Returns the maximum width of TextView in terms of pixels or -1 if the maximum width was set using setMaxEms ( int ) or setEms ( int ).": [
        "Execution",
        "Simple_name",
        "Extreme_value",
        "Dimension",
        "Using",
        "Intentionally_create"
    ],
    "Returns the minimum width of TextView in terms of ems or -1 if the minimum width was set using setMinWidth ( int ) or setWidth ( int ).": [
        "Execution",
        "Dimension",
        "Simple_name",
        "Extreme_value",
        "Using",
        "Intentionally_create"
    ],
    "Returns the minimum height of TextView in terms of pixels or -1 if the minimum height was set using setMinLines ( int ) or setLines ( int ).": [
        "Execution",
        "Simple_name",
        "Dimension",
        "Extreme_value",
        "Using",
        "Intentionally_create"
    ],
    "Returns the minimum height of TextView in terms of number of lines or -1 if the minimum height was set using setMinHeight ( int ) or setHeight ( int ).": [
        "Execution",
        "Dimension",
        "Extreme_value",
        "Using",
        "Quantity",
        "Simple_name",
        "Intentionally_create"
    ],
    "Returns the minimum width of TextView in terms of pixels or -1 if the minimum width was set using setMinEms ( int ) or setEms ( int ).": [
        "Execution",
        "Dimension",
        "Simple_name",
        "Extreme_value",
        "Using",
        "Intentionally_create"
    ],
    "Gets the android.text.method.MovementMethod being used for this TextView, which provides positioning, scrolling, and text selection functionality.": [
        "Supply",
        "Using",
        "Bringing"
    ],
    "Get the character offset closest to the specified absolute position.": [
        "Physical_artworks",
        "Execution"
    ],
    "Gets the TextPaint used for the text.": [
        "Getting",
        "Using"
    ],
    "Gets the flags on the Paint being used to display the text.": [
        "Execution",
        "Using"
    ],
    "Get the private type of the content.": [
        "Execution"
    ],
    "Gets the color of the shadow layer.": [
        "Stimulus_focus",
        "Cotheme",
        "Bringing"
    ],
    "Gets the vertical offset of the shadow layer.": [
        "Cotheme",
        "Bringing"
    ],
    "Gets the radius of the shadow layer.": [
        "Cotheme",
        "Bringing"
    ],
    "Returns whether the soft input method will be made visible when this TextView gets focused.": [
        "Execution",
        "Execution",
        "Temporal_collocation",
        "Place_weight_on",
        "Execution",
        "Manufacturing",
        "Obviousness"
    ],
    "Return the text that TextView is displaying.": [
        "Execution"
    ],
    "Returns the TextClassifier used by this TextView.": [
        "Using",
        "Execution"
    ],
    "Gets the text colors for the different states ( normal, selected, focused ) of the TextView.": [
        "Execution",
        "Mental_property",
        "Choosing",
        "Place_weight_on",
        "Color",
        "Political_locales",
        "Similarity"
    ],
    "Returns the Drawable corresponding to the text cursor.": [
        "Execution"
    ],
    "Returns resolved TextDirectionHeuristic that will be used for text layout.": [
        "Execution",
        "Using",
        "Resolve_problem"
    ],
    "Get the default primary Locale of the text in this TextView.": [
        "Locale",
        "First_rank",
        "Execution"
    ],
    "Get the default LocaleList of the text in this TextView.": [
        "Execution"
    ],
    "Gets the parameters for text layout precomputation, for use with PrecomputedText.": [
        "Terms_of_agreement",
        "Bringing"
    ],
    "Gets the extent by which text should be stretched horizontally.": [
        "Being_obligated",
        "Expansion",
        "Bringing"
    ],
    "Returns the Drawable corresponding to the selection handle used for positioning the cursor within text.": [
        "Execution",
        "Resolve_problem",
        "Using"
    ],
    "Returns the Drawable corresponding to the left handle used for selecting text.": [
        "People_along_political_spectrum",
        "Choosing",
        "Execution",
        "Resolve_problem",
        "Using"
    ],
    "Returns the Drawable corresponding to the right handle used for selecting text.": [
        "Part_orientational",
        "Choosing",
        "Execution",
        "Resolve_problem",
        "Using"
    ],
    "Gets the text size unit defined by the developer.": [
        "Bringing",
        "Categorization"
    ],
    "Returns the total bottom padding of the view, including the bottom Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Part_orientational",
        "Completeness",
        "Increment",
        "Activity_ongoing",
        "Inclusion"
    ],
    "Returns the total end padding of the view, including the end Drawable if any.": [
        "Execution",
        "Opinion",
        "Temporal_subregion",
        "Quantity",
        "Completeness",
        "Inclusion"
    ],
    "Returns the total left padding of the view, including the left Drawable if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Part_orientational",
        "Completeness",
        "Inclusion"
    ],
    "Returns the total right padding of the view, including the right Drawable if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Correctness",
        "Completeness",
        "Inclusion"
    ],
    "Returns the total start padding of the view, including the start Drawable if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Completeness",
        "Self_motion",
        "Inclusion",
        "Temporal_subregion"
    ],
    "Returns the total top padding of the view, including the top Drawable if any, the extra space to keep more than maxLines from showing, and the vertical offset for gravity, if any.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Completeness",
        "Occupy_rank",
        "Increment",
        "Activity_ongoing",
        "Inclusion"
    ],
    "Gets the current android.text.method.TransformationMethod for the TextView.": [
        "Temporal_collocation",
        "Bringing"
    ],
    "Gets the current Typeface that is used to style the text.": [
        "Hair_configuration",
        "Temporal_collocation",
        "Bringing",
        "Using"
    ],
    "Returns the list of URLSpans attached to the text ( by Linkify or otherwise ) if any.": [
        "Execution",
        "Quantity",
        "Being_attached"
    ],
    "Return true iff there is a selection of nonzero length inside this text view.": [
        "Execution",
        "Opinion",
        "Dimension",
        "Existence"
    ],
    "Checks whether the transformation method applied to this TextView is set to ALL CAPS.": [
        "Execution",
        "Accoutrements",
        "Cause_change",
        "Using",
        "Intentionally_create"
    ],
    "Get the value of the TextView's elegant height metrics flag.": [
        "Dimension",
        "Aesthetics",
        "Execution"
    ],
    "Returns whether the text is allowed to be wider than the View.": [
        "Categorization",
        "Permitting",
        "Execution"
    ],
    "Returns whether this text view is a current input method target.": [
        "Execution",
        "Execution",
        "Opinion",
        "Temporal_collocation"
    ],
    "Returns if the text is constrained to a single horizontally scrolling line ignoring new line characters instead of letting it wrap onto multiple lines.": [
        "Sole_instance",
        "Physical_artworks",
        "Quantity",
        "Age",
        "Hindering",
        "Grant_permission",
        "Execution"
    ],
    "Return whether or not suggestions are enabled on this TextView.": [
        "Execution"
    ],
    "Returns the state of the textIsSelectable flag ( See setTextIsSelectable ( ) ).": [
        "Execution",
        "Political_locales",
        "Grasp"
    ],
    "Returns the length, in characters, of the text managed by this TextView": [
        "Execution",
        "Physical_artworks",
        "Dimension",
        "Operating_a_system"
    ],
    "Move the cursor, if needed, so that it is at an offset that is visible to the user.": [
        "Have_as_requirement",
        "Motion",
        "Obviousness"
    ],
    "Called by the framework in response to a request to begin a batch of edit operations through a call to link beginBatchEdit ( ).": [
        "Response",
        "Execution",
        "Businesses",
        "Cognitive_connection",
        "Execution",
        "Execution",
        "Execution",
        "Process_start"
    ],
    "Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion ( ).": [
        "Execution",
        "Activity_finish",
        "Temporal_collocation",
        "Execution",
        "Response",
        "Execution",
        "Supply"
    ],
    "Called by the framework in response to a text auto-correction ( such as fixing a typo using a dictionary ) from the current input method, provided by it calling InputConnection.commitCorrection ( ).": [
        "Response",
        "Execution",
        "Supply",
        "Temporal_collocation",
        "Using",
        "Execution",
        "Execution",
        "Resolve_problem"
    ],
    "Called when an attached input method calls InputConnection.performEditorAction ( ) for this text view.": [
        "Temporal_collocation",
        "Being_attached",
        "Execution",
        "Contacting",
        "Opinion",
        "Execution"
    ],
    "Called by the framework in response to a request to end a batch of edit operations through a call to link endBatchEdit.": [
        "Businesses",
        "Cognitive_connection",
        "Execution",
        "Execution",
        "Execution",
        "Cause_to_end",
        "Response",
        "Execution"
    ],
    "Callback method to be invoked when the view tree is about to be drawn.": [
        "Temporal_collocation",
        "Opinion",
        "Relational_quantity",
        "Execution",
        "Cause_motion"
    ],
    "Called by the framework in response to a private command from the current method, provided by it calling InputConnection.performPrivateCommand ( ).": [
        "Execution",
        "Execution",
        "Temporal_collocation",
        "Execution",
        "Response",
        "Execution",
        "Supply"
    ],
    "Default TextView implementation for receiving content.": [
        "Receiving",
        "Execute_plan"
    ],
    "Called when a context menu option for the text view is selected.": [
        "Temporal_collocation",
        "Possibilities",
        "Opinion",
        "Choosing",
        "Execution"
    ],
    "Removes the specified TextWatcher from the list of those whose methods are called whenever this TextView's text changes.": [
        "Execution",
        "Undergo_change",
        "Execution"
    ],
    "Sets the properties of this field to transform input to ALL CAPS display.": [
        "Fields",
        "Accoutrements",
        "Cause_change",
        "Possession"
    ],
    "Sets the autolink mask of the text.": [
        "Accoutrements"
    ],
    "Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds.": [
        "Self_motion",
        "Being_obligated",
        "Suitability",
        "Attempt"
    ],
    "Specify whether this widget should automatically scale the text to try to perfectly fit within the layout bounds by using the default auto-size configuration.": [
        "Being_obligated",
        "Using",
        "Likelihood",
        "Suitability",
        "Attempt"
    ],
    "Sets the break strategy for breaking paragraphs into lines.": [
        "Execution",
        "Cause_to_fragment",
        "Compliance"
    ],
    "Sets the size of the padding between the compound drawables and the text.": [],
    "Specifies the blending mode used to apply the tint specified by setCompoundDrawableTintList ( android.content.res.ColorStateList ) to the compound drawables.": [
        "Cause_to_amalgamate",
        "Using",
        "Using"
    ],
    "Applies a tint to the compound drawables.": [],
    "Sets the Drawables ( if any ) to appear to the left of, above, to the right of, and below the text.": [
        "Execution",
        "Quantity",
        "Coming_to_be",
        "People_along_political_spectrum",
        "Part_orientational"
    ],
    "Sets the Drawables ( if any ) to appear to the start of, above, to the end of, and below the text.": [
        "Execution",
        "Quantity",
        "Coming_to_be",
        "Temporal_subregion",
        "Temporal_subregion"
    ],
    "Set whether the cursor is visible.": [
        "Obviousness"
    ],
    "Sets the Factory used to create new Editables.": [
        "Locale_by_use",
        "Age",
        "Intentionally_create",
        "Using"
    ],
    "Set the TextView's elegant height metrics flag.": [
        "Dimension",
        "Aesthetics"
    ],
    "Causes words in the text that are longer than the view's width to be ellipsized instead of broken in the middle.": [
        "Simple_name",
        "Opinion",
        "Dimension",
        "Part_inner_outer",
        "Causation",
        "Compliance"
    ],
    "Sets the width of the TextView to be exactly ems wide.": [
        "Dimension",
        "Dimension",
        "Frequency"
    ],
    "Sets the right-hand compound drawable of the TextView to the `` error'' icon and sets an error message that will be displayed in a popup when the TextView has focus.": [
        "Temporal_collocation",
        "Place_weight_on",
        "Inclusion"
    ],
    "Sets the right-hand compound drawable of the TextView to the specified icon and sets an error message that will be displayed in a popup when the TextView has focus.": [
        "Temporal_collocation",
        "Place_weight_on",
        "Inclusion"
    ],
    "Apply to this text view the given extracted text, as previously returned by extractText ( android.view.inputmethod.ExtractedTextRequest, android.view.inputmethod.ExtractedText ).": [
        "Execution",
        "Giving",
        "Time_vector",
        "Categorization"
    ],
    "Set whether to respect the ascent and descent of the fallback fonts that are used in displaying the text ( which is needed to avoid text from consecutive lines running into each other ).": [
        "Judgment",
        "Path_shape",
        "Increment",
        "Preventing",
        "Using",
        "Being_necessary",
        "Operating_a_system"
    ],
    "Sets the list of input filters that will be used if the buffer is Editable.": [
        "Using"
    ],
    "Updates the top padding of the TextView so that is the distance between the top of the TextView and first line's baseline.": [
        "Range",
        "Ordinal_numbers",
        "Part_orientational"
    ],
    "Sets TrueType or OpenType font variation settings.": [
        "Execution",
        "Cause_change"
    ],
    "Control whether this text view saves its entire text contents when freezing to an icicle, in addition to dynamic state such as cursor position.": [
        "Temporal_collocation",
        "Political_locales",
        "Opinion",
        "Ranked_expectation",
        "Emotion_directed",
        "Control",
        "Communication_response",
        "Activity_pause"
    ],
    "Sets the horizontal alignment of the text and the vertical gravity that will be used when there is extra space in the TextView beyond what is required for the text itself.": [
        "Temporal_collocation",
        "Being_necessary",
        "Existence",
        "Using"
    ],
    "Sets the height of the TextView to be exactly pixels tall.": [
        "Dimension",
        "Dimension",
        "Frequency"
    ],
    "Sets the color used to display the selection highlight.": [
        "Stimulus_focus",
        "Using"
    ],
    "Sets the text to be displayed when the text of the TextView is empty.": [
        "Execution",
        "Temporal_collocation",
        "Fullness"
    ],
    "Sets the text to be displayed when the text of the TextView is empty, from a resource.": [
        "Execution",
        "Temporal_collocation",
        "Fullness"
    ],
    "Sets the color of the hint text for all the states ( disabled, focussed, selected ... ) of this TextView.": [
        "Stimulus_focus",
        "Quantity",
        "Render_nonfunctional",
        "Place_weight_on",
        "Choosing"
    ],
    "Sets the color of the hint text.": [
        "Stimulus_focus"
    ],
    "Sets whether the text should be allowed to be wider than the View is.": [
        "Categorization",
        "Being_obligated",
        "Grant_permission"
    ],
    "Sets the frequency of automatic hyphenation to use when determining word breaks.": [
        "Frequency",
        "Simple_name",
        "Cause_harm",
        "Temporal_collocation",
        "Using"
    ],
    "Change the custom IME action associated with the text view, which will be reported to an IME with EditorInfo #actionLabel and EditorInfo #actionId when it has focus.": [
        "Custom",
        "Opinion",
        "Temporal_collocation",
        "Place_weight_on",
        "Intentionally_act",
        "Inclusion",
        "Undergo_change",
        "Cognitive_connection"
    ],
    "Change `` hint'' locales associated with the text view, which will be reported to an IME with EditorInfo #hintLocales when it has focus.": [
        "Undergo_change",
        "Locale",
        "Opinion",
        "Temporal_collocation",
        "Place_weight_on",
        "Cognitive_connection",
        "Inclusion"
    ],
    "Change the editor type integer associated with the text view, which is reported to an Input Method Editor ( IME ) with EditorInfo #imeOptions when it has focus.": [
        "Opinion",
        "Temporal_collocation",
        "Place_weight_on",
        "Execution",
        "Inclusion",
        "Cognitive_connection",
        "Undergo_change"
    ],
    "Set whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent.": [
        "Mental_property",
        "Traversing",
        "Part_orientational",
        "Traversing",
        "Occupy_rank",
        "Becoming",
        "Building_subparts",
        "Causation",
        "Inclusion"
    ],
    "Set the extra input data of the text, which is the TextBoxAttribute.extras Bundle that will be filled in when creating an input connection.": [
        "Social_connection",
        "Intentionally_create",
        "Abounding_with",
        "Temporal_collocation"
    ],
    "Set the type of the content with a constant as defined for EditorInfo #inputType.": [
        "Communicate_categorization"
    ],
    "Sets the key listener to be used with this TextView.": [
        "Importance",
        "Using"
    ],
    "Updates the bottom padding of the TextView so that is the distance between the bottom of the TextView and the last line's baseline.": [
        "Range",
        "Relative_time",
        "Part_orientational"
    ],
    "Sets text letter-spacing in em units.": [],
    "Sets an explicit line height for this TextView.": [
        "Candidness",
        "Dimension"
    ],
    "Sets line spacing for this TextView.": [
        "Shapes"
    ],
    "Sets the height of the TextView to be exactly lines tall.": [
        "Dimension",
        "Dimension",
        "Frequency"
    ],
    "Sets the color of links in the text.": [
        "Stimulus_focus",
        "Make_cognitive_connection"
    ],
    "Sets whether the movement method will automatically be set to LinkMovementMethod if setAutoLinkMask has been set to nonzero and links are detected in #setText.": [
        "Execution",
        "Make_cognitive_connection",
        "Execution",
        "Execution",
        "Becoming_aware"
    ],
    "Sets how many times to repeat the marquee animation.": [
        "Execution",
        "Timespan",
        "Frequency",
        "Quantity"
    ],
    "Sets the width of the TextView to be at most maxEms wide.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the height of the TextView to be at most maxPixels tall.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the height of the TextView to be at most maxLines tall.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the width of the TextView to be at most maxPixels wide.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the width of the TextView to be at least minEms wide.": [
        "Execution",
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the height of the TextView to be at least minPixels tall.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the height of the TextView to be at least minLines tall.": [
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the width of the TextView to be at least minPixels wide.": [
        "Execution",
        "Dimension",
        "Dimension",
        "Relational_quantity"
    ],
    "Sets the android.text.method.MovementMethod for handling arrow key movement for this TextView.": [
        "Importance",
        "Intentionally_act"
    ],
    "Set a special listener to be called when an action is performed on the text view.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Opinion",
        "Intentionally_act",
        "Execution"
    ],
    "Sets flags on the Paint being used to display the text and reflows the text if they are different from the old flags.": [
        "Execution",
        "Age",
        "Similarity",
        "Using"
    ],
    "Set the private content type of the text, which is the EditorInfo.privateImeOptions field that will be filled in when creating an input connection.": [
        "Social_connection",
        "Fields",
        "Intentionally_create",
        "Abounding_with",
        "Temporal_collocation"
    ],
    "Directly change the content type integer of the text view, without modifying any other state.": [
        "Cause_change",
        "Quantity",
        "Political_locales",
        "Opinion",
        "Increment",
        "Undergo_change"
    ],
    "Sets the Scroller used for producing a scrolling animation": [
        "Manufacturing",
        "Using"
    ],
    "Set the TextView so that when it takes focus, all the text is selected.": [
        "Temporal_collocation",
        "Place_weight_on",
        "Quantity",
        "Taking_time",
        "Choosing"
    ],
    "Gives the text a shadow of the specified blur radius and color, the specified distance from its drawn position.": [
        "Giving",
        "Stimulus_focus",
        "Range",
        "Cause_motion",
        "Cotheme"
    ],
    "Sets whether the soft input method will be made visible when this TextView gets focused.": [
        "Execution",
        "Temporal_collocation",
        "Place_weight_on",
        "Execution",
        "Causation",
        "Obviousness"
    ],
    "Sets the properties of this field ( lines, horizontally scrolling, transformation method ) to be for a single-line input.": [
        "Fields",
        "Execution",
        "Cause_change",
        "Possession"
    ],
    "If true, sets the properties of this field ( number of lines, horizontally scrolling, transformation method ) to be for a single-line input ; if false, restores these to the default conditions.": [
        "Fields",
        "Execution",
        "Artificiality",
        "Cause_change",
        "State_of_entity",
        "Quantity",
        "Rejuvenation",
        "Possession"
    ],
    "Sets the Factory used to create new Spannables.": [
        "Locale_by_use",
        "Age",
        "Intentionally_create",
        "Using"
    ],
    "Sets the text to be displayed.": [
        "Execution"
    ],
    "Sets the text to be displayed and the android.widget.TextView.BufferType.": [
        "Execution"
    ],
    "Sets the TextView to display the specified slice of the specified char array.": [
        "Execution",
        "Part_piece",
        "Diversity"
    ],
    "Sets the text to be displayed using a string resource identifier.": [
        "Execution",
        "Using"
    ],
    "Sets the text to be displayed using a string resource identifier and the android.widget.TextView.BufferType.": [
        "Execution",
        "Using"
    ],
    "Sets the text appearance from the specified style resource.": [
        "Hair_configuration"
    ],
    "Sets the text color, size, style, hint color, and highlight color from the specified TextAppearance resource.": [
        "Hair_configuration",
        "Stimulus_focus"
    ],
    "Sets the TextClassifier for this TextView.": [],
    "Sets the text color for all the states ( normal, selected, focused ) to be this color.": [
        "Quantity",
        "Political_locales",
        "Mental_property",
        "Choosing",
        "Place_weight_on",
        "Stimulus_focus"
    ],
    "Sets the Drawable corresponding to the text cursor.": [],
    "Sets whether the content of this view is selectable by the user.": [
        "Opinion"
    ],
    "Sets the text to be displayed but retains the cursor position.": [
        "Execution",
        "Memory"
    ],
    "Sets the text to be displayed and the android.widget.TextView.BufferType but retains the cursor position.": [
        "Execution",
        "Memory"
    ],
    "Set the default Locale of the text in this TextView to a one-member LocaleList containing just the given Locale.": [
        "Locale",
        "Giving",
        "Inclusion"
    ],
    "Set the default LocaleList of the text in this TextView to the given value.": [
        "Giving"
    ],
    "Apply the text layout parameter.": [
        "Terms_of_agreement"
    ],
    "Sets the horizontal scale factor for text.": [],
    "Sets the Drawable corresponding to the selection handle used for positioning the cursor within text.": [
        "Resolve_problem",
        "Using"
    ],
    "Sets the Drawable corresponding to the left handle used for selecting text.": [
        "People_along_political_spectrum",
        "Choosing",
        "Resolve_problem",
        "Using"
    ],
    "Sets the Drawable corresponding to the right handle used for selecting text.": [
        "Part_orientational",
        "Choosing",
        "Resolve_problem",
        "Using"
    ],
    "Set the default text size to the given value, interpreted as `` scaled pixel'' units.": [
        "Giving",
        "Categorization"
    ],
    "Set the default text size to a given unit and value.": [
        "Giving"
    ],
    "Sets the transformation that is applied to the text that this TextView is displaying.": [
        "Cause_change",
        "Using"
    ],
    "Sets the typeface and style in which the text should be displayed, and turns on the fake bold and italic bits in the Paint if the Typeface that you provided does not have all the bits in the style that you specified.": [
        "Hair_configuration",
        "Artificiality",
        "Quantity",
        "Being_obligated",
        "Supply",
        "Intentionally_act"
    ],
    "Sets the typeface and style in which the text should be displayed.": [
        "Hair_configuration",
        "Being_obligated"
    ],
    "Sets the width of the TextView to be exactly pixels wide.": [
        "Dimension",
        "Dimension",
        "Frequency"
    ],
    "Subclasses override this to specify that they have a KeyListener by default even if not specifically called for in the XML options.": [
        "Possibilities",
        "Execution"
    ],
    "Subclasses override this to specify a default movement method.": [
        "Execution"
    ],
    "This method is called when the selection has changed, in case any subclasses would like to know.": [
        "Execution",
        "Temporal_collocation",
        "Instance",
        "Quantity",
        "Undergo_change",
        "Awareness",
        "Experiencer_focus",
        "Execution"
    ],
    "This method is called when the text is changed, in case any subclasses would like to know.": [
        "Execution",
        "Temporal_collocation",
        "Instance",
        "Quantity",
        "Undergo_change",
        "Awareness",
        "Experiencer_focus",
        "Execution"
    ],
    "If your view subclass is displaying its own Drawable objects, it should override this function and return true for any Drawable it is displaying.": [
        "Execution",
        "Opinion",
        "Quantity",
        "Being_obligated",
        "Possession"
    ],
    "May be a boolean value, such as `` true'' or `` false''.": [
        "Likelihood"
    ],
    "Must be one or more ( separated by' |' ) of the following constant values.": [
        "Increment",
        "Becoming_separated",
        "Relative_time",
        "Cardinal_numbers"
    ],
    "May be a dimension value, which is a floating point number appended with a unit such as `` 14.5 sp''.": [
        "Adducing",
        "Attaching",
        "Quantity",
        "Motion",
        "Likelihood"
    ],
    "Available units are: px ( pixels ), dp ( density-independent pixels ), sp ( scaled pixels based on preferred font size ), in ( inches ), and mm ( millimeters ).": [
        "Measure_linear_extent",
        "Measure_linear_extent",
        "Measure_linear_extent"
    ],
    "May be a reference to another resource, in the form'' @ -LSB- + -RSB- -LSB- package: -RSB- type/name'' or a theme attribute in the form'' ?": [
        "Execution",
        "Topic",
        "Increment",
        "Likelihood"
    ],
    "May be a string value, using' ;' to escape characters such as'' or ` uxxxx' for a unicode character ;": [
        "Physical_artworks",
        "Physical_artworks",
        "Likelihood",
        "Avoiding",
        "Using"
    ],
    "May be an integer value, such as `` 100''.": [
        "Likelihood"
    ],
    "May be a color value, in the form of `` rgb'', `` argb'', `` rrggbb'', or `` aarrggbb''.": [
        "Stimulus_focus",
        "Likelihood"
    ],
    "May be a floating point value, such as `` 1.2''.": [
        "Motion",
        "Adducing",
        "Likelihood"
    ],
    "May be a fractional value, which is a floating point number appended with either % or % p, such as `` 14.5 %''.": [
        "Adducing",
        "Attaching",
        "Quantity",
        "Motion",
        "Likelihood"
    ],
    "The % suffix always means a percentage of the base size ; the optional % p suffix provides a size relative to some parent container.": [
        "Locale_by_use",
        "Relational_quantity",
        "Kinship",
        "Containers",
        "Frequency",
        "Kinship",
        "Supply",
        "Evidence"
    ],
    "Must be one of the following constant values.": [
        "Relative_time",
        "Cardinal_numbers"
    ],
    "Applications need to be aware that the flag is not a guarantee, and some IMEs may not respect it.": [
        "Relational_quantity",
        "Likelihood",
        "Required_event",
        "Using",
        "Judgment",
        "Awareness"
    ],
    "In 1.0, the TextWatcher #afterTextChanged method was erroneously not called after #setText calls.": [
        "Contacting",
        "Execution",
        "Execution"
    ],
    "Now, doing #setText if there are any text changed listeners forces the buffer type to Editable if it would not otherwise be and does call this method.": [
        "Temporal_collocation",
        "Military",
        "Execution",
        "Intentionally_act",
        "Quantity",
        "Undergo_change",
        "Execution",
        "Existence",
        "Intentionally_act"
    ],
    "This has to be called after layout.": [
        "Required_event",
        "Execution"
    ],
    "Returns true if anything changed.": [
        "Execution",
        "Undergo_change"
    ],
    "Only valid while processing the touch gesture of interest, in an editable text view.": [
        "Sole_instance",
        "Being_in_effect",
        "Processing_materials",
        "Quantity",
        "Gesture",
        "Opinion",
        "Emotion_directed"
    ],
    "See Linkify #ALL and peers for possible values.": [
        "Perception_active",
        "Likelihood",
        "Grasp"
    ],
    "By default returns AUTOFILL_TYPE_NONE, but views should override it to properly support the Autofill Framework.": [
        "Categorization",
        "Execution",
        "Being_obligated",
        "Taking_sides"
    ],
    "The value is trimmed to 100K chars if longer.": [
        "Duration_attribute"
    ],
    "If the text is not editable, null is returned.": [
        "Execution"
    ],
    "It is only valid to call this after measuring.": [
        "Quantity",
        "Sole_instance",
        "Being_in_effect",
        "Execution"
    ],
    "The format is the same as the CSS font-feature-settings attribute: https://www.w3.org/TR/css-fonts-3/#font-feature-settings-prop": [
        "Identicality"
    ],
    "For android.widget.EditText it always returns true.": [
        "Frequency",
        "Execution"
    ],
    "This will frequently be null for non-EditText TextViews.": [
        "Being_in_effect",
        "Frequency"
    ],
    "This value can be null if the text or width has recently changed.": [
        "Dimension",
        "Being_in_effect",
        "Temporal_collocation",
        "Undergo_change",
        "Capability"
    ],
    "The value returned is in ems.": [
        "Execution"
    ],
    "Normally, this value is 0.0.": [],
    "If the internal Layout has not been built, return 0 and set bounds to ( 0, 0, 0, 0 )": [
        "Intentionally_create",
        "Building",
        "Execution"
    ],
    "Note that markup within the text can cause individual lines to be taller or shorter than this height, and the layout may contain additional first-or last-line padding.": [
        "People",
        "Dimension",
        "Increment",
        "Likelihood",
        "Inclusion",
        "Causation",
        "Capability"
    ],
    "Only meaningful if the TextView has marquee enabled.": [
        "Sole_instance"
    ],
    "A typical use case is to pass the result of MotionEvent #getX ( ) and MotionEvent #getY ( ) to this method.": [
        "Execution",
        "Causation",
        "Process_end",
        "Reasoning"
    ],
    "Use this only to consult the Paint's properties and not to change them.": [
        "Sole_instance",
        "Undergo_change",
        "Possession",
        "Using"
    ],
    "If setText ( java.lang.CharSequence ) was called with an argument of BufferType.SPANNABLE or BufferType.EDITABLE, you can cast the return value from this method to Spannable or Editable, respectively.": [
        "Reasoning",
        "Execution",
        "Execution",
        "Capability",
        "Communicate_categorization",
        "Execution"
    ],
    "The content of the return value should not be modified.": [
        "Execution",
        "Being_obligated",
        "Cause_change"
    ],
    "If you want a modifiable one, you should make your own copy first.": [
        "Cardinal_numbers",
        "Duplication",
        "Ordinal_numbers",
        "Being_obligated",
        "Possession",
        "Possession",
        "Causation"
    ],
    "If no TextClassifier has been set, this TextView uses the default set by the TextClassificationManager.": [
        "Quantity",
        "Intentionally_create",
        "Using"
    ],
    "Note that any change applied to the cursor Drawable will not be visible until the cursor is hidden and then drawn again.": [
        "Undergo_change",
        "Eclipse",
        "Temporal_collocation",
        "Quantity",
        "Using",
        "Cause_motion",
        "Becoming_aware",
        "Obviousness"
    ],
    "The TextDirectionHeuristic that is used by TextView is only available after getTextDirection ( ) and getLayoutDirection ( ) is resolved.": [
        "Sole_instance",
        "Resolve_problem",
        "Using"
    ],
    "Therefore the return value may not be the same as the one TextView uses if the View's layout direction is not resolved or detached from parent root view.": [
        "Execution",
        "Categorization",
        "Attaching",
        "Kinship",
        "Cardinal_numbers",
        "Opinion",
        "Likelihood",
        "Identicality",
        "Resolve_problem"
    ],
    "This will always be the first member of getTextLocales ( ).": [
        "Ordinal_numbers",
        "Frequency",
        "Membership"
    ],
    "This will usually be 1.0.": [],
    "Note that any change applied to the handle Drawable will not be visible until the handle is hidden and then drawn again.": [
        "Undergo_change",
        "Eclipse",
        "Cause_motion",
        "Quantity",
        "Obviousness",
        "Temporal_collocation",
        "Resolve_problem",
        "Using"
    ],
    "It may be specified in resources or be passed as the unit argument of setTextSize ( int, float ) at runtime.": [
        "Traversing",
        "Likelihood",
        "Reasoning"
    ],
    "This is frequently null, except for single-line and password fields.": [
        "Fields",
        "Frequency",
        "Being_in_effect"
    ],
    "You can call URLSpan #getURL on them to find where they link to or use Spanned #getSpanStart and Spanned #getSpanEnd to find the region of the text they are attached to.": [
        "Locative_relation",
        "Locale",
        "Make_cognitive_connection",
        "Being_attached",
        "Locating",
        "Execution",
        "Capability"
    ],
    "This setting selects font variants that have not been compacted to fit Latin-based vertical metrics, and also increases top and bottom bounds to provide more space.": [
        "Similarity",
        "Change_position_on_a_scale",
        "Part_orientational",
        "Increment",
        "Part_orientational",
        "Suitability",
        "Choosing",
        "Supply"
    ],
    "If false, the text will be wrapped to the width of the View.": [
        "Artificiality",
        "Dimension",
        "Categorization"
    ],
    "The default implementation just checks with InputMethodManager.": [
        "Execute_plan"
    ],
    "The suggestions are generated by the IME or by the spell checker as the user types.": [
        "Creating"
    ],
    "This is done by adding SuggestionSpans to the text.": [
        "Intentionally_act"
    ],
    "When suggestions are enabled ( default ), this list of suggestions will be displayed when the user asks for them on these parts of the text.": [
        "Temporal_collocation",
        "Part_whole",
        "Execution",
        "Temporal_collocation"
    ],
    "This value depends on the inputType of this TextView.": [],
    "The class of the input type must be InputType #TYPE_CLASS_TEXT.": [
        "Being_obligated"
    ],
    "In addition, the type variation must be one of InputType #TYPE_TEXT_VARIATION_NORMAL, InputType #TYPE_TEXT_VARIATION_EMAIL_SUBJECT, InputType #TYPE_TEXT_VARIATION_LONG_MESSAGE, InputType #TYPE_TEXT_VARIATION_SHORT_MESSAGE or InputType #TYPE_TEXT_VARIATION_WEB_EDIT_TEXT.": [
        "Communication_response",
        "Cause_change",
        "Being_obligated",
        "Cardinal_numbers"
    ],
    "And finally, the InputType #TYPE_TEXT_FLAG_NO_SUGGESTIONS flag must not be set.": [
        "Time_vector",
        "Being_obligated",
        "Intentionally_create"
    ],
    "Although you have to set this flag to allow users to select and copy text in a non-editable TextView, the content of an EditText can always be selected, independently of the value of this flag.": [
        "Choosing",
        "Grant_permission",
        "Choosing",
        "Duplication",
        "Frequency",
        "Intentionally_create",
        "Being_obligated",
        "Likelihood"
    ],
    "This will not move the cursor if it represents more than one character ( a selection range ).": [
        "Physical_artworks",
        "Natural_features",
        "Increment",
        "Cardinal_numbers",
        "Motion",
        "Communicate_categorization"
    ],
    "This will only work if the TextView contains spannable text ; otherwise it will do nothing.": [
        "Sole_instance",
        "Working_on",
        "Intentionally_act",
        "Inclusion"
    ],
    "The default implementation does nothing ; text views that are supporting auto-completion should override this to do their desired behavior.": [
        "Execute_plan",
        "Desiring",
        "Categorization",
        "Conduct",
        "Taking_sides",
        "Being_obligated",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "The default implementation flashes the background of the corrected word to provide feedback to the user.": [
        "Execute_plan",
        "Location_of_light",
        "Simple_name",
        "Supply"
    ],
    "The method should return true in response to an action type of android.view.DragEvent #ACTION_DRAG_STARTED to receive drag events for the current operation.": [
        "Execution",
        "Intentionally_act",
        "Cause_motion",
        "Using",
        "Event",
        "Temporal_collocation",
        "Being_obligated",
        "Receiving",
        "Response",
        "Execution"
    ],
    "The method should also return true in response to an action type of android.view.DragEvent #ACTION_DROP if it consumed the drop, or false if it didn't.": [
        "Execution",
        "Intentionally_act",
        "Ingestion",
        "Change_position_on_a_scale",
        "Artificiality",
        "Intentionally_act",
        "Being_obligated",
        "Response",
        "Execution"
    ],
    "For all other events, the return value is ignored.": [
        "Quantity",
        "Execution",
        "Increment",
        "Event"
    ],
    "The default implementation will call your action listener supplied to setOnEditorActionListener, or perform a standard operation for EditorInfo.IME _ ACTION_NEXT, EditorInfo.IME _ ACTION_PREVIOUS, or EditorInfo.IME _ ACTION_DONE.": [
        "Execute_plan",
        "Using",
        "Intentionally_act",
        "Supply",
        "Intentionally_act",
        "Execution"
    ],
    "For backwards compatibility, if no IME options have been set and the text view would not normally advance focus on enter, then the NEXT and DONE actions received here will be turned into an enter key down/up pair to go through the normal key handling.": [
        "Compatibility",
        "Quantity",
        "Mental_property",
        "Possibilities",
        "Opinion",
        "Importance",
        "Personal_relationship",
        "Change_position_on_a_scale",
        "Execution",
        "Place_weight_on",
        "Intentionally_act",
        "Intentionally_create",
        "Temporal_collocation",
        "Locative_relation",
        "Receiving",
        "Cause_change",
        "Becoming"
    ],
    "At this point, all views in the tree have been measured and given a frame.": [
        "Locale",
        "Quantity",
        "Giving",
        "Categorization",
        "Quantity"
    ],
    "Clients can use this to adjust their scroll bounds or even to request a new layout before drawing occurs.": [
        "Create_physical_artwork",
        "Age",
        "Event",
        "Capability",
        "Self_motion",
        "Adjusting",
        "Using",
        "Execution"
    ],
    "Apps wishing to provide custom behavior should configure a listener via setOnReceiveContentListener.": [
        "Conduct",
        "Supply",
        "Desiring",
        "Being_obligated"
    ],
    "For non-editable TextViews the default behavior is a no-op ( returns the passed-in content without acting on it ).": [
        "Performers_and_roles",
        "Conduct",
        "Execution"
    ],
    "For editable TextViews the default behavior is to insert text into the view, coercing non-text content to text as needed.": [
        "Opinion",
        "Required_event",
        "Conduct"
    ],
    "The MIME types `` text/plain'' and `` text/html'' have well-defined behavior for this, while other MIME types have reasonable fallback behavior ( see ClipData.Item #coerceToStyledText ).": [
        "Mental_property",
        "Increment",
        "Possession",
        "Grasp",
        "Conduct"
    ],
    "Currently this will be one of android.R.id #selectAll, android.R.id #cut, android.R.id #copy, android.R.id #paste or android.R.id #shareText.": [
        "Temporal_collocation",
        "Removing",
        "Duplication",
        "Cardinal_numbers"
    ],
    "This may use a `` small caps'' formatting if available.": [
        "Likelihood",
        "Dimension",
        "Using"
    ],
    "This setting will be ignored if this field is editable or selectable.": [
        "Fields"
    ],
    "This call replaces the current transformation method.": [
        "Execution",
        "Execution",
        "Cause_change",
        "Temporal_collocation",
        "Take_place_of"
    ],
    "Disabling this will not necessarily restore the previous behavior from before this was enabled.": [
        "Render_nonfunctional",
        "Conduct",
        "Time_vector",
        "Rejuvenation"
    ],
    "See Linkify.ALL and peers for possible values.": [
        "Perception_active",
        "Likelihood",
        "Grasp"
    ],
    "Note: Linkify.MAP _ ADDRESSES is deprecated and should be avoided ; see its documentation.": [
        "Grasp",
        "Avoiding",
        "Judgment_communication",
        "Being_obligated"
    ],
    "If all the configuration params are valid the type of auto-size is set to AUTO_SIZE_TEXT_TYPE_UNIFORM.": [
        "Quantity",
        "Being_in_effect",
        "Intentionally_create"
    ],
    "If at least one value from the presetSizes is valid then the type of auto-size is set to AUTO_SIZE_TEXT_TYPE_UNIFORM.": [
        "Cardinal_numbers",
        "Intentionally_create",
        "Relational_quantity",
        "Being_in_effect",
        "Temporal_collocation"
    ],
    "The default value for TextView is, and the default value for EditText is Layout #BREAK_STRATEGY_SIMPLE, the latter to avoid the text `` dancing'' when being edited.": [
        "Temporal_collocation",
        "Preventing"
    ],
    "The default mode is PorterDuff.Mode #SRC_IN.": [],
    "Does not modify the current tint mode, which is BlendMode #SRC_IN by default.": [
        "Intentionally_act",
        "Temporal_collocation",
        "Cause_change"
    ],
    "Subsequent calls to setCompoundDrawables ( android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable ) and related methods will automatically mutate the drawables and apply the specified tint and tint mode using Drawable #setTintList ( ColorStateList ).": [
        "Relative_time",
        "Execution",
        "Execution",
        "Cognitive_connection",
        "Using",
        "Using"
    ],
    "Use null if you do not want a Drawable there.": [
        "Intentionally_act",
        "Existence",
        "Possession"
    ],
    "The Drawables must already have had android.graphics.drawable.Drawable #setBounds called.": [
        "Being_obligated",
        "Execution",
        "Time_vector"
    ],
    "Calling this method will overwrite any Drawables previously set using setCompoundDrawablesRelative or related methods.": [
        "Execution",
        "Execution",
        "Quantity",
        "Cognitive_connection",
        "Execution",
        "Using",
        "Execution",
        "Time_vector"
    ],
    "Calling this method will overwrite any Drawables previously set using setCompoundDrawables or related methods.": [
        "Execution",
        "Execution",
        "Quantity",
        "Execution",
        "Using",
        "Cognitive_connection",
        "Execution",
        "Time_vector"
    ],
    "Use 0 if you do not want a Drawable there.": [
        "Intentionally_act",
        "Existence",
        "Possession"
    ],
    "The Drawables' bounds will be set to their intrinsic bounds.": [
        "Intentionally_create"
    ],
    "Note that this property only makes sense for editable TextView.": [
        "Sensation",
        "Possession",
        "Sole_instance",
        "Causation"
    ],
    "If IME is temporarily consuming the input, the cursor will be always invisible, visibility will be updated as the last state when IME does not consume the input anymore.": [
        "Frequency",
        "Political_locales",
        "Temporal_collocation",
        "Relative_time",
        "Intentionally_act",
        "Ingestion",
        "Ingestion"
    ],
    "If provided, this ActionMode.Callback will be used to create the ActionMode when text insertion is initiated in this View.": [
        "Supply",
        "Temporal_collocation",
        "Categorization",
        "Intentionally_create",
        "Activity_start",
        "Using"
    ],
    "The standard implementation populates the menu with a subset of Select All, Paste and Replace actions, depending on what this View supports.": [
        "Execute_plan",
        "Weapon",
        "Perception_active",
        "Taking_sides",
        "Intentionally_act",
        "Adorning"
    ],
    "A custom implementation can add new entries in the default menu in its android.view.ActionMode.Callback #onPrepareActionMode ( android.view.ActionMode, * android.view.Menu ) method.": [
        "Custom",
        "Execute_plan",
        "Execution",
        "Execution",
        "Age",
        "Capability"
    ],
    "The default actions can also be removed from the menu using android.view.Menu #removeItem ( int ) and passing android.R.id #selectAll, android.R.id #paste or android.R.id #replaceText ids as parameters.": [
        "Terms_of_agreement",
        "Intentionally_act",
        "Likelihood",
        "Traversing",
        "Using",
        "Removing"
    ],
    "Returning false from android.view.ActionMode.Callback #onCreateActionMode ( android.view.ActionMode, * android.view.Menu ) will prevent the action mode from being started.": [
        "Execution",
        "Artificiality",
        "Intentionally_act",
        "Activity_start",
        "Preventing"
    ],
    "Action click events should be handled by the custom implementation of android.view.ActionMode.Callback #onActionItemClicked ( android.view.ActionMode, * android.view.MenuItem ).": [
        "Intentionally_act",
        "Sounds",
        "Custom",
        "Execute_plan",
        "Event",
        "Being_obligated",
        "Resolve_problem"
    ],
    "Note that text insertion mode is not started when a TextView receives focus and the android.R.attr #selectAllOnFocus flag has been set.": [
        "Temporal_collocation",
        "Place_weight_on",
        "Becoming_aware",
        "Intentionally_create",
        "Receiving",
        "Activity_start"
    ],
    "If provided, this ActionMode.Callback will be used to create the ActionMode when text selection is initiated in this View.": [
        "Supply",
        "Temporal_collocation",
        "Categorization",
        "Intentionally_create",
        "Activity_start",
        "Using"
    ],
    "The standard implementation populates the menu with a subset of Select All, Cut, Copy, Paste, Replace and Share actions, depending on what this View supports.": [
        "Execute_plan",
        "Weapon",
        "Removing",
        "Duplication",
        "Perception_active",
        "Intentionally_act",
        "Taking_sides",
        "Adorning"
    ],
    "A custom implementation can add new entries in the default menu in its android.view.ActionMode.Callback #onPrepareActionMode ( ActionMode, android.view.Menu ) method.": [
        "Custom",
        "Execute_plan",
        "Execution",
        "Execution",
        "Age",
        "Capability"
    ],
    "The default actions can also be removed from the menu using android.view.Menu #removeItem ( int ) and passing android.R.id #selectAll, android.R.id #cut, android.R.id #copy, android.R.id #paste, android.R.id #replaceText or android.R.id #shareText ids as parameters.": [
        "Removing",
        "Duplication",
        "Terms_of_agreement",
        "Intentionally_act",
        "Likelihood",
        "Traversing",
        "Using",
        "Removing"
    ],
    "Returning false from android.view.ActionMode.Callback #onCreateActionMode ( ActionMode, android.view.Menu ) will prevent the action mode from being started.": [
        "Artificiality",
        "Intentionally_act",
        "Activity_start",
        "Execution",
        "Preventing"
    ],
    "Action click events should be handled by the custom implementation of android.view.ActionMode.Callback #onActionItemClicked ( ActionMode, * android.view.MenuItem ).": [
        "Intentionally_act",
        "Sounds",
        "Custom",
        "Execute_plan",
        "Event",
        "Being_obligated",
        "Resolve_problem"
    ],
    "Note that text selection mode is not started when a TextView receives focus and the android.R.attr #selectAllOnFocus flag has been set.": [
        "Temporal_collocation",
        "Place_weight_on",
        "Becoming_aware",
        "Intentionally_create",
        "Receiving",
        "Activity_start"
    ],
    "The content is highlighted in that case, to allow for quick replacement.": [
        "Instance",
        "Grant_permission",
        "Take_place_of",
        "Speed"
    ],
    "You may also want to #setSingleLine or setHorizontallyScrolling to constrain the text to a single line.": [
        "Hindering",
        "Likelihood",
        "Sole_instance",
        "Desiring"
    ],
    "Use null to turn off ellipsizing.": [
        "Locative_relation",
        "Becoming"
    ],
    "If setMaxLines has been used to set two or more lines, only android.text.TextUtils.TruncateAt #END and android.text.TextUtils.TruncateAt #MARQUEE are supported ( other ellipsizing types will not do anything ).": [
        "Sole_instance",
        "Temporal_subregion",
        "Increment",
        "Increment",
        "Using",
        "Cardinal_numbers",
        "Intentionally_act",
        "Taking_sides",
        "Intentionally_create"
    ],
    "This value is used for width calculation if LayoutParams does not force TextView to have an exact width.": [
        "Military",
        "Dimension",
        "Intentionally_act",
        "Correctness",
        "Using"
    ],
    "Setting this value overrides previous minimum/maximum configurations such as setMinEms ( int ) or setMaxEms ( int ).": [
        "Time_vector"
    ],
    "The icon and error message will be reset to null when any key events cause changes to the TextView's text.": [
        "Temporal_collocation",
        "Importance",
        "Event",
        "Quantity",
        "Causation",
        "Undergo_change"
    ],
    "If the error is null, the error message and icon will be cleared.": [
        "Being_in_effect",
        "Removing"
    ],
    "The drawable must already have had android.graphics.drawable.Drawable #setBounds set on it.": [
        "Being_obligated",
        "Intentionally_create",
        "Time_vector"
    ],
    "If the error is null, the error message will be cleared ( and you should provide a null icon as well ).": [
        "Being_obligated",
        "Being_in_effect",
        "Removing",
        "Supply"
    ],
    "If set, fallback fonts that end up getting used can increase the ascent and descent of the lines that they are used on.": [
        "Intentionally_create",
        "Cause_change_of_position_on_a_scale",
        "Traversing",
        "Traversing",
        "Becoming",
        "Execution",
        "Capability",
        "Using"
    ],
    "The settings string is constructed from multiple pairs of axis tag and style values.": [
        "Personal_relationship",
        "Hair_configuration",
        "Quantity",
        "Building"
    ],
    "The axis tag must contain four ASCII characters and must be wrapped with single quotes ( U +0027 ) or double quotes ( U +0022 ).": [
        "Physical_artworks",
        "Change_position_on_a_scale",
        "Cardinal_numbers",
        "Sole_instance",
        "Being_obligated",
        "Inclusion"
    ],
    "Axis strings that are longer or shorter than four characters, or contain characters outside of U +0020.": [
        "Duration_attribute",
        "Physical_artworks",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "U +007 E are invalid.": [],
    "If a specified axis name is not defined in the font, the settings will be ignored.": [
        "Communicate_categorization"
    ],
    "By default this is false, not saving the text.": [
        "Artificiality"
    ],
    "Set to true if the text in the text view is not being saved somewhere else in persistent storage ( such as in a content provider ) so that if the view is later thawed the user will not lose their data.": [
        "Storing",
        "Opinion",
        "Process_continue",
        "Earnings_and_losses",
        "Time_vector",
        "Change_of_phase"
    ],
    "For android.widget.EditText it is always enabled, regardless of the value of the attribute.": [
        "Frequency"
    ],
    "This value is used for height calculation if LayoutParams does not force TextView to have an exact height.": [
        "Military",
        "Dimension",
        "Intentionally_act",
        "Correctness",
        "Using"
    ],
    "Setting this value overrides previous minimum/maximum height configurations such as setMinHeight ( int ) or setMaxHeight ( int ).": [
        "Time_vector",
        "Dimension"
    ],
    "Null means to use the normal empty text.": [
        "Mental_property",
        "Fullness",
        "Using",
        "Evidence"
    ],
    "The hint does not currently participate in determining the size of the view.": [
        "Opinion",
        "Temporal_collocation",
        "Intentionally_act",
        "Coming_to_believe",
        "Participation"
    ],
    "If false, it will be wrapped to the width of the View.": [
        "Artificiality",
        "Dimension",
        "Categorization"
    ],
    "The default value for both TextView and EditText is.": [
        "Quantity"
    ],
    "Note that the default hyphenation frequency value is set from the theme.": [
        "Topic",
        "Frequency",
        "Intentionally_create"
    ],
    "Starting with Android O, this also causes internationalized listeners to be created ( or change locale ) based on the first locale in the input locale list.": [
        "Process_start",
        "Undergo_change",
        "Locale_by_event",
        "Ordinal_numbers",
        "Creating",
        "Causation"
    ],
    "Note: If you want new `` hint'' to take effect immediately you need to call InputMethodManager #restartInput ( View ).": [
        "Objective_influence",
        "Categorization",
        "Required_event",
        "Age",
        "Execution",
        "Possession",
        "Have_as_requirement"
    ],
    "The given integer is the resource identifier of an XML resource holding an <input-extras> XML tree.": [
        "Giving",
        "Containing"
    ],
    "This will take care of changing the key listener, by calling setKeyListener ( android.text.method.KeyListener ), to match the given content type.": [
        "Exchange",
        "Evaluative_comparison",
        "Importance",
        "Giving",
        "Have_as_requirement",
        "Execution"
    ],
    "If the given content type is EditorInfo #TYPE_NULL then a soft keyboard will not be displayed for this text view.": [
        "Giving",
        "Opinion",
        "Temporal_collocation"
    ],
    "Note that the maximum number of displayed lines ( see setMaxLines ( int ) ) will be modified if you change the EditorInfo #TYPE_TEXT_FLAG_MULTI_LINE flag of the input type.": [
        "Extreme_value",
        "Quantity",
        "Grasp",
        "Undergo_change",
        "Cause_change"
    ],
    "The default value is Layout #JUSTIFICATION_MODE_NONE.": [],
    "If the last line is too short for justification, the last line will be displayed with the alignment set by android.view.View #setTextAlignment.": [
        "Dimension",
        "Justifying",
        "Relative_time",
        "Sufficiency",
        "Intentionally_create"
    ],
    "This can be null to disallow user input.": [
        "Being_in_effect",
        "Capability"
    ],
    "Note that this method has significant and subtle interactions with soft keyboards and other input method: see KeyListener.getInputType ( ) for important details.": [
        "Execution",
        "Increment",
        "Importance",
        "Perception_experience",
        "Importance"
    ],
    "Calling this method will replace the current content type of the text view with the content type returned by the key listener.": [
        "Execution",
        "Temporal_collocation",
        "Opinion",
        "Importance",
        "Execution",
        "Execution",
        "Take_place_of"
    ],
    "Be warned that if you want a TextView with a key listener or movement method not to be focusable, or if you want a TextView without a key listener or movement method to be focusable, you must call #setFocusable again after calling this to get the focusability back the way you want it.": [
        "Observable_body_parts",
        "Importance",
        "Execution",
        "Execution",
        "Desiring",
        "Execution",
        "Execution",
        "Execution",
        "Being_obligated"
    ],
    "Typical values for slight expansion will be around 0.05.": [
        "Expansion"
    ],
    "This is equivalent to the vertical distance between subsequent baselines in the TextView.": [
        "Relative_time",
        "Range"
    ],
    "Each line other than the last line will have its height multiplied by mult and have add added to it.": [
        "Dimension",
        "Proliferating_in_number",
        "Cause_change_of_position_on_a_scale",
        "Relative_time",
        "Increment"
    ],
    "Setting this value overrides previous minimum/maximum height configurations such as setMinLines ( int ) or setMaxLines ( int ).": [
        "Time_vector",
        "Dimension"
    ],
    "setSingleLine ( ) will set this value to 1.": [
        "Intentionally_create"
    ],
    "Only applied if the TextView has marquee enabled.": [
        "Sole_instance",
        "Using"
    ],
    "Set to -1 to repeat indefinitely.": [
        "Frequency"
    ],
    "Setting this value overrides previous maximum width configurations such as setMaxWidth ( int ) or setWidth ( int ).": [
        "Time_vector",
        "Extreme_value",
        "Dimension"
    ],
    "Setting this value overrides previous maximum height configurations such as setMaxLines ( int ) or setLines ( int ).": [
        "Time_vector",
        "Extreme_value",
        "Dimension"
    ],
    "Setting this value overrides previous maximum height configurations such as setMaxHeight ( int ) or setLines ( int ).": [
        "Time_vector",
        "Extreme_value",
        "Dimension"
    ],
    "Setting this value overrides previous maximum width configurations such as setMaxEms ( int ) or setEms ( int ).": [
        "Time_vector",
        "Extreme_value",
        "Dimension"
    ],
    "Setting this value overrides previous minimum width configurations such as setMinWidth ( int ) or setWidth ( int ).": [
        "Extreme_value",
        "Dimension",
        "Time_vector"
    ],
    "Setting this value overrides previous minimum height configurations such as setMinLines ( int ) or setLines ( int ).": [
        "Extreme_value",
        "Dimension",
        "Time_vector"
    ],
    "The value given here is different than setMinimumHeight ( int ).": [
        "Locative_relation",
        "Giving",
        "Similarity"
    ],
    "Between minHeight and the value set in setMinimumHeight ( int ), the greater one is used to decide the final height.": [
        "Cardinal_numbers",
        "Dimension",
        "Ordinal_numbers",
        "Intentionally_create",
        "Deciding",
        "Using"
    ],
    "Setting this value overrides other previous minimum height configurations such as setMinHeight ( int ) or setHeight ( int ).": [
        "Extreme_value",
        "Dimension",
        "Time_vector",
        "Increment"
    ],
    "Setting this value overrides previous minimum width configurations such as setMinEms ( int ) or setEms ( int ).": [
        "Extreme_value",
        "Dimension",
        "Time_vector"
    ],
    "The value given here is different than setMinimumWidth ( int ).": [
        "Locative_relation",
        "Giving",
        "Similarity"
    ],
    "Between minWidth and the value set in setMinimumWidth ( int ), the greater one is used to decide the final width.": [
        "Cardinal_numbers",
        "Dimension",
        "Ordinal_numbers",
        "Intentionally_create",
        "Deciding",
        "Using"
    ],
    "This can be null to disallow using the arrow keys to move the cursor or scroll the view.": [
        "Being_in_effect",
        "Natural_features",
        "Motion",
        "Opinion",
        "Using",
        "Capability"
    ],
    "This will be called when the enter key is pressed, or when an action supplied to the IME is selected by the user.": [
        "Temporal_collocation",
        "Importance",
        "Intentionally_act",
        "Execution",
        "Attempt_suasion",
        "Choosing",
        "Supply",
        "Execution"
    ],
    "Setting this means that the normal hard key event will not insert a newline into the text view, even if it is multi-line ; holding down the ALT modifier will, however, allow the user to insert a newline character.": [
        "Mental_property",
        "Containing",
        "Ingestion",
        "Concessive",
        "Physical_artworks",
        "Linguistic_meaning",
        "Event",
        "Importance",
        "Opinion",
        "Difficulty",
        "Grant_permission"
    ],
    "The text shadow produced does not interact with the properties on view that are responsible for real time shadows, elevation and translationZ.": [
        "Opinion",
        "Cotheme",
        "Measure_duration",
        "Existence",
        "Cotheme",
        "Intentionally_create",
        "Intentionally_act",
        "Possession"
    ],
    "Note that the default conditions are not necessarily those that were in effect prior this method, and you may want to reset these properties to your custom values.": [
        "Objective_influence",
        "Execution",
        "Custom",
        "State_of_entity",
        "Likelihood",
        "Possession",
        "Possession",
        "Time_vector"
    ],
    "Note that due to performance reasons, by setting single line for the EditText, the maximum text length is set to 5000 if no other character limitation are applied.": [
        "Performing_arts",
        "Extreme_value",
        "Quantity",
        "Physical_artworks",
        "Causation",
        "Sole_instance",
        "Dimension",
        "Increment",
        "Becoming_aware",
        "Using",
        "Intentionally_create"
    ],
    "TextView does not accept HTML-like formatting, which you can do with text strings in XML resource files.": [
        "Intentionally_act",
        "Capability",
        "Intentionally_act",
        "Receiving"
    ],
    "To style your strings, attach android.text.style.": [
        "Hair_configuration",
        "Attaching"
    ],
    "* objects to a android.text.SpannableString, or see the Available Resource Types documentation for an example of setting formatted text in the XML resource file.": [
        "Instance",
        "Gizmo",
        "Perception_experience"
    ],
    "You must promise that you will not change the contents of the array except for right before another call to setText ( ), since the TextView has no way to know that the text has changed and that it needs to invalidate and re-layout.": [
        "Diversity",
        "Part_orientational",
        "Quantity",
        "Increment",
        "Being_obligated",
        "Undergo_change",
        "Required_event",
        "Undergo_change",
        "Certainty",
        "Execution",
        "Possession",
        "Commitment"
    ],
    "Use a framework-defined TextAppearance style like @android: style/TextAppearance.": [
        "Hair_configuration",
        "Using"
    ],
    "Material.Body1 or see TextAppearance for the set of attributes that can be used in a custom style.": [
        "Custom",
        "Hair_configuration",
        "Likelihood",
        "Using",
        "Execution",
        "Grasp"
    ],
    "Deprecated: Use setTextAppearance ( int ) instead.": [],
    "The Drawable defaults to the value of the textCursorDrawable attribute.": [],
    "The default is false, meaning that the content is not selectable.": [
        "Artificiality",
        "Causation"
    ],
    "When you use a TextView to display a useful piece of information to the user ( such as a contact's address ), make it selectable, so that the user can select and copy its content.": [
        "Temporal_collocation",
        "Information",
        "Contacting",
        "Speak_on_topic",
        "Part_piece",
        "Using",
        "Capability",
        "Duplication",
        "Choosing",
        "Execution"
    ],
    "You can also use set the XML attribute android.R.styleable #TextView_textIsSelectable to `` true''.": [
        "Likelihood",
        "Intentionally_create",
        "Using"
    ],
    "When you call this method to set the value of textIsSelectable, it sets the flags focusable, focusableInTouchMode, clickable, and longClickable to the same value.": [
        "Temporal_collocation",
        "Execution",
        "Identicality",
        "Execution",
        "Intentionally_create"
    ],
    "These flags correspond to the attributes android: focusable, android: focusableInTouchMode, android: clickable, and android: longClickable.": [],
    "To restore any of these flags to a state you had set previously, call one or more of the following methods: setFocusable ( ), setFocusableInTouchMode ( ), setClickable ( ) or setLongClickable ( ).": [
        "Political_locales",
        "Cardinal_numbers",
        "Increment",
        "Execution",
        "Execution",
        "Relative_time",
        "Quantity",
        "Time_vector",
        "Intentionally_create",
        "Rejuvenation"
    ],
    "Same as setText ( java.lang.CharSequence ) except that the cursor position ( if any ) is retained in the new text.": [
        "Quantity",
        "Age",
        "Memory"
    ],
    "Same as setText ( java.lang.CharSequence, android.widget.TextView.BufferType ) except that the cursor position ( if any ) is retained in the new text.": [
        "Quantity",
        "Age",
        "Memory"
    ],
    "This value is used to choose appropriate typefaces for ambiguous characters ( typically used for CJK locales to disambiguate Hanzi/Kanji/Hanja characters ).": [
        "Linguistic_meaning",
        "Physical_artworks",
        "Locale_by_event",
        "Choosing",
        "Using"
    ],
    "It also affects other aspects of text display, including line breaking.": [
        "Increment",
        "Distinctiveness",
        "Inclusion",
        "Objective_influence"
    ],
    "Update the TextView parameters to be compatible with PrecomputedText.Params.": [
        "Terms_of_agreement",
        "Compatibility"
    ],
    "The default value is 1.0.": [],
    "Values greater than 1.0 stretch the text wider.": [
        "Shapes"
    ],
    "Values less than 1.0 make the text narrower.": [
        "Causation"
    ],
    "By default, this value is 1.0.": [],
    "The Drawable defaults to the value of the textSelectHandle attribute.": [],
    "The Drawable defaults to the value of the textSelectHandleLeft attribute.": [],
    "The Drawable defaults to the value of the textSelectHandleRight attribute.": [],
    "This size is adjusted based on the current density and user font size preference.": [
        "Temporal_collocation",
        "Adjusting"
    ],
    "Note: if this TextView has the auto-size feature enabled than this function is no-op.": [],
    "See TypedValue for the possible dimension units.": [
        "Likelihood",
        "Grasp"
    ],
    "Note that not all Typeface families actually have bold and italic variants, so you may need to use setTypeface ( android.graphics.Typeface, int ) to get the appearance that you actually want.": [
        "Kinship",
        "Similarity",
        "Likelihood",
        "Quantity",
        "Required_event",
        "Execution",
        "Possession",
        "Using"
    ],
    "Setting this value overrides previous minimum/maximum width configurations such as setMinWidth ( int ) or setMaxWidth ( int ).": [
        "Time_vector",
        "Dimension"
    ],
    "The default range is the drawing height of this view.": [
        "Natural_features",
        "Create_physical_artwork",
        "Dimension",
        "Opinion"
    ],
    "Note: Always call the super implementation, which informs the accessibility subsystem about the selection change.": [
        "Execute_plan",
        "Undergo_change",
        "Desirability",
        "Telling",
        "Execution"
    ],
    "Within text, the lengthAfter characters beginning at start have just replaced old text that had length lengthBefore.": [
        "Physical_artworks",
        "Temporal_subregion",
        "Being_obligated",
        "Shapes",
        "Age",
        "Process_start",
        "Take_place_of"
    ],
    "It is an error to attempt to make changes to text from this callback.": [
        "Undergo_change",
        "Causation",
        "Attempt"
    ],
    "This allows animations for those drawables to be scheduled.": [
        "Grant_permission"
    ],
    "Be sure to call through to the super class when overriding this function.": [
        "Desirability",
        "Likelihood",
        "Temporal_collocation",
        "Execution"
    ],
    "If you override this method you must call through to the superclass implementation.": [
        "Execution",
        "Execute_plan",
        "Being_obligated",
        "Execution"
    ],
    "When the application is in a special mode, where user's activities are expected to be not recorded in the application's history.": [
        "Temporal_collocation",
        "Using",
        "Locative_relation",
        "Intentionally_act",
        "Expectation",
        "Recording"
    ],
    "Some web browsers and chat applications may have this kind of modes.": [
        "Relational_quantity",
        "Chatting",
        "Likelihood"
    ],
    "When storing typing history does not make much sense.": [
        "History",
        "Sensation",
        "Relational_quantity",
        "Storing",
        "Temporal_collocation",
        "Intentionally_act",
        "Causation"
    ],
    "Specifying this flag in typing games may help to avoid typing history from being filled up with words that the user is less likely to type in their daily life.": [
        "History",
        "Locative_relation",
        "Simple_name",
        "Text_creation",
        "Text_creation",
        "Frequency",
        "Abounding_with",
        "Likelihood",
        "Likelihood",
        "Assistance",
        "Preventing"
    ],
    "Another example is that when the application already knows that the expected input is not a valid word ( e.g. a promotion code that is not a valid word in any natural language ).": [
        "Instance",
        "Temporal_collocation",
        "Using",
        "Simple_name",
        "Increment",
        "Expectation",
        "Being_in_effect",
        "Time_vector",
        "Quantity",
        "Awareness"
    ],
    "java.lang.Appendable #append ( CharSequence, int, int )": [
        "Attaching"
    ],
    "#setAutoSizeTextTypeUniformWithConfiguration ( int, int, int, int )": [],
    "#setAutoSizeTextTypeUniformWithPresetSizes ( int -LSB- -RSB-, int )": [],
    "android.graphics.Paint #setFontFeatureSettings ( String )": [],
    "android.graphics.Paint #setFontVariationSettings ( String )": [],
    "#setLineSpacing ( float, float )": [],
    "#setShadowLayer ( float, float, float, int )": [],
    "android.graphics.Paint #setElegantTextHeight ( boolean )": [],
    "android.graphics.drawable.Drawable #setTintBlendMode ( BlendMode )": [],
    "android.graphics.drawable.Drawable #setTintList ( ColorStateList )": [],
    "android.graphics.drawable.Drawable #setTintMode ( PorterDuff.Mode )": [],
    "android.text.StaticLayout.Builder #setUseLineSpacingFromFallbacks ( boolean )": [],
    "#setPadding ( int, int, int, int )": [],
    "#setPaddingRelative ( int, int, int, int )": [],
    "Set font width to 150.": [
        "Dimension"
    ],
    "Set the font slant to 20 degrees and ask for italic style.": [
        "Quantity",
        "Hair_configuration",
        "Cardinal_numbers",
        "Execution",
        "Motion_directional"
    ],
    "android.graphics.Paint #setShadowLayer ( float, float, float, int )": [],
    "#setText ( CharSequence, android.widget.TextView.BufferType )": [],
    "": [],
    "You set this text view a width of `` wrap_content'' it means, what ever the text is, the view take the size of the text.": [
        "Dimension",
        "Perception_active",
        "Linguistic_meaning",
        "Taking_time",
        "Intentionally_create"
    ],
    "and in the LinearLayout, the default gravity -LRB- used here -RRB- is ` center'": [
        "Locative_relation",
        "Locale_by_use",
        "Using"
    ],
    "you should try this:": [],
    "99 % of the time, not working properly == not used properly.": [
        "Measure_duration",
        "Being_employed",
        "Using"
    ],
    "You are mistaking gravity and layout_gravity.": [],
    "gravity is the way the text will align itself in the TextView.": [
        "Execution"
    ],
    "The TextView being in wrap_content this does nothing, as the TextView is exactly the size of the text.": [
        "Intentionally_act",
        "Frequency"
    ],
    "layout_gravity is the way the TextView will align itself in its parent, in your case in the vertical LinearLayout": [
        "Instance",
        "Kinship",
        "Execution"
    ],
    "You have given your TextView width wrap_content, and that is the problem, Check below code and replace it to your code.": [
        "Dimension",
        "Predicament",
        "Replacing",
        "Giving"
    ],
    "set android: layout_width = `` fill_parent'' for textView1": [
        "Intentionally_create"
    ],
    "Make sure you don't have something like that hanging around": [
        "Locative_relation",
        "Intentionally_act"
    ],
    "Explanation of the getView() method of an ArrayAdapter": [
        "Execution"
    ],
    "public class ArrayAdapter extends BaseAdapter implements Filterable, ThemedSpinnerAdapter": [],
    "You can use this adapter to provide views for an AdapterView, Returns a view for each object in a collection of data objects you provide, and can be used with list-based user interface widgets such as ListView or Spinner.": [
        "Opinion",
        "Likelihood",
        "Execution",
        "Categorization",
        "Using",
        "Using",
        "Execution",
        "Supply"
    ],
    "By default, the array adapter creates a view by calling Object #toString ( ) on each data object in the collection you provide, and places the result in a TextView.": [
        "Diversity",
        "Opinion",
        "Causation",
        "Execution",
        "Supply",
        "Creating",
        "Execution"
    ],
    "You may also customize what type of view is used for the data object in the collection.": [
        "Opinion",
        "Execution",
        "Likelihood",
        "Using"
    ],
    "To customize what type of view is used for the data object, override getView ( int, android.view.View, android.view.ViewGroup ) and inflate a view resource.": [
        "Opinion",
        "Cause_expansion",
        "Using"
    ],
    "For an example of using an array adapter with a ListView, see the Adapter Views guide.": [
        "Instance",
        "Diversity",
        "Categorization",
        "Using",
        "Grasp"
    ],
    "For an example of using an array adapter with a Spinner, see the Spinners guide.": [
        "Instance",
        "Diversity",
        "Using",
        "Grasp"
    ],
    "Note: If you are considering using array adapter with a ListView, consider using RecyclerView instead.": [
        "Diversity",
        "Using",
        "Categorization",
        "Categorization"
    ],
    "RecyclerView offers similar features with better performance and more flexibility than ListView provides.": [
        "Similarity",
        "Performing_arts",
        "Supply",
        "Offering",
        "Increment",
        "Desirability"
    ],
    "See the Recycler View guide.": [
        "Categorization",
        "Grasp"
    ],
    "Adds the specified object at the end of the array.": [
        "Diversity",
        "Temporal_subregion"
    ],
    "Adds the specified items at the end of the array.": [
        "Entity",
        "Diversity",
        "Temporal_subregion"
    ],
    "Adds the specified Collection at the end of the array.": [
        "Diversity",
        "Temporal_subregion",
        "Execution"
    ],
    "Remove all elements from the list.": [
        "Ingredients",
        "Quantity",
        "Removing"
    ],
    "Creates a new ArrayAdapter from external resources.": [
        "Age",
        "Creating"
    ],
    "Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.": [
        "Opinion",
        "Capability",
        "Taking_sides",
        "Assistance",
        "Communicate_categorization",
        "Bringing"
    ],
    "Returns the context associated with this array adapter.": [
        "Diversity",
        "Cognitive_connection",
        "Execution"
    ],
    "How many items are in the data set represented by this Adapter.": [
        "Entity",
        "Quantity",
        "Execution",
        "Communicate_categorization"
    ],
    "Gets a View that displays in the drop down popup the data at the specified position in the data set.": [
        "Execution",
        "Perception_active",
        "Execution",
        "Change_position_on_a_scale"
    ],
    "Returns the value previously set by a call to setDropDownViewTheme ( android.content.res.Resources.Theme ).": [
        "Execution",
        "Time_vector",
        "Execution",
        "Intentionally_create"
    ],
    "Returns a filter that can be used to constrain data with a filtering pattern.": [
        "Hindering",
        "Pattern",
        "Likelihood",
        "Using",
        "Execution"
    ],
    "Get the data item associated with the specified position in the data set.": [
        "Entity",
        "Execution",
        "Cognitive_connection",
        "Execution"
    ],
    "Get the row id associated with the specified position in the list.": [
        "Quarreling",
        "Cognitive_connection",
        "Execution"
    ],
    "Returns the position of the specified item in the array.": [
        "Entity",
        "Diversity",
        "Execution"
    ],
    "Get a View that displays the data at the specified position in the data set.": [
        "Categorization",
        "Execution",
        "Execution"
    ],
    "Inserts the specified object at the specified index in the array.": [
        "Diversity"
    ],
    "Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.": [
        "Categorization",
        "Being_attached",
        "Quantity",
        "Cogitation",
        "Execution",
        "Undergo_change",
        "Being_obligated",
        "Experiencer_obj",
        "Telling"
    ],
    "Removes the specified object from the array.": [
        "Diversity"
    ],
    "Sets the layout resource to create the drop down views.": [
        "Execution",
        "Change_position_on_a_scale",
        "Categorization",
        "Intentionally_create"
    ],
    "Sets the Resources.Theme against which drop-down views are inflated.": [
        "Execution",
        "Categorization",
        "Cause_expansion"
    ],
    "Control whether methods that change the list ( add ( T ), addAll ( java.util.Collection ), addAll ( java.lang.Object -LSB- -RSB- ), insert ( T, int ), remove ( T ), clear ( ), sort ( java.util.Comparator ) ) automatically call notifyDataSetChanged ( ).": [
        "Control",
        "Execution",
        "Removing",
        "Execution",
        "Undergo_change",
        "Obviousness"
    ],
    "Sorts the content of this adapter using the specified comparator.": [
        "Using"
    ],
    "This constructor will result in the underlying data collection being immutable, so methods such as clear ( ) will throw an exception.": [
        "Execution",
        "Execution",
        "Cause_motion",
        "Obviousness",
        "Causation"
    ],
    "The content of the array is obtained through Resources.getTextArray ( int ).": [
        "Diversity",
        "Getting"
    ],
    "It should only be set ( i.e., non-null if the values do not represent PII ( Personally Identifiable Information - sensitive data such as email addresses, credit card numbers, passwords, etc..": [
        "Sole_instance",
        "Information",
        "Health_response",
        "Contacting",
        "Quantity",
        "Origin",
        "Intentionally_create",
        "Communicate_categorization",
        "Intentionally_act",
        "Being_obligated"
    ],
    "For example, it's ok to return a list of month names, but not a list of usernames.": [
        "Instance",
        "Calendric_unit",
        "Execution"
    ],
    "A good rule of thumb is that if the adapter data comes from static resources, such data is not PII - see ViewStructure.setDataIsSensitive ( boolean ) for more info.": [
        "Observable_body_parts",
        "Part_orientational",
        "Relational_quantity",
        "Increment",
        "Execution",
        "Grasp",
        "Execution"
    ],
    "The context is used to create views from the resource passed to the constructor.": [
        "Categorization",
        "Intentionally_create",
        "Traversing",
        "Using"
    ],
    "This method is usually implemented by Adapter classes.": [
        "Execution",
        "Execute_plan"
    ],
    "You can either create a View manually or inflate it from an XML layout file.": [
        "Categorization",
        "Cause_expansion",
        "Capability",
        "Intentionally_create"
    ],
    "When the View is inflated, the parent View ( GridView, ListView ... ) will apply default layout parameters unless you use LayoutInflater.inflate ( int, android.view.ViewGroup, boolean ) to specify a root view and to prevent attachment to the root.": [
        "Temporal_collocation",
        "Categorization",
        "Kinship",
        "Terms_of_agreement",
        "Opinion",
        "Preventing",
        "Cause_expansion",
        "Attaching",
        "Using",
        "Using"
    ],
    "By default, drop-down views are inflated against the theme of the Context passed to the adapter's constructor.": [
        "Topic",
        "Categorization",
        "Traversing",
        "Cause_expansion"
    ],
    "If set to false, caller must manually call notifyDataSetChanged ( ) to have the changes reflected in the attached view.": [
        "Undergo_change",
        "Opinion",
        "Being_attached",
        "Artificiality",
        "Cogitation",
        "Intentionally_create",
        "Being_obligated",
        "Execution"
    ],
    "The default is true, and calling notifyDataSetChanged ( ) resets the flag to true.": [
        "Execution"
    ],
    "getDropDownView ( int, android.view.View, android.view.ViewGroup )": [],
    "getDropDownView ( int, View, ViewGroup )": [
        "Categorization"
    ],
    "getView -LRB- -RRB- is the main part of your adapter.": [
        "First_rank",
        "Part_whole"
    ],
    "It returns View that will be displayed as your list/grid/gallary / any view that use adapter item.": [
        "Perception_active",
        "Entity",
        "Execution",
        "Quantity",
        "Categorization",
        "Using"
    ],
    "It triggers when you scroll the view -LRB- list for example -RRB-.": [
        "Temporal_collocation",
        "Opinion",
        "Instance"
    ],
    "So the first thing you should do its to create your custom adapter.": [
        "Ordinal_numbers",
        "Custom",
        "Being_obligated",
        "Intentionally_create",
        "Intentionally_act"
    ],
    "You may extend it from BaseAdapter.": [
        "Likelihood",
        "Expansion"
    ],
    "Then you need to create some data to display -LRB- or pass it to adapter from out side - its better solution -RRB-.": [
        "Temporal_collocation",
        "Process_end",
        "Required_event",
        "Relational_quantity",
        "Desirability",
        "Locative_relation",
        "Intentionally_create",
        "Taking_sides"
    ],
    "After that override getView -LRB- -RRB- method and make sure to return your custom View there.": [
        "Execution",
        "Execution",
        "Custom",
        "Categorization",
        "Existence",
        "Verification"
    ],
    "In your case it should be a Layout with ImageView and TextView -LRB- and dont forget to fill them -RRB-.": [
        "Instance",
        "Filling",
        "Being_obligated",
        "Remembering_information"
    ],
    "You can learn more from:": [
        "Increment",
        "Education_teaching",
        "Capability"
    ],
    "in BaseAdapter you have getView function that is called by for an AdapterView i.e. ListView.": [
        "Execution"
    ],
    "you need to override getCount method of the BaseAdapter to return total number of views to diplay.": [
        "Execution",
        "Categorization",
        "Completeness",
        "Quantity",
        "Required_event",
        "Execution"
    ],
    "And in getView you get following things:": [
        "Relative_time",
        "Execution"
    ],
    "position:": [],
    "getView going to be called for each position every time it is displayed.": [
        "Frequency",
        "Execution",
        "Measure_duration",
        "Motion"
    ],
    "convertView": [],
    "As getView is call many times inflating a new view every time is expensive so list view provides you one of the previously created view to re-use.": [
        "Timespan",
        "Opinion",
        "Frequency",
        "Measure_duration",
        "Quantity",
        "Age",
        "Intentionally_create",
        "Time_vector",
        "Cardinal_numbers",
        "Cause_expansion",
        "Supply",
        "Expensiveness"
    ],
    "parent": [],
    "A reference to the parent view that this view will be a child of.": [
        "Kinship",
        "Kinship",
        "Opinion"
    ],
    "ArrayAdapter is a subclass of BaseAdapter which takes ArrayList -LRB- or array -RRB- in constructor.": [
        "Diversity",
        "Taking_time"
    ],
    "And overrides getCount for you.": [],
    "So all you need to implement is getView": [
        "Quantity",
        "Gizmo",
        "Required_event"
    ],
    "long list show incorrect list items on custom listview with images from android universal image loader \u00b7 Issue # 462 \u00b7 nostra13/Android-Universal-Image - Loader \u00b7 GitHub": [
        "Reasoning",
        "Custom",
        "Sensation",
        "Similarity",
        "Point_of_dispute",
        "Dimension",
        "Entity",
        "Correctness"
    ],
    "long list show incorrect list items on custom listview with images from android universal image loader": [
        "Reasoning",
        "Similarity",
        "Dimension",
        "Entity",
        "Correctness",
        "Sensation",
        "Custom"
    ],
    "I tried to display a custom list view that display custom list items with image and text lines.": [
        "Custom",
        "Opinion",
        "Entity",
        "Similarity",
        "Attempt"
    ],
    "I want two type of list items ( left align and right alined, just as message thread ).": [
        "Part_orientational",
        "Natural_features",
        "Direction",
        "Entity",
        "Cardinal_numbers",
        "Desiring"
    ],
    "I have used Android-Universal-Image-Loader to load web images.": [
        "Sensation",
        "Using"
    ],
    "bt when i load the list, it load wrong list items time to time.": [
        "Temporal_collocation",
        "Quantity",
        "Morality_evaluation",
        "Entity",
        "Measure_duration"
    ],
    "when i scroll fast it changed the alignment of list items time to time.": [
        "Temporal_collocation",
        "Entity",
        "Speed",
        "Measure_duration",
        "Undergo_change"
    ],
    "here u can see the one user ( a girl profile picture ) reply not in a right aligned all the time": [
        "Locative_relation",
        "People",
        "Physical_artworks",
        "Cardinal_numbers",
        "Correctness",
        "Capability",
        "Frequency",
        "Grasp",
        "Communication_response"
    ],
    "how to get solved this issue ?": [
        "Point_of_dispute",
        "Execution",
        "Resolve_problem"
    ],
    "The text was updated successfully, but these errors were encountered:": [
        "Becoming_aware"
    ],
    "You should check your holder here": [
        "Being_obligated",
        "Locative_relation",
        "Inspecting"
    ],
    "If the holder holds the view you want, you can reuse it.": [
        "Possession",
        "Opinion",
        "Containing",
        "Capability"
    ],
    "If not you should instantiate a new one.": [
        "Cardinal_numbers",
        "Age",
        "Being_obligated"
    ],
    "Hope this could help: )": [
        "Desiring",
        "Assistance",
        "Capability"
    ],
    "can u please explain how to do that ?": [
        "Intentionally_act",
        "Emotion_directed",
        "Capability"
    ],
    "It seems you have mistaken logic in your getView ( ).": [
        "Appearance"
    ],
    "Check what happens if convertView is not null.": [
        "Being_in_effect",
        "Event"
    ],
    "You should apply alignment in code in that case.": [
        "Instance",
        "Being_obligated",
        "Using"
    ],
    "I think that's a common mistake when using different layouts for rows but not implementing Adapter.getItemViewType ( ) and getViewTypeCount ( ) correctly.": [
        "Temporal_collocation",
        "Quarreling",
        "Similarity",
        "Opinion",
        "Execute_plan",
        "Using"
    ],
    "The system wasn't instructed that you have two different layouts and won't separate them out into pools and may give you back the wrong layout at times.": [
        "System",
        "Education_teaching",
        "Natural_features",
        "Observable_body_parts",
        "Timespan",
        "Similarity",
        "Locative_relation",
        "Morality_evaluation",
        "Cardinal_numbers",
        "Possession",
        "Likelihood",
        "Differentiation",
        "Giving"
    ],
    "Eventually you can ask for help on StackOverFlow - http://stackoverflow.com/": [
        "Time_vector",
        "Capability",
        "Assistance",
        "Execution"
    ],
    "iOS & Swift Learn iOS development with SwiftUI and UIKit": [
        "Event"
    ],
    "Android & Kotlin Learn Android development in Kotlin": [
        "Event"
    ],
    "Flutter Learn multi-platform development with Flutter": [
        "Event"
    ],
    "Browse the entire Android & Kotlin library": [
        "Buildings",
        "Ranked_expectation"
    ],
    "SwiftUI by Tutorials -- New Chapters !": [
        "Part_ordered_segments",
        "Age"
    ],
    "Your definitive guide to building fluid and declarative UI in Swift.Now fully updated in its third edition, with new content and fresh new app designs.Start reading for free -- today !": [
        "Degree",
        "Age",
        "Expensiveness",
        "Temporal_collocation",
        "Building",
        "Ordinal_numbers",
        "Age",
        "Reading"
    ],
    "Android ListView Tutorial with Kotlin": [],
    "Adapters: Servants of the ListView": [
        "People_by_vocation"
    ],
    "What Exactly is an Adapter ?": [
        "Frequency"
    ],
    "Defining the Layout of the ListView's Rows": [
        "Quarreling",
        "Communicate_categorization"
    ],
    "Where to Go From Here ?": [
        "Locative_relation",
        "Locative_relation",
        "Motion"
    ],
    "Android ListView Tutorial with Kotlin In this tutorial, you'll learn how to use Android's ListView to easily create scrollable lists, by creating a simple recipe list app using Kotlin.": [
        "Using",
        "Intentionally_create",
        "Intentionally_create",
        "Education_teaching",
        "Using"
    ],
    "Feb 21 2018 \u00b7 Article ( 25 mins ) \u00b7 Beginner": [
        "Activity_start"
    ],
    "Update Note: This tutorial is now up to date with the latest version of Android Studio version 3.0.1, and uses Kotlin for app development.": [
        "Temporal_collocation",
        "Food",
        "Relative_time",
        "Building_subparts",
        "Event",
        "Being_up_to_it",
        "Using"
    ],
    "Original tutorial by Odie Edo-Osagie.": [],
    "How many times have you needed an app to display a group of related items in a list ?": [
        "Timespan",
        "Entity",
        "Quantity",
        "Required_event",
        "Cognitive_connection",
        "Execution"
    ],
    "How about all the time.": [
        "Relational_quantity",
        "Frequency"
    ],
    ":] Displaying a specific list is essential to the function of almost any app that queries a set of data and returns a list of results, so many apps need to do this at one point or another.": [
        "Relational_quantity",
        "Execution",
        "Causation",
        "Locale",
        "Increment",
        "Quantity",
        "Execution",
        "Quantity",
        "Intentionally_act",
        "Cardinal_numbers",
        "Being_necessary",
        "Required_event",
        "Questioning"
    ],
    "For instance, maybe you have a chat app that queries a certain social platform's database to find your friends, and then want to display them in a list that lets you select which friends to connect with.": [
        "Instance",
        "Chatting",
        "Likelihood",
        "Social_event",
        "Personal_relationship",
        "Locating",
        "Cognitive_connection",
        "Choosing",
        "Questioning",
        "Temporal_collocation",
        "Desiring"
    ],
    "Any time you need to display a lot of data and make it easy to navigate, you've got a job for Android's ListView, which handily creates scrollable lists.": [
        "Being_obligated",
        "Quantity",
        "Measure_duration",
        "Difficulty",
        "Required_event",
        "Quantity",
        "Cause_to_start",
        "Execution",
        "Possession"
    ],
    "In recent years, ListView has been supplanted by RecyclerView.": [
        "Calendric_unit",
        "Relative_time"
    ],
    "Nevertheless, studying ListView still has it's benefits:": [
        "Frequency",
        "Education_teaching",
        "Continued_state_of_affairs"
    ],
    "You can gain insights into why RecyclerView works the way it does You may run into ListView in legacy code, and it's best to know how to work with it": [
        "Reason",
        "Being_employed",
        "Intentionally_act",
        "Likelihood",
        "Execution",
        "Desirability",
        "Working_on",
        "Awareness",
        "Getting",
        "Capability"
    ],
    "By working through this tutorial, you'll become familiar with ListView, and you'll do so by creating a recipe list app.": [
        "Becoming",
        "Resolve_problem",
        "Expertise",
        "Intentionally_act",
        "Intentionally_create"
    ],
    "How to construct and populate a ListView How to customize the layout How to style and beautify a ListView How to optimize a ListView's performance": [
        "Residence",
        "Hair_configuration",
        "Performing_arts",
        "Building"
    ],
    "You're welcome to up your game in the kitchen by learning the recipes too, but maybe wait until you've built the app, okay ?": [
        "Locative_relation",
        "Building_subparts",
        "Education_teaching",
        "Waiting",
        "Sufficiency",
        "Building"
    ],
    "Note: If you're new to Android Development or Kotlin, it's highly recommended that you start with Beginning Android Development with Kotlin to learn your way around the basic tools and concepts.": [
        "Becoming_aware",
        "Process_start",
        "Execution",
        "Being_necessary",
        "Cause_to_make_progress",
        "Gizmo",
        "Education_teaching",
        "Age",
        "Activity_start"
    ],
    "Getting Started To kick things off, start by downloading the materials for this tutorial ( you can find a link at the top or bottom of the page ) and open Android Studio 3.0.1 or greater.": [
        "Locative_relation",
        "Substance",
        "Contacting",
        "Building_subparts",
        "Cause_harm",
        "Secrecy_status",
        "Part_orientational",
        "Part_orientational",
        "Getting",
        "Temporal_subregion",
        "Locating",
        "Capability"
    ],
    "In the Welcome to Android Studio dialog, select Open an existing Android Studio project.": [
        "Discussion",
        "Building_subparts",
        "Project",
        "Existence"
    ],
    "In the following dialog, select the top-level directory of the starter project AllTheRecipes-Starter and click OK.": [
        "Relative_time",
        "Discussion",
        "Sounds",
        "Project",
        "Choosing"
    ],
    "Inside the imported project, you'll find some assets and resources that you'll use to create your app, such as strings, colors, XML layout files, and fonts.": [
        "Project",
        "Color",
        "Importing",
        "Relational_quantity",
        "Intentionally_create",
        "Using",
        "Locating"
    ],
    "Additionally, there's some boilerplate code modeling a Recipe and a bare bones MainActivity class.": [
        "Relational_quantity",
        "Wearing",
        "Emptying",
        "Existence"
    ],
    "You should see something like this:": [
        "Being_obligated",
        "Grasp"
    ],
    "Are you ready to get cracking on this list thing ?": [
        "Activity_ready_state",
        "Expertise",
        "Execution"
    ],
    "Add Your First ListView The first order of business is to add a ListView to MainActivity.": [
        "Ordinal_numbers",
        "Businesses",
        "Cause_change_of_position_on_a_scale"
    ],
    "As you may know, this is the file that describes the layout of MainActivity.": [
        "Likelihood",
        "Certainty"
    ],
    "Add a ListView to MainActivity by inserting the following code snippet inside the ConstraintLayout tag:": [
        "Relative_time",
        "Part_piece"
    ],
    "Open MainActivity and add an instance variable for your ListView with the following line:": [
        "Instance",
        "Relative_time"
    ],
    "Add the following snippet below the existing code inside the onCreate method:": [
        "Relative_time",
        "Part_piece",
        "Execution",
        "Existence"
    ],
    "Here's a breakdown of what's happening in there:": [
        "Locative_relation",
        "Existence",
        "Event"
    ],
    "This loads a list of Recipe objects from a JSON asset in the app.": [
        "Quantity"
    ],
    "Notice that the starter project contains a Recipe class that models and stores the information about the recipes that will be displayed.": [
        "Project",
        "Vehicle",
        "Information",
        "Inclusion",
        "Storing",
        "Becoming_aware"
    ],
    "This creates an array of strings that'll contain the text to be displayed in the ListView.": [
        "Diversity",
        "Creating",
        "Inclusion"
    ],
    "This populates the ListView's data source with the titles of the recipes loaded in section one.": [
        "Observable_body_parts",
        "Cardinal_numbers",
        "Source_of_getting",
        "Part_whole",
        "Adorning"
    ],
    "This creates and sets a simple adapter for the ListView.": [
        "Creating"
    ],
    "The ArrayAdapter takes in the current context, a layout file specifying what each row in the list should look like, and the data that will populate the list as arguments.": [
        "Quarreling",
        "Evidence",
        "Temporal_collocation",
        "Being_obligated",
        "Residence",
        "Scrutiny",
        "Removing"
    ],
    "Your ListView has all that it needs to function.": [
        "Quantity",
        "Required_event"
    ],
    "Build and run the project.": [
        "Project",
        "Execution"
    ],
    "Adapters: Servants of the ListView Your recipe app is starting to look functional, but not all that appetizing ... yet.": [
        "Being_operational",
        "Quantity",
        "People_by_vocation",
        "Process_start",
        "Scrutiny"
    ],
    "In the previous section, you successfully built a list of recipe titles.": [
        "Time_vector",
        "Observable_body_parts",
        "Part_whole",
        "Building"
    ],
    "It works, but it's nothing to get excited about.": [
        "Being_employed",
        "Relational_quantity",
        "Emotion_directed",
        "Execution"
    ],
    "What if you needed to show more than just the titles ?": [
        "Observable_body_parts",
        "Increment",
        "Reasoning",
        "Being_necessary"
    ],
    "More than just text ?": [
        "Increment"
    ],
    "Maybe even add some screen-licking worthy thumbnails ?": [
        "Relational_quantity"
    ],
    "For these cases, the simple ArrayAdapter you just used won't cut it.": [
        "Instance",
        "Using",
        "Removing"
    ],
    "You'll have to take matters into your own hands and write your own adapter.": [
        "Observable_body_parts",
        "Possession",
        "Have_as_requirement",
        "Being_obligated"
    ],
    "Well, you won't actually write your own adapter, per se ; you'll simply extend a regular adapter and make some tweaks.": [
        "Manipulation",
        "Relational_quantity",
        "Possession",
        "Expansion",
        "Causation"
    ],
    "An adapter loads the information to be displayed from a data source, such as an array or database query, and creates a view for each item.": [
        "Information",
        "Diversity",
        "Questioning",
        "Opinion",
        "Entity",
        "Source_of_getting",
        "Creating"
    ],
    "Then it inserts the views into the ListView.": [
        "Temporal_collocation",
        "Categorization"
    ],
    "Adapters not only exist for ListViews, but for other kinds of views as well ; ListView is a subclass of AdapterView, so you can populate it by binding it to an adapter.": [
        "Sole_instance",
        "Categorization",
        "Increment",
        "Existence",
        "Residence",
        "Capability",
        "Attaching"
    ],
    "The adapter acts as the middle man between the ListView and data source, or its provider.": [
        "Intentionally_act",
        "People",
        "Part_inner_outer",
        "Source_of_getting"
    ],
    "It works kind of like this: The ListView asks the adapter what it should display, and the adapter jumps into action:": [
        "Intentionally_act",
        "Being_employed",
        "Self_motion",
        "Being_obligated",
        "Execution"
    ],
    "It fetches the items to be displayed from the data source It decides how they should be displayed It passes this information on to the ListView In short, The ListView isn't very smart, but when given the right inputs it does a fine job.": [
        "Natural_features",
        "Temporal_collocation",
        "Part_orientational",
        "Being_obligated",
        "Entity",
        "Source_of_getting",
        "Being_obligated",
        "Degree",
        "Intentionally_act",
        "Desirability",
        "Bringing",
        "Dimension",
        "Information",
        "Mental_property",
        "Choosing",
        "Giving"
    ],
    "It fully relies on the adapter to tell it what to display and how to display it.": [
        "Reliance",
        "Degree",
        "Telling"
    ],
    "Building Adapters Okay, now that you've dabbled in theory, you can get on with building your very own adapter.": [
        "Buildings",
        "Temporal_collocation",
        "Desirability",
        "Degree",
        "Possession",
        "Building",
        "Execution",
        "Capability"
    ],
    "Create a new class by right-clicking on the com.raywenderlich.alltherecipes package and selecting New > Kotlin File/Class.": [
        "Age",
        "Execution",
        "Cause_to_start",
        "Age",
        "Choosing"
    ],
    "Name it RecipeAdapter and define it with the following:": [
        "Appointing",
        "Communicate_categorization"
    ],
    "You've made the skeleton of the adapter.": [
        "Causation"
    ],
    "It extends the BaseAdapter class, which requires several inherited methods you'll implement after taking care of one more detail.": [
        "Execution",
        "Gizmo",
        "Quantity",
        "Increment",
        "Cardinal_numbers",
        "Taking",
        "Have_as_requirement",
        "Expansion"
    ],
    "Update the RecipeAdapter class as follows:": [
        "Relative_time"
    ],
    "In here, you've added the properties that will be associated with the adapter and defined a primary constructor for RecipeAdapter.": [
        "Locative_relation",
        "First_rank",
        "Cognitive_connection",
        "Communicate_categorization",
        "Possession"
    ],
    "Your next step is to implement the adapter methods.": [
        "Gizmo",
        "Locative_relation",
        "Execution",
        "Intentionally_act"
    ],
    "Kick it off by placing the following code at the bottom of RecipeAdapter:": [
        "Relative_time",
        "Cause_harm",
        "Locative_relation",
        "Part_orientational"
    ],
    "getCount ( ) lets ListView know how many items to display, or in other words, it returns the size of your data source.": [
        "Make_possible_to_do",
        "Entity",
        "Simple_name",
        "Quantity",
        "Increment",
        "Execution",
        "Source_of_getting",
        "Awareness"
    ],
    "getItem ( ) returns an item to be placed in a given position from the data source, specifically, Recipe objects obtained from dataSource.": [
        "Entity",
        "Giving",
        "Source_of_getting",
        "Getting",
        "Execution"
    ],
    "This implements the getItemId ( ) method that defines a unique ID for each row in the list.": [
        "Gizmo",
        "Execution",
        "Quarreling",
        "Idiosyncrasy",
        "Categorization"
    ],
    "For simplicity, you just use the position of the item as its ID.": [
        "Entity",
        "Using"
    ],
    "Finally, getView ( ) creates a view to be used as a row in the list.": [
        "Opinion",
        "Time_vector",
        "Creating",
        "Quarreling",
        "Using"
    ],
    "Here you define what information shows and where it sits within the ListView.": [
        "Locative_relation",
        "Information",
        "Locative_relation",
        "Being_located",
        "Evidence",
        "Communicate_categorization"
    ],
    "You also inflate a custom view from the XML layout defined in res/layout/list_item_recipe.xml -- more on this in the next section.": [
        "Custom",
        "Perception_active",
        "Part_whole",
        "Cause_expansion",
        "Increment",
        "Categorization",
        "Locative_relation"
    ],
    "Defining the Layout of the ListView's Rows You probably noticed that the starter project comes with the file res/layout/list_item_recipe.xml that describes how each row in the ListView should look and be laid out.": [
        "Quarreling",
        "Project",
        "Likelihood",
        "Locative_relation",
        "Execution",
        "Quarreling",
        "Being_obligated",
        "Scrutiny",
        "Becoming_aware",
        "Communicate_categorization"
    ],
    "Below is an image that shows the layout of the row view and its elements:": [
        "Similarity",
        "Quarreling",
        "Opinion",
        "Ingredients",
        "Evidence"
    ],
    "Your task is to populate each element of the row view with the relevant recipe data, hence, you'll define what text goes in the `` title'' element, the `` subtitle'' element and so on.": [
        "Quarreling",
        "Being_obligated",
        "Opinion",
        "Time_vector",
        "Residence",
        "Ingredients",
        "Communicate_categorization",
        "Becoming"
    ],
    "In the getView ( ) method, add the following code snippet just before the return statement:": [
        "Execution",
        "Relative_time",
        "Execution",
        "Part_piece"
    ],
    "This obtains references to each of the elements ( or subviews ) of the row view, specifically the title, subtitle, detail and thumbnail.": [
        "Ingredients",
        "Quarreling",
        "Accoutrements",
        "Opinion",
        "Getting"
    ],
    "Now that you've got the references sorted out, you need to populate each element with relevant data.": [
        "Temporal_collocation",
        "Ingredients",
        "Required_event",
        "Differentiation",
        "Locative_relation",
        "Residence",
        "Possession"
    ],
    "To do this, add the following code snippet under the previous one but before the return statement:": [
        "Relative_time",
        "Time_vector",
        "Cardinal_numbers",
        "Execution",
        "Intentionally_act",
        "Part_piece",
        "Cause_change_of_position_on_a_scale"
    ],
    "Here's what you're doing in the above snippet:": [
        "Locative_relation",
        "Part_piece",
        "Intentionally_act"
    ],
    "Getting the corresponding recipe for the current row.": [
        "Quarreling",
        "Temporal_collocation",
        "Getting"
    ],
    "Updating the row view's text views so they are displaying the recipe.": [
        "Quarreling",
        "Categorization",
        "Categorization"
    ],
    "Making use of the open-source Picasso library for asynchronous image loading -- it helps you download the thumbnail images on a separate thread instead of the main thread.": [
        "Buildings",
        "Similarity",
        "Sensation",
        "Becoming_separated",
        "First_rank",
        "Causation",
        "Assistance"
    ],
    "You're also assigning a temporary placeholder for the ImageView to handle slow loading of images.": [
        "Sensation",
        "Taking_time",
        "Resolve_problem"
    ],
    "Note: You should never perform long-running tasks on the main thread.": [
        "Becoming_aware",
        "Being_obligated",
        "Being_obligated",
        "First_rank",
        "Frequency",
        "Intentionally_act"
    ],
    "When you do, you expose yourself to the risk of blocking the UI, and that would make scrolling your lists a nightmare !": [
        "Temporal_collocation",
        "Risky_situation",
        "Eclipse",
        "Reveal_secret",
        "Intentionally_act",
        "Causation"
    ],
    "Now open up MainActivity so that you can get rid of the old adapter.": [
        "Temporal_collocation",
        "Locative_relation",
        "Age",
        "Execution",
        "Capability",
        "Secrecy_status"
    ],
    "In onCreate, replace everything below ( but not including ) this line:": [
        "Inclusion",
        "Take_place_of"
    ],
    "You just replaced the rather simple ArrayAdapter with your own RecipeAdapter to make the list more informative.": [
        "Increment",
        "Possession",
        "Causation",
        "Take_place_of"
    ],
    "Build and run and you should see something like this:": [
        "Execution",
        "Being_obligated",
        "Grasp"
    ],
    "Now you're cooking for real !": [
        "Temporal_collocation",
        "Apply_heat",
        "Existence"
    ],
    "Look at those recipes -- thumbnails and descriptions sure make a big difference.": [
        "Perception_active",
        "Communicate_categorization",
        "Similarity",
        "Size",
        "Causation"
    ],
    "Styling Now that you've got the functionality under wraps, it's time to turn your attention to the finer things in life.": [
        "Hair_configuration",
        "Temporal_collocation",
        "Clothing",
        "Attention",
        "Desirability",
        "Measure_duration",
        "Cause_change",
        "Possession"
    ],
    "In this case, your finer things are elements that make your app more snazzy, such as compelling colors and fancy fonts.": [
        "Instance",
        "Color",
        "Desiring",
        "Desirability",
        "Increment",
        "Causation",
        "Ingredients"
    ],
    "Look for some custom fonts under res/font.": [
        "Perception_active",
        "Relational_quantity",
        "Custom"
    ],
    "You'll find three font files: josefinsans_bold.": [
        "Cardinal_numbers",
        "Self_motion",
        "Locating"
    ],
    "Open RecipeAdapter.java and go to the getView ( ) method.": [
        "Execution",
        "Becoming"
    ],
    "Just before the return statement, add the following:": [
        "Execution"
    ],
    "In here, you're assigning a custom font to each of the text views in your rows' layout.": [
        "Locative_relation",
        "Custom",
        "Quarreling",
        "Categorization"
    ],
    "You access the font by creating a Typeface, which specifies the intrinsic style and typeface of the font, by using ResourcesCompat.getFont ( ).": [
        "Hair_configuration",
        "Using",
        "Intentionally_create"
    ],
    "Next you set the typeface for the corresponding TextView to set the custom font.": [
        "Custom",
        "Intentionally_create"
    ],
    "Your result should look like this:": [
        "Causation",
        "Being_obligated",
        "Scrutiny"
    ],
    "On to sprucing up the colors, which are defined in res/values/colors.xml.": [
        "Locative_relation",
        "Color",
        "Categorization"
    ],
    "Open up RecipeAdapter and add the following below the inflater declaration:": [
        "Relative_time"
    ],
    "You've created a hash map that pairs a recipe detail label with the resource id of a color defined in colors.xml.": [
        "Stimulus_focus",
        "Labeling",
        "Adorning",
        "Categorization",
        "Intentionally_create"
    ],
    "Now go to the getView ( ) method, and add this line just above the return statement:": [
        "Temporal_collocation",
        "Execution",
        "Execution",
        "Becoming"
    ],
    "Working from the inside out:": [
        "Working_on",
        "Locative_relation",
        "Locative_relation"
    ],
    "Here you get the resource id for the color that corresponds to the recipe.label from the LABEL_COLORS hash map.": [
        "Locative_relation",
        "Stimulus_focus",
        "Execution"
    ],
    "getColor ( ) is used inside of ContextCompat to retrieve the hex color associated with that resource id.": [
        "Stimulus_focus",
        "Cognitive_connection",
        "Using"
    ],
    "Then you set the color property of the detailTextView to the hex color.": [
        "Temporal_collocation",
        "Stimulus_focus",
        "Possession",
        "Intentionally_create"
    ],
    "Your app should look like this:": [
        "Being_obligated",
        "Scrutiny"
    ],
    "User Interaction Now your list has function and style.": [
        "Hair_configuration",
        "Temporal_collocation",
        "Inclusion"
    ],
    "What's it missing now ?": [
        "Temporal_collocation",
        "Success_or_failure"
    ],
    "Try tapping or long pressing it.": [
        "Attempt",
        "Attaching",
        "Attempt_suasion",
        "Desiring"
    ],
    "There's not much to thrill and delight the user.": [
        "Relational_quantity",
        "Experiencer_focus",
        "Experiencer_obj",
        "Existence"
    ],
    "What could you add here to make the user experience that much more satisfying ?": [
        "Locative_relation",
        "Relational_quantity",
        "Increment",
        "Capability",
        "Stimulus_focus",
        "Expertise",
        "Causation"
    ],
    "Well, when a user taps on a row, don't you think it'd be nice to show the full recipe, complete with instructions ?": [
        "Temporal_collocation",
        "Quarreling",
        "Intentionally_act",
        "Reasoning",
        "Fullness",
        "Education_teaching",
        "Using",
        "Opinion",
        "Process_completed_state",
        "Stimulus_focus"
    ],
    "You'll make use of AdapterView.onItemClickListener and a brand spanking new activity to do this with elegance.": [
        "Age",
        "Intentionally_act",
        "Intentionally_act",
        "Cause_harm",
        "Causation"
    ],
    "Make a New Activity This activity will display when the user selects an item in the list.": [
        "Intentionally_act",
        "Temporal_collocation",
        "Entity",
        "Age",
        "Choosing",
        "Intentionally_act",
        "Causation"
    ],
    "Right-click on com.raywenderlich.alltherecipes then select New > Activity > EmptyActivity to bring up a dialog.": [
        "Discussion",
        "Age",
        "Intentionally_act",
        "Temporal_collocation",
        "Causation",
        "Locative_relation",
        "Choosing"
    ],
    "Fill in the Activity Name with RecipeDetailActivity.": [
        "Abounding_with",
        "Intentionally_act"
    ],
    "Leave the automatically populated fields as-is.": [
        "Fields",
        "Departing"
    ],
    "Check that your settings match these:": [
        "Evaluative_comparison"
    ],
    "Open res/layout/activity_recipe_detail.xml and add a WebView by inserting the following snippet inside the ConstraintLayout tag:": [
        "Relative_time",
        "Part_piece"
    ],
    "WebView will be used to load and display a webpage containing the selected recipe's instructions.": [
        "Education_teaching",
        "Choosing",
        "Inclusion",
        "Using"
    ],
    "Open up RecipeDetailActivity, and add a WebView reference as a property by adding the following line within the class definition:": [
        "Locative_relation",
        "Possession",
        "Communicate_categorization",
        "Relative_time"
    ],
    "Add the following below the webView property declaration:": [
        "Relative_time",
        "Possession"
    ],
    "This adds a companion object method to return an Intent for starting the detail activity, and sets up title and url extras in the Intent.": [
        "Accoutrements",
        "Personal_relationship",
        "Intentionally_act",
        "Process_start",
        "Execution",
        "Execution",
        "Intentionally_create"
    ],
    "Head back to MainActivity and add the following to the bottom of the onCreate method:": [
        "Execution",
        "Observable_body_parts",
        "Execution",
        "Part_orientational",
        "Relative_time"
    ],
    "Note: Before you dive into the explanation, make sure you understand the four arguments that are provided by onItemClick ; they work as follows:": [
        "Cardinal_numbers",
        "Working_on",
        "Evidence",
        "Supply",
        "Relative_time",
        "Grasp",
        "Verification"
    ],
    "parent: The view where the selection happens -- in your case, it's the ListView": [
        "Kinship",
        "Locative_relation",
        "Instance",
        "Opinion",
        "Event"
    ],
    "view: The selected view ( row ) within the ListView": [
        "Opinion",
        "Quarreling",
        "Choosing"
    ],
    "position: The position of the row in the adapter": [
        "Quarreling"
    ],
    "id: The row id of the selected item": [
        "Quarreling",
        "Entity",
        "Choosing"
    ],
    "You're setting the OnItemClickListener object for the ListView, and inside doing the following:": [
        "Intentionally_act"
    ],
    "Get the recipe object for the row that was clicked Create an intent to navigate to your RecipeDetailActivity to display more information Launch the RecipeDetailActivity by passing the intent object you just created to the startActivity ( ) method.": [
        "Quarreling",
        "Impact",
        "Information",
        "Execution",
        "Shoot_projectiles",
        "Execution",
        "Traversing",
        "Intentionally_create",
        "Increment",
        "Cause_to_start"
    ],
    "Note: To learn more about intents, check out the awesome Android Intents Tutorial.": [
        "Becoming_aware",
        "Education_teaching",
        "Increment"
    ],
    "Once again, open RecipeDetailActivity and add the following snippet at the bottom of the onCreate method:": [
        "Part_piece",
        "Execution",
        "Secrecy_status",
        "Relative_time",
        "Part_orientational",
        "Frequency"
    ],
    "You can see a few things happening here:": [
        "Quantity",
        "Locative_relation",
        "Event",
        "Grasp",
        "Capability"
    ],
    "You retrieve the recipe data from the Intent passed from MainActivity by using the extras property.": [
        "Possession",
        "Using",
        "Traversing"
    ],
    "You set the title on the action bar of this activity to the recipe title.": [
        "Intentionally_act",
        "Intentionally_act",
        "Observable_body_parts",
        "Buildings",
        "Intentionally_create"
    ],
    "You initialize webView to the web view defined in the XML layout.": [
        "Opinion",
        "Categorization"
    ],
    "You load the recipe web page by calling loadUrl ( ) with the corresponding recipe's URL on the web view object.": [
        "Contacting",
        "Opinion",
        "Execution"
    ],
    "When you click on the first item in the list, you should see something like this:": [
        "Temporal_collocation",
        "Entity",
        "Ordinal_numbers",
        "Being_obligated",
        "Sounds",
        "Grasp"
    ],
    "Optimizing Performance Whenever you scroll the ListView, its adapter's getView ( ) method is called in order to create a row and display it on screen.": [
        "Performing_arts",
        "Execution",
        "Quarreling",
        "Execution",
        "Intentionally_create"
    ],
    "Now, if you look in your getView ( ) method, you'll notice that each time this method is called, it performs a lookup for each of the row view's elements by using a call to the findViewById ( ) method.": [
        "Temporal_collocation",
        "Execution",
        "Quarreling",
        "Ingredients",
        "Categorization",
        "Measure_duration",
        "Execution",
        "Using",
        "Intentionally_act",
        "Scrutiny",
        "Execution",
        "Becoming_aware"
    ],
    "These repeated calls can seriously harm the ListView's performance, especially if your app is running on limited resources and/or you have a very large list.": [
        "Importance",
        "Performing_arts",
        "Contacting",
        "Frequency",
        "Degree",
        "Dimension",
        "Execution",
        "Capability"
    ],
    "You can avoid this problem by using the View Holder Pattern.": [
        "Predicament",
        "Pattern",
        "Capability",
        "Categorization",
        "Preventing",
        "Using"
    ],
    "Implement a ViewHolder Pattern To implement the ViewHolder pattern, open RecipeAdapter and add the following after the getView ( ) method definition:": [
        "Gizmo",
        "Pattern",
        "Gizmo",
        "Pattern",
        "Cause_change_of_position_on_a_scale",
        "Execution",
        "Communicate_categorization",
        "Secrecy_status",
        "Relative_time"
    ],
    "As you can see, you create a class to hold your exact set of component views for each row view.": [
        "Correctness",
        "Ingredients",
        "Quarreling",
        "Opinion",
        "Capability",
        "Categorization",
        "Execution",
        "Containing",
        "Intentionally_create",
        "Perception_experience"
    ],
    "The ViewHolder class stores each of the row's subviews, and in turn is stored inside the tag field of the layout.": [
        "Operate_vehicle",
        "Temporal_subregion",
        "Fields",
        "Storing",
        "Storing"
    ],
    "This means you can immediately access the row's subviews without the need to look them up repeatedly.": [
        "Operate_vehicle",
        "Capability",
        "Needing",
        "Scrutiny",
        "Evidence"
    ],
    "Now, in getView ( ), replace everything above ( but NOT including ) this line:": [
        "Temporal_collocation",
        "Take_place_of",
        "Inclusion"
    ],
    "Here's the play-by-play of what's happening above.": [
        "Locative_relation",
        "Event"
    ],
    "Check if the view already exists.": [
        "Opinion",
        "Time_vector",
        "Existence"
    ],
    "If it does, there's no need to inflate from the layout and call findViewById ( ) again.": [
        "Quantity",
        "Execution",
        "Intentionally_act",
        "Cause_expansion",
        "Needing",
        "Existence"
    ],
    "If the view doesn't exist, you inflate the custom row layout from your XML.": [
        "Opinion",
        "Custom",
        "Quarreling",
        "Intentionally_act",
        "Existence",
        "Cause_expansion"
    ],
    "Create a new ViewHolder with subviews initialized by using findViewById ( ).": [
        "Age",
        "Using",
        "Cause_to_start"
    ],
    "Hang onto this holder for future recycling by using setTag ( ) to set the tag property of the view that the holder belongs to.": [
        "Temporal_collocation",
        "Using",
        "Possession",
        "Opinion",
        "Possession",
        "Intentionally_create"
    ],
    "Skip all the expensive inflation steps and just get the holder you already made.": [
        "Self_motion",
        "Quantity",
        "Intentionally_act",
        "Expensiveness",
        "Time_vector",
        "Causation",
        "Execution"
    ],
    "Get relevant subviews of the row view.": [
        "Quarreling",
        "Opinion",
        "Execution"
    ],
    "Finally, update the return statement of getView ( ) with the line below.": [
        "Execution",
        "Time_vector"
    ],
    "If your app was running a bit slow on the last build, you should see it running smoother now.": [
        "Relative_time",
        "Quantity",
        "Building",
        "Being_obligated",
        "Grasp",
        "Taking_time",
        "Execution",
        "Temporal_collocation"
    ],
    ":] Where to Go From Here ?": [
        "Locative_relation",
        "Locative_relation",
        "Motion"
    ],
    "You can download the completed project using the download button at the top or bottom of this tutorial.": [
        "Project",
        "Clothing_parts",
        "Activity_finish",
        "Using",
        "Part_orientational",
        "Part_orientational",
        "Capability"
    ],
    "When you develop for Android, AdapterViews are a common concept that you'll run into over and over again.": [
        "Temporal_collocation",
        "Cause_to_make_progress",
        "Execution"
    ],
    "If you want to know more about the inner workings of the ListView and performance details, check out this article on performance tips for Android ListViews.": [
        "Performing_arts",
        "Part_orientational",
        "Part_inner_outer",
        "Increment",
        "Awareness",
        "Desiring"
    ],
    "There are other ways to create lists, such as subclassing a ListActivity and ListFragment.": [
        "Increment",
        "Execution",
        "Creating",
        "Existence"
    ],
    "Both of these links take you to the official Android developer site so that you can learn more about how they work.": [
        "Make_cognitive_connection",
        "Execution",
        "Locale_by_use",
        "Working_on",
        "Quantity",
        "Increment",
        "Have_as_requirement",
        "Education_teaching",
        "Capability"
    ],
    "Both of these alternatives impose the restriction that the respective activity or fragment can only contain a ListView as its child view.": [
        "Execution",
        "Intentionally_act",
        "Part_piece",
        "Sole_instance",
        "Kinship",
        "Opinion",
        "Quantity",
        "Capability",
        "Inclusion"
    ],
    "Suppose you wanted an activity that had a ListView as well as some other views, it would be impossible with a ListActivity.": [
        "Intentionally_act",
        "Being_obligated",
        "Relational_quantity",
        "Opinion",
        "Increment",
        "Categorization",
        "Likelihood",
        "Desiring"
    ],
    "The same goes for the ListFragment scenario.": [
        "Identicality",
        "Becoming"
    ],
    "And be sure to check out our RecyclerView and Intermediate RecyclerView tutorials to see the more modern way to show lists on Android.": [
        "Temporal_collocation",
        "Reasoning",
        "Increment",
        "Execution",
        "Inspecting",
        "Grasp",
        "Likelihood"
    ],
    "Unlike ListView, RecyclerView enforces the use of the ViewHolder pattern and is much more flexible in terms of layout and animation.": [
        "Relational_quantity",
        "Simple_name",
        "Enforcing",
        "Pattern",
        "Increment"
    ],
    "Feel free to share your feedback, findings or ask any questions in the comments below or in the forums.": [
        "Perception_active",
        "Expensiveness",
        "Locating",
        "Questioning",
        "Quantity",
        "Execution"
    ],
    "Talk to you soon !": [
        "Chatting"
    ],
    "User Interface Android & Kotlin Tutorials": [],
    "raywenderlich.com Weekly The raywenderlich.com newsletter is the easiest way to stay up-to-date on everything you need to know as a mobile developer.": [
        "Bringing",
        "Required_event",
        "Execution",
        "Awareness",
        "State_continue"
    ],
    "Get a weekly digest of our tutorials and courses, and receive a free in-depth email course as a bonus !": [
        "Frequency",
        "Expensiveness",
        "Contacting",
        "Receiving",
        "Execution"
    ],
    "Add a rating for this content": [],
    "Sign in to add a rating": [
        "Sign_agreement",
        "Cause_change_of_position_on_a_scale"
    ],
    "The mobile development world moves quickly -- and you don't want to get left behind.": [
        "Bringing",
        "Event",
        "Political_locales",
        "Observable_body_parts",
        "Intentionally_act",
        "Direction",
        "Cause_motion",
        "Speed",
        "Desiring",
        "Execution"
    ],
    "Learn iOS, Swift, Android, Kotlin, Dart, Flutter and more with the largest and highest-quality catalog of video courses and books on the internet.": [
        "Increment"
    ],
    "Mark Complete ( All Chapters ) Clear Progress ( All Chapters )": [
        "Progress",
        "Part_ordered_segments",
        "Activity_finish",
        "Quantity"
    ],
    "New Fernando Cejas -- Podcast S11 E08 iOS & Swift Podcast Mar 17 2021 \u00b7 Article ( 1 min )": [
        "Age"
    ],
    "Join Nishant and Dru at the bar as we share drinks with Fernando Cejas over his interview in ` Living By The Code.'": [
        "Cause_to_amalgamate",
        "Buildings",
        "Residence"
    ],
    "Mar 17 2021 \u00b7 Article ( 1 min )": [],
    "New SwiftUI by Tutorials, Third Edition -- Fully Updated with New Chapters !": [
        "Ordinal_numbers",
        "Degree",
        "Part_ordered_segments",
        "Age"
    ],
    "iOS & Swift Announcements Mar 17 2021 \u00b7 Article ( 15 mins )": [
        "Cardinal_numbers"
    ],
    "We're thrilled to announce the latest edition of SwiftUI by Tutorials -- completely reorganized, with new apps and new chapters to help you build your best UI ever !": [
        "Relative_time",
        "Age",
        "Part_ordered_segments",
        "Desirability",
        "Building",
        "Assistance",
        "Emotion_directed"
    ],
    "Mar 17 2021 \u00b7 Article ( 15 mins )": [
        "Cardinal_numbers"
    ],
    "New Custom Thumbnails and Previews with Quick Look on iOS iOS & Swift Other Core APIs Mar 17 2021 \u00b7 Article ( 25 mins )": [
        "Custom",
        "Gizmo",
        "Age",
        "Increment",
        "Perception_active"
    ],
    "Learn how to build your own Quick Look preview and thumbnail extensions to display custom file types in iOS.": [
        "Make_agreement_on_action",
        "Custom",
        "Self_motion",
        "Possession",
        "Text_creation",
        "Building",
        "Scrutiny"
    ],
    "Mar 17 2021 \u00b7 Article ( 25 mins )": [],
    "New How to Create a 2D Snake Game in Flutter Flutter Graphics & Animation Mar 16 2021 \u00b7 Article ( 25 mins )": [
        "Age",
        "Motion",
        "Cause_to_start"
    ],
    "Learn how to use Flutter as a simple game engine by creating a classic 2D Snake Game.": [
        "Using",
        "Motion",
        "Intentionally_create"
    ],
    "Get to know the basics of 2D game graphics and how to control objects.": [
        "Control",
        "Awareness",
        "Required_event"
    ],
    "Mar 16 2021 \u00b7 Article ( 25 mins )": [],
    "Joe Howard Joe's path to software development began in the fields of computational physics and systems engineering.": [
        "Gizmo",
        "Event",
        "Fields",
        "Activity_start"
    ],
    "He has been a mobile ... Author": [
        "Bringing"
    ],
    "Odie Edo-Osagie Odie recently completed an undergraduate degree in Software Engineering and is a postgrad student at the University of East ... Author": [
        "Quantity",
        "Education_teaching",
        "Locale_by_use",
        "Direction",
        "Temporal_collocation",
        "Activity_finish"
    ],
    "In this tutorial, you'll learn how to use Android's ListView to easily create scrollable lists, by creating a simple recipe list app using Kotlin.": [
        "Using",
        "Intentionally_create",
        "Intentionally_create",
        "Education_teaching",
        "Using"
    ],
    "Jump to SectionTable of ContentsRow View RecyclingUsing a Basic ArrayAdapterUsing a Custom ArrayAdapterDefining the ModelCreating the View TemplateDefining the AdapterAttaching the Adapter to a ListViewPopulating Data into ListViewConstructing Models from External SourceAttaching Event Handlers Within AdapterImproving Performance with the ViewHolder PatternBeyond ViewHoldersReferencesUsing an ArrayAdapter with ListViewEdit PagePage HistoryIn Android development, any time we want to show a vertical list of scrollable items we will use a ListView which has data populated using an Adapter.": [
        "Change_position_on_a_scale",
        "Being_necessary",
        "Custom",
        "Categorization",
        "Vehicle",
        "Performing_arts",
        "Entity",
        "Event",
        "Event",
        "Quantity",
        "Residence",
        "Using",
        "Possession",
        "Using",
        "Reasoning",
        "Possession",
        "Measure_duration"
    ],
    "The simplest adapter to use is called an ArrayAdapter because the adapter converts an ArrayList of objects into View items loaded into the ListView container.": [
        "Entity",
        "Containers",
        "Cause_change",
        "Categorization",
        "Execution"
    ],
    "The ArrayAdapter fits in between an ArrayList ( data source ) and the ListView ( visual representation ) and configures two aspects:": [
        "Communicate_categorization",
        "Distinctiveness",
        "Source_of_getting",
        "Cardinal_numbers",
        "Suitability"
    ],
    "Which array to use as the data source for the list How to convert any given item in the array into a corresponding View object": [
        "Quantity",
        "Entity",
        "Categorization",
        "Source_of_getting",
        "Giving",
        "Diversity",
        "Cause_change",
        "Using"
    ],
    "Note as shown above that there are other data sources besides an ArrayAdapter such as the CursorAdapter which instead binds directly to a result set from a Local SQLite Database.": [
        "Causation",
        "Political_locales",
        "Source_of_getting",
        "Evidence",
        "Increment",
        "Intentionally_create",
        "Existence",
        "Attaching"
    ],
    "Row View Recycling When using an adapter and a ListView, we need to make sure to understand how view recycling works.": [
        "Operate_vehicle",
        "Categorization",
        "Opinion",
        "Grasp",
        "Temporal_collocation",
        "Verification",
        "Required_event",
        "Using"
    ],
    "When your ListView is connected to an adapter, the adapter will instantiate rows until the ListView has been fully populated with enough items to fill the full height of the screen.": [
        "Quarreling",
        "Degree",
        "Entity",
        "Fullness",
        "Dimension",
        "Temporal_collocation",
        "Filling",
        "Cognitive_connection",
        "Sufficiency",
        "Residence"
    ],
    "At that point, no additional row items are created in memory.": [
        "Locale",
        "Quantity",
        "Operate_vehicle",
        "Entity",
        "Remembering_experience",
        "Increment",
        "Intentionally_create"
    ],
    "Instead, as the user scrolls through the list, items that leave the screen are kept in memory for later use and then every new row that enters the screen reuses an older row kept around in memory.": [
        "Entity",
        "Frequency",
        "Time_vector",
        "Age",
        "Age",
        "Operate_vehicle",
        "Departing",
        "Locative_relation",
        "Remembering_experience",
        "Execution",
        "Activity_ongoing",
        "Temporal_collocation"
    ],
    "In this way, even for a list of 1000 items, only ~ 7 item view rows are ever instantiated or held in memory.": [
        "Entity",
        "Sole_instance",
        "Entity",
        "Quarreling",
        "Remembering_experience",
        "Cardinal_numbers",
        "Categorization",
        "Containing"
    ],
    "Here is a visual overview of recycling:": [
        "Locative_relation"
    ],
    "Here is another related diagram on view recycling:": [
        "Locative_relation",
        "Increment",
        "Change_position_on_a_scale",
        "Opinion",
        "Cognitive_connection"
    ],
    "Refer to this ListView guide for another look at how this works to optimize the performance of your lists.": [
        "Scrutiny",
        "Performing_arts",
        "Increment",
        "Being_employed"
    ],
    "Be sure to check out this Udacity video on view recycling as well.": [
        "Locative_relation",
        "Opinion",
        "Inspecting",
        "Likelihood"
    ],
    "If you wish to evaluate how fast your ListView is rendering, check out the Profiling GPU tool, which provides a graphical way of visualizing the layout performance.": [
        "Performing_arts",
        "Speed",
        "Gizmo",
        "Supply",
        "Causation",
        "Assessing",
        "Desiring"
    ],
    "Using a Basic ArrayAdapter To use a basic ArrayAdapter, you just need to initialize the adapter and attach the adapter to the ListView.": [
        "Being_necessary",
        "Being_necessary",
        "Required_event",
        "Being_attached",
        "Using",
        "Using"
    ],
    "First, we initialize the adapter:": [
        "Ordinal_numbers"
    ],
    "The ArrayAdapter requires a declaration of the type of the item to be converted to a View ( a String in this case ) and then accepts three arguments: context ( activity instance ), XML item layout, and the array of data.": [
        "Entity",
        "Categorization",
        "Instance",
        "Temporal_collocation",
        "Evidence",
        "Intentionally_act",
        "Instance",
        "Diversity",
        "Cardinal_numbers",
        "Have_as_requirement",
        "Receiving",
        "Cause_change"
    ],
    "Note that we've chosen simple_list_item_1.xml which is a simple TextView as the layout for each of the items.": [
        "Entity",
        "Choosing"
    ],
    "Now, we just need to connect this adapter to a ListView to be populated:": [
        "Temporal_collocation",
        "Required_event",
        "Cognitive_connection",
        "Residence"
    ],
    "By default, this will now convert each item in the data array into a view by calling toString on the item and then assigning the result as the value of a TextView ( simple_list_item_1.xml ) that is displayed as the row for that data item.": [
        "Temporal_collocation",
        "Entity",
        "Opinion",
        "Causation",
        "Diversity",
        "Execution",
        "Quarreling",
        "Cause_change",
        "Temporal_collocation"
    ],
    "If the app requires a more complex translation between item and View then we need to create a custom ArrayAdapter instead.": [
        "Translating",
        "Entity",
        "Categorization",
        "Custom",
        "Increment",
        "Required_event",
        "Have_as_requirement",
        "Intentionally_create",
        "Temporal_collocation"
    ],
    "Using a Custom ArrayAdapter When we want to display a series of items from a list using a custom representation of the items, we need to use our own custom XML layout for each item.": [
        "Custom",
        "Temporal_collocation",
        "Custom",
        "Entity",
        "Entity",
        "Possession",
        "Using",
        "Communicate_categorization",
        "Using",
        "Using",
        "Required_event",
        "Sequence",
        "Desiring"
    ],
    "To do this, we need to create our own custom ArrayAdapter class.": [
        "Custom",
        "Intentionally_act",
        "Required_event",
        "Possession",
        "Intentionally_create"
    ],
    "See this repo for the source code.": [
        "Source_of_getting",
        "Grasp"
    ],
    "First, we often need to define a model to represent the data within each list item.": [
        "Ordinal_numbers",
        "Vehicle",
        "Entity",
        "Frequency",
        "Required_event",
        "Communicate_categorization",
        "Communicate_categorization"
    ],
    "Defining the Model Given a Java object that has certain fields defined such as a User class:": [
        "Vehicle",
        "Fields",
        "Likelihood",
        "Communicate_categorization",
        "Categorization",
        "Inclusion",
        "Giving"
    ],
    "We can create a custom ListView of User objects by subclassing ArrayAdapter to describe how to translate the object into a view within that class and then using it like any other adapter.": [
        "Opinion",
        "Using",
        "Increment",
        "Capability",
        "Quantity",
        "Communicate_categorization",
        "Intentionally_create",
        "Categorization",
        "Temporal_collocation"
    ],
    "Creating the View Template Next, we need to create an XML layout that represents the view template for each item in res/layout/item _ user.xml:": [
        "Opinion",
        "Entity",
        "Categorization",
        "Intentionally_create",
        "Intentionally_create",
        "Communicate_categorization",
        "Required_event"
    ],
    "Defining the Adapter Next, we need to define the adapter to describe the process of converting the Java object to a View ( in the getView method ).": [
        "Execution",
        "Categorization",
        "Execution",
        "Required_event",
        "Communicate_categorization",
        "Communicate_categorization",
        "Cause_change",
        "Communicate_categorization"
    ],
    "The naive approach to this ( without any view caching ) looks like the following:": [
        "Opinion",
        "Mental_property",
        "Quantity",
        "Scrutiny",
        "Execution"
    ],
    "That adapter has a constructor and a getView ( ) method to describe the translation between the data item and the View to display.": [
        "Translating",
        "Entity",
        "Categorization",
        "Communicate_categorization",
        "Execution",
        "Inclusion"
    ],
    "getView ( ) is the method that returns the actual view used as a row within the ListView at a particular position.": [
        "Execution",
        "Opinion",
        "Actually_occurring_entity",
        "Idiosyncrasy",
        "Quarreling",
        "Using",
        "Execution"
    ],
    "Another method used is getItem ( ) which is already present in the ArrayAdapter class and its task is to simply get the data item associated with the specified position in the data set which is associated with that ArrayAdapter.": [
        "Entity",
        "Increment",
        "Being_obligated",
        "Execution",
        "Execution",
        "Using",
        "Time_vector",
        "Presence",
        "Cognitive_connection",
        "Execution"
    ],
    "Attaching the Adapter to a ListView Now, we can use that adapter in the Activity to display an array of items into the ListView:": [
        "Entity",
        "Temporal_collocation",
        "Capability",
        "Diversity",
        "Attaching",
        "Intentionally_act",
        "Using"
    ],
    "At this point, the ListView is now successfully bound to the users array data.": [
        "Locale",
        "Temporal_collocation",
        "Diversity",
        "Attaching"
    ],
    "Populating Data into ListView Once the adapter is attached, items will automatically be populated into the ListView based on the contents of the array.": [
        "Entity",
        "Diversity",
        "Being_attached",
        "Frequency",
        "Residence"
    ],
    "You can add new items to the adapter at any time with:": [
        "Entity",
        "Measure_duration",
        "Age",
        "Quantity",
        "Capability"
    ],
    "which will append the new items to the list.": [
        "Entity",
        "Age",
        "Attaching"
    ],
    "You can also clear the entire list at any time with:": [
        "Verdict",
        "Measure_duration",
        "Ranked_expectation",
        "Quantity",
        "Capability"
    ],
    "Using the adapter now, you can add, remove and modify users and the items within the ListView will automatically reflect any changes.": [
        "Temporal_collocation",
        "Quantity",
        "Using",
        "Capability",
        "Entity",
        "Cause_change",
        "Cogitation",
        "Removing",
        "Undergo_change"
    ],
    "Constructing Models from External Source In order to create model instances, you will likely be loading the data from an external source ( i.e database or REST JSON API ), so you should create two additional methods in each model to allow for construction of a list or a singular item if the data is coming from a JSON API:": [
        "Vehicle",
        "Execution",
        "Vehicle",
        "Entity",
        "Source_of_getting",
        "Instance",
        "Source_of_getting",
        "Stimulus_focus",
        "Intentionally_create",
        "Likelihood",
        "Being_obligated",
        "Increment",
        "Cardinal_numbers",
        "Building",
        "Building",
        "Execution",
        "Grant_permission"
    ],
    "For more details, check out our guide on converting JSON into a model.": [
        "Vehicle",
        "Cause_change",
        "Increment"
    ],
    "If you are not using a JSON source for your data, you can safely skip this step.": [
        "Intentionally_act",
        "Source_of_getting",
        "Risky_situation",
        "Self_motion",
        "Using",
        "Capability"
    ],
    "Attaching Event Handlers Within Adapter Within a ListView, we can easily attach event listeners onto any of the views that are item position aware with:": [
        "Event",
        "Event",
        "Entity",
        "Attaching",
        "Being_attached",
        "Categorization",
        "Awareness",
        "Quantity",
        "Capability"
    ],
    "You can also similarly pass an entire object through a tag as well as shown here:": [
        "Locative_relation",
        "Ranked_expectation",
        "Evidence",
        "Process_end",
        "Capability"
    ],
    "With this approach you can easily access data as needed from within any event handlers.": [
        "Execution",
        "Event",
        "Quantity",
        "Have_as_requirement",
        "Capability"
    ],
    "Improving Performance with the ViewHolder Pattern To improve performance, we should modify the custom adapter by applying the ViewHolder pattern which speeds up the population of the ListView considerably by caching view lookups for smoother, faster item loading:": [
        "Pattern",
        "Performing_arts",
        "Custom",
        "Pattern",
        "Execution",
        "Change_position_on_a_scale",
        "Categorization",
        "Entity",
        "Being_obligated",
        "Intoxicants",
        "Performing_arts",
        "Cause_change",
        "Cause_to_make_progress",
        "Using"
    ],
    "In this example we also have a private static class called ViewHolder.": [
        "Instance",
        "Execution"
    ],
    "Making calls to findViewById ( ) can be slow in practice, and if your adapter has to call it for each View in your row for every single row then you can often run into performance issues.": [
        "Contacting",
        "Taking_time",
        "Practice",
        "Categorization",
        "Quarreling",
        "Frequency",
        "Performing_arts",
        "Sole_instance",
        "Frequency",
        "Being_obligated",
        "Execution",
        "Temporal_collocation",
        "Causation",
        "Execution",
        "Capability"
    ],
    "What the ViewHolder class does is cache the call to findViewById ( ).": [
        "Change_position_on_a_scale",
        "Execution",
        "Intentionally_act"
    ],
    "Once your ListView has reached the max amount of rows it can display on a screen, Android is smart enough to begin recycling those row Views.": [
        "Quarreling",
        "Operate_vehicle",
        "Categorization",
        "Frequency",
        "Quantity",
        "Capability",
        "Aesthetics",
        "Process_start",
        "Sufficiency",
        "Execution"
    ],
    "We check if a View is recycled with if ( convertView == null ).": [
        "Categorization",
        "Inspecting"
    ],
    "If it is not null then we have a recycled View and can just change its values, otherwise we need to create a new row View.": [
        "Categorization",
        "Quarreling",
        "Required_event",
        "Age",
        "Being_in_effect",
        "Temporal_collocation",
        "Intentionally_create",
        "Cause_change",
        "Capability"
    ],
    "The magic behind this is the setTag ( ) method which lets us attach an arbitrary object onto a View object, which is how we save the already inflated View for future reuse.": [
        "Ineffability",
        "Attaching",
        "Categorization",
        "Temporal_collocation",
        "Time_vector",
        "Cause_expansion",
        "Grant_permission",
        "Execution"
    ],
    "Beyond ViewHolders Customizing Android ListView Rows by Subclassing describes a strategy for obtaining instances of child views using a similar approach as a ViewHolder but without the explicit ViewHolder subclass.": [
        "Instance",
        "Kinship",
        "Candidness",
        "Quarreling",
        "Execution",
        "Similarity",
        "Using",
        "Categorization",
        "Getting"
    ],
    "Table of ContentsRow View RecyclingUsing a Basic ArrayAdapterUsing a Custom ArrayAdapterDefining the ModelCreating the View TemplateDefining the AdapterAttaching the Adapter to a ListViewPopulating Data into ListViewConstructing Models from External SourceAttaching Event Handlers Within AdapterImproving Performance with the ViewHolder PatternBeyond ViewHoldersReferences": [
        "Being_necessary",
        "Custom",
        "Vehicle",
        "Performing_arts",
        "Event",
        "Categorization"
    ],
    "In Android development, any time we want to show a vertical list of scrollable items we will use a ListView which has data populated using an Adapter.": [
        "Entity",
        "Event",
        "Quantity",
        "Residence",
        "Using",
        "Possession",
        "Using",
        "Reasoning",
        "Possession",
        "Measure_duration"
    ],
    "Hilt: How to prevent Hilt from picking dependency from a library?": [
        "Reliance",
        "Buildings",
        "Preventing",
        "Choosing"
    ],
    "Hilt is a dependency injection library for Android that reduces the boilerplate of doing manual dependency injection in your project.": [
        "Reliance",
        "Buildings",
        "Project",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_act"
    ],
    "Doing manual dependency injection requires you to construct every class and its dependencies by hand, and to use containers to reuse and manage dependencies.": [
        "Reliance",
        "Frequency",
        "Reliance",
        "Observable_body_parts",
        "Containers",
        "Operating_a_system",
        "Intentionally_act",
        "Have_as_requirement",
        "Building",
        "Using"
    ],
    "Hilt provides a standard way to use DI in your application by providing containers for every Android class in your project and managing their lifecycles automatically.": [
        "Using",
        "Containers",
        "Frequency",
        "Project",
        "Supply",
        "Supply",
        "Using",
        "Operating_a_system"
    ],
    "Hilt is built on top of the popular DI library Dagger to benefit from the compile-time correctness, runtime performance, scalability, and Android Studio support that Dagger provides.": [
        "Buildings",
        "Correctness",
        "Performing_arts",
        "Building_subparts",
        "Desirability",
        "Taking_sides",
        "Supply",
        "Part_orientational",
        "Building"
    ],
    "For more information, see Hilt and Dagger.": [
        "Information",
        "Increment",
        "Grasp"
    ],
    "This guide explains the basic concepts of Hilt and its generated containers.": [
        "Being_necessary",
        "Containers",
        "Creating"
    ],
    "It also includes a demonstration of how to bootstrap an existing app to use Hilt.": [
        "Hostile_encounter",
        "Existence",
        "Using",
        "Inclusion"
    ],
    "First, add the hilt-android-gradle-plugin plugin to your project's root build.gradle file:": [
        "Project"
    ],
    "Then, apply the Gradle plugin and add these dependencies in your app/build.": [
        "Temporal_collocation",
        "Reliance",
        "Using"
    ],
    "Hilt uses Java 8 features.": [
        "Using"
    ],
    "To enable Java 8 in your project, add the following to the app/build.": [
        "Project",
        "Relative_time"
    ],
    "All apps that use Hilt must contain an Application class that is annotated with @HiltAndroidApp.": [
        "Using",
        "Quantity",
        "Using",
        "Being_obligated",
        "Inclusion"
    ],
    "@HiltAndroidApp triggers Hilt's code generation, including a base class for your application that serves as the application-level dependency container.": [
        "Reliance",
        "Containers",
        "Morality_evaluation",
        "Stage_of_progress",
        "Assistance",
        "Using",
        "Inclusion"
    ],
    "This generated Hilt component is attached to the Application object's lifecycle and provides dependencies to it.": [
        "Using",
        "Reliance",
        "Creating",
        "Ingredients",
        "Being_attached",
        "Supply"
    ],
    "Additionally, it is the parent component of the app, which means that other components can access the dependencies that it provides.": [
        "Kinship",
        "Linguistic_meaning",
        "Ingredients",
        "Reliance",
        "Increment",
        "Capability",
        "Supply",
        "Ingredients"
    ],
    "Once Hilt is set up in your Application class and an application-level component is available, Hilt can provide dependencies to other Android classes that have the @AndroidEntryPoint annotation:": [
        "Using",
        "Ingredients",
        "Reliance",
        "Increment",
        "Supply",
        "Intentionally_create",
        "Possession",
        "Frequency",
        "Capability"
    ],
    "Hilt currently supports the following Android classes:": [
        "Temporal_collocation",
        "Evidence",
        "Relative_time"
    ],
    "If you annotate an Android class with @AndroidEntryPoint, then you also must annotate Android classes that depend on it.": [
        "Temporal_collocation",
        "Being_obligated"
    ],
    "For example, if you annotate a fragment, then you must also annotate any activities where you use that fragment.": [
        "Instance",
        "Intentionally_act",
        "Being_obligated",
        "Quantity",
        "Part_piece",
        "Locative_relation",
        "Using",
        "Temporal_collocation"
    ],
    "@AndroidEntryPoint generates an individual Hilt component for each Android class in your project.": [
        "People",
        "Project",
        "Ingredients",
        "Creating"
    ],
    "These components can receive dependencies from their respective parent classes as described in Component hierarchy.": [
        "Ingredients",
        "Reliance",
        "Kinship",
        "Capability",
        "Communicate_categorization",
        "Receiving"
    ],
    "To obtain dependencies from a component, use the @Inject annotation to perform field injection:": [
        "Reliance",
        "Ingredients",
        "Fields",
        "Intentionally_act",
        "Getting",
        "Using"
    ],
    "Classes that Hilt injects can have other base classes that also use injection.": [
        "Locale_by_use",
        "Increment",
        "Capability",
        "Using"
    ],
    "Those classes don't need the @AndroidEntryPoint annotation if they're abstract.": [
        "Intentionally_act",
        "Required_event"
    ],
    "To learn more about which lifecycle callback an Android class gets injected in, see Component lifetimes.": [
        "Increment",
        "Execution",
        "Education_teaching",
        "Perception_experience"
    ],
    "To perform field injection, Hilt needs to know how to provide instances of the necessary dependencies from the corresponding component.": [
        "Fields",
        "Reliance",
        "Ingredients",
        "Required_event",
        "Being_necessary",
        "Intentionally_act",
        "Instance",
        "Supply",
        "Awareness"
    ],
    "A binding contains the information necessary to provide instances of a type as a dependency.": [
        "Information",
        "Instance",
        "Reliance",
        "Being_necessary",
        "Supply",
        "Inclusion"
    ],
    "One way to provide binding information to Hilt is constructor injection.": [
        "Information",
        "Cardinal_numbers",
        "Attaching",
        "Execution",
        "Supply"
    ],
    "Use the @Inject annotation on the constructor of a class to tell Hilt how to provide instances of that class:": [
        "Instance",
        "Supply",
        "Telling",
        "Using"
    ],
    "The parameters of an annotated constructor of a class are the dependencies of that class.": [
        "Reliance",
        "Terms_of_agreement"
    ],
    "In the example, AnalyticsAdapter has AnalyticsService as a dependency.": [
        "Instance",
        "Reliance"
    ],
    "Therefore, Hilt must also know how to provide instances of AnalyticsService.": [
        "Being_obligated",
        "Instance",
        "Supply",
        "Certainty"
    ],
    "Sometimes a type can not be constructor-injected.": [
        "Frequency",
        "Capability"
    ],
    "This can happen for multiple reasons.": [
        "Causation",
        "Quantity",
        "Event",
        "Capability"
    ],
    "For example, you can not constructor-inject an interface.": [
        "Instance",
        "Capability"
    ],
    "You also can not constructor-inject a type that you do not own, such as a class from an external library.": [
        "Buildings",
        "Intentionally_act",
        "Capability",
        "Possession"
    ],
    "In these cases, you can provide Hilt with binding information by using Hilt modules.": [
        "Instance",
        "Information",
        "Using",
        "Attaching",
        "Supply",
        "Capability"
    ],
    "A Hilt module is a class that is annotated with @Module.": [],
    "Like a Dagger module, it informs Hilt how to provide instances of certain types.": [
        "Instance",
        "Likelihood",
        "Supply",
        "Telling"
    ],
    "Unlike Dagger modules, you must annotate Hilt modules with @InstallIn to tell Hilt which Android class each module will be used or installed in.": [
        "Installing",
        "Being_obligated",
        "Using",
        "Telling"
    ],
    "Dependencies that you provide in Hilt modules are available in all generated components that are associated with the Android class where you install the Hilt module.": [
        "Reliance",
        "Quantity",
        "Creating",
        "Installing",
        "Cognitive_connection",
        "Supply",
        "Ingredients",
        "Locative_relation"
    ],
    "If AnalyticsService is an interface, then you can not constructor-inject it.": [
        "Temporal_collocation",
        "Capability"
    ],
    "Instead, provide Hilt with the binding information by creating an abstract function annotated with @Binds inside a Hilt module.": [
        "Attaching",
        "Information",
        "Attaching",
        "Intentionally_create",
        "Supply"
    ],
    "The @Binds annotation tells Hilt which implementation to use when it needs to provide an instance of an interface.": [
        "Attaching",
        "Temporal_collocation",
        "Instance",
        "Required_event",
        "Supply",
        "Using"
    ],
    "The annotated function provides the following information to Hilt:": [
        "Relative_time",
        "Information",
        "Supply"
    ],
    "The Hilt module AnalyticsModule is annotated with @InstallIn ( ActivityComponent:: class ) because you want Hilt to inject that dependency into ExampleActivity.": [
        "Reliance",
        "Possession"
    ],
    "This annotation means that all of the dependencies in AnalyticsModule are available in all of the app's activities.": [
        "Reliance",
        "Intentionally_act",
        "Quantity",
        "Evidence"
    ],
    "Interfaces are not the only case where you can not constructor-inject a type.": [
        "Instance",
        "Locative_relation",
        "Sole_instance",
        "Capability"
    ],
    "Constructor injection is also not possible if you don't own the class because it comes from an external library ( classes like Retrofit, OkHttpClient, or Room databases ), or if instances must be created with the builder pattern.": [
        "Buildings",
        "Building_subparts",
        "Instance",
        "Intentionally_act",
        "Being_obligated",
        "Pattern",
        "Intentionally_create",
        "Likelihood",
        "Possession",
        "Execution"
    ],
    "If you don't directly own the AnalyticsService class, you can tell Hilt how to provide instances of this type by creating a function inside a Hilt module and annotating that function with @Provides.": [
        "Supply",
        "Intentionally_act",
        "Intentionally_create",
        "Instance",
        "Supply",
        "Capability",
        "Possession"
    ],
    "The annotated function supplies the following information to Hilt:": [
        "Relative_time",
        "Information",
        "Supply"
    ],
    "In cases where you need Hilt to provide different implementations of the same type as dependencies, you must provide Hilt with multiple bindings.": [
        "Instance",
        "Similarity",
        "Reliance",
        "Locative_relation",
        "Identicality",
        "Quantity",
        "Have_as_requirement",
        "Being_obligated",
        "Execute_plan",
        "Supply"
    ],
    "You can define multiple bindings for the same type with qualifiers.": [
        "Quantity",
        "Identicality",
        "Capability",
        "Communicate_categorization"
    ],
    "A qualifier is an annotation that you use to identify a specific binding for a type when that type has multiple bindings defined.": [
        "Temporal_collocation",
        "Quantity",
        "Categorization",
        "Verification",
        "Inclusion",
        "Using"
    ],
    "If you need to intercept calls to AnalyticsService, you could use an OkHttpClient object with an interceptor.": [
        "Required_event",
        "Intercepting",
        "Contacting",
        "Using",
        "Capability"
    ],
    "For other services, you might need to intercept calls in a different way.": [
        "Public_services",
        "Contacting",
        "Increment",
        "Likelihood",
        "Intercepting",
        "Similarity",
        "Required_event"
    ],
    "In that case, you need to tell Hilt how to provide two different implementations of OkHttpClient.": [
        "Instance",
        "Similarity",
        "Cardinal_numbers",
        "Execute_plan",
        "Telling",
        "Supply",
        "Required_event"
    ],
    "First, define the qualifiers that you will use to annotate the @Binds or @Provides methods:": [
        "Ordinal_numbers",
        "Attaching",
        "Execution",
        "Supply",
        "Communicate_categorization",
        "Using"
    ],
    "Then, Hilt needs to know how to provide an instance of the type that corresponds with each qualifier.": [
        "Temporal_collocation",
        "Instance",
        "Required_event",
        "Supply",
        "Awareness"
    ],
    "In this case, you could use a Hilt module with @Provides.": [
        "Instance",
        "Supply",
        "Capability",
        "Using"
    ],
    "Both methods have the same return type, but the qualifiers label them as two different bindings:": [
        "Execution",
        "Quantity",
        "Identicality",
        "Similarity",
        "Cardinal_numbers",
        "Execution",
        "Labeling"
    ],
    "You can inject the specific type that you need by annotating the field or parameter with the corresponding qualifier:": [
        "Fields",
        "Terms_of_agreement",
        "Required_event",
        "Capability"
    ],
    "As a best practice, if you add a qualifier to a type, add qualifiers to all the possible ways to provide that dependency.": [
        "Practice",
        "Quantity",
        "Reliance",
        "Desirability",
        "Likelihood",
        "Execution",
        "Supply"
    ],
    "Leaving the base or common implementation without a qualifier is error-prone and could result in Hilt injecting the wrong dependency.": [
        "Locale_by_use",
        "Reliance",
        "Morality_evaluation",
        "Execute_plan",
        "Departing",
        "Causation",
        "Capability"
    ],
    "Hilt provides some predefined qualifiers.": [
        "Relational_quantity",
        "Supply"
    ],
    "For example, as you might need the Context class from either the application or the activity, Hilt provides the @ApplicationContext and @ActivityContext qualifiers.": [
        "Instance",
        "Using",
        "Intentionally_act",
        "Likelihood",
        "Required_event",
        "Supply"
    ],
    "Suppose that the AnalyticsAdapter class from the example needs the context of the activity.": [
        "Instance",
        "Intentionally_act",
        "Required_event",
        "Opinion"
    ],
    "The following code demonstrates how to provide the activity context to AnalyticsAdapter:": [
        "Intentionally_act",
        "Relative_time",
        "Supply",
        "Evidence"
    ],
    "For other predefined bindings available in Hilt, see Component default bindings.": [
        "Increment",
        "Grasp"
    ],
    "For each Android class in which you can perform field injection, there's an associated Hilt component that you can refer to in the @InstallIn annotation.": [
        "Fields",
        "Ingredients",
        "Capability",
        "Cognitive_connection",
        "Intentionally_act",
        "Existence"
    ],
    "Each Hilt component is responsible for injecting its bindings into the corresponding Android class.": [
        "Ingredients"
    ],
    "The previous examples demonstrated the use of ActivityComponent in Hilt modules.": [
        "Instance",
        "Time_vector",
        "Reasoning"
    ],
    "Hilt provides the following components:": [
        "Ingredients",
        "Relative_time",
        "Supply"
    ],
    "Hilt automatically creates and destroys instances of generated component classes following the lifecycle of the corresponding Android classes.": [
        "Instance",
        "Ingredients",
        "Creating",
        "Destroying",
        "Relative_time",
        "Creating"
    ],
    "By default, all bindings in Hilt are unscoped.": [
        "Quantity"
    ],
    "This means that each time your app requests the binding, Hilt creates a new instance of the needed type.": [
        "Instance",
        "Age",
        "Required_event",
        "Creating",
        "Execution",
        "Measure_duration",
        "Evidence"
    ],
    "In the example, every time Hilt provides AnalyticsAdapter as a dependency to another type or through field injection ( as in ExampleActivity ), Hilt provides a new instance of AnalyticsAdapter.": [
        "Instance",
        "Frequency",
        "Reliance",
        "Fields",
        "Instance",
        "Increment",
        "Age",
        "Measure_duration",
        "Supply"
    ],
    "However, Hilt also allows a binding to be scoped to a particular component.": [
        "Concessive",
        "Ingredients",
        "Idiosyncrasy",
        "Grant_permission"
    ],
    "Hilt only creates a scoped binding once per instance of the component that the binding is scoped to, and all requests for that binding share the same instance.": [
        "Frequency",
        "Ingredients",
        "Execution",
        "Sole_instance",
        "Quantity",
        "Identicality",
        "Instance",
        "Creating"
    ],
    "The table below lists scope annotations for each generated component:": [
        "Scope",
        "Ingredients",
        "Creating"
    ],
    "In the example, if you scope AnalyticsAdapter to the ActivityComponent using @ActivityScoped, Hilt provides the same instance of AnalyticsAdapter throughout the life of the corresponding activity:": [
        "Instance",
        "Scope",
        "Instance",
        "Intentionally_act",
        "Using",
        "Identicality",
        "Supply"
    ],
    "Suppose that AnalyticsService has an internal state that requires the same instance to be used every time -- not only in ExampleActivity, but anywhere in the app.": [
        "Instance",
        "Measure_duration",
        "Sole_instance",
        "Political_locales",
        "Identicality",
        "Frequency",
        "Using",
        "Possession",
        "Have_as_requirement",
        "Opinion"
    ],
    "In this case, it is appropriate to scope AnalyticsService to the SingletonComponent.": [
        "Instance",
        "Scope"
    ],
    "The result is that whenever the component needs to provide an instance of AnalyticsService, it provides the same instance every time.": [
        "Causation",
        "Ingredients",
        "Instance",
        "Frequency",
        "Measure_duration",
        "Identicality",
        "Required_event",
        "Supply",
        "Supply"
    ],
    "The following example demonstrates how to scope a binding to a component in a Hilt module.": [
        "Scope",
        "Instance",
        "Relative_time",
        "Ingredients",
        "Evidence"
    ],
    "A binding's scope must match the scope of the component where it is installed, so in this example you must install AnalyticsService in SingletonComponent instead of ActivityComponent:": [
        "Scope",
        "Evaluative_comparison",
        "Ingredients",
        "Instance",
        "Locative_relation",
        "Installing",
        "Being_obligated",
        "Installing"
    ],
    "To learn more about Hilt component scopes, see Scoping in Android and Hilt.": [
        "Ingredients",
        "Scope",
        "Increment",
        "Education_teaching",
        "Perception_experience"
    ],
    "Installing a module into a component allows its bindings to be accessed as a dependency of other bindings in that component or in any child component below it in the component hierarchy:": [
        "Reliance",
        "Ingredients",
        "Kinship",
        "Increment",
        "Installing",
        "Quantity",
        "Grant_permission"
    ],
    "Each Hilt component comes with a set of default bindings that Hilt can inject as dependencies into your own custom bindings.": [
        "Reliance",
        "Custom",
        "Ingredients",
        "Capability",
        "Execution",
        "Possession",
        "Execution"
    ],
    "Note that these bindings correspond to the general activity and fragment types and not to any specific subclass.": [
        "Intentionally_act",
        "Part_piece",
        "Execution",
        "Quantity"
    ],
    "This is because Hilt uses a single activity component definition to inject all activities.": [
        "Intentionally_act",
        "Ingredients",
        "Communicate_categorization",
        "Intentionally_act",
        "Sole_instance",
        "Quantity",
        "Using"
    ],
    "Each activity has a different instance of this component.": [
        "Intentionally_act",
        "Similarity",
        "Instance",
        "Ingredients",
        "Inclusion"
    ],
    "The application context binding is also available using @ApplicationContext.": [
        "Using",
        "Using"
    ],
    "The activity context binding is also available using @ActivityContext.": [
        "Intentionally_act",
        "Using"
    ],
    "Hilt comes with support for the most common Android classes.": [
        "Execution",
        "Taking_sides"
    ],
    "However, you might need to perform field injection in classes that Hilt doesn't support.": [
        "Concessive",
        "Fields",
        "Likelihood",
        "Intentionally_act",
        "Required_event",
        "Taking_sides",
        "Intentionally_act"
    ],
    "In those cases, you can create an entry point using the @EntryPoint annotation.": [
        "Instance",
        "Execution",
        "Locale",
        "Capability",
        "Using",
        "Intentionally_create"
    ],
    "An entry point is the boundary between code that is managed by Hilt and code that is not.": [
        "Execution",
        "Adducing",
        "Operating_a_system",
        "Boundary"
    ],
    "It is the point where code first enters into the graph of objects that Hilt manages.": [
        "Adducing",
        "Locative_relation",
        "Ordinal_numbers",
        "Operating_a_system",
        "Execution"
    ],
    "Entry points allow Hilt to use code that Hilt does not manage to provide dependencies within the dependency graph.": [
        "Reliance",
        "Reliance",
        "Locale",
        "Intentionally_act",
        "Using",
        "Supply",
        "Operating_a_system",
        "Grant_permission"
    ],
    "For example, Hilt doesn't directly support content providers.": [
        "Instance",
        "Intentionally_act",
        "Taking_sides"
    ],
    "If you want a content provider to use Hilt to get some dependencies, you need to define an interface that is annotated with @EntryPoint for each binding type that you want and include qualifiers.": [
        "Reliance",
        "Relational_quantity",
        "Inclusion",
        "Execution",
        "Using",
        "Desiring",
        "Communicate_categorization",
        "Required_event"
    ],
    "Then add @InstallIn to specify the component in which to install the entry point as follows:": [
        "Temporal_collocation",
        "Cause_change_of_position_on_a_scale",
        "Relative_time",
        "Locale",
        "Ingredients",
        "Installing",
        "Execution"
    ],
    "To access an entry point, use the appropriate static method from EntryPointAccessors.": [
        "Execution",
        "Locale",
        "Execution",
        "Using"
    ],
    "The parameter should be either the component instance or the @AndroidEntryPoint object that acts as the component holder.": [
        "Terms_of_agreement",
        "Instance",
        "Ingredients",
        "Being_obligated",
        "Intentionally_act"
    ],
    "Make sure that the component you pass as a parameter and the EntryPointAccessors static method both match the Android class in the @InstallIn annotation on the @EntryPoint interface:": [
        "Terms_of_agreement",
        "Execution",
        "Process_end",
        "Evaluative_comparison",
        "Ingredients",
        "Causation"
    ],
    "In this example, you must use the ApplicationContext to retrieve the entry point because the entry point is installed in SingletonComponent.": [
        "Instance",
        "Execution",
        "Locale",
        "Being_obligated",
        "Installing",
        "Using"
    ],
    "If the binding that you wanted to retrieve were in the ActivityComponent, you would instead use the ActivityContext.": [
        "Using",
        "Desiring"
    ],
    "Hilt is built on top of the Dagger dependency injection library, providing a standard way to incorporate Dagger into an Android application.": [
        "Reliance",
        "Buildings",
        "Using",
        "Inclusion",
        "Part_orientational",
        "Execution",
        "Building",
        "Supply"
    ],
    "With respect to Dagger, the goals of Hilt are as follows:": [
        "Judgment",
        "Relative_time"
    ],
    "Because the Android operating system instantiates many of its own framework classes, using Dagger in an Android app requires you to write a substantial amount of boilerplate.": [
        "Using",
        "System",
        "Using",
        "Possession",
        "Quantity",
        "Quantity",
        "Have_as_requirement"
    ],
    "Hilt reduces the boilerplate code that is involved in using Dagger in an Android application.": [
        "Using",
        "Cause_change_of_position_on_a_scale",
        "Using",
        "Participation"
    ],
    "Hilt automatically generates and provides the following:": [
        "Creating",
        "Supply"
    ],
    "Dagger and Hilt code can coexist in the same codebase.": [
        "Identicality",
        "Capability"
    ],
    "However, in most cases it is best to use Hilt to manage all of your usage of Dagger on Android.": [
        "Concessive",
        "Instance",
        "Relational_quantity",
        "Quantity",
        "Operating_a_system",
        "Desirability",
        "Using"
    ],
    "To migrate a project that uses Dagger to Hilt, see the migration guide and the Migrating your Dagger app to Hilt codelab.": [
        "Project",
        "Grasp",
        "Using"
    ],
    "To learn more about Hilt, see the following additional resources.": [
        "Relative_time",
        "Increment",
        "Increment",
        "Education_teaching",
        "Grasp"
    ],
    "Application ( by using @HiltAndroidApp )": [
        "Using",
        "Using"
    ],
    "ViewModel ( by using @HiltViewModel )": [
        "Using"
    ],
    "Hilt only supports activities that extend ComponentActivity, such as AppCompatActivity.": [
        "Sole_instance",
        "Expansion",
        "Intentionally_act",
        "Evidence"
    ],
    "Hilt only supports fragments that extend androidx.Fragment.": [
        "Part_piece",
        "Expansion",
        "Evidence",
        "Sole_instance"
    ],
    "Hilt does not support retained fragments.": [
        "Part_piece",
        "Intentionally_act",
        "Memory",
        "Taking_sides"
    ],
    "Builds and validates dependency graphs, ensuring that there are no unsatisfied dependencies and no dependency cycles.": [
        "Reliance",
        "Quantity",
        "Reliance",
        "Operate_vehicle",
        "Existence"
    ],
    "Generates the classes that it uses at runtime to create the actual objects and their dependencies.": [
        "Reliance",
        "Actually_occurring_entity",
        "Intentionally_create",
        "Using",
        "Creating"
    ],
    "The function return type tells Hilt what interface the function provides instances of.": [
        "Instance",
        "Execution",
        "Supply"
    ],
    "The function parameter tells Hilt which implementation to provide.": [
        "Terms_of_agreement",
        "Supply"
    ],
    "The function return type tells Hilt what type the function provides instances of.": [
        "Instance",
        "Execution",
        "Supply"
    ],
    "The function parameters tell Hilt the dependencies of the corresponding type.": [
        "Reliance",
        "Terms_of_agreement"
    ],
    "The function body tells Hilt how to provide an instance of the corresponding type.": [
        "Instance",
        "Execution",
        "Supply"
    ],
    "Hilt executes the function body every time it needs to provide an instance of that type.": [
        "Execution",
        "Frequency",
        "Measure_duration",
        "Instance",
        "Execution",
        "Required_event",
        "Supply"
    ],
    "To simplify Dagger-related infrastructure for Android apps.": [
        "Infrastructure"
    ],
    "To create a standard set of components and scopes to ease setup, readability, and code sharing between apps.": [
        "Ingredients",
        "Scope",
        "Cure",
        "Execution",
        "Intentionally_create"
    ],
    "To provide an easy way to provision different bindings to various build types, such as testing, debug, or release.": [
        "Terms_of_agreement",
        "Diversity",
        "Operational_testing",
        "Emptying",
        "Releasing",
        "Difficulty",
        "Similarity",
        "Execution",
        "Supply",
        "Building"
    ],
    "Components for integrating Android framework classes with Dagger that you would otherwise need to create by hand.": [
        "Observable_body_parts",
        "Intentionally_create",
        "Required_event",
        "Ingredients"
    ],
    "Scope annotations to use with the components that Hilt generates automatically.": [
        "Scope",
        "Creating",
        "Ingredients",
        "Using"
    ],
    "Predefined bindings to represent Android classes such as Application or Activity.": [
        "Using",
        "Intentionally_act",
        "Communicate_categorization"
    ],
    "Predefined qualifiers to represent @ApplicationContext and @ActivityContext.": [
        "Communicate_categorization"
    ],
    "Android Architecture Blueprints - Hilt": [],
    "Using Hilt in your Android app": [
        "Using"
    ],
    "Migrating your Dagger app to Hilt": [],
    "Dependency Injection on Android with Hilt": [
        "Reliance"
    ],
    "Scoping in Android and Hilt": [],
    "Adding components to the Hilt hierarchy": [
        "Ingredients"
    ],
    "Migrating the Google I/O app to Hilt": [],
    "To find duplicate dependencies or its required dependencies, you can visualize library dependencies in tree.": [
        "Reliance",
        "Buildings",
        "Being_necessary",
        "Capability",
        "Locating"
    ],
    "Execute gradle command as below.": [
        "Execution"
    ],
    "Note that, run gradlew in Windows as below.": [
        "Connecting_architecture",
        "Execution"
    ],
    "The command result will show you human-readable tree hierarchy of all dependencies as below.": [
        "Execution",
        "Reliance",
        "Causation",
        "Quantity",
        "Reasoning"
    ],
    "You can see overriden dependencies and decide in mind which ones should be avoided.": [
        "Reliance",
        "Clothing",
        "Avoiding",
        "Being_obligated",
        "Capability",
        "Grasp",
        "Deciding"
    ],
    "In above example, last line com.android.support: support-annotations presents overriden from 22.1.1 to 22.2.0 internally.": [
        "Instance",
        "Relative_time",
        "Presence"
    ],
    "To avoid duplicates, you can add exclude clauses in each project build.gradle file.": [
        "Duplication",
        "Law",
        "Project",
        "Preventing",
        "Capability",
        "Inclusion"
    ],
    "For more information, you can see the tutorial at LINK": [
        "Information",
        "Increment",
        "Capability",
        "Grasp"
    ],
    "Suggestion needed for using Hilt in library modules \u00b7 Issue # 1991 \u00b7 google/dagger \u00b7 GitHub": [
        "Buildings",
        "Point_of_dispute",
        "Required_event",
        "Using"
    ],
    "Suggestion needed for using Hilt in library modules": [
        "Buildings",
        "Required_event",
        "Using"
    ],
    "In my sample app I have created a separate library module called core.": [
        "Becoming_separated",
        "Buildings",
        "Gizmo",
        "Execution",
        "Intentionally_create"
    ],
    "In the core module I am using network and db related dependencies like OkHttp, Retrofit and Room.": [
        "Gizmo",
        "Network",
        "Reliance",
        "Building_subparts",
        "Cognitive_connection",
        "Using"
    ],
    "Hence to access these instances as singleton, I declared them in the hilt module.": [
        "Instance"
    ],
    "In my app module I have my application class as mentioned below:": [
        "Using"
    ],
    "My app build.gradle also implements core module:": [
        "Gizmo",
        "Gizmo"
    ],
    "But when I build my project, it throws error as:": [
        "Temporal_collocation",
        "Project",
        "Building",
        "Cause_motion"
    ],
    "class file for okhttp3.OkHttpClient not found": [
        "Self_motion",
        "Locating"
    ],
    "Consult the following stack trace for details.": [
        "Relative_time"
    ],
    "I can overcome this error only if I change implementation to api for OkHttp client dependency which is delcared in the core module build.gradle.": [
        "Sole_instance",
        "Reliance",
        "Gizmo",
        "Undergo_change",
        "Capability",
        "Execute_plan"
    ],
    "Is there anything I'm missing here.": [
        "Locative_relation",
        "Existence",
        "Success_or_failure"
    ],
    "Want I am trying to achieve is to have separate library modules for network service, local storage and firebase.": [
        "Becoming_separated",
        "Buildings",
        "Network",
        "Public_services",
        "Political_locales",
        "Storing",
        "Attempt",
        "Accomplishment"
    ],
    "So that I can implement this to app module as needed.": [
        "Gizmo",
        "Being_necessary",
        "Capability"
    ],
    "Hence I started declaring Hilt module in each of these library modules like NetworkModule, StorageModule, FirebaseModule, etc..": [
        "Buildings",
        "Activity_start"
    ],
    "But I couldn't figure this out.": [
        "Locative_relation",
        "Opinion",
        "Capability"
    ],
    "Problem using Hilt in library modules": [
        "Predicament",
        "Buildings",
        "Using"
    ],
    "Using api is correct here.": [
        "Correctness",
        "Locative_relation",
        "Using"
    ],
    "This is related to # 970": [],
    "In essence, because Hilt aggregates your modules into your root app Gradle project where Dagger generates the component implementation and because such code generated references all of your binding types in other modules, then the root app Gradle project must have visibility in its classpath to all of those other Gradle modules where you define Dagger modules along with its dependencies if they are used in those Dagger modules.": [
        "Project",
        "Ingredients",
        "Execute_plan",
        "Reliance",
        "Creating",
        "Increment",
        "Text_creation",
        "Locative_relation",
        "Being_obligated",
        "Accompaniment",
        "Using",
        "Quantity",
        "Creating",
        "Communicate_categorization",
        "Temporal_collocation"
    ],
    "It's a bit hard to see, but the factories Dagger generates for your bindings end up being public APIs used downstream so restricting those at the Gradle module boundaries using implementation is not quite right.": [
        "Locale_by_use",
        "Boundary",
        "Execute_plan",
        "Correctness",
        "Quantity",
        "Secrecy_status",
        "Grant_permission",
        "Difficulty",
        "Creating",
        "Grasp",
        "Using",
        "Becoming",
        "Using"
    ],
    "There is no current workaround in Hilt that I know off.": [
        "Quantity",
        "Temporal_collocation",
        "Certainty",
        "Locative_relation",
        "Existence"
    ],
    "We are aware of the implications this causes, such as leaking classes into other Gradle modules and possibly build performance impact with regards to compile avoidance.": [
        "Performing_arts",
        "Objective_influence",
        "Avoiding",
        "Reveal_secret",
        "Increment",
        "Likelihood",
        "Causation",
        "Building",
        "Awareness"
    ],
    "We've have some ideas on how to fix this and we hope to get them in before declaring Hilt stable.": [
        "Buildings",
        "Relational_quantity",
        "Resolve_problem",
        "Execution",
        "Desiring"
    ],
    "The workaround in the issue mentioned by Dany was working the last time I checked it.": [
        "Point_of_dispute",
        "Measure_duration",
        "Relative_time",
        "Inspecting",
        "Working_on"
    ],
    "Someone is mentioning it is not working with AGP 4 but I think I tried it even with AGP 4.1 with no problems.": [
        "Cardinal_numbers",
        "Quantity",
        "Predicament",
        "Attempt",
        "Being_employed",
        "Awareness"
    ],
    "Hilt: test Android components in isolation": [
        "Operational_testing",
        "Ingredients"
    ],
    "I had faced the same problem with my project.": [
        "Predicament",
        "Project",
        "Identicality",
        "Confronting_problem"
    ],
    "Instead of changing implementation to api ( Not Recommended ), you can add dependencies of missing libraries in app's build.gradle and rebuild the project.": [
        "Execute_plan",
        "Reliance",
        "Success_or_failure",
        "Buildings",
        "Project",
        "Exchange",
        "Capability"
    ],
    "In your case, you can add Retrofit and OkHttp dependency in app's build.gradle.": [
        "Instance",
        "Reliance",
        "Capability"
    ],
    "But I am not sure why app module should be aware of these dependencies ( Retrofit + Okhttp )": [
        "Reason",
        "Reliance",
        "Being_obligated",
        "Likelihood",
        "Awareness"
    ],
    "when the are in separate library module in my case.": [
        "Becoming_separated",
        "Buildings",
        "Instance",
        "Temporal_collocation"
    ],
    "This was referenced Aug 26, 2020": [],
    "Poor error message for transitive Gradle module dependencies": [
        "Reliance"
    ],
    "Dagger Hilt with library modules": [
        "Buildings"
    ],
    "Is this fixed now considering # 970 is closed": [
        "Temporal_collocation",
        "Body_movement",
        "Resolve_problem",
        "Cogitation"
    ],
    "Unfortunately no, the general issue still exists ( but as @danysantiago mentions in # 1991 ( comment ) we're still looking into it ).": [
        "Point_of_dispute",
        "Execution",
        "Continued_state_of_affairs",
        "Scrutiny",
        "Existence"
    ],
    "The issue in # 970 was a very specific case of this problem where api was only needed to check validation of @Component.": [
        "Point_of_dispute",
        "Predicament",
        "Sole_instance",
        "Ingredients",
        "Degree",
        "Locative_relation",
        "Inspecting",
        "Required_event",
        "Instance"
    ],
    "dependencies for cycles.": [],
    "For that specific case we decided to add a flag that disables that validation so that implementation would work ( with the understanding that the flag should probably only be disabled in dev ).": [
        "Instance",
        "Execute_plan",
        "Sole_instance",
        "Render_nonfunctional",
        "Being_obligated",
        "Being_employed",
        "Render_nonfunctional",
        "Deciding",
        "Likelihood",
        "Cause_change_of_position_on_a_scale",
        "Awareness"
    ],
    "It seems to me like Hilt is breaking everyone's ability to take advantage of gradle compile avoidance, and is polluting gradle modules with transitive dependencies.": [
        "Reliance",
        "Appearance",
        "Avoiding",
        "Have_as_requirement",
        "Capability",
        "Compliance"
    ],
    "If all of my module dependencies have to be declared api, and I can no longer have an @Module in my libraries without it being required to have @InstallIn added, what is even the point of having separated gradle modules when using hilt ?": [
        "Reliance",
        "Buildings",
        "Becoming_separated",
        "Temporal_collocation",
        "Using",
        "Being_necessary",
        "Temporal_collocation",
        "Quantity",
        "Being_obligated",
        "Locale",
        "Possession",
        "Capability"
    ],
    "There are still great benefits to making separate gradle modules, for one you can have smaller tests on them, including ` small test APKs' where the dependencies set and the modules in the classpath are reduced.": [
        "Becoming_separated",
        "Operational_testing",
        "Operational_testing",
        "Reliance",
        "Cardinal_numbers",
        "Dimension",
        "Execution",
        "Capability",
        "Dimension",
        "Causation",
        "Cause_change_of_position_on_a_scale",
        "Continued_state_of_affairs",
        "Locative_relation",
        "Existence",
        "Inclusion"
    ],
    "AFAIK compile avoidance is not completely lost when using api vs implementation.": [
        "Temporal_pattern",
        "Execute_plan",
        "Avoiding",
        "Using",
        "Temporal_collocation",
        "Finish_competition"
    ],
    "It's also important to clarify that this is an issue present not only in Hilt but in Dagger in general.": [
        "Point_of_dispute",
        "Execution",
        "Presence",
        "Importance",
        "Sole_instance"
    ],
    "The difference in Hilt is that it can be easier to encounter since modules are aggregated into the components whereas in vanilla Dagger you would have to specify the Dagger module class in the @Component - annotated interface, which would ultimately require you to either expose those Gradle modules via api dependencies or make the app module ( or wherever the component is ) depend directly on the Gradle modules containing the Dagger modules.": [
        "Similarity",
        "Ingredients",
        "Ingredients",
        "Temporal_collocation",
        "Reliance",
        "Ingredients",
        "Have_as_requirement",
        "Capability",
        "Being_obligated",
        "Reveal_secret",
        "Causation",
        "Becoming_aware",
        "Inclusion"
    ],
    "There are workarounds by introducing indirections in the bindings that Dagger can provide, at the cost of an increased complexity in the Gradle modules setup, one example of this is explained and shown by the following talk in Droidcon: Android at Scale @Square": [
        "Change_position_on_a_scale",
        "Reasoning",
        "Relative_time",
        "Cardinal_numbers",
        "Locale_by_use",
        "Capability",
        "Instance",
        "Supply",
        "Expensiveness",
        "Existence"
    ],
    "One way to mitigate this problem is to have your application gradle module be tiny.": [
        "Predicament",
        "Using",
        "Dimension",
        "Cardinal_numbers"
    ],
    "The application gradle module only contains your Application class and defines the root of your dependency injection graph.": [
        "Using",
        "Using",
        "Reliance",
        "Categorization",
        "Sole_instance",
        "Inclusion"
    ],
    "You then compose your application by pulling in the necessary dependencies.": [
        "Using",
        "Reliance",
        "Temporal_collocation",
        "Being_necessary",
        "Text_creation",
        "Manipulation"
    ],
    "If you have build variants, this approach makes it easy to have different features in different variants.": [
        "Similarity",
        "Execution",
        "Similarity",
        "Difficulty",
        "Building",
        "Execution"
    ],
    "I find that the following organization works very well:": [
        "Organization",
        "Relative_time",
        "Degree",
        "Being_employed",
        "Locating"
    ],
    "With this approach we never run into class file not found errors.": [
        "Execution",
        "Frequency",
        "Execution",
        "Submitting_documents",
        "Locating"
    ],
    "Hi @snepalnetflix do you have any sample repository implementing the structure you have mentioned above.": [
        "Quantity",
        "Building_subparts",
        "Gizmo",
        "Buildings",
        "Intentionally_act"
    ],
    "It would be great if you could share one.": [
        "Cardinal_numbers",
        "Capability",
        "Desirability"
    ],
    "@kalaiselvan369 I'm working on a Hilt Android example.": [
        "Instance",
        "Being_employed"
    ],
    "It's not working yet but you can get an idea of the structure.": [
        "Buildings",
        "Working_on",
        "Capability",
        "Execution"
    ],
    "In this project all feature/module projects declare dependencies on their api and impl using:": [
        "Project",
        "Quantity",
        "Project",
        "Reliance",
        "Using"
    ],
    "I thought that this would be enough to prevent class not found errors.": [
        "Locating",
        "Preventing",
        "Sufficiency",
        "Opinion"
    ],
    "Unfortunately I ran into one class not found error:": [
        "Cardinal_numbers",
        "Execution",
        "Becoming_aware"
    ],
    "I was surprised by this since I haven't really run into errors like this on my real project.": [
        "Project",
        "Existence",
        "Experiencer_obj",
        "Execution"
    ],
    "I think this is an infrequent enough problem that explicitly adding the paging library as a dependency on the app module is acceptable.": [
        "Buildings",
        "Reliance",
        "Sufficiency",
        "Frequency",
        "Predicament",
        "Opinion"
    ],
    "Use runtime classpath at root to workaround Dagger/Hilt API vs Impl issue.": [
        "Point_of_dispute"
    ],
    "Use runtime classpath at root to workaround Dagger/Hilt API vs Impl i ...": [],
    "Hilt gradle plugin doesn't pick classes from custom android sdk-addon": [
        "Custom",
        "Choosing",
        "Intentionally_act"
    ],
    "Dagger/Hilt compilation conflict with AppBarLayout material component": [
        "Ingredients",
        "Ingredients",
        "Hostile_encounter"
    ],
    "-LSB- Hilt -RSB- Feature Request: Better error message when internal used in @EntryPoint declaration": [
        "Execution",
        "Using",
        "Temporal_collocation"
    ],
    "This was referenced Nov 18, 2020": [],
    "` validateTransitiveComponentDependencies' option is available on Hilt ?": [
        "Possibilities"
    ],
    "Improve error message for transitive types": [],
    "Multiple Activity annotated as AndroidEntryPoint in different modules with Hilt not working": [
        "Intentionally_act",
        "Similarity",
        "Being_employed"
    ],
    "Kapt errors are not visible when build failed with Gradle Cache turned on": [
        "Building",
        "Becoming",
        "Obviousness",
        "Temporal_collocation",
        "Success_or_failure"
    ],
    "Hilt Feature Request: Missing compile classpath dep for optional binding should be compile error": [
        "Execution",
        "Being_obligated"
    ],
    "@massivemadness, in Hilt 2.31.x-alpha we added an experimental flag to be able to use Hilt in a layered multi-module project.": [
        "Project",
        "Using",
        "Capability"
    ],
    "See the docs at https://dagger.dev/hilt/gradle-setup#classpath-aggregation.": [
        "Grasp"
    ],
    "Please try it out and let us know if you run into trouble, its experimental because it has build performance implications we want to solve before completely committing to it.": [
        "Predicament",
        "Performing_arts",
        "Locative_relation",
        "Attempt",
        "Committing_crime",
        "Execution",
        "Possession",
        "Building",
        "Resolve_problem",
        "Grant_permission",
        "Awareness"
    ],
    "@danysantiago any timeframe on when you are working on improving build performance issue in the classpath-aggregation ?": [
        "Temporal_collocation",
        "Performing_arts",
        "Quantity",
        "Point_of_dispute",
        "Being_employed",
        "Building"
    ],
    "-LSB- Hilt -RSB- Classpath Aggregation build performance impact": [
        "Performing_arts",
        "Objective_influence",
        "Building"
    ],
    "Using @AndroidEntryPoint on a class whose parent is not accessible to the main module will result in a cryptic error message": [
        "Using",
        "Kinship",
        "First_rank",
        "Having_or_lacking_access",
        "Causation"
    ],
    "A practical guide to using Hilt with Kotlin": [
        "Using"
    ],
    "Prospective students on the course `` Android Developer.": [
        "Education_teaching"
    ],
    "Professional'' we invite you to attend an open lesson on the topic `` Writing the Gradle Plugin'' We also share the translation of a useful article.": [
        "Translating",
        "Secrecy_status",
        "Text_creation",
        "Topic",
        "Attending",
        "Execution"
    ],
    "An easy way to use dependency injection in Android apps Hilt Is a new library for dependency injection built on top of Dagger ... It allows you to use Dagger's capabilities in Android apps in a simplified way.": [
        "Reliance",
        "Buildings",
        "Difficulty",
        "Age",
        "Part_orientational",
        "Grant_permission",
        "Capability",
        "Using",
        "Building"
    ],
    "This tutorial describes the basic functionality of the library and provides some code snippets to help you get started using Hilt in your projects.": [
        "Being_necessary",
        "Buildings",
        "Relational_quantity",
        "Project",
        "Part_piece",
        "Execution",
        "Using",
        "Activity_start",
        "Assistance",
        "Supply"
    ],
    "Setting up Hilt To set up Hilt in your application, first follow the directions from the guide: Installing Gradle Build ...": [
        "Using",
        "Intentionally_create",
        "Installing",
        "Intentionally_create",
        "Relative_time",
        "Ordinal_numbers"
    ],
    "After installing all the required elements and plugins to use Hilt, annotate your Application class @HiltAndroidApp.": [
        "Quantity",
        "Ingredients",
        "Being_necessary",
        "Using",
        "Installing",
        "Using"
    ],
    "You don't need to do anything else, and you don't need to call Hilt directly.": [
        "Intentionally_act",
        "Required_event",
        "Execution"
    ],
    "Dependency Definition and Injection When writing code that uses Dependency Injection, there are two main components to consider:": [
        "Reliance",
        "Communicate_categorization",
        "Temporal_collocation",
        "Text_creation",
        "Ingredients",
        "First_rank",
        "Cardinal_numbers",
        "Categorization",
        "Existence"
    ],
    "Classes that have dependencies that you intend to inject.": [
        "Reliance"
    ],
    "Classes that can be injected as dependencies.": [
        "Reliance",
        "Likelihood",
        "Filling"
    ],
    "They are not mutually exclusive: in many cases, a class is both injectable and has dependencies.": [
        "Instance",
        "Quantity",
        "Reliance",
        "Quantity"
    ],
    "How to make a dependency injectable To make an object embeddable in Hilt, you need to tell Hilt how to instantiate that object.": [
        "Reliance",
        "Telling",
        "Required_event",
        "Causation"
    ],
    "Such instructions are called bindings ...": [
        "Education_teaching",
        "Execution"
    ],
    "There are three ways to define anchor in Hilt.": [
        "Attaching",
        "Cardinal_numbers",
        "Communicate_categorization",
        "Execution",
        "Existence"
    ],
    "Add annotation to constructor @Inject": [],
    "\u2b95 Adding Annotation to the Designer @Inject Any class can have an annotated constructor @Inject, allowing it to be used as a dependency anywhere in the project.": [
        "Reliance",
        "Project",
        "Quantity",
        "Grant_permission",
        "Capability",
        "Using"
    ],
    "\u2b95 Using the module Two other ways to convert objects to embedded in Hilt are through the use of modules.": [
        "Increment",
        "Cause_change",
        "Cardinal_numbers",
        "Using",
        "Execution"
    ],
    "Hilt module Think of it as a set of `` recipes'' that tell Hilt how to instantiate something that doesn't have a constructor, such as an interface or a system service.": [
        "Gizmo",
        "Public_services",
        "Execution",
        "Intentionally_act",
        "Awareness",
        "Telling"
    ],
    "In addition, in tests, any module can be replaced by another module.": [
        "Communication_response",
        "Operational_testing",
        "Quantity",
        "Increment",
        "Likelihood",
        "Take_place_of"
    ],
    "For example, this makes it easy to replace interface implementations with mock objects.": [
        "Instance",
        "Execute_plan",
        "Practice",
        "Execution",
        "Difficulty",
        "Replacing"
    ],
    "The modules are installed in Hilt componentwhich is indicated by annotation @InstallIn ... I'll give a more detailed explanation below.": [
        "Increment",
        "Installing",
        "Evidence",
        "Giving"
    ],
    "Option 1: use @Binds to create a binding for the interface If you want to use OatMilk in your code when you need Milk, create an abstract method inside the module and annotate it @Binds ... Please note that for this option to work, OatMilk itself must be implemented.": [
        "Possibilities",
        "Temporal_collocation",
        "Food",
        "Execute_plan",
        "Required_event",
        "Execution",
        "Attaching",
        "Stimulus_focus",
        "Being_obligated",
        "Working_on",
        "Using",
        "Creating",
        "Possession",
        "Possibilities"
    ],
    "To do this, its constructor must be annotated @Inject ... Option 2: create a factory function using @Provides When an instance can not be constructed directly, a provider can be created.": [
        "Possibilities",
        "Cardinal_numbers",
        "Locale_by_use",
        "Temporal_collocation",
        "Instance",
        "Intentionally_act",
        "Being_obligated",
        "Likelihood",
        "Intentionally_create",
        "Intentionally_create",
        "Building",
        "Supply",
        "Using"
    ],
    "A provider is a factory function that returns an instance of an object.": [
        "Locale_by_use",
        "Instance",
        "Execution"
    ],
    "An example would be a system service, say the ConnectivityManager, that needs to be retrieved from the context.": [
        "Instance",
        "Gizmo",
        "Public_services",
        "Required_event"
    ],
    "The Context object is injectable by default when annotated @ApplicationContext or @ActivityContext ... Dependency injection Once you've made the dependencies you want to inject, there are two ways to inject them with Hilt.": [
        "Temporal_collocation",
        "Reliance",
        "Reliance",
        "Cardinal_numbers",
        "Possession",
        "Execution",
        "Causation",
        "Existence",
        "Frequency"
    ],
    "\u2b95 As constructor parameters If you mark the constructor with annotation @Inject, Hilt will implement all the parameters according to the bindings you define for these types.": [
        "Gizmo",
        "Quantity",
        "Terms_of_agreement",
        "Sign",
        "Communicate_categorization",
        "Attributed_information"
    ],
    "\u2b95 Like fields If class is entry point specified using annotation @AndroidEntryPoint ( more on this in the next section ), all fields marked with the annotation will be embedded @Inject ... Fields marked with annotation @Injectshould be publicly available.": [
        "Execution",
        "Fields",
        "Locale",
        "Part_whole",
        "Locative_relation",
        "Quantity",
        "Secrecy_status",
        "Using",
        "Increment",
        "Sign"
    ],
    "It is also convenient to mark them with the lateinit modifier so that they do not have to support empty values, since they have an initial value before implementation.": [
        "Fullness",
        "Execute_plan",
        "Intentionally_act",
        "Version_sequence",
        "Being_obligated",
        "Sign",
        "Taking_sides"
    ],
    "null ... Note that dependencies should be injected as fields only when the class must have a parameterless constructor, for example Activity ... In most cases, we recommend that you inject dependencies through constructor parameters.": [
        "Reliance",
        "Fields",
        "Sole_instance",
        "Temporal_collocation",
        "Instance",
        "Intentionally_act",
        "Instance",
        "Terms_of_agreement",
        "Being_obligated",
        "Relational_quantity",
        "Being_obligated"
    ],
    "Other important concepts Point of entry Remember I said that in many cases the class is created by injecting and has dependencies embedded in it ?": [
        "Execution",
        "Instance",
        "Reliance",
        "Importance",
        "Quantity",
        "Increment",
        "Locale",
        "Intentionally_create",
        "Memory",
        "Inclusion"
    ],
    "In some cases, you will have a class that is not is created by dependency injection, but has dependencies injected into it.": [
        "Instance",
        "Reliance",
        "Reliance",
        "Relational_quantity",
        "Filling",
        "Intentionally_create",
        "Possession"
    ],
    "A good example of this is activities that are normally generated by the Android platform, not by the Hilt library.": [
        "Buildings",
        "Relational_quantity",
        "Instance",
        "Creating",
        "Intentionally_act"
    ],
    "These classes are entry points into the Hilt dependency graph, and Hilt needs to know that they have dependencies to inject.": [
        "Reliance",
        "Reliance",
        "Execution",
        "Locale",
        "Awareness",
        "Needing"
    ],
    "\u2b95 Android entry point Most of your entry points will be so called Android entry points:": [
        "Execution",
        "Adducing",
        "Locale",
        "Execution",
        "Relational_quantity"
    ],
    "Previous PreviousGerman court forces mail provider Tutanota to install backdoorNextContinue How the search for black cat in dark Kubernetes has changed": [
        "Relative_time",
        "Locale_by_use",
        "Military",
        "Scrutiny",
        "Color",
        "Dimension",
        "Sending",
        "Installing",
        "Undergo_change"
    ],
    "Previous PreviousGerman court forces mail provider Tutanota to install backdoor": [
        "Relative_time",
        "Locale_by_use",
        "Military",
        "Sending",
        "Installing"
    ],
    "NextContinue How the search for black cat in dark Kubernetes has changed": [
        "Scrutiny",
        "Color",
        "Dimension",
        "Undergo_change"
    ],
    "NFT is a pyramid scheme and people are already losing money on it": [
        "People",
        "Money",
        "Project",
        "Time_vector",
        "Earnings_and_losses"
    ],
    "Mu-mu, woof-woof, quack-quack: evolution of acoustic communication": [
        "Communication"
    ],
    "Zip Slip Returns to Node.js": [
        "Clothing_parts",
        "Self_motion",
        "Execution"
    ],
    "I worked as a sysadmin in the provinces for 8 years -- but left for Devops when I was asked to fix keyboards again": [
        "Political_locales",
        "Direction",
        "Temporal_collocation",
        "Working_on",
        "Calendric_unit",
        "Resolve_problem",
        "Execution"
    ],
    "Four easy Kubernetes terminal settings to improve your productivity": [
        "Cardinal_numbers",
        "Difficulty",
        "Cause_to_make_progress"
    ],
    "Development of complex components: we deliver quickly, support is easy": [
        "Delivery",
        "Speed",
        "Ingredients",
        "Taking_sides",
        "Cause_to_make_progress",
        "Difficulty"
    ],
    "Leave a Reply Cancel reply": [
        "Communication_response",
        "Communication_response",
        "Departing"
    ],
    "\u00a9 2021 Prog.World - WordPress Theme by Kadence WP": [
        "Topic"
    ],
    "Hide MarkerView when nothing selected": [
        "Temporal_collocation",
        "Choosing"
    ],
    "1 - Enable touch in the chart": [
        "Quantity"
    ],
    "2 - Create MarkerView": [],
    "3 - Create the tvContent view": [
        "Opinion",
        "Cause_to_start"
    ],
    "4.": [],
    "Set the view Marker in the chart": [
        "Opinion"
    ],
    "LINK": [],
    "Use IMarker Interface -LRB- MarkerView has been deprecated since release 3.0.0 -RRB-": [
        "Releasing",
        "Judgment_communication"
    ],
    "1.": [],
    "Create a new class that implements the IMarker interface": [
        "Gizmo",
        "Age",
        "Cause_to_start"
    ],
    "2.": [],
    "set your marker to the chart": [
        "Intentionally_create"
    ],
    "Reference: LINK": [],
    "Permission Denial when trying to access contacts in Android": [
        "Contacting",
        "Temporal_collocation",
        "Attempt",
        "Grant_permission"
    ],
    "Every Android app runs in a limited-access sandbox.": [
        "Frequency",
        "Execution"
    ],
    "If your app needs to use resources or information outside of its own sandbox, you can declare a permission and set up a permission request that provides this access.": [
        "Information",
        "Execution",
        "Having_or_lacking_access",
        "Required_event",
        "Possession",
        "Grant_permission",
        "Supply",
        "Using",
        "Intentionally_create",
        "Capability"
    ],
    "These steps are part of the workflow for using permissions.": [
        "Intentionally_act",
        "Grant_permission",
        "Using",
        "Part_whole"
    ],
    "If you declare any dangerous permissions, and if your app is installed on a device that runs Android 6.0 ( API level 23 ) or higher, you must request the dangerous permissions at runtime by following the steps in this guide.": [
        "Grant_permission",
        "Gizmo",
        "Risky_situation",
        "Rank",
        "Being_obligated",
        "Quantity",
        "Installing",
        "Intentionally_act",
        "Execution",
        "Position_on_a_scale",
        "Relative_time",
        "Execution"
    ],
    "If you don't declare any dangerous permissions, or if your app is installed on a device that runs Android 5.1 ( API level 22 ) or lower, the permissions are automatically granted, and you don't need to complete any of the remaining steps on this page.": [
        "Gizmo",
        "Grant_permission",
        "Intentionally_act",
        "Contacting",
        "Intentionally_act",
        "Risky_situation",
        "Rank",
        "Quantity",
        "Installing",
        "Required_event",
        "State_continue",
        "Execution",
        "Activity_finish"
    ],
    "The basic principles for requesting permissions at runtime are as follows:": [
        "Being_necessary",
        "Grant_permission",
        "Relative_time",
        "Execution"
    ],
    "Before you declare and request runtime permissions in your app, evaluate whether your app needs to do so.": [
        "Assessing",
        "Grant_permission",
        "Required_event",
        "Execution",
        "Intentionally_act"
    ],
    "You can fulfill many use cases in your app, such as taking photos, pausing media playback, and displaying relevant ads, without needing to declare any permissions.": [
        "Quantity",
        "Instance",
        "Physical_artworks",
        "Grant_permission",
        "Taking",
        "Quantity",
        "Capability",
        "Needing",
        "Accomplishment"
    ],
    "If you conclude that your app needs to declare and request runtime permissions, complete these steps:": [
        "Execution",
        "Grant_permission",
        "Intentionally_act",
        "Required_event",
        "Activity_finish",
        "Coming_to_believe"
    ],
    "Check whether the user has already granted the runtime permission that your app requires.": [
        "Grant_permission",
        "Have_as_requirement",
        "Time_vector"
    ],
    "If so, your app can access the private user data.": [
        "Capability"
    ],
    "If not, continue to the next step.": [
        "Locative_relation",
        "Intentionally_act",
        "Activity_ongoing"
    ],
    "You must check whether you have that permission every time you perform an operation that requires that permission.": [
        "Frequency",
        "Using",
        "Measure_duration",
        "Grant_permission",
        "Inspecting",
        "Being_obligated",
        "Intentionally_act",
        "Have_as_requirement"
    ],
    "Check whether your app should show a rationale to the user, explaining why your app needs the user to grant a particular runtime permission.": [
        "Reason",
        "Idiosyncrasy",
        "Grant_permission",
        "Required_event",
        "Being_obligated",
        "Reasoning"
    ],
    "If the system determines that your app shouldn't show a rationale, continue to the next step directly, without showing a UI element.": [
        "System",
        "Reasoning",
        "Ingredients",
        "Being_obligated",
        "Intentionally_act",
        "Reasoning",
        "Coming_to_believe",
        "Locative_relation",
        "Activity_ongoing"
    ],
    "If the system determines that your app should show a rationale, however, present the rationale to the user in a UI element.": [
        "System",
        "Concessive",
        "Ingredients",
        "Presence",
        "Being_obligated",
        "Reasoning",
        "Coming_to_believe"
    ],
    "This rationale should clearly explain what data your app is trying to access, and what benefits the app can provide to the user if they grant the runtime permission.": [
        "Having_or_lacking_access",
        "Grant_permission",
        "Attempt",
        "Supply",
        "Capability",
        "Obviousness",
        "Being_obligated"
    ],
    "After the user acknowledges the rationale, continue to the next step.": [
        "Locative_relation",
        "Intentionally_act",
        "Activity_ongoing"
    ],
    "Request the runtime permission that your app requires in order to access the private user data.": [
        "Grant_permission",
        "Have_as_requirement",
        "Execution"
    ],
    "The system displays a runtime permission prompt, such as the one shown on the permissions overview page.": [
        "System",
        "Grant_permission",
        "Cardinal_numbers",
        "Contacting",
        "Grant_permission",
        "Evidence"
    ],
    "Check the user's response, whether they chose to grant or deny the runtime permission.": [
        "Inspecting",
        "Response",
        "Grant_permission",
        "Choosing"
    ],
    "If the user granted the permission to your app, you can access the private user data.": [
        "Grant_permission",
        "Capability"
    ],
    "If the user denied the permission instead, gracefully degrade your app experience so that it provides functionality to the user, even without the information that's protected by that permission.": [
        "Grant_permission",
        "Expertise",
        "Information",
        "Protecting",
        "Supply"
    ],
    "Figure 1 illustrates the workflow and set of decisions associated with this process:": [
        "Execution",
        "Cognitive_connection",
        "Deciding",
        "Execution",
        "Evidence"
    ],
    "To check if the user has already granted your app a particular permission, pass that permission into the ContextCompat.checkSelfPermission ( ) method.": [
        "Process_end",
        "Grant_permission",
        "Execution",
        "Idiosyncrasy",
        "Time_vector",
        "Inspecting"
    ],
    "This method returns either PERMISSION_GRANTED or PERMISSION_DENIED, depending on whether your app has the permission.": [
        "Execution",
        "Execution",
        "Grant_permission",
        "Inclusion"
    ],
    "If the ContextCompat.checkSelfPermission ( ) method returns PERMISSION_DENIED, call shouldShowRequestPermissionRationale ( ).": [
        "Execution",
        "Execution",
        "Execution"
    ],
    "If this method returns true, show an educational UI to the user.": [
        "Execution",
        "Education_teaching",
        "Execution",
        "Reasoning"
    ],
    "In this UI, describe why the feature, which the user wants to enable, needs a particular permission.": [
        "Reason",
        "Grant_permission",
        "Idiosyncrasy",
        "Communicate_categorization",
        "Required_event",
        "Desiring"
    ],
    "After the user views an educational UI, or the return value of shouldShowRequestPermissionRationale ( ) indicates that you don't need to show an educational UI this time, request the permission.": [
        "Education_teaching",
        "Execution",
        "Measure_duration",
        "Grant_permission",
        "Intentionally_act",
        "Execution",
        "Categorization",
        "Reasoning",
        "Required_event",
        "Evidence"
    ],
    "Users see a system permission dialog, where they can choose whether to grant a particular permission to your app.": [
        "Gizmo",
        "Discussion",
        "Locative_relation",
        "Grant_permission",
        "Idiosyncrasy",
        "Capability",
        "Choosing",
        "Grasp"
    ],
    "Traditionally, you manage a request code yourself as part of the permission request and include this request code in your permission callback logic.": [
        "Custom",
        "Execution",
        "Grant_permission",
        "Part_whole",
        "Operating_a_system",
        "Inclusion"
    ],
    "Another option is to use the RequestPermission contract, included in an AndroidX library, where you allow the system to manage the permission request code for you.": [
        "Possibilities",
        "Documents",
        "Buildings",
        "Locative_relation",
        "System",
        "Grant_permission",
        "Increment",
        "Grant_permission",
        "Execution",
        "Using",
        "Operating_a_system",
        "Inclusion"
    ],
    "Because using the RequestPermission contract simplifies your logic, it's recommended that you use it when possible.": [
        "Documents",
        "Temporal_collocation",
        "Using",
        "Likelihood",
        "Using"
    ],
    "To allow the system to manage the request code that's associated with a permissions request, add dependencies on the following libraries in your module's build.gradle file:": [
        "System",
        "Execution",
        "Reliance",
        "Relative_time",
        "Buildings",
        "Operating_a_system",
        "Cognitive_connection",
        "Grant_permission"
    ],
    "You can then use one of the following classes:": [
        "Relative_time",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Using",
        "Capability"
    ],
    "The following steps show how to use the RequestPermission contract.": [
        "Intentionally_act",
        "Documents",
        "Relative_time",
        "Reasoning",
        "Using"
    ],
    "The process is nearly the same for the RequestMultiplePermissions contract.": [
        "Execution",
        "Relational_quantity",
        "Documents",
        "Identicality"
    ],
    "In your activity or fragment's initialization logic, pass in an implementation of ActivityResultCallback into a call to registerForActivityResult ( ).": [
        "Intentionally_act",
        "Part_piece",
        "Execute_plan",
        "Execution",
        "Process_end"
    ],
    "The ActivityResultCallback defines how your app handles the user's response to the permission request.": [
        "Grant_permission",
        "Execution",
        "Intentionally_act",
        "Response",
        "Communicate_categorization"
    ],
    "Keep a reference to the return value of registerForActivityResult ( ), which is of type ActivityResultLauncher.": [
        "Execution",
        "Activity_ongoing"
    ],
    "To display the system permissions dialog when necessary, call the launch ( ) method on the instance of ActivityResultLauncher that you saved in the previous step.": [
        "System",
        "Discussion",
        "Temporal_collocation",
        "Being_necessary",
        "Shoot_projectiles",
        "Execution",
        "Instance",
        "Time_vector",
        "Intentionally_act",
        "Execution"
    ],
    "After launch ( ) is called, the system permissions dialog appears.": [
        "Shoot_projectiles",
        "Gizmo",
        "Grant_permission",
        "Discussion",
        "Execution",
        "Coming_to_be"
    ],
    "When the user makes a choice, the system asynchronously invokes your implementation of ActivityResultCallback, which you defined in the previous step.": [
        "Temporal_collocation",
        "Choosing",
        "System",
        "Time_vector",
        "Intentionally_act",
        "Execute_plan",
        "Causation",
        "Categorization"
    ],
    "Note: Your app can not customize the dialog that appears when you call launch ( ).": [
        "Discussion",
        "Shoot_projectiles",
        "Becoming_aware",
        "Temporal_collocation",
        "Coming_to_be",
        "Capability",
        "Execution"
    ],
    "To provide more information or context to the user, change your app's UI so that it's easier for users to understand why a feature in your app needs a particular permission.": [
        "Information",
        "Reason",
        "Grant_permission",
        "Idiosyncrasy",
        "Grasp",
        "Increment",
        "Supply",
        "Undergo_change",
        "Required_event"
    ],
    "For example, you might change the text in the button that enables the feature.": [
        "Instance",
        "Clothing_parts",
        "Likelihood",
        "Undergo_change"
    ],
    "Also, the text in the system permission dialog references the permission group associated with the permission that you requested.": [
        "Gizmo",
        "Discussion",
        "Grant_permission",
        "Execution",
        "Execution",
        "Cognitive_connection"
    ],
    "This permission grouping is designed for system ease-of-use, and your app shouldn't rely on permissions being within or outside of a specific permission group.": [
        "Grant_permission",
        "Gizmo",
        "Organization",
        "Being_obligated",
        "Coming_up_with",
        "Reliance",
        "Grant_permission"
    ],
    "The following code snippet shows how to handle the permissions response:": [
        "Relative_time",
        "Grant_permission",
        "Response",
        "Part_piece",
        "Resolve_problem",
        "Evidence"
    ],
    "And this code snippet demonstrates the recommended process of checking for a permission, and requesting a permission from the user when necessary:": [
        "Grant_permission",
        "Temporal_collocation",
        "Being_necessary",
        "Part_piece",
        "Execution",
        "Inspecting",
        "Execution",
        "Evidence"
    ],
    "As an alternative to allowing the system to manage the permission request code, you can manage the permission request code yourself.": [
        "System",
        "Grant_permission",
        "Execution",
        "Grant_permission",
        "Capability",
        "Operating_a_system",
        "Possibilities"
    ],
    "To do so, include the request code in a call to requestPermissions ( ).": [
        "Execution",
        "Execution",
        "Intentionally_act",
        "Inclusion"
    ],
    "The following code snippet demonstrates how to request a permission using a request code:": [
        "Relative_time",
        "Part_piece",
        "Using",
        "Grant_permission",
        "Execution",
        "Evidence"
    ],
    "After the user responds to the system permissions dialog, the system then invokes your app's implementation of onRequestPermissionsResult ( ).": [
        "Discussion",
        "System",
        "Temporal_collocation",
        "Execute_plan",
        "Response"
    ],
    "The system passes in the user response to the permission dialog, as well as the request code that you defined, as shown in the following code snippet:": [
        "System",
        "Grant_permission",
        "Execution",
        "Relative_time",
        "Discussion",
        "Part_piece",
        "Traversing",
        "Response",
        "Evidence",
        "Categorization"
    ],
    "If the user denies a permission request, your app should help users understand the implications of denying the permission.": [
        "Grant_permission",
        "Execution",
        "Being_obligated",
        "Grasp",
        "Assistance"
    ],
    "In particular, your app should make users aware of the features that don't work because of the missing permission.": [
        "Being_employed",
        "Success_or_failure",
        "Grant_permission",
        "Being_obligated",
        "Intentionally_act",
        "Causation",
        "Awareness",
        "Causation"
    ],
    "When you do so, keep the following best practices in mind:": [
        "Temporal_collocation",
        "Relative_time",
        "Businesses",
        "Intentionally_act",
        "Activity_ongoing"
    ],
    "Highlight a specific part of your app's UI where there's limited functionality because your app doesn't have the necessary permission.": [
        "Grant_permission",
        "Locative_relation",
        "Being_necessary",
        "Intentionally_act",
        "Existence",
        "Membership"
    ],
    "Several examples of what you could do include the following:": [
        "Instance",
        "Quantity",
        "Capability",
        "Intentionally_act",
        "Inclusion"
    ],
    "Don't display a generic message ; instead, mention which features are unavailable because your app doesn't have the necessary permission.": [
        "Intentionally_act",
        "Grant_permission",
        "Being_necessary",
        "Intentionally_act"
    ],
    "Don't block the user interface.": [
        "Intentionally_act",
        "Eclipse"
    ],
    "In other words, don't display a full-screen warning message that prevents users from continuing to use your app at all.": [
        "Simple_name",
        "Quantity",
        "Increment",
        "Thwarting",
        "Using",
        "Intentionally_act",
        "Process_continue"
    ],
    "At the same time, your app should respect the user's decision to deny a permission.": [
        "Measure_duration",
        "Grant_permission",
        "Identicality",
        "Being_obligated",
        "Judgment",
        "Deciding"
    ],
    "Starting in Android 11 ( API level 30 ), if the user taps Deny for a specific permission more than once during your app's lifetime of installation on a device, the user doesn't see the system permissions dialog if your app requests that permission again.": [
        "Process_start",
        "Frequency",
        "Gizmo",
        "System",
        "Discussion",
        "Grant_permission",
        "Increment",
        "Cardinal_numbers",
        "Rank",
        "Attaching",
        "Intentionally_act",
        "Installing",
        "Execution",
        "Grasp"
    ],
    "The user's action implies `` don't ask again.''": [
        "Execution",
        "Intentionally_act",
        "Evidence",
        "Intentionally_act"
    ],
    "On previous versions, users would see the system permissions dialog each time your app requested a permission, unless the user had previously selected a `` don't ask again'' checkbox or option.": [
        "Time_vector",
        "System",
        "Discussion",
        "Possibilities",
        "Measure_duration",
        "Grant_permission",
        "Time_vector",
        "Grasp",
        "Execution",
        "Execution",
        "Intentionally_act",
        "Choosing"
    ],
    "In certain situations, the permission might be denied automatically, without the user taking any action.": [
        "Grant_permission",
        "Likelihood",
        "Quantity",
        "Likelihood",
        "Intentionally_act",
        "Taking"
    ],
    "( Similarly, a permission might be granted automatically as well. )": [
        "Grant_permission",
        "Likelihood"
    ],
    "It's important to not assume anything about automatic behavior.": [
        "Adopt_selection",
        "Conduct",
        "Importance"
    ],
    "Each time your app needs to access functionality that requires a permission, you should check that your app is still granted that permission.": [
        "Grant_permission",
        "Measure_duration",
        "Required_event",
        "Inspecting",
        "Being_obligated",
        "Continued_state_of_affairs",
        "Have_as_requirement"
    ],
    "To provide the best user experience when asking for app permissions, also see App permissions best practices.": [
        "Expertise",
        "Temporal_collocation",
        "Desirability",
        "Grant_permission",
        "Execution",
        "Businesses",
        "Supply",
        "Grasp"
    ],
    "Starting in Android 11 ( API level 30 ), whenever your app requests a permission related to location, microphone, or camera, the user-facing permissions dialog contains an option called Only this time, as shown in Figure 2.": [
        "Grant_permission",
        "Locale",
        "Grant_permission",
        "Measure_duration",
        "Evidence",
        "Cardinal_numbers",
        "Discussion",
        "Execution",
        "Cardinal_numbers",
        "Rank",
        "Execution",
        "Sole_instance",
        "Possibilities",
        "Cognitive_connection",
        "Inclusion",
        "Process_start"
    ],
    "If the user selects this option in the dialog, your app is granted a temporary one-time permission.": [
        "Possibilities",
        "Discussion",
        "Grant_permission",
        "Choosing"
    ],
    "Your app can then access the related data for a period of time that depends on your app's behavior and the user's actions:": [
        "Frequency",
        "Measure_duration",
        "Cognitive_connection",
        "Conduct",
        "Temporal_collocation",
        "Intentionally_act",
        "Capability"
    ],
    "When the user next opens your app and a feature in your app requests access to location, microphone, or camera, the user is prompted for the permission again.": [
        "Temporal_collocation",
        "Execution",
        "Having_or_lacking_access",
        "Locale",
        "Grant_permission",
        "Cause_to_start",
        "Body_movement"
    ],
    "If your app targets Android 11 ( API level 30 ) or higher and isn't used for a few months, the system protects user data by automatically resetting the sensitive runtime permissions that the user had granted your app.": [
        "Calendric_unit",
        "System",
        "Health_response",
        "Grant_permission",
        "Cardinal_numbers",
        "Rank",
        "Quantity",
        "Protecting",
        "Position_on_a_scale",
        "Using"
    ],
    "This action has the same effect as if the user viewed a permission in system settings and changed your app's access level to Deny.": [
        "Objective_influence",
        "Grant_permission",
        "Gizmo",
        "Having_or_lacking_access",
        "Intentionally_act",
        "Identicality",
        "Rank",
        "Inclusion",
        "Undergo_change",
        "Categorization"
    ],
    "If your app follows best practices for requesting permissions at runtime, you don't need to make any changes to your app.": [
        "Relative_time",
        "Grant_permission",
        "Undergo_change",
        "Businesses",
        "Intentionally_act",
        "Quantity",
        "Causation",
        "Required_event",
        "Execution"
    ],
    "If needed, you can ask the user to prevent the system from resetting your app's permissions.": [
        "Have_as_requirement",
        "System",
        "Grant_permission",
        "Capability",
        "Execution",
        "Preventing"
    ],
    "This is useful in situations where users expect your app to work primarily in the background, even without the user interacting with your app, such as in the following use cases:": [
        "Relative_time",
        "Instance",
        "Locative_relation",
        "Expectation"
    ],
    "To direct the user to your app's page in system settings, invoke an intent that includes the Intent.ACTION _ AUTO_REVOKE_PERMISSIONS intent action.": [
        "Contacting",
        "Gizmo",
        "Intentionally_act",
        "Aiming",
        "Inclusion"
    ],
    "From this screen, users can prevent the system from resetting your app's permissions by doing the following:": [
        "System",
        "Capability",
        "Intentionally_act",
        "Grant_permission",
        "Preventing"
    ],
    "To check whether auto-reset functionality is disabled for your app, call isAutoRevokeWhitelisted ( ).": [
        "Render_nonfunctional",
        "Inspecting",
        "Execution"
    ],
    "If this method returns true, then the system doesn't auto-reset your app's permissions.": [
        "Execution",
        "System",
        "Execution",
        "Intentionally_act",
        "Grant_permission",
        "Temporal_collocation"
    ],
    "Some apps depend on access to sensitive user information related to call logs and SMS messages.": [
        "Having_or_lacking_access",
        "Health_response",
        "Information",
        "Relational_quantity",
        "Execution",
        "Cognitive_connection"
    ],
    "If you want to request the permissions specific to call logs and SMS messages and publish your app to the Play Store, you must prompt the user to set your app as the default handler for a core system function before requesting these runtime permissions.": [
        "Performers_and_roles",
        "Gizmo",
        "Storing",
        "Gizmo",
        "Being_obligated",
        "Execution",
        "Intentionally_create",
        "Grant_permission",
        "Execution",
        "Execution",
        "Possession",
        "Cause_to_start"
    ],
    "For more information on default handlers, including guidance on showing a default handler prompt to users, see the guide on permissions used only in default handlers.": [
        "Grant_permission",
        "Sole_instance",
        "Information",
        "Grasp",
        "Reasoning",
        "Using",
        "Inclusion",
        "Increment"
    ],
    "This section describes how to test several aspects of runtime permissions.": [
        "Part_whole",
        "Grant_permission",
        "Distinctiveness",
        "Quantity",
        "Operational_testing"
    ],
    "To grant all runtime permissions automatically when you install an app on an emulator or test device, use the - g option for the adb shell install command, as demonstrated in the following code snippet:": [
        "Quantity",
        "Temporal_collocation",
        "Operational_testing",
        "Gizmo",
        "Weapon",
        "Execution",
        "Relative_time",
        "Grant_permission",
        "Possibilities",
        "Part_piece",
        "Installing",
        "Using",
        "Reasoning"
    ],
    "To verify that the system resets your app's permissions, do the following:": [
        "System",
        "Grant_permission",
        "Intentionally_act",
        "Verification"
    ],
    "Save the default amount of time that the system waits to reset an app's permissions.": [
        "Measure_duration",
        "System",
        "Waiting",
        "Quantity",
        "Grant_permission"
    ],
    "That way, you can restore it after testing:": [
        "Execution",
        "Operational_testing",
        "Capability",
        "Rejuvenation"
    ],
    "Reduce the amount of time that the system waits to reset the permissions.": [
        "Cause_change_of_position_on_a_scale",
        "Measure_duration",
        "System",
        "Waiting",
        "Grant_permission",
        "Quantity"
    ],
    "In the following example, the system is modified such that it resets an app's permissions only one second after you stop interacting with an app:": [
        "Instance",
        "System",
        "Sole_instance",
        "Relative_time",
        "Measure_duration",
        "Cardinal_numbers",
        "Cause_change",
        "Grant_permission",
        "Preventing"
    ],
    "Invoke the auto-reset process manually, as shown in the following snippet.": [
        "Relative_time",
        "Part_piece",
        "Execution",
        "Evidence"
    ],
    "Make sure that the test device has been turned on for a short while, about 45 seconds, before you run this command.": [
        "Operational_testing",
        "Gizmo",
        "Execution",
        "Duration_attribute",
        "Execution",
        "Becoming"
    ],
    "Verify that your app can handle the auto-reset event.": [
        "Event",
        "Capability",
        "Resolve_problem",
        "Verification"
    ],
    "Restore the default amount of time that the system waits before it auto-resets an app's permissions:": [
        "Measure_duration",
        "System",
        "Waiting",
        "Quantity",
        "Grant_permission"
    ],
    "For additional information about permissions, read these articles:": [
        "Grant_permission",
        "Increment",
        "Information",
        "Reading"
    ],
    "To learn more about requesting permissions, download the following sample apps:": [
        "Increment",
        "Grant_permission",
        "Relative_time",
        "Education_teaching",
        "Execution"
    ],
    "Ask for permissions in context, when the user starts to interact with the feature that requires it.": [
        "Execution",
        "Grant_permission",
        "Temporal_collocation",
        "Process_start",
        "Have_as_requirement"
    ],
    "Always provide the option to cancel an educational UI flow related to permissions.": [
        "Frequency",
        "Education_teaching",
        "Fluidic_motion",
        "Grant_permission",
        "Cognitive_connection",
        "Possibilities",
        "Supply"
    ],
    "If the user denies or revokes a permission that a feature needs, gracefully degrade your app so that the user can continue using your app, possibly by disabling the feature that requires the permission.": [
        "Render_nonfunctional",
        "Required_event",
        "Grant_permission",
        "Have_as_requirement",
        "Using",
        "Activity_ongoing",
        "Capability",
        "Likelihood"
    ],
    "Don't assume any system behavior.": [
        "Intentionally_act",
        "Adopt_selection",
        "Gizmo",
        "Conduct",
        "Quantity"
    ],
    "For example, don't assume that permissions appear in the same permission group.": [
        "Instance",
        "Intentionally_act",
        "Adopt_selection",
        "Grant_permission",
        "Organization",
        "Identicality",
        "Grant_permission",
        "Coming_to_be"
    ],
    "A permission group merely helps the system minimize the number of system dialogs that are presented to the user when an app requests closely-related permissions.": [
        "Grant_permission",
        "System",
        "Discussion",
        "Temporal_collocation",
        "Execution",
        "Grant_permission",
        "Execution",
        "Presence",
        "Quantity",
        "Assistance"
    ],
    "In your app's manifest file, declare the permissions that your app might need to request.": [
        "Grant_permission",
        "Likelihood",
        "Have_as_requirement",
        "Execution"
    ],
    "Design your app's UX so that specific actions in your app are associated with specific runtime permissions.": [
        "Intentionally_act",
        "Grant_permission",
        "Coming_up_with",
        "Cognitive_connection"
    ],
    "Users should know which actions might require them to grant permission for your app to access private user data.": [
        "Intentionally_act",
        "Being_obligated",
        "Likelihood",
        "Have_as_requirement",
        "Grant_permission",
        "Certainty"
    ],
    "Wait for the user to invoke the task or action in your app that requires access to specific private user data.": [
        "Being_obligated",
        "Intentionally_act",
        "Having_or_lacking_access",
        "Have_as_requirement"
    ],
    "At that time, your app can request the runtime permission that's required for accessing that data.": [
        "Measure_duration",
        "Grant_permission",
        "Execution",
        "Capability",
        "Being_necessary"
    ],
    "androidx.activity, version 1.2.0 or later.": [
        "Time_vector"
    ],
    "androidx.fragment, version 1.3.0 or later.": [
        "Time_vector"
    ],
    "To request a single permission, use RequestPermission.": [
        "Execution",
        "Grant_permission",
        "Sole_instance"
    ],
    "To request multiple permissions at the same time, use RequestMultiplePermissions.": [
        "Measure_duration",
        "Grant_permission",
        "Quantity",
        "Identicality",
        "Execution"
    ],
    "Several examples of what you could do include the following: Show a message where the feature's results or data would have appeared.": [
        "Reasoning",
        "Causation",
        "Instance",
        "Quantity",
        "Capability",
        "Intentionally_act",
        "Inclusion",
        "Locative_relation",
        "Coming_to_be",
        "Relative_time"
    ],
    "Display a different button that contains an error icon and color.": [
        "Clothing_parts",
        "Stimulus_focus",
        "Similarity",
        "Inclusion"
    ],
    "Show a message where the feature's results or data would have appeared.": [
        "Causation",
        "Locative_relation",
        "Coming_to_be",
        "Obviousness"
    ],
    "While your app's activity is visible, your app can access the data.": [
        "Intentionally_act",
        "Capability",
        "Obviousness"
    ],
    "If the user sends your app to the background, your app can continue to access the data for a short period of time.": [
        "Frequency",
        "Measure_duration",
        "Duration_attribute",
        "Causation",
        "Activity_ongoing",
        "Capability"
    ],
    "If you launch a foreground service while the activity is visible, and the user then moves your app to the background, your app can continue to access the data until that foreground service stops.": [
        "Rite",
        "Intentionally_act",
        "Thwarting",
        "Launch_process",
        "Temporal_collocation",
        "Obviousness",
        "Motion",
        "Activity_ongoing",
        "Capability"
    ],
    "If the user revokes the one-time permission, such as in system settings, your app can not access the data, regardless of whether you launched a foreground service.": [
        "Gizmo",
        "Grant_permission",
        "Public_services",
        "Shoot_projectiles",
        "Capability"
    ],
    "As with any permission, if the user revokes your app's one-time permission, your app's process terminates.": [
        "Quantity",
        "Grant_permission",
        "Execution"
    ],
    "Tap Permissions, which loads the App permissions settings screen.": [
        "Grant_permission",
        "Grant_permission"
    ],
    "Turn off the option called Remove permissions if app isn't used, as shown in Figure 3.": [
        "Cardinal_numbers",
        "Grant_permission",
        "Execution",
        "Possibilities",
        "Using",
        "Reasoning",
        "Temporal_subregion"
    ],
    "Android RuntimePermissionsBasic Sample Java | Kotlin": [],
    "Hello Steven the debug log trace tells you that you need ... requires android.permission.READ _ CONTACTS": [
        "Emptying",
        "Required_event",
        "Contacting",
        "Have_as_requirement"
    ],
    "so just try something by editing the Manifest.xml like adding another permission, let see if its not correctly readed.": [
        "Grant_permission",
        "Hear",
        "Increment",
        "Grasp",
        "Attempt",
        "Grant_permission"
    ],
    "and check this line without **": [
        "Inspecting"
    ],
    "dan": [],
    "Make sure you add it outside of the application tag.": [
        "Using",
        "Part_inner_outer",
        "Cause_change"
    ],
    "While developing for a target platform of 2.3.3 using Eclipse on Ubuntu, I had permission failures in the log file that indicated I needed this exact line while working on something similar.": [
        "Eclipse",
        "Grant_permission",
        "Using",
        "Being_obligated",
        "Success_or_failure",
        "Correctness",
        "Similarity",
        "Being_necessary",
        "Working_on",
        "Cause_to_make_progress",
        "Evidence"
    ],
    "It wasn't until I moved the * uses-permission ... READ_CONTACTS * line to outside the application tag that things worked.": [
        "Using",
        "Motion",
        "Being_employed"
    ],
    "with the api 23, permission <uses-permission\u00a0android:name=\"android.pemission.READ_CONTACTS\"/> dont work, change the api level in the emulator for api 22 -LRB- lollipop -RRB- or lower": [
        "Grant_permission",
        "Working_on",
        "Rank",
        "Undergo_change"
    ],
    "If the device is running Android 6.0 or higher, and your app's target SDK is 23 or higher: The app has to list the permissions in the manifest, and it must request each dangerous permission it needs while the app is running.": [
        "Gizmo",
        "Grant_permission",
        "Grant_permission",
        "Being_obligated",
        "Risky_situation",
        "Required_event",
        "Execution",
        "Execution",
        "Being_obligated",
        "Position_on_a_scale"
    ],
    "The user can grant or deny each permission, and the app can continue to run with limited capabilities even if the user denies a permission request.": [
        "Grant_permission",
        "Capability",
        "Execution",
        "Capability",
        "Execution",
        "Activity_ongoing"
    ],
    "EXAMPLE:": [],
    "Requesting Permissions at Run Time": [
        "Execution",
        "Grant_permission",
        "Measure_duration",
        "Operating_a_system"
    ],
    "Beginning in Android 6.0 -LRB- API level 23 -RRB-, users grant permissions to apps while the app is running, not when they install the app.": [
        "Process_start",
        "Rank",
        "Temporal_collocation",
        "Grant_permission",
        "Installing",
        "Execution"
    ],
    "If the permission you need to add isn't listed under the normal permissions, you'll need to deal with `` Runtime Permissions''.": [
        "Grant_permission",
        "Make_agreement_on_action",
        "Mental_property",
        "Required_event",
        "Grant_permission"
    ],
    "Runtime permissions are permissions that are requested as they are needed while the app is running.": [
        "Grant_permission",
        "Required_event",
        "Execution",
        "Execution"
    ],
    "These permissions will show a dialog to the user, similar to the following one:": [
        "Grant_permission",
        "Discussion",
        "Cardinal_numbers",
        "Relative_time",
        "Similarity",
        "Reasoning"
    ],
    "The first step when adding a `` Runtime Permission'' is to add it to the AndroidManifest:": [
        "Cause_change_of_position_on_a_scale",
        "Intentionally_act",
        "Ordinal_numbers",
        "Temporal_collocation"
    ],
    "Next, you'll need to initiate the permission request and handle the result.": [
        "Grant_permission",
        "Causation",
        "Execution",
        "Required_event",
        "Resolve_problem",
        "Activity_start"
    ],
    "The following code shows how to do this in the context of an Activity, but this is also possible from within a Fragment.": [
        "Intentionally_act",
        "Part_piece",
        "Relative_time",
        "Likelihood",
        "Intentionally_act",
        "Evidence"
    ],
    "Contacts.getAll ( ) crashes Android app when permissions are not granted \u00b7 Issue # 516 \u00b7 morenoh149/react-native-contacts \u00b7 GitHub": [
        "Temporal_collocation",
        "Grant_permission",
        "Point_of_dispute",
        "Impact"
    ],
    "Contacts.getAll ( ) crashes Android app when permissions are not granted": [
        "Temporal_collocation",
        "Grant_permission",
        "Impact"
    ],
    "If permissions are not granted, the callback should be called, with the error field being non-null/undefined.": [
        "Grant_permission",
        "Fields",
        "Being_obligated",
        "Execution"
    ],
    "React Native does not even have the chance to catch the error.": [
        "Hunting_success_or_failure",
        "Intentionally_act",
        "Likelihood"
    ],
    "Check permissions before calling Contacts.getAll ( )": [
        "Grant_permission",
        "Execution"
    ],
    "I'm not sure if there's anything we can/should do about this.": [
        "Relational_quantity",
        "Intentionally_act",
        "Existence"
    ],
    "Checking for permissions before performing privileged actions seems fine to me.": [
        "Wealthiness",
        "Intentionally_act",
        "Inspecting",
        "Intentionally_act",
        "Desirability",
        "Grant_permission",
        "Appearance"
    ],
    "I think, just crashing silently is not a way to go either.": [
        "Impact",
        "Execution",
        "Becoming",
        "Opinion"
    ],
    "Maybe provide some kind of error handling which will prevent a crash.": [
        "Impact",
        "Relational_quantity",
        "Preventing",
        "Resolve_problem",
        "Supply"
    ],
    "I'm not the most Java literate person at a moment, but will try to provide some PR with a fix, if be able to scrape some free time, to help with that issue.": [
        "People",
        "Predicament",
        "Make_noise",
        "Measure_duration",
        "Point_of_dispute",
        "Relational_quantity",
        "Expensiveness",
        "Assistance",
        "Capability",
        "Supply",
        "Attempt"
    ],
    "There is inconsistent behaviour on Android vs iOS though.": [
        "Temporal_pattern",
        "Existence",
        "Concessive"
    ],
    "In iOS, permissions aren't granted, it will be handled in the error block:": [
        "Grant_permission",
        "Measure_linear_extent",
        "Resolve_problem"
    ],
    "In Android, if permissions are not granted, errors do not get caught by this block.": [
        "Grant_permission",
        "Hunting_success_or_failure",
        "Measure_linear_extent",
        "Intentionally_act",
        "Execution"
    ],
    "It crashes the entire app entirely.": [
        "Impact",
        "Ranked_expectation"
    ],
    "Why provide an error handler for when the error handler only catches iOS errors and not Android errors ?": [
        "Reason",
        "Temporal_collocation",
        "Hunting_success_or_failure",
        "Sole_instance",
        "Supply"
    ],
    "It's misleading to developers to see an error handler block that does not catch errors.": [
        "Measure_linear_extent",
        "Hunting_success_or_failure",
        "Intentionally_act",
        "Grasp"
    ],
    "I feel it would be better if both Android & iOS were handled the same way.": [
        "Execution",
        "Feeling",
        "Identicality",
        "Quantity",
        "Resolve_problem",
        "Desirability"
    ],
    "It does not seem appropriate that calling a ReactNative function can cause an entire Android app to crash.": [
        "Ranked_expectation",
        "Appearance",
        "Execution",
        "Capability",
        "Impact",
        "Causation",
        "Intentionally_act"
    ],
    "I feel errors should be handled at the ReactNative boundary.": [
        "Boundary",
        "Being_obligated",
        "Intentionally_act",
        "Feeling"
    ],
    "I solved it by the using the below piece of `` try catch'' code logic:": [
        "Part_piece",
        "Resolve_problem",
        "Using",
        "Attempt"
    ],
    "The app will not crash, since all the": [
        "Quantity",
        "Impact"
    ],
    "It's still crashing working fine on some phones but on few phones it's crashing": [
        "Being_employed",
        "Contacting",
        "Desirability",
        "Relational_quantity",
        "Quantity",
        "Continued_state_of_affairs",
        "Impact"
    ],
    "Android Version 5: Hawaii P8 lite": [],
    "in android manifest file use": [],
    "Btw, just sharing my code if anyone just wants a quick copy and paste:": [
        "Duplication",
        "Speed",
        "Desiring"
    ],
    "This issue is stale, please provide more information about the status": [
        "Point_of_dispute",
        "Information",
        "Increment",
        "Stimulus_focus",
        "Supply"
    ],
    "I ran into this too and it was super weird, I found you need both WRITE_CONTACTS and READ_CONTACTS regardless of API version.": [
        "Sufficiency",
        "Required_event",
        "Quantity",
        "Desirability",
        "Stimulus_focus",
        "Execution",
        "Locating"
    ],
    "The README sections them off as if READ was a part of WRITE for Api 23 +, that's what confused me at least.": [
        "Part_whole",
        "Experiencer_obj",
        "Relational_quantity",
        "Locative_relation",
        "Membership"
    ],
    "The weirdest part was how getAll did not throw an error, it just hung indefintiely, while addContact would create the contact in the mobile app BUT THEN throw an error on READ permission not granted, which was very difficult to reason through.": [
        "Bringing",
        "Causation",
        "Grant_permission",
        "Degree",
        "Part_whole",
        "Difficulty",
        "Contacting",
        "Intentionally_create",
        "Cause_motion",
        "Intentionally_act"
    ],
    "If you want to update the readme that would be welcome.": [
        "Desiring"
    ],
    "My PermissionsAndroid is granted and i can not catch the error, still have the crash with API 22 when i make a getAll call.": [
        "Hunting_success_or_failure",
        "Impact",
        "Temporal_collocation",
        "Execution",
        "Causation",
        "Continued_state_of_affairs",
        "Capability"
    ],
    "You must use read profile permission in android platform.": [
        "Being_obligated",
        "Grant_permission",
        "Reading",
        "Using"
    ],
    "When the app needs to use any of the protected features of the device ( sending network requests, accessing the camera, sending an SMS, etc ) it must obtain the appropriate permission from the user to do so.": [
        "Temporal_collocation",
        "Gizmo",
        "Network",
        "Execution",
        "Required_event",
        "Sending",
        "Intentionally_act",
        "Getting",
        "Grant_permission",
        "Being_obligated",
        "Quantity",
        "Using"
    ],
    "Before Marshmallow, permissions were handled at install-time and specified in the AndroidManifest.xml within the project.": [
        "Grant_permission",
        "Project",
        "Resolve_problem"
    ],
    "Full list of permissions can be found here.": [
        "Feeling",
        "Grant_permission",
        "Locative_relation",
        "Likelihood",
        "Locating"
    ],
    "After Marshmallow, permissions must now be requested at runtime before being used.": [
        "Grant_permission",
        "Temporal_collocation",
        "Being_obligated",
        "Execution",
        "Using"
    ],
    "There are a number of libraries available to make runtime permissions easier.": [
        "Buildings",
        "Grant_permission",
        "Causation",
        "Existence",
        "Quantity"
    ],
    "If you to get started quickly, check out our guide on managing runtime permissions with PermissionsDispatcher.": [
        "Operating_a_system",
        "Grant_permission",
        "Execution",
        "Speed",
        "Locative_relation",
        "Activity_start",
        "Inspecting"
    ],
    "Permissions before Marshmallow Permissions were much simpler before Marshmallow ( API 23 ).": [
        "Relational_quantity",
        "Grant_permission"
    ],
    "All permissions were handled at install-time.": [
        "Grant_permission",
        "Quantity",
        "Resolve_problem"
    ],
    "When a user went to install an app from the Google Play Store, the user was presented a list of permissions that the app required ( some people referred to this as a `` wall of permissions''.": [
        "Temporal_collocation",
        "Performers_and_roles",
        "Grant_permission",
        "People",
        "Storing",
        "Relational_quantity",
        "Architectural_part",
        "Presence",
        "Installing",
        "Sending",
        "Becoming",
        "Being_necessary"
    ],
    "The user could either accept all the permissions and continue to install the app or decide not to install the app.": [
        "Quantity",
        "Deciding",
        "Installing",
        "Receiving",
        "Grant_permission",
        "Capability",
        "Activity_ongoing"
    ],
    "It was an all or nothing approach.": [
        "Quantity",
        "Execution"
    ],
    "There was no way to grant only certain permissions to the app and no way for the user to revoke certain permissions after the app was installed.": [
        "Quantity",
        "Sole_instance",
        "Grant_permission",
        "Execution",
        "Likelihood",
        "Installing",
        "Existence"
    ],
    "Example of pre-Marshmallow permissions requested by the Dropbox app:": [
        "Instance",
        "Execution",
        "Grant_permission"
    ],
    "For an app developer, permissions were very simple.": [
        "Grant_permission",
        "Degree"
    ],
    "To request one of the many permissions, simply specify it in the AndroidManifest.xml: For example, an application that needs to read the user's contacts would add the following to it's AndroidManifest.xml:": [
        "Execution",
        "Grant_permission",
        "Instance",
        "Cause_change_of_position_on_a_scale",
        "Quantity",
        "Contacting",
        "Cardinal_numbers",
        "Relative_time",
        "Required_event",
        "Using",
        "Categorization"
    ],
    "That's all there was to it.": [
        "Quantity",
        "Existence"
    ],
    "The user had no way of changing permissions, even after installing the app.": [
        "Quantity",
        "Grant_permission",
        "Exchange",
        "Being_obligated",
        "Installing"
    ],
    "This made it easy for developers to deal with permissions, but wasn't the best user experience.": [
        "Grant_permission",
        "Expertise",
        "Desirability",
        "Execution",
        "Difficulty",
        "Resolve_problem"
    ],
    "Permission Updates in Marshmallow Marshmallow brought large changes to the permissions model.": [
        "Grant_permission",
        "Grant_permission",
        "Vehicle",
        "Dimension",
        "Undergo_change",
        "Causation"
    ],
    "It introduced the concept of runtime permissions.": [
        "Grant_permission"
    ],
    "These are permissions that are requested while the app is running ( instead of before the app is installed ).": [
        "Installing",
        "Execution",
        "Execution",
        "Grant_permission"
    ],
    "These permission can then be allowed or denied by the user.": [
        "Grant_permission",
        "Temporal_collocation",
        "Likelihood",
        "Grant_permission"
    ],
    "For approved permissions, these can also be revoked at a later time.": [
        "Grant_permission",
        "Likelihood",
        "Measure_duration",
        "Time_vector"
    ],
    "This means there are a couple more things to consider when working with permissions for a Marshmallow app.": [
        "Personal_relationship",
        "Being_employed",
        "Grant_permission",
        "Increment",
        "Temporal_collocation",
        "Categorization",
        "Existence",
        "Evidence"
    ],
    "Keep in mind that your targetSdkVersion must be > = 23 and your emulator / device must be running Marshmallow to see the new permissions model.": [
        "Gizmo",
        "Grant_permission",
        "Vehicle",
        "Being_obligated",
        "Age",
        "Perception_experience",
        "Execution"
    ],
    "If this isn't the case, see the backwards compatibility section to understand how permissions will behave on your configuration.": [
        "Compatibility",
        "Grant_permission",
        "Part_whole",
        "Conduct",
        "Reasoning",
        "Grasp",
        "Categorization"
    ],
    "Normal Permissions When you need to add a new permission, first check this page to see if the permission is considered a PROTECTION_NORMAL permission.": [
        "Temporal_collocation",
        "Ordinal_numbers",
        "Contacting",
        "Grant_permission",
        "Required_event",
        "Age",
        "Inspecting",
        "Categorization",
        "Grasp",
        "Grant_permission"
    ],
    "In Marshmallow, Google has designated certain permissions to be `` safe'' and called these `` Normal Permissions''.": [
        "Grant_permission",
        "Likelihood",
        "Mental_property",
        "Appointing",
        "Execution"
    ],
    "These are things like ACCESS_NETWORK_STATE, INTERNET, etc. which can't do much harm.": [
        "Relational_quantity",
        "Capability",
        "Intentionally_act"
    ],
    "Normal permissions are automatically granted at install time and never prompt the user asking for permission.": [
        "Measure_duration",
        "Grant_permission",
        "Grant_permission",
        "Mental_property",
        "Installing",
        "Execution",
        "Cause_to_start",
        "Frequency"
    ],
    "Important: Normal Permissions must be added to the AndroidManifest:": [
        "Grant_permission",
        "Mental_property",
        "Being_obligated"
    ],
    "Runtime Permissions If the permission you need to add isn't listed under the normal permissions, you'll need to deal with `` Runtime Permissions''.": [
        "Grant_permission",
        "Make_agreement_on_action",
        "Mental_property",
        "Required_event",
        "Grant_permission",
        "Grant_permission"
    ],
    "Permission Groups Permission Groups avoids spamming the user with a lot of permission requests while allowing the app developer to only request the minimal amount of permissions needed at any point in time.": [
        "Execution",
        "Grant_permission",
        "Sole_instance",
        "Measure_duration",
        "Grant_permission",
        "Avoiding",
        "Execution",
        "Quantity",
        "Locale",
        "Grant_permission",
        "Quantity",
        "Execution",
        "Being_necessary",
        "Grant_permission",
        "Quantity"
    ],
    "Related permissions are grouped into one of the permission groups.": [
        "Grant_permission",
        "Grant_permission",
        "Cognitive_connection",
        "Execution",
        "Cardinal_numbers"
    ],
    "When an app requests a permission that belongs to a particular permission group ( i.e. READ_CONTACTS ), Android asks the user about the higher level group instead ( CONTACTS ).": [
        "Temporal_collocation",
        "Execution",
        "Grant_permission",
        "Idiosyncrasy",
        "Rank",
        "Organization",
        "Contacting",
        "Position_on_a_scale",
        "Possession",
        "Execution"
    ],
    "This way when the app later needs the WRITE_CONTACTS permission, Android can automatically grant this itself without prompting the user.": [
        "Execution",
        "Temporal_collocation",
        "Grant_permission",
        "Time_vector",
        "Cause_to_start",
        "Required_event",
        "Capability"
    ],
    "In most of your interaction with the permission API's you'll be working with the individual permissions and not the permission groups, but pay close attention to what the API expects as both permissions and permission groups are Strings.": [
        "Being_employed",
        "People",
        "Commerce_pay",
        "Grant_permission",
        "Execution",
        "Social_connection",
        "Quantity",
        "Relational_quantity",
        "Expectation",
        "Attention",
        "Grant_permission"
    ],
    "Backwards Compatibility There are 2 main scenarios to think about when it comes to backwards compatibility:": [
        "Compatibility",
        "Temporal_collocation",
        "Compatibility",
        "First_rank",
        "Waking_up",
        "Cardinal_numbers",
        "Awareness",
        "Existence"
    ],
    "Your app is targeting an API less than Marshmallow ( TargetSdkVersion < 23 ), but the emulator / device is Marshmallow:": [
        "Gizmo",
        "Aiming"
    ],
    "Your app will continue to use the old permissions model.": [
        "Grant_permission",
        "Vehicle",
        "Age",
        "Using",
        "Activity_ongoing"
    ],
    "All permissions listed in the AndroidManifest will be asked for at install time.": [
        "Measure_duration",
        "Quantity",
        "Installing",
        "Execution",
        "Grant_permission"
    ],
    "Users will be able to revoke permissions after the app is installed.": [
        "Grant_permission",
        "Installing",
        "Capability"
    ],
    "It's important to test this scenario since the results of certain actions without the appropriate permission can be unexpected.": [
        "Intentionally_act",
        "Likelihood",
        "Grant_permission",
        "Importance",
        "Operational_testing",
        "Causation",
        "Expectation",
        "Capability"
    ],
    "The emulator / device is running something older than Marshmallow, but you app targets Marshmallow ( TargetSdkVersion > = 23 ):": [
        "Gizmo",
        "Age",
        "Execution"
    ],
    "How to Ask For Permissions Google recommends in this video that there are four patterns to consider when thinking about permissions:": [
        "Pattern",
        "Grant_permission",
        "Cardinal_numbers",
        "Existence",
        "Temporal_collocation",
        "Grant_permission",
        "Awareness",
        "Categorization",
        "Execution"
    ],
    "Each pattern dictates a different way of requesting permissions.": [
        "Pattern",
        "Grant_permission",
        "Similarity",
        "Execution"
    ],
    "For instance, when requesting for critical but unclear permissions, use a warm welcome screen to help understand a permission is requested.": [
        "Instance",
        "Temporal_collocation",
        "Judgment_communication",
        "Grant_permission",
        "Ambient_temperature",
        "Grant_permission",
        "Obviousness",
        "Execution",
        "Grasp",
        "Assistance",
        "Execution",
        "Using"
    ],
    "For critical permissions, such as a camera app that needs camera permission, ask up-front for it.": [
        "Grant_permission",
        "Judgment_communication",
        "Grant_permission",
        "Required_event",
        "Execution"
    ],
    "Secondary features can be requested later in context, such as a geotagging app when asking for a location permission.": [
        "Temporal_collocation",
        "Locale",
        "Grant_permission",
        "Likelihood",
        "Execution",
        "Time_vector",
        "Execution"
    ],
    "For permissions that are secondary and unclear, you should include a rationale explanation if you really need them.": [
        "Grant_permission",
        "Obviousness",
        "Being_obligated",
        "Required_event",
        "Inclusion"
    ],
    "Storage permissions Rethink about whether you need read/write storage permissions ( i.e. android.permission.WRITE _ EXTERNAL_STORAGE or android.permission.READ _ EXTERNAL_STORAGE ), which give you all files on the SD card.": [
        "Storing",
        "Grant_permission",
        "Quantity",
        "Storing",
        "Required_event",
        "Self_motion",
        "Giving"
    ],
    "Instead, you should use methods on Context to access package-specific directories on external storage.": [
        "Execution",
        "Having_or_lacking_access",
        "Storing",
        "Using",
        "Being_obligated"
    ],
    "Your app always have access to read/write to these directories, so there is no need to permissions to request it:": [
        "Having_or_lacking_access",
        "Quantity",
        "Grant_permission",
        "Frequency",
        "Execution",
        "Needing",
        "Existence"
    ],
    "Managing Permissions using ADB Permissions can also be managed on the command-line using adb with the following commands.": [
        "Success_or_failure",
        "Relative_time",
        "Execution",
        "Using",
        "Grant_permission",
        "Operating_a_system",
        "Likelihood"
    ],
    "Granting and revoking runtime permissions:": [
        "Grant_permission"
    ],
    "Installing an app with all permissions granted:": [
        "Grant_permission",
        "Quantity",
        "Installing"
    ],
    "Overview By default, an Android app starts with zero permissions granted to it.": [
        "Grant_permission",
        "Cardinal_numbers",
        "Process_start"
    ],
    "Guide to Android App Permissions & How to Use Them Smartly": [
        "Grant_permission",
        "Using"
    ],
    "Android app permissions can give apps control of your phone and access to your private conversations, photos, and more.": [
        "Contacting",
        "Having_or_lacking_access",
        "Chatting",
        "Physical_artworks",
        "Increment",
        "Grant_permission",
        "Control",
        "Giving",
        "Capability"
    ],
    "Here's what you need to know to stay safe and in control.": [
        "Locative_relation",
        "Risky_situation",
        "Control",
        "Required_event",
        "State_continue",
        "Awareness"
    ],
    "Anyone who's ever installed an app from Google Play has likely seen an app permission request.": [
        "Performers_and_roles",
        "Grant_permission",
        "Execution",
        "Installing",
        "Likelihood",
        "Grasp"
    ],
    "It looks something like this: The ubiquitous app permission request.": [
        "Grant_permission",
        "Execution",
        "Locative_relation",
        "Scrutiny"
    ],
    "These requests pop up the first time an app needs access to sensitive hardware or data on your phone or tablet.": [
        "Execution",
        "Ingest_substance",
        "Having_or_lacking_access",
        "Health_response",
        "Contacting",
        "Ordinal_numbers",
        "Required_event",
        "Measure_duration"
    ],
    "If you've installed a camera app, for example, it will need your permission to access the camera before it can actually take photos.": [
        "Instance",
        "Physical_artworks",
        "Required_event",
        "Capability",
        "Have_as_requirement",
        "Installing",
        "Grant_permission"
    ],
    "So, in addition to being cautious about the apps you install from Google Play, it's also important to know which permissions those apps request from you.": [
        "Performers_and_roles",
        "Execution",
        "Installing",
        "Communication_response",
        "Awareness",
        "Importance"
    ],
    "`` Normal'' vs. `` dangerous'' permissions System permissions are divided into two groups: `` normal'' and `` dangerous.''": [
        "System",
        "Execution",
        "Grant_permission",
        "Cardinal_numbers",
        "Separating"
    ],
    "Normal permission groups are allowed by default, because they don't pose a risk to your privacy.": [
        "Mental_property",
        "Grant_permission",
        "Run_risk",
        "Execution",
        "Intentionally_act",
        "Grant_permission",
        "Feigning"
    ],
    "( e.g., Android allows apps to access the Internet without your permission. )": [
        "Grant_permission"
    ],
    "Dangerous permission groups, however, can give apps access to things like your calling history, private messages, location, camera, microphone, and more.": [
        "Grant_permission",
        "Concessive",
        "Having_or_lacking_access",
        "Locale",
        "Increment",
        "Execution",
        "Execution",
        "Risky_situation",
        "Giving",
        "Capability"
    ],
    "Therefore, Android will always ask you to approve dangerous permissions.": [
        "Grant_permission",
        "Risky_situation",
        "Frequency",
        "Grant_permission",
        "Execution"
    ],
    "In earlier versions of Android, accepting potentially dangerous permission groups was an all-or-nothing affair.": [
        "Grant_permission",
        "Execution",
        "Relative_time",
        "Risky_situation",
        "Receiving",
        "Cognitive_connection"
    ],
    "You either allowed all permissions an app needed to function -- before installation -- or you declined them all, which meant you couldn't install the app.": [
        "Grant_permission",
        "Installing",
        "Quantity",
        "Change_position_on_a_scale",
        "Required_event",
        "Installing",
        "Capability",
        "Grant_permission",
        "Evidence"
    ],
    "Sketchy app developers could abuse this system to sneak in permissions that went beyond the scope of their app ( e.g., calendar apps that not only requested access to your calendar, but also your microphone ).": [
        "Self_motion",
        "Grant_permission",
        "Scope",
        "Sole_instance",
        "Having_or_lacking_access",
        "Abusing",
        "Becoming",
        "Capability",
        "System",
        "Execution"
    ],
    "Thankfully, that mostly changed with the release of Android 6.0 back in October 2015.": [
        "Observable_body_parts",
        "Calendric_unit",
        "Undergo_change",
        "Releasing"
    ],
    "Now Android allows you to decide which permissions to accept on a case-by-case basis -- after the app is installed.": [
        "Temporal_collocation",
        "Grant_permission",
        "Body_decoration",
        "Grant_permission",
        "Deciding",
        "Receiving",
        "Installing"
    ],
    "Sketchy app developers sneak in permissions they don't need.": [
        "Intentionally_act",
        "Self_motion",
        "Have_as_requirement",
        "Grant_permission"
    ],
    "Why would a calendar app need access to your microphone ?": [
        "Reason",
        "Having_or_lacking_access",
        "Required_event"
    ],
    "`` This approach streamlines the app install process, since the user does not need to grant permissions when they install or update the app,'' Google says.": [
        "Execution",
        "Grant_permission",
        "Temporal_collocation",
        "Intentionally_act",
        "Installing",
        "Required_event",
        "Execution"
    ],
    "`` It also gives the user more control over the app's functionality ; for example, a user could choose to give a camera app access to the camera but not to the device location.''": [
        "Instance",
        "Gizmo",
        "Having_or_lacking_access",
        "Choosing",
        "Control",
        "Giving",
        "Capability",
        "Increment",
        "Giving"
    ],
    "However, lazy or malicious app developers can skirt this new permission system by intentionally targeting older API levels, which is why you can still find apps on Google Play that request all permissions before installation.": [
        "Concessive",
        "Grant_permission",
        "System",
        "Rank",
        "Reason",
        "Performers_and_roles",
        "Grant_permission",
        "Installing",
        "Execution",
        "Quantity",
        "Age",
        "Age",
        "Continued_state_of_affairs",
        "Avoiding",
        "Locating",
        "Capability"
    ],
    "This loophole should be closed later in 2018, though.": [
        "Concessive",
        "Time_vector",
        "Being_obligated",
        "Body_movement"
    ],
    "Potentially dangerous permissions to look out for Anyone concerned about their privacy and security should keep an eye out for apps that request access to following nine permission groups.": [
        "Grant_permission",
        "Locative_relation",
        "Being_at_risk",
        "Observable_body_parts",
        "Having_or_lacking_access",
        "Grant_permission",
        "Risky_situation",
        "Execution",
        "Relative_time",
        "Scrutiny",
        "Being_obligated",
        "Topic",
        "Execution",
        "Activity_ongoing"
    ],
    "Each group contains multiple permissions, and approving a single permission from any group automatically approves all other permissions within that same group.": [
        "Grant_permission",
        "Organization",
        "Quantity",
        "Grant_permission",
        "Quantity",
        "Sole_instance",
        "Quantity",
        "Increment",
        "Identicality",
        "Inclusion",
        "Grant_permission",
        "Judgment"
    ],
    "( For example, if you allow an app to see who's calling you, you'll allow it to make phone calls, too. )": [
        "Instance",
        "Contacting",
        "Execution",
        "Contacting",
        "Causation",
        "Perception_experience",
        "Grant_permission"
    ],
    "Body Sensors Allows access to your health data from heart-rate monitors, fitness trackers, and other external sensors.": [
        "Execution",
        "Having_or_lacking_access",
        "Medical_conditions",
        "Increment",
        "Grant_permission"
    ],
    "The good: Fitness apps need this permission to monitor your heart rate while you exercise, provide health tips, etc..": [
        "Part_orientational",
        "Frequency",
        "Medical_conditions",
        "Part_orientational",
        "Practice",
        "Required_event",
        "Grant_permission",
        "Supply",
        "Scrutiny"
    ],
    "The bad: A malicious app could spy on your health.": [
        "Medical_conditions",
        "Desirability",
        "Perception_active",
        "Capability"
    ],
    "Calendar Allows apps to read, create, edit, or delete your calendar events.": [
        "Intentionally_create",
        "Event",
        "Categorization",
        "Grant_permission"
    ],
    "The good: Calendar apps obviously need this permission to create calendar events, but so do social networking apps that allow you to add events and invitations to your calendar.": [
        "Social_event",
        "Desirability",
        "Event",
        "Intentionally_create",
        "Grant_permission",
        "Likelihood",
        "Required_event",
        "Grant_permission",
        "Intentionally_act"
    ],
    "The bad: A malicious app can spy on your personal routines, meeting times, etc. -- and even delete them from your calendar.": [
        "Come_together",
        "Timespan",
        "Desirability",
        "Capability",
        "Perception_active"
    ],
    "Camera Allows apps to use your camera to take photos and record videos.": [
        "Physical_artworks",
        "Recording",
        "Have_as_requirement",
        "Using"
    ],
    "The good: Camera apps need this permission so you can take pictures.": [
        "Physical_artworks",
        "Capability",
        "Have_as_requirement",
        "Required_event",
        "Grant_permission"
    ],
    "The bad: A malicious app can secretly turn on your camera and record what's going on around you.": [
        "Desirability",
        "Process_continue",
        "Secrecy_status",
        "Becoming",
        "Recording",
        "Capability"
    ],
    "Contacts Allows apps to read, create, or edit your contact list, as well as access the list of all accounts ( e.g., Facebook, Instagram, Twitter, etc. ) used on your device.": [
        "Contacting",
        "Intentionally_create",
        "Contacting",
        "Having_or_lacking_access",
        "Sounds",
        "Gizmo",
        "Quantity",
        "Categorization",
        "Grant_permission",
        "Using"
    ],
    "The good: A communication app can use this to let you text or call other people in your contact list.": [
        "People",
        "Contacting",
        "Communication",
        "Increment",
        "Desirability",
        "Execution",
        "Grant_permission",
        "Using",
        "Capability"
    ],
    "The bad: A malicious app can steal the entire contents of your address book and then target your friends and family with spam, phishing scams, etc..": [
        "Topic",
        "Personal_relationship",
        "Kinship",
        "Ranked_expectation",
        "Desirability",
        "Capability",
        "Temporal_collocation",
        "Theft"
    ],
    "Location Allows apps to access your approximate location ( using cellular base stations and Wi-Fi hotspots ) and exact location ( using GPS ).": [
        "Locale",
        "Locale",
        "Locale_by_use",
        "Correctness",
        "Using"
    ],
    "The good: Navigation apps can help you get around ; camera apps can geo-tag your photos so you know where they were taken ; and shopping apps can estimate your address for delivery.": [
        "Physical_artworks",
        "Shopping",
        "Delivery",
        "Locative_relation",
        "Event",
        "Estimating",
        "Speak_on_topic",
        "Execution",
        "Assistance",
        "Awareness",
        "Capability"
    ],
    "The bad: A malicious app can secretly track your location to build a profile on your daily habits, or even let thieves know when you're not at home.": [
        "Locale",
        "Custom",
        "Theft",
        "Temporal_collocation",
        "Buildings",
        "Frequency",
        "Desirability",
        "Secrecy_status",
        "Awareness",
        "Grant_permission",
        "Building",
        "Capability"
    ],
    "Microphone Allows apps to use your microphone to record audio.": [
        "Recording",
        "Using"
    ],
    "The good: A music recognition app like Shazam uses this to listen to any music you want to identify ; a communication app can use this to allow you to send voice messages to your friends.": [
        "Communication",
        "Personal_relationship",
        "Performing_arts",
        "Quantity",
        "Grant_permission",
        "Verification",
        "Desirability",
        "Possession",
        "Sending",
        "Perception_active",
        "Using",
        "Using",
        "Capability"
    ],
    "The bad: A malicious app can secretly record what's going on around you, including private talks with your family, conversations with your doctor, and confidential business meetings.": [
        "Medical_professionals",
        "Businesses",
        "Discussion",
        "Kinship",
        "Secrecy_status",
        "Desirability",
        "Process_continue",
        "Chatting",
        "Secrecy_status",
        "Recording",
        "Inclusion",
        "Capability"
    ],
    "Phone Allows apps to know your phone number, current cellular network information, and ongoing call status.": [
        "Contacting",
        "Contacting",
        "Quantity",
        "Network",
        "Information",
        "Execution",
        "Grant_permission",
        "Temporal_collocation",
        "Awareness",
        "Process_continue"
    ],
    "Apps can also make and end calls, see who's calling you, read and edit your calling logs, add voicemail, use VoIP, and even redirect calls to other numbers.": [
        "Cause_to_end",
        "Contacting",
        "Quantity",
        "Redirecting",
        "Increment",
        "Execution",
        "Categorization",
        "Causation",
        "Grasp",
        "Capability"
    ],
    "The good: Communication apps can use this to let you call your friends.": [
        "Communication",
        "Personal_relationship",
        "Execution",
        "Grant_permission",
        "Using",
        "Capability"
    ],
    "The bad: A malicious app can spy on your phone habits and make calls without your consent ( including paid calls ).": [
        "Contacting",
        "Contacting",
        "Commitment",
        "Custom",
        "Commerce_pay",
        "Desirability",
        "Inclusion",
        "Capability",
        "Perception_active",
        "Causation"
    ],
    "SMS Allows apps to read, receive, and send SMS messages, as well as receive WAP push messages and MMS messages.": [
        "Receiving",
        "Cause_motion",
        "Measure_linear_extent",
        "Categorization",
        "Causation",
        "Grant_permission"
    ],
    "The good: Communication apps can use this to let you message your friends.": [
        "Communication",
        "Personal_relationship",
        "Grant_permission",
        "Using",
        "Capability"
    ],
    "The bad: A malicious app can spy on your messages, use your phone to spam others, and even subscribe you to unwanted paid services.": [
        "Increment",
        "Public_services",
        "Contacting",
        "Commerce_pay",
        "Desirability",
        "Perception_active",
        "Using",
        "Capability"
    ],
    "Storage Allows apps to read and write to your internal or external storage.": [
        "Storing",
        "Categorization",
        "Storing",
        "Grant_permission"
    ],
    "The good: A music app can save downloaded songs to your SD card, or a social networking app can save your friends' photos to your phone.": [
        "Social_event",
        "Personal_relationship",
        "Physical_artworks",
        "Performing_arts",
        "Contacting",
        "Desirability",
        "Likelihood"
    ],
    "The bad: A malicious app can secretly read, change, and delete any of your saved documents, music, photos, and other files.": [
        "Documents",
        "Physical_artworks",
        "Increment",
        "Desirability",
        "Performing_arts",
        "Secrecy_status",
        "Reading",
        "Quantity",
        "Undergo_change",
        "Capability"
    ],
    "Other permission types In addition to the permissions above, Android also has administrator privileges and root privileges.": [
        "Grant_permission",
        "Grant_permission",
        "Increment",
        "Text_creation",
        "Communication_response",
        "Inclusion"
    ],
    "Here's what these mean: What are device administrator privileges ?": [
        "Locative_relation",
        "Gizmo",
        "Causation"
    ],
    "Device administrator privileges ( sometimes called `` admin rights'' ) allow apps to change your device password, lock your phone, or even permanently wipe all data from your device.": [
        "Gizmo",
        "Contacting",
        "Quantity",
        "Execution",
        "Being_obligated",
        "Inhibit_movement",
        "Frequency",
        "Grant_permission",
        "Cause_change"
    ],
    "Malicious apps can use these privileges against you, but they're also important for legitimate apps.": [
        "Legality",
        "Capability",
        "Using",
        "Importance"
    ],
    "For example, security apps with admin privileges are difficult to uninstall, which helps stop thieves from removing them from your phone.": [
        "Instance",
        "Being_at_risk",
        "Contacting",
        "Preventing",
        "Removing",
        "Theft",
        "Assistance",
        "Difficulty"
    ],
    "Our free AVG AntiVirus FREE for Android uses device administrator privileges to let you remotely lock or wipe your device if it's ever lost or stolen.": [
        "Expensiveness",
        "Gizmo",
        "Earnings_and_losses",
        "Self_motion",
        "Grant_permission",
        "Inhibit_movement",
        "Using"
    ],
    "What are root privileges ?": [],
    "Root privileges ( sometimes called `` root access'' ) are the holy grail of permissions.": [
        "Grant_permission",
        "Containers",
        "Frequency",
        "Execution"
    ],
    "They're the most dangerous, because any app with root privileges can do whatever it wants -- regardless which permissions you've already blocked or enabled.": [
        "Eclipse",
        "Quantity",
        "Grant_permission",
        "Risky_situation",
        "Time_vector",
        "Capability",
        "Desiring",
        "Intentionally_act"
    ],
    "As you can imagine, malicious apps with root privileges can wreak havoc on your phone.": [
        "Contacting",
        "Capability",
        "Awareness",
        "Causation"
    ],
    "Thankfully, Android blocks these by default.": [
        "Measure_linear_extent"
    ],
    "But malware makers are always looking for ways to get them.": [
        "Manufacturing",
        "Frequency",
        "Execution",
        "Execution",
        "Scrutiny"
    ],
    "How to check app permissions Curious which permissions an app requires before you install it ?": [
        "Installing",
        "Grant_permission",
        "Inspecting",
        "Have_as_requirement"
    ],
    "Want to see which permissions are already being used on your phone ?": [
        "Time_vector",
        "Grant_permission",
        "Contacting",
        "Using",
        "Grasp"
    ],
    "Here are 4 ways to check.": [
        "Locative_relation",
        "Inspecting",
        "Cardinal_numbers",
        "Execution"
    ],
    "See app permissions on Google Play before you install When viewing an app description in Google Play, scroll down to the developer info at the bottom of the screen and tap `` Permission details'' to see which permissions the app will ask for.": [
        "Performers_and_roles",
        "Communicate_categorization",
        "Part_orientational",
        "Part_orientational",
        "Grant_permission",
        "Ingestion",
        "Execution",
        "Grasp",
        "Perception_active",
        "Temporal_collocation",
        "Perception_experience",
        "Installing",
        "Grant_permission",
        "Using"
    ],
    "( These descriptions are generic and written by Google, so they won't tell you exactly why that particular app needs the permissions, but they can still help you know what to expect before you install. )": [
        "Communicate_categorization",
        "Reason",
        "Grant_permission",
        "Frequency",
        "Idiosyncrasy",
        "Required_event",
        "Continued_state_of_affairs",
        "Capability",
        "Telling",
        "Assistance",
        "Expectation",
        "Awareness"
    ],
    "Permission details for any app can be viewed right in Google Play.": [
        "Correctness",
        "Performers_and_roles",
        "Quantity",
        "Grant_permission",
        "Likelihood",
        "Categorization"
    ],
    "See all permissions used by a specific app If you've already installed an app, here's how to check which permissions it has access to.": [
        "Having_or_lacking_access",
        "Quantity",
        "Using",
        "Time_vector",
        "Inclusion",
        "Installing",
        "Inspecting",
        "Grant_permission",
        "Perception_experience",
        "Locative_relation"
    ],
    "Open your device Settings and tap Apps.": [
        "Gizmo",
        "Attaching"
    ],
    "Choose any app, and tap Permissions.": [
        "Attaching",
        "Grant_permission",
        "Quantity",
        "Choosing"
    ],
    "See all apps that are using a specific permission This is similar to the method above, but it works from the opposite direction.": [
        "Execution",
        "Quantity",
        "Being_employed",
        "Using",
        "Similarity",
        "Grant_permission",
        "Grasp"
    ],
    "You first pick a permission, and then you see every app that's currently using it.": [
        "Ordinal_numbers",
        "Frequency",
        "Temporal_collocation",
        "Grant_permission",
        "Choosing",
        "Using",
        "Perception_experience",
        "Temporal_collocation"
    ],
    "Tap the gear icon, then App permissions.": [
        "Gizmo",
        "Grant_permission",
        "Attaching",
        "Temporal_collocation"
    ],
    "Choose any permission to see which apps are using it.": [
        "Quantity",
        "Choosing",
        "Using",
        "Grasp",
        "Grant_permission"
    ],
    "See app permissions by using AVG AntiVirus for Android Our free AVG AntiVirus app can also show you which of your apps are using high, average, or low permissions -- and let you easily change any that you're uncomfortable with.": [
        "Expensiveness",
        "Dimension",
        "Quantity",
        "Grant_permission",
        "Position_on_a_scale",
        "Grant_permission",
        "Grasp",
        "Using",
        "Undergo_change",
        "Typicality",
        "Reasoning",
        "Capability"
    ],
    "( Get AVG AntiVirus for free from Google Play ) Open AVG AntiVirus and tap the menu icon.": [
        "Expensiveness",
        "Performers_and_roles",
        "Execution",
        "Using"
    ],
    "Then scroll down and tap App Permissions.": [
        "Temporal_collocation",
        "Ingestion",
        "Grant_permission",
        "Using"
    ],
    "Why am I getting two requests for the same permission ?": [
        "Reason",
        "Grant_permission",
        "Execution",
        "Cardinal_numbers",
        "Identicality",
        "Execution"
    ],
    "You might sometimes see two back-to-back notifications for the same permission.": [
        "Telling",
        "Grant_permission",
        "Likelihood",
        "Identicality",
        "Frequency",
        "Cardinal_numbers",
        "Grasp"
    ],
    "This is because the first is from the app itself, explaining why it needs the permission.": [
        "Ordinal_numbers",
        "Reason",
        "Required_event",
        "Grant_permission"
    ],
    "The second is from Android, and is a generic request for the permission.": [
        "Measure_duration",
        "Grant_permission",
        "Execution"
    ],
    "Only this second request actually allows or rejects the permission.": [
        "Sole_instance",
        "Measure_duration",
        "Grant_permission",
        "Respond_to_proposal",
        "Execution",
        "Grant_permission"
    ],
    "As Google explains to app developers, `` -LSB- I -RSB- f a user launches a photography app, the user probably won't be surprised that the app asks for permission to use the camera, but the user might not understand why the app wants access to the user's location or contacts.": [
        "Experiencer_obj",
        "Reason",
        "Having_or_lacking_access",
        "Locale",
        "Contacting",
        "Likelihood",
        "Using",
        "Likelihood",
        "Activity_start",
        "Grasp",
        "Grant_permission",
        "Execution",
        "Desiring"
    ],
    "Before you request a permission, you should consider providing an explanation to the user.''": [
        "Execution",
        "Being_obligated",
        "Grant_permission",
        "Supply",
        "Categorization"
    ],
    "Just remember ... App permissions exist to protect you.": [
        "Protecting",
        "Existence",
        "Grant_permission",
        "Memory"
    ],
    "They might seem annoying at first, but you only need to approve them once per app, and it's well worth your time to carefully read and consider these popups before tapping.": [
        "Ordinal_numbers",
        "Frequency",
        "Being_obligated",
        "Likelihood",
        "Appearance",
        "Stimulus_focus",
        "Attaching",
        "Categorization",
        "Grant_permission",
        "Required_event",
        "Sole_instance",
        "Measure_duration",
        "Categorization"
    ],
    "After all, even malicious apps can sneak into Google Play.": [
        "Quantity",
        "Performers_and_roles",
        "Capability",
        "Self_motion"
    ],
    "Get Free Protection Against Unsafe Apps Install free AVG AntiVirus for Android to protect your phone against unsafe apps, dangerous downloads, and malware.": [
        "Expensiveness",
        "Contacting",
        "Protecting",
        "Risky_situation",
        "Risky_situation",
        "Protecting",
        "Execution"
    ],
    "Get it for PC, iOS, Mac": [
        "Execution"
    ],
    "Get it for Mac, iOS, PC": [
        "Execution"
    ],
    "Get it for PC, Mac, iOS": [
        "Execution"
    ],
    "Get it for iOS, Mac, PC": [
        "Execution"
    ],
    "Should I use a VPN for gaming ?": [
        "Being_obligated",
        "Using"
    ],
    "How to Manage and Remove Chrome Extensions": [
        "Make_agreement_on_action",
        "Removing",
        "Operating_a_system"
    ],
    "Private IP vs Public IP: What's the Difference ?": [
        "Temporal_pattern",
        "Similarity"
    ],
    "What Is ISP Throttling ?": [],
    "Why It Happens & How to Stop It": [
        "Reason",
        "Event",
        "Preventing"
    ],
    "How to Allow or Block Pop-Ups in Safari": [
        "Measure_linear_extent",
        "Travel",
        "Grant_permission"
    ],
    "Signs Your Phone Has Been Hacked": [
        "Sign_agreement",
        "Contacting"
    ],
    "Best Chrome Extensions for Security and Privacy": [
        "Make_agreement_on_action",
        "Being_at_risk"
    ],
    "Do I Need a VPN ?": [
        "Intentionally_act",
        "Required_event"
    ],
    "Facebook Leak: Check if Your Data is Part of The Breach": [
        "Compliance",
        "Part_whole"
    ],
    "What Is the Difference Between IPv4 and IPv6 ?": [
        "Similarity"
    ],
    "How to Choose the Best Password Manager": [
        "People_by_vocation",
        "Origin",
        "Choosing"
    ],
    "How to Speed Up Chrome, Firefox, and IE": [
        "Intoxicants"
    ],
    "What Is Router Hacking and How to Prevent It": [
        "Preventing"
    ],
    "How to Stop Endless Buffering Now": [
        "Temporal_collocation",
        "Activity_stop"
    ],
    "How to Unblock Websites & Access Restricted Content": [
        "Having_or_lacking_access"
    ],
    "What Is a Proxy Server and How Does It Work ?": [
        "Working_on",
        "Intentionally_act"
    ],
    "What Is Ad Tracking ?": [],
    "How to Watch TV Shows and Episodes Online": [
        "Perception_active",
        "Evidence"
    ],
    "The Best Browsers for Security and Privacy in 2021": [
        "Being_at_risk"
    ],
    "What Is Two-Factor Authentication ( 2FA ) ?": [],
    "Everything You Need to Know": [
        "Required_event",
        "Awareness"
    ],
    "Dark Web Scans: When and Why to Use One": [
        "Network",
        "Temporal_collocation",
        "Reason",
        "Cardinal_numbers",
        "Scrutiny",
        "Using"
    ],
    "How to Download Your Google Data with Google Takeout": [],
    "What Does Google Do With My Data ... and Should I Be Worried ?": [
        "Intentionally_act",
        "Being_obligated",
        "Experiencer_focus",
        "Intentionally_act"
    ],
    "Data Brokers: Who They Are and How They Work": [
        "Working_on"
    ],
    "What Is an IP Address ?": [
        "Speak_on_topic"
    ],
    "The Ultimate Guide to Virtual Private Networks ( VPN )": [
        "Network"
    ],
    "What Is Data Encryption and How Does it Work ?": [
        "Intentionally_act",
        "Working_on"
    ],
    "Contact Tracing Apps and Their Privacy Concerns": [
        "Contacting",
        "Emotion_directed"
    ],
    "Don't Let Your Old Social Media Accounts Come Back to Haunt You": [
        "Intentionally_act",
        "Social_event",
        "Age",
        "Taking_sides",
        "Execution",
        "Grant_permission"
    ],
    "5 Quick Tips For a Safer Browsing Experience": [
        "Expertise"
    ],
    "How to Set Up a VPN on Windows": [
        "Connecting_architecture",
        "Intentionally_create"
    ],
    "How to Hide Apps on an iPhone or iPad": [
        "Eclipse"
    ],
    "How to Stay Sane on Social Media in the COVID-19 Age": [
        "Social_event",
        "Calendric_unit",
        "Temporary_stay"
    ],
    "The Pros and Cons of Video Chat Apps": [
        "Expertise",
        "Chatting"
    ],
    "Is Your Smartphone Tracking You ?": [
        "Cotheme"
    ],
    "The Very Best Encrypted Messaging Apps": [],
    "Should I Use a VPN, Proxy, or Tor ?": [
        "Natural_features",
        "Being_obligated",
        "Using"
    ],
    "The Uses and Abuses of Facial Recognition": [
        "Abusing",
        "Grooming"
    ],
    "Are You an Online Oversharer ?": [],
    "How to Hide Apps on Android": [
        "Eclipse"
    ],
    "How to Clear Your Search and Browser History": [
        "Obviousness",
        "Scrutiny",
        "History"
    ],
    "How to Clear Browser Cookies Completely": [
        "Food",
        "Obviousness"
    ],
    "Find Your IP Address on Windows or Mac": [
        "Coming_to_believe",
        "Connecting_architecture"
    ],
    "The Most Dangerous & Famous Hackers Today": [
        "Relational_quantity",
        "Risky_situation",
        "Temporal_collocation"
    ],
    "The Privacy Implications of DNA Testing": [
        "Operational_testing"
    ],
    "The Nasty Truth of Data Breaches": [
        "Compliance",
        "Desirability"
    ],
    "How to Create a Strong Password -- That You Won't Forget": [
        "Being_obligated",
        "Exertive_force",
        "Cause_to_start",
        "Remembering_information"
    ],
    "5 Steps to Stop Robocalls: The Ultimate Guide to Beating the Bots": [
        "Cause_harm",
        "Preventing",
        "Intentionally_act"
    ],
    "Dark Web Scans: When and Why to Use One Dark Web Scans: When and Why to Use One": [
        "Network",
        "Temporal_collocation",
        "Reason",
        "Scrutiny",
        "Cardinal_numbers",
        "Using"
    ],
    "How to Download Your Google Data with Google Takeout How to Download Your Google Data with Google Takeout": [],
    "Data Brokers: Who They Are and How They Work Data Brokers: Who They Are and How They Work": [
        "Working_on"
    ],
    "Protect your Android against threats with AVG AntiVirus": [
        "Commitment",
        "Protecting"
    ],
    "Protect your iPhone against threats with AVG Mobile Security": [
        "Being_at_risk",
        "Commitment",
        "Protecting"
    ],
    "Virus Scanning & Malware Removal": [],
    "Privacy | Cookies | All third party trademarks are the property of their respective owners.": [
        "Food",
        "Quantity",
        "Participation",
        "Part_whole",
        "Distinctiveness",
        "Possession",
        "Possession"
    ],
    "\u00a9 1988-2021 Copyright Avast Software s.r.o.": [],
    "Log in to AVG MyAccount": [],
    "We use cookies and similar technologies to recognize your repeat visits and preferences, to measure the effectiveness of campaigns, and improve our websites.": [
        "Food",
        "Artifact",
        "Similarity",
        "Execution",
        "Quantity",
        "Becoming_aware",
        "Using",
        "Cause_to_make_progress"
    ],
    "For settings and more information about cookies, view our Cookie Policy.": [
        "Food",
        "Food",
        "Law",
        "Information",
        "Increment",
        "Categorization"
    ],
    "By clicking `` I accept'' on this banner or using our site, you consent to the use of cookies.": [
        "Impact",
        "Locale_by_use",
        "Food",
        "Commitment",
        "Using"
    ],
    "How to set a minimum crop window ?": [
        "Extreme_value",
        "Execution",
        "Connecting_architecture",
        "Intentionally_create"
    ],
    "This topic describes techniques for controlling the size and alignment of nodes when placed in a JavaFX layout pane.": [
        "Topic",
        "Temporal_collocation",
        "Control",
        "Execution"
    ],
    "A main advantage of using the built-in JavaFX layout panes is that the size and alignment of nodes is handled by the pane.": [
        "First_rank",
        "Using",
        "Intentionally_act"
    ],
    "As the pane is resized, the nodes are resized according to their preferred size range preferences.": [
        "Range",
        "Attributed_information"
    ],
    "Note that not all node classes are resizable.": [
        "Quantity"
    ],
    "UI controls and layout panes are resizable, but shapes, Text objects, and Group objects are not resizable and are treated as rigid objects in a layout.": [
        "Shapes",
        "Execution",
        "Prohibiting",
        "Communicate_categorization"
    ],
    "If you want more control over the size of controls in your UI, you can set their preferred size range directly.": [
        "Prohibiting",
        "Partiality",
        "Range",
        "Control",
        "Increment",
        "Intentionally_create",
        "Possession",
        "Capability"
    ],
    "The layout pane then uses your settings to determine the size of the control.": [
        "Control",
        "Temporal_collocation",
        "Using"
    ],
    "To manage the position of the controls, you can use the alignment properties for the layout panes.": [
        "Prohibiting",
        "Capability",
        "Operating_a_system",
        "Possession",
        "Using"
    ],
    "This topic provides simple examples for sizing and aligning nodes in a pane.": [
        "Topic",
        "Instance",
        "Supply"
    ],
    "The LayoutSizingAligning.java file contains the source code for the samples described in this topic.": [
        "Source_of_getting",
        "Topic",
        "Communicate_categorization",
        "Inclusion"
    ],
    "The LayoutSizingAligning.zip file contains the NetBeans IDE project for the sample.": [
        "Project",
        "Inclusion"
    ],
    "Layouts query the preferred size of their nodes by invoking the prefWidth ( height ) and prefHeight ( width ) methods.": [
        "Dimension",
        "Dimension",
        "Execution",
        "Questioning"
    ],
    "By default, UI controls compute default values for their preferred size that is based on the content of the control.": [
        "Control",
        "Prohibiting"
    ],
    "For example, the computed size of a Button object is determined by the length of the text and the size of the font used for the label, plus the size of any image.": [
        "Instance",
        "Closure",
        "Dimension",
        "Labeling",
        "Similarity",
        "Quantity",
        "Using"
    ],
    "Typically, the computed size is just big enough for the control and the label to be fully visible.": [
        "Sufficiency",
        "Control",
        "Labeling",
        "Degree",
        "Obviousness",
        "Size"
    ],
    "UI controls also provide default minimum and maximum sizes that are based on the typical usage of the control.": [
        "Extreme_value",
        "Control",
        "Prohibiting",
        "Extreme_value",
        "Supply"
    ],
    "For example, the maximum size of a Button object defaults to its preferred size because you don't usually want buttons to grow arbitrarily large.": [
        "Instance",
        "Closure",
        "Clothing_parts",
        "Dimension",
        "Extreme_value",
        "Intentionally_act",
        "Change_position_on_a_scale",
        "Possession"
    ],
    "However, the maximum size of a ScrollPane object is unbounded because typically you do want them to grow to fill their spaces.": [
        "Concessive",
        "Extreme_value",
        "Change_position_on_a_scale",
        "Intentionally_act",
        "Desiring",
        "Filling"
    ],
    "You can use the default size constraints of nodes, or you can set them to provide the look that you want.": [
        "Scrutiny",
        "Capability",
        "Possession",
        "Using",
        "Supply",
        "Intentionally_create"
    ],
    "For example, Figure 2-1 shows the default size of several buttons and a list view in a border pane.": [
        "Instance",
        "Clothing_parts",
        "Boundary",
        "Quantity",
        "Opinion",
        "Evidence"
    ],
    "Suppose that the look that you want is the screen shown in Figure 2-2, which shows the UI controls sized according to desired constraints.": [
        "Scrutiny",
        "Desiring",
        "Prohibiting",
        "Possession",
        "Attributed_information",
        "Evidence",
        "Evidence",
        "Opinion"
    ],
    "Applications often need to directly set the minimum, preferred, and maximum size constraints on controls.": [
        "Using",
        "Extreme_value",
        "Partiality",
        "Extreme_value",
        "Prohibiting",
        "Frequency",
        "Required_event",
        "Intentionally_create"
    ],
    "The following sections provide tips for overriding the computed sizes to get the look that you want.": [
        "Part_whole",
        "Scrutiny",
        "Relative_time",
        "Possession",
        "Part_orientational",
        "Execution",
        "Supply"
    ],
    "You can go through the trouble of determining the height and width of each button and then setting the preferred size of each button to the greatest height and width of the buttons in the set.": [
        "Dimension",
        "Clothing_parts",
        "Dimension",
        "Clothing_parts",
        "Execution",
        "Desirability",
        "Capability",
        "Predicament",
        "Temporal_collocation",
        "Coming_to_believe",
        "Becoming"
    ],
    "An easier option is to let the layout panes do the work.": [
        "Possibilities",
        "Intentionally_act",
        "Grant_permission"
    ],
    "The layout pane that you want to use is determined by the effect that you want to achieve.": [
        "Objective_influence",
        "Possession",
        "Using",
        "Accomplishment"
    ],
    "The scene in Figure 2-1 uses a VBox layout pane for the buttons on the right and uses the computed sizes for the buttons.": [
        "Locale_by_event",
        "Part_orientational",
        "Clothing_parts",
        "Using"
    ],
    "The buttons already have the same height, so only the width needs to be changed.": [
        "Clothing_parts",
        "Dimension",
        "Dimension",
        "Identicality",
        "Time_vector",
        "Sole_instance",
        "Required_event",
        "Undergo_change"
    ],
    "The scene in Figure 2-2 uses a VBox pane to take advantage of the default behavior that makes the width of the VBox pane the same as the preferred width of its widest element.": [
        "Locale_by_event",
        "Identicality",
        "Dimension",
        "Ingredients",
        "Conduct",
        "Using",
        "Have_as_requirement",
        "Causation"
    ],
    "To enable all of the buttons to be resized to the width of the VBox pane, the maximum width of each button is set to the Double.MAX _ VALUE constant, which enables a control to grow without limit.": [
        "Clothing_parts",
        "Dimension",
        "Clothing_parts",
        "Control",
        "Extreme_value",
        "Quantity",
        "Change_position_on_a_scale",
        "Intentionally_create"
    ],
    "An alternative to using the maximum value constant is to set the maximum width to a specific value, such as 80.0.": [
        "Extreme_value",
        "Dimension",
        "Using",
        "Possibilities",
        "Intentionally_create"
    ],
    "Example 2-1 shows how to make a column of buttons the same width using a VBox pane.": [
        "Instance",
        "Clothing_parts",
        "Dimension",
        "Identicality",
        "Using",
        "Causation",
        "Evidence"
    ],
    "Example 2-1 Set a Column of Buttons to the Same Width": [
        "Instance",
        "Clothing_parts",
        "Dimension"
    ],
    "In the Layout Sizing and Aligning sample, the elements of the UI are laid out using a border pane.": [
        "Boundary",
        "Ingredients",
        "Using",
        "Locative_relation"
    ],
    "The column of buttons is put in the right region of the border pane to limit the size of the buttons to the preferred width of the widest button.": [
        "Morality_evaluation",
        "Locale",
        "Boundary",
        "Clothing_parts",
        "Dimension",
        "Clothing_parts",
        "Causation"
    ],
    "The center region of a border pane expands to fill any space available so if you put the VBox pane in the center region, the VBox pane and the buttons also expand.": [
        "Boundary",
        "Locale_by_use",
        "Locale",
        "Clothing_parts",
        "Quantity",
        "Filling",
        "Causation",
        "Expansion",
        "Expansion"
    ],
    "The scene in Figure 2-1 uses an HBox layout pane for the buttons on the bottom and uses the computed sizes for those buttons.": [
        "Locale_by_event",
        "Part_orientational",
        "Clothing_parts",
        "Using"
    ],
    "The buttons have different widths and heights.": [
        "Clothing_parts",
        "Similarity",
        "Dimension",
        "Dimension"
    ],
    "The scene in Figure 2-2 uses a horizontal TilePane layout pane to take advantage of the default behavior that makes each cell ( tile ) the same size.": [
        "Locale_by_event",
        "Building_subparts",
        "Conduct",
        "Identicality",
        "Have_as_requirement",
        "Using",
        "Causation"
    ],
    "The size of each tile is the size needed to hold the preferred size of the largest node in the tile pane.": [
        "Containing",
        "Required_event"
    ],
    "To enable the buttons to be resized to the size of the tile, set the maximum width and height to the Double.MAX _ VALUE constant.": [
        "Clothing_parts",
        "Extreme_value",
        "Dimension",
        "Dimension",
        "Intentionally_create"
    ],
    "Example 2-2 shows how make a row of buttons the same width and height using a tile pane.": [
        "Instance",
        "Quarreling",
        "Clothing_parts",
        "Dimension",
        "Dimension",
        "Identicality",
        "Using",
        "Causation",
        "Evidence"
    ],
    "Example 2-2 Set a Row of Buttons to the Same Size": [
        "Instance",
        "Operate_vehicle",
        "Clothing_parts"
    ],
    "Tiles are not resized as the window size changes so the buttons don't change size when set in a tile pane.": [
        "Connecting_architecture",
        "Undergo_change",
        "Clothing_parts",
        "Intentionally_act",
        "Undergo_change",
        "Temporal_collocation",
        "Intentionally_create"
    ],
    "Note that if the width of the window is reduced, the buttons in the tile pane change position, but do not get smaller.": [
        "Dimension",
        "Connecting_architecture",
        "Cause_change_of_position_on_a_scale",
        "Clothing_parts",
        "Intentionally_act",
        "Dimension",
        "Undergo_change",
        "Execution"
    ],
    "As a stage is resized, layout panes within the stage might have more or less space to allocate to the controls that they contain.": [
        "Inclusion",
        "Prohibiting",
        "Increment",
        "Likelihood"
    ],
    "Each layout pane has its own rules for allocating space according to the minimum, preferred, and maximum size ranges of the controls.In general, controls that have a default maximum size of Double.MAX _ VALUE expand to fill their space while controls with constrained maximum sizes do not expand.": [
        "Extreme_value",
        "Partiality",
        "Natural_features",
        "Execution",
        "Extreme_value",
        "Execution",
        "Filling",
        "Intentionally_act",
        "Possession",
        "Prohibiting",
        "Expansion",
        "Attributed_information",
        "Possession"
    ],
    "For example, a ListView object has an unbounded maximum.": [
        "Instance",
        "Extreme_value",
        "Inclusion"
    ],
    "If you want to limit the height to its preferred size, you can set the maximum size to the Control.USE _ PREF_SIZE constant, as shown in Example 2-3.": [
        "Dimension",
        "Extreme_value",
        "Instance",
        "Capability",
        "Evidence",
        "Possession",
        "Intentionally_create"
    ],
    "Example 2-3 Set Maximum Height to Preferred Height": [
        "Instance",
        "Extreme_value",
        "Dimension"
    ],
    "By default, buttons grow only to their preferred size.": [
        "Clothing_parts",
        "Change_position_on_a_scale",
        "Sole_instance"
    ],
    "However, buttons shrink to where the label is shown as three dots ( ... ) if the minimum width is not overridden.": [
        "Concessive",
        "Clothing_parts",
        "Labeling",
        "Evidence",
        "Extreme_value",
        "Expansion",
        "Cardinal_numbers",
        "Dimension",
        "Locative_relation"
    ],
    "To prevent a button from becoming smaller than its preferred width, set its minimum width to its preferred width as shown in Example 2-4.": [
        "Clothing_parts",
        "Dimension",
        "Dimension",
        "Instance",
        "Extreme_value",
        "Intentionally_create",
        "Evidence",
        "Becoming",
        "Preventing"
    ],
    "Example 2-4 Set Minimum Width to Preferred Width": [
        "Instance",
        "Extreme_value",
        "Dimension"
    ],
    "The preferred size of a control is initially based on the computed size.": [
        "Control"
    ],
    "You can override the default preferred size by setting the preferred size constraint to the size of your choice.": [
        "Partiality",
        "Choosing",
        "Capability"
    ],
    "The following statement overrides the preferred width of a list view:": [
        "Relative_time",
        "Dimension",
        "Opinion"
    ],
    "If you do not want the size of a node to change, set the minimum, maximum, and preferred sizes to the same size.": [
        "Extreme_value",
        "Extreme_value",
        "Partiality",
        "Intentionally_act",
        "Identicality",
        "Intentionally_create",
        "Cause_change",
        "Desiring"
    ],
    "To prevent only the width or height from changing, set the width or height constraints to the same value.": [
        "Dimension",
        "Dimension",
        "Exchange",
        "Identicality",
        "Sole_instance",
        "Preventing",
        "Intentionally_create"
    ],
    "In Example 2-5, a list is created with all size constraints set to the same width and height values so that the size of the list doesn't change as the size of the window changes.": [
        "Instance",
        "Quantity",
        "Dimension",
        "Dimension",
        "Connecting_architecture",
        "Undergo_change",
        "Execution",
        "Identicality",
        "Intentionally_act",
        "Intentionally_create",
        "Undergo_change"
    ],
    "A button is created with all width constraints set to the same value.": [
        "Clothing_parts",
        "Quantity",
        "Identicality",
        "Intentionally_create",
        "Execution"
    ],
    "Example 2-5 Set Size Constraints to Prevent Resizing": [
        "Instance",
        "Preventing",
        "Intentionally_create"
    ],
    "Each layout pane has a default way of aligning the nodes within the pane.": [
        "Inclusion"
    ],
    "For example, in HBox and VBox layout panes, nodes are top-justified and left-justified.": [
        "Instance"
    ],
    "In TilePane and FlowPane layout panes, nodes are centered.": [],
    "The panes themselves by default are typically top-justified and left-justified.": [],
    "You can manage the alignment of nodes and panes by using the setAlignment ( ) method for the panes.": [
        "Capability",
        "Execution",
        "Using",
        "Operating_a_system"
    ],
    "Alignment constants are available in the following enum types in the javafx.geometry package:": [
        "Relative_time",
        "Text_creation",
        "Execution"
    ],
    "HPos - Values for specifying horizontal alignment.": [],
    "Pos - Values for specifying vertical and horizontal alignment.": [],
    "The value to the left of the underscore specifies the vertical alignment, the value to the right of the underscore specifies the horizontal alignment.": [
        "People_along_political_spectrum",
        "Part_orientational",
        "Convey_importance"
    ],
    "For example, Pos.BOTTOM _ LEFT aligns a node at the bottom of the space vertically and at the left edge of the space horizontally.": [
        "Instance",
        "People_along_political_spectrum",
        "Part_orientational",
        "Change_position_on_a_scale",
        "Part_orientational"
    ],
    "VPos - Values for specifying vertical alignment.": [],
    "Figure 2-3 is created by the code shown in Example 2-6.": [
        "Instance",
        "Evidence",
        "Intentionally_create"
    ],
    "Without any alignment constraints specified, the layout pane is placed in the top left corner.": [
        "People_along_political_spectrum",
        "Part_orientational",
        "Quantity"
    ],
    "Example 2-6 Create a UI with Default Alignment": [
        "Instance",
        "Cause_to_start"
    ],
    "Suppose the look that you want is the screen shown in Figure 2-4, which centers the layout pane in the screen and changes the default alignment of the controls.": [
        "Scrutiny",
        "Prohibiting",
        "Undergo_change",
        "Evidence",
        "Possession",
        "Opinion"
    ],
    "The following sections provide tips for overriding the default positions.": [
        "Part_whole",
        "Part_orientational",
        "Relative_time",
        "Supply"
    ],
    "To center the grid from Example 2-6 in the scene, use the following statement:": [
        "Instance",
        "Locale_by_event",
        "Relative_time",
        "Using"
    ],
    "In the desired layout, the labels are right-justified and the fields are left-justified.": [
        "Desiring",
        "Labeling",
        "Fields"
    ],
    "To achieve this in a grid, define each column using the ColumnConstraints class and set the horizontal alignment constraint.": [
        "Accomplishment",
        "Using",
        "Communicate_categorization",
        "Intentionally_create"
    ],
    "Example 2-7 defines the columns for the grid from Example 2-6.": [
        "Instance",
        "Communicate_categorization"
    ],
    "Example 2-7 Define the Columns in the Grid": [
        "Instance",
        "Communicate_categorization"
    ],
    "An alternative for right-justifying controls in a column is to use a VBox layout pane.": [
        "Possibilities",
        "Prohibiting",
        "Using"
    ],
    "Use the setAlignment ( ) method as shown in the following statements:": [
        "Execution",
        "Relative_time",
        "Evidence",
        "Using"
    ],
    "The buttons are laid out in an HBox layout pane that spans both columns in the grid.": [
        "Clothing_parts",
        "Quantity",
        "Locative_relation"
    ],
    "The following statement centers the buttons in the grid from Example 2-6:": [
        "Clothing_parts",
        "Instance",
        "Relative_time"
    ],
    "The setAlignment ( ) method for the HBox pane centers the HBox pane within its layout area and also centers the nodes within the HBox pane.": [
        "Locale",
        "Execution"
    ],
    "You might prefer to center the HBox pane within the row but bottom-justify the buttons within the HBox pane as shown in Figure 2-5.": [
        "Quarreling",
        "Clothing_parts",
        "Evidence",
        "Likelihood",
        "Partiality"
    ],
    "Figure 2-5 Override Positions and Bottom-Justify the Buttons": [
        "Clothing_parts"
    ],
    "For this arrangement, place the HBox pane in an inner grid with a single cell and place that grid in the third row of the outer grid.": [
        "Arranging",
        "Building_subparts",
        "Locale",
        "Quarreling",
        "Part_inner_outer",
        "Sole_instance",
        "Ordinal_numbers",
        "Part_inner_outer"
    ],
    "Set the alignment constraint for the inner grid to center the grid and set the alignment constraint for the HBox pane to bottom-justify the contents as shown in Example 2-8.": [
        "Evidence",
        "Instance",
        "Part_inner_outer",
        "Intentionally_create"
    ],
    "Example 2-8 Center and Bottom-Justify the Buttons": [
        "Instance",
        "Clothing_parts",
        "Locale_by_use"
    ],
    "To learn more about the layout panes in JavaFX, see the information for the javafx.scene.layout package in the API Documentation.": [
        "Information",
        "Execution",
        "Increment",
        "Education_teaching",
        "Grasp"
    ],
    "Enums support with Realm?": [],
    "Enums support \u00b7 Issue # 776 \u00b7 realm/realm-java \u00b7 GitHub": [
        "Point_of_dispute",
        "Taking_sides"
    ],
    "I was hoping enums are supported, as they're a better alternative to ints for enumerations.": [
        "Desirability",
        "Taking_sides",
        "Possibilities",
        "Desiring"
    ],
    "Enums are on our wishlist as well, but there are some challenges involved as one of the primary design goals of Realm is cross-platform compatibility and enums doesn't exist in Objective-C like they do in Java.": [
        "Difficulty",
        "Cardinal_numbers",
        "Coming_up_with",
        "Political_locales",
        "Compatibility",
        "Intentionally_act",
        "Relational_quantity",
        "First_rank",
        "Existence",
        "Intentionally_act",
        "Existence",
        "Participation"
    ],
    "Hi @cmelchior and thanks for the response,": [
        "Judgment_direct_address",
        "Response"
    ],
    "Enums can easily be converted into simple ints and back, I think typedefs are the closest feature that Objective-C provides ( my knowledge of Objective-C is close to zero ).": [
        "Observable_body_parts",
        "Cardinal_numbers",
        "Likelihood",
        "Supply",
        "Awareness",
        "Cause_change",
        "Awareness",
        "Social_connection"
    ],
    "Hence it shouldn't be hard to represent enums internally in a way that both platforms could work with it.": [
        "Quantity",
        "Capability",
        "Working_on",
        "Communicate_categorization",
        "Difficulty",
        "Being_obligated"
    ],
    "True, but that would be very brittle with regard to modifying the enums afterwards.": [
        "Degree",
        "Cause_change",
        "Time_vector",
        "Categorization"
    ],
    "See here for a discussion on the topic: http://stackoverflow.com/questions/229856/ways-to-save-enums-in-database.": [
        "Locative_relation",
        "Topic",
        "Grasp",
        "Discussion"
    ],
    "It is possible to find a solution, but right now we want to prioritise other features.": [
        "Correctness",
        "Increment",
        "Temporal_collocation",
        "Likelihood",
        "Desiring",
        "Coming_to_believe"
    ],
    "I would also like to see enum support.": [
        "Taking_sides",
        "Grasp",
        "Experiencer_focus"
    ],
    "is it possible to help you to speed up enum support ?": [
        "Locative_relation",
        "Likelihood",
        "Intoxicants",
        "Taking_sides",
        "Assistance"
    ],
    "Right now we are focusing on other bigger features ( custom methods, null, async queries and migration API ).": [
        "Correctness",
        "Custom",
        "Questioning",
        "Execution",
        "Temporal_collocation",
        "Place_weight_on",
        "Increment"
    ],
    "However once we open up for custom methods it will be possible to work around this by doing the conversion yourself in the getter/setter.": [
        "Concessive",
        "Locative_relation",
        "Custom",
        "Cause_change",
        "Time_vector",
        "Execution",
        "Likelihood",
        "Intentionally_act",
        "Secrecy_status",
        "Being_employed"
    ],
    "That said we still want to add support for it, but proper support will take a bit longer.": [
        "Duration_attribute",
        "Continued_state_of_affairs",
        "Proper_reference",
        "Quantity",
        "Taking_sides",
        "Have_as_requirement",
        "Desiring"
    ],
    "I don't know if it can help anybody, but here is what I use as a workaround:": [
        "Intentionally_act",
        "Capability",
        "Assistance",
        "Using",
        "Locative_relation",
        "Certainty"
    ],
    "@ashk3156 Please create another issue than reusing this one, and please add the code that actually throw the NullPointer as well.": [
        "Point_of_dispute",
        "Cardinal_numbers",
        "Emotion_directed",
        "Increment",
        "Cause_change_of_position_on_a_scale",
        "Cause_motion",
        "Intentionally_create",
        "Stimulus_focus"
    ],
    "Reporting a case where lack of enums support made things less pretty: in Kotlin, I created an interface Contact and a class ContactRealm implementing that interface.": [
        "Reasoning",
        "Gizmo",
        "Locative_relation",
        "Possession",
        "Taking_sides",
        "Contacting",
        "Causation",
        "Intentionally_create"
    ],
    "The idea was to use Contact wherever possible and keep its implementation decoupled, so that later I could plug a ContactORM implementing same interface, for example.": [
        "Contacting",
        "Instance",
        "Likelihood",
        "Execute_plan",
        "Time_vector",
        "Identicality",
        "Being_obligated",
        "Execute_plan",
        "Activity_ongoing",
        "Using",
        "Capability"
    ],
    "Contact has a field ` sex' which would be best represented as an enum but due to Realm's limitation I had to declare it as a String in the first place, otherwise wouldn't be able to override the field in ContactRealm later.": [
        "Contacting",
        "Political_locales",
        "Fields",
        "Desirability",
        "Locale",
        "Ordinal_numbers",
        "Time_vector",
        "Inclusion",
        "Being_obligated",
        "Capability",
        "Communicate_categorization"
    ],
    "otherwise wouldn't be able to override the field in ContactRealm later.": [
        "Fields",
        "Time_vector",
        "Capability"
    ],
    "@Zhuinden the field sexin Contact can't be a Sex, as it needs to be overridden in ContactRealm and Realm doesn't support enums.": [
        "Fields",
        "Contacting",
        "Political_locales",
        "Required_event",
        "Taking_sides",
        "Intentionally_act",
        "Capability"
    ],
    "I ran into this thread while trying to solve the same problem.": [
        "Predicament",
        "Identicality",
        "Resolve_problem",
        "Execution",
        "Attempt"
    ],
    "Here was my approach to this in kotlin": [
        "Locative_relation",
        "Execution"
    ],
    "basically I used a private string property taken as a string to construct a computed property with that enum correspondance.": [
        "Event",
        "Building",
        "Possession",
        "Using"
    ],
    "Not sure this is very `` realm'' friendly since I'm new to Android development but I thought this worked actually pretty well.": [
        "Degree",
        "Sociability",
        "Being_employed",
        "Age",
        "Event",
        "Awareness"
    ],
    "I think this is a subset of # 1694.": [
        "Locative_relation",
        "Opinion"
    ],
    "Yes, it will most likely be implemented that way since the concept of a Java enum doesn't easily transfer to other platforms.": [
        "Execute_plan",
        "Increment",
        "Likelihood",
        "Intentionally_act",
        "Transfer"
    ],
    "I investigated ObjectBox today ( don't worry ; I'm sticking with Realm \ud83d\ude1c ), and came up with something like this for getting enums supported.": [
        "Calendric_unit",
        "Political_locales",
        "Locative_relation",
        "Emotion_active",
        "Execution",
        "Taking_sides",
        "Scrutiny",
        "Intentionally_act",
        "Execution"
    ],
    "Would something like that work here ?": [
        "Working_on",
        "Locative_relation"
    ],
    "how to store list of enum in realm android ?": [
        "Political_locales",
        "Storing"
    ],
    "RealmList <String> although then it becomes non-queryable as per https://github.com/realm/realm-object-store/issues/513 so it should probably be combined to a comma separated list in a single String value.": [
        "Temporal_collocation",
        "Cause_to_amalgamate",
        "Becoming_separated",
        "Becoming",
        "Being_obligated",
        "Sole_instance",
        "Likelihood"
    ],
    "Android: rotate canvas around the center of the screen": [
        "Moving_in_place",
        "Part_inner_outer"
    ],
    "You have to rotate the canvas first and then draw whatever you want.": [
        "Desiring",
        "Moving_in_place",
        "Ordinal_numbers",
        "Cause_motion",
        "Being_obligated",
        "Temporal_collocation"
    ],
    "Then the object drawn will be appeared as rotated on screen.": [
        "Cause_motion",
        "Moving_in_place",
        "Temporal_collocation",
        "Coming_to_be"
    ],
    "try this its good way.": [
        "Execution",
        "Desirability",
        "Attempt"
    ],
    "Check this tutorial you will get information about how to draw bitmap and how to rotate canvas": [
        "Cause_motion",
        "Moving_in_place",
        "Information",
        "Execution"
    ],
    "You can either rotate your bitmap when you draw it by using a matrix:": [
        "Temporal_collocation",
        "Capability",
        "Moving_in_place",
        "Cause_motion",
        "Using"
    ],
    "You can also do it by rotating the canvas before drawing:": [
        "Create_physical_artwork",
        "Moving_in_place",
        "Capability",
        "Intentionally_act"
    ],
    "Pick the one that suits you the best.": [
        "Desirability",
        "Clothing",
        "Cardinal_numbers",
        "Choosing"
    ],
    "@Reham: Look at this example code below,": [
        "Instance",
        "Perception_active"
    ],
    "you have to use the matrix to rotate image look the lines": [
        "Moving_in_place",
        "Similarity",
        "Using",
        "Being_obligated",
        "Scrutiny"
    ],
    "this will rotate the image to 45 degrees": [
        "Similarity",
        "Quantity",
        "Moving_in_place"
    ],
    "Hope this help you ... thx": [
        "Desiring",
        "Assistance"
    ],
    "Use following code.": [],
    "it worked for me": [],
    "float rotation = 30.0 f ;": [],
    "This is the only one that worked for me with no problem.": [
        "Quantity",
        "Predicament",
        "Sole_instance",
        "Cardinal_numbers",
        "Being_employed"
    ],
    "Based on @Sakthi's code, but add scaling: -RRB-": [
        "Cause_change_of_position_on_a_scale"
    ],
    "Thanks for visiting DZone today,": [
        "Temporal_collocation",
        "Execution",
        "Judgment_direct_address"
    ],
    "How to Post to DZone": [
        "Sending"
    ],
    "Over 2 million developers have joined DZone.": [
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Becoming_a_member"
    ],
    "DZone > Mobile Zone > Android Rotate and Scale Bitmap Example": [
        "Locale",
        "Instance"
    ],
    "Android Rotate and Scale Bitmap Example": [
        "Instance"
    ],
    "Feb. 24, 14 \u00b7 Mobile Zone": [
        "Locale",
        "Cardinal_numbers"
    ],
    "Join the DZone community and get the full member experience.": [
        "Cause_to_amalgamate",
        "Execution",
        "Fullness",
        "Membership",
        "Expertise",
        "Execution"
    ],
    "i built an android demo app so i could test my understanding of displaying bitmaps on a canvas.": [
        "Capability",
        "Building",
        "Grasp",
        "Operational_testing"
    ],
    "i had done scaling of bitmaps, rotation of bitmaps, and translation from one origin to another, but i had not done more than one of those transformations at a time.": [
        "Translating",
        "Origin",
        "Increment",
        "Measure_duration",
        "Cardinal_numbers",
        "Cause_change",
        "Intentionally_act",
        "Increment"
    ],
    "the demo app is shown in the figures above.": [
        "Evidence"
    ],
    "there are two images in the center of the screen.": [
        "Sensation",
        "Cardinal_numbers",
        "Part_inner_outer",
        "Existence"
    ],
    "each image is scaled to fit within the light blue region.": [
        "Similarity",
        "Locale",
        "Emotion_directed",
        "Dimension",
        "Suitability"
    ],
    "when you press the rotate button, each of the images is rotated around its center, while maintaining its position in the center of the region on the screen.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Sensation",
        "Locale",
        "Attempt_suasion",
        "Moving_in_place",
        "Part_inner_outer"
    ],
    "the scale button resizes the images.": [
        "Clothing_parts",
        "Sensation"
    ],
    "there are three different sizes.": [
        "Similarity",
        "Cardinal_numbers",
        "Existence"
    ],
    "each time you touch scale, it switches to the next size.": [
        "Stimulus_focus",
        "Change_tool",
        "Measure_duration",
        "Locative_relation"
    ],
    "the offset cycles you through four different offsets.": [
        "Similarity",
        "Cardinal_numbers",
        "Operate_vehicle"
    ],
    "in the app mainactivity, two instances of starshipview are in the layout.": [
        "Cardinal_numbers",
        "Instance"
    ],
    "in the oncreate method, each view is assigned a bitmap.": [
        "Execution",
        "Opinion"
    ],
    "the onclick method in mainactivity gets called whenever a button is clicked.": [
        "Clothing_parts",
        "Execution",
        "Make_noise",
        "Execution",
        "Execution"
    ],
    "the code in onclick finds the two views in its layout and sets properties that control the amount of rotation, size of the bitmap, and x and y offsets.": [
        "Control",
        "Cardinal_numbers",
        "Quantity",
        "Categorization",
        "Locating",
        "Possession"
    ],
    "inside class starshipview, in the ondraw method, the bitmap assigned to the view is written to the canvas.": [
        "Part_inner_outer",
        "Execution",
        "Opinion"
    ],
    "the code is actually very simple, once you get comfortable with using matrix objects to do the work.": [
        "Working_on",
        "Degree",
        "Time_vector",
        "Intentionally_act",
        "Using",
        "Execution"
    ],
    "here's what goes on in the ondraw method of class starshipview.": [
        "Locative_relation",
        "Execution",
        "Process_continue"
    ],
    "first, the matrix object is set so it will fit the bitmap into the rectangle for the view.": [
        "Ordinal_numbers",
        "Opinion",
        "Suitability",
        "Intentionally_create"
    ],
    "for this demo app, i chose some interesting sizes to test this part of the code.": [
        "Relational_quantity",
        "Stimulus_focus",
        "Part_whole",
        "Choosing",
        "Operational_testing"
    ],
    "the starship image is 512 x 512.": [
        "Similarity"
    ],
    "it is scaled to fit into the 96 dp area on the left.": [
        "People_along_political_spectrum",
        "Locale",
        "Suitability"
    ],
    "the star field image on the right is 96 x 96 is displayed in the 120 dp square on the right.": [
        "Performers_and_roles",
        "Fields",
        "Shapes",
        "Part_orientational",
        "Similarity"
    ],
    "the second step is to translate the view up and left by half the width and half the height.": [
        "Measure_duration",
        "Opinion",
        "Direction",
        "Dimension",
        "Dimension",
        "Locative_relation",
        "Part_whole",
        "Categorization",
        "Intentionally_act"
    ],
    "that is done because rotation is around the top left point ( the origin ) of the view.": [
        "People_along_political_spectrum",
        "Origin",
        "Opinion",
        "Part_orientational",
        "Intentionally_act",
        "Locale"
    ],
    "it is very simple: `` matrix.postrotate ( rotation )''.": [
        "Degree"
    ],
    "once the bitmap is rotated, it needs to have its location translated to the place where it should display in the view.": [
        "Locale",
        "Locale",
        "Opinion",
        "Required_event",
        "Being_obligated",
        "Frequency",
        "Locative_relation",
        "Moving_in_place",
        "Categorization"
    ],
    "that is specified in the offsetx and offsety values.": [],
    "so you see one more matrix.posttranslate call in the method.": [
        "Execution",
        "Increment",
        "Cardinal_numbers",
        "Execution",
        "Grasp"
    ],
    "the final action in the ondraw method is the drawing of the bitmap.": [
        "Execution",
        "Physical_artworks",
        "Ordinal_numbers",
        "Intentionally_act"
    ],
    "notice that the drawbitmap method uses the matrix with the various transformations encoded in it.": [
        "Diversity",
        "Cause_change",
        "Execution",
        "Using",
        "Becoming_aware"
    ],
    "you can download the source code for this demo from the wglxy.com website.": [
        "Source_of_getting",
        "Capability"
    ],
    "click here: download zip file from wglxy.com.": [
        "Locative_relation",
        "Clothing_parts",
        "Sounds"
    ],
    "the zip is attached at the bottom of that page.": [
        "Clothing_parts",
        "Contacting",
        "Part_orientational",
        "Being_attached"
    ],
    "after you import the project into eclipse, it's a good idea to use the project -- clean menu item to rebuild the project.": [
        "Project",
        "Eclipse",
        "Entity",
        "Relational_quantity",
        "Importing",
        "Using"
    ],
    "this demo app was compiled with android 4.4 ( api 19 ).": [],
    "it works in all api levels from api 10 on up.": [
        "Quantity",
        "Cardinal_numbers",
        "Locative_relation",
        "Being_employed",
        "Rank"
    ],
    "as with many other problems, i found very good advice on stackoverflow.": [
        "Predicament",
        "Increment",
        "Degree",
        "Quantity",
        "Desirability",
        "Locating"
    ],
    "a stackoverflow post on rotating images around the center of the image helped me.": [
        "Sensation",
        "Similarity",
        "Part_inner_outer",
        "Moving_in_place",
        "Sending",
        "Assistance"
    ],
    "java, mobile, android, tips and tricks, tools & methods, scale, rotate, android games, bitmaps": [
        "Bringing",
        "Part_orientational",
        "Gizmo",
        "Execution"
    ],
    "Published at DZone with permission of Bill Lahti.": [
        "Grant_permission",
        "Observable_body_parts"
    ],
    "See the original article here.": [
        "Grasp",
        "Locative_relation"
    ],
    "Opinions expressed by DZone contributors are their own.": [
        "Opinion",
        "Expressing_publicly",
        "Possession"
    ],
    "Software Delivery Intelligence: How It Started, How It's Going": [
        "Organization",
        "Delivery",
        "Motion",
        "Activity_start"
    ],
    "7 Best Python Libraries You Shouldn't Miss in 2021": [
        "Buildings",
        "Being_obligated",
        "Success_or_failure"
    ],
    "API Security Weekly: Issue # 124": [
        "Frequency",
        "Point_of_dispute",
        "Being_at_risk"
    ],
    "5 of the Weirdest and Hardest Programming Languages": [
        "Project"
    ],
    "About DZone Send feedback Careers": [],
    "Developer Marketing Blog Advertise with DZone +1 (919)\u00a0238-7100": [],
    "MVB Program Become a Contributor Visit the Writers' Zone": [
        "Project",
        "Locale"
    ],
    "Terms of Service Privacy Policy": [
        "Simple_name",
        "Public_services",
        "Law"
    ],
    "600 Park Offices Drive Suite 150 Research Triangle Park, NC 27709 support@dzone.com +1 (919)\u00a0678-0300": [
        "Building_subparts",
        "Shapes",
        "Research",
        "Locale_by_use"
    ],
    "Different actions from contact info depending on whether hitting back key or back arrow in top left": [
        "Intentionally_act",
        "Contacting",
        "Part_orientational",
        "Impact",
        "Observable_body_parts",
        "Similarity",
        "Importance",
        "People_along_political_spectrum",
        "Part_orientational"
    ],
    "Back navigation is how users move backward through the history of screens they previously visited.": [
        "Taking_sides",
        "Motion",
        "Time_vector",
        "Execution"
    ],
    "All Android devices provide a Back button for this type of navigation, so you should not add a Back button to your app's UI.": [
        "Quantity",
        "Gizmo",
        "Clothing_parts",
        "Being_obligated",
        "Taking_sides",
        "Supply"
    ],
    "Depending on the user's Android device, this button might be a physical button or a software button.": [
        "Gizmo",
        "Closure",
        "Likelihood"
    ],
    "Android maintains a back stack of destinations as the user navigates throughout your application.": [
        "Using",
        "Part_orientational"
    ],
    "This usually allows Android to properly navigate to previous destinations when the Back button is pressed.": [
        "Time_vector",
        "Temporal_collocation",
        "Clothing_parts",
        "Part_orientational",
        "Grant_permission",
        "Attempt_suasion"
    ],
    "However, there are a few cases where your app might need to implement its own Back behavior in order to provide the best possible user experience.": [
        "Concessive",
        "Instance",
        "Gizmo",
        "Supply",
        "Likelihood",
        "Expertise",
        "Locative_relation",
        "Taking_sides",
        "Quantity",
        "Likelihood",
        "Conduct",
        "Possession",
        "Desirability",
        "Have_as_requirement",
        "Existence"
    ],
    "For example, when using a WebView, you might want to override the default Back button behavior to allow the user to navigate back through their web browsing history instead of the previous screens in your app.": [
        "Instance",
        "Self_motion",
        "Observable_body_parts",
        "Time_vector",
        "Likelihood",
        "Grant_permission",
        "Temporal_collocation",
        "Conduct",
        "Desiring",
        "Using"
    ],
    "ComponentActivity, the base class for FragmentActivity and AppCompatActivity, allows you to control the behavior of the Back button by using its OnBackPressedDispatcher, which you can retrieve by calling getOnBackPressedDispatcher ( ).": [
        "Locale_by_use",
        "Clothing_parts",
        "Part_orientational",
        "Execution",
        "Using",
        "Conduct",
        "Capability",
        "Control",
        "Grant_permission"
    ],
    "The OnBackPressedDispatcher controls how Back button events are dispatched to one or more OnBackPressedCallback objects.": [
        "Self_motion",
        "Increment",
        "Prohibiting",
        "Event",
        "Cardinal_numbers",
        "Killing"
    ],
    "The constructor for OnBackPressedCallback takes a boolean for the initial enabled state.": [
        "Political_locales",
        "Version_sequence",
        "Removing"
    ],
    "Only when a callback is enabled ( i.e., isEnabled ( ) returns true ) will the dispatcher call the callback's handleOnBackPressed ( ) to handle the Back button event.": [
        "Sole_instance",
        "Temporal_collocation",
        "Self_motion",
        "Event",
        "Resolve_problem",
        "Execution",
        "Execution"
    ],
    "You can change the enabled state by calling setEnabled ( ).": [
        "Political_locales",
        "Execution",
        "Undergo_change",
        "Capability"
    ],
    "Callbacks are added via the addCallback methods.": [
        "Execution"
    ],
    "It is strongly recommended to use the addCallback ( ) method which takes a LifecycleOwner.": [
        "Using",
        "Taking_time",
        "Execution"
    ],
    "This ensures that the OnBackPressedCallback is only added when the LifecycleOwner is Lifecycle.State.STARTED.": [
        "Sole_instance",
        "Temporal_collocation"
    ],
    "The activity also removes registered callbacks when their associated LifecycleOwner is destroyed, which prevents memory leaks and makes it suitable for use in fragments or other lifecycle owners that have a shorter lifetime than the activity.": [
        "Intentionally_act",
        "Temporal_collocation",
        "Remembering_experience",
        "Part_piece",
        "Cognitive_connection",
        "Suitability",
        "Increment",
        "Thwarting",
        "Killing",
        "Possession",
        "Becoming_aware",
        "Execution",
        "Removing",
        "Possession"
    ],
    "Here's an example callback implementation:": [
        "Locative_relation",
        "Instance",
        "Execute_plan"
    ],
    "You can provide multiple callbacks via addCallback ( ).": [
        "Quantity",
        "Capability",
        "Supply"
    ],
    "When doing so, the callbacks are invoked in the reverse order in which they are added - the callback added last is the first given a chance to handle the Back button event.": [
        "Ordinal_numbers",
        "Self_motion",
        "Intentionally_act",
        "Temporal_collocation",
        "Event",
        "Relative_time",
        "Resolve_problem",
        "Likelihood",
        "Giving"
    ],
    "For example, if you added three callbacks named one, two and three in order, they would be invoked in the order of three, two, and one, respectively.": [
        "Instance",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Cardinal_numbers"
    ],
    "Callbacks follow the Chain of Responsibility pattern.": [
        "Relative_time",
        "Pattern",
        "Being_obligated"
    ],
    "Each callback in the chain is invoked only if the preceding callback was not enabled.": [
        "Sole_instance",
        "Relative_time"
    ],
    "This means that in the preceding example, callback two would be invoked only if callback three was not enabled.": [
        "Relative_time",
        "Cardinal_numbers",
        "Sole_instance",
        "Cardinal_numbers",
        "Instance",
        "Evidence"
    ],
    "Callback one would only be invoked if callback two was not enabled, and so on.": [
        "Cardinal_numbers",
        "Sole_instance",
        "Cardinal_numbers"
    ],
    "Note that when added via addCallback ( ), the callback is not added to the chain of responsibility until the LifecycleOwner enters the Lifecycle.State.STARTED state.": [
        "Temporal_collocation",
        "Being_obligated",
        "Political_locales",
        "Becoming_aware",
        "Execution"
    ],
    "Changing the enabled state on the OnBackPressedCallback is strongly recommended for temporary changes as it maintains the ordering described above, which is particularly important if you have callbacks registered on multiple different nested lifecycle owners.": [
        "Political_locales",
        "Undergo_change",
        "Execution",
        "Similarity",
        "Communicate_categorization",
        "Recording",
        "Undergo_change",
        "Importance",
        "Possession",
        "Quantity"
    ],
    "However, in cases where you want to remove the OnBackPressedCallback entirely, you should call remove ( ).": [
        "Concessive",
        "Instance",
        "Removing",
        "Locative_relation",
        "Being_obligated",
        "Possession",
        "Execution"
    ],
    "This is usually not necessary, however, because callbacks are automatically removed when their associated LifecycleOwner is destroyed.": [
        "Concessive",
        "Temporal_collocation",
        "Cognitive_connection",
        "Being_necessary",
        "Killing",
        "Removing"
    ],
    "If you are using onBackPressed ( ) to handle Back button events, we recommend using a OnBackPressedCallback instead.": [
        "Self_motion",
        "Event",
        "Using",
        "Resolve_problem"
    ],
    "However, if you are unable to make this change, the following rules apply:": [
        "Undergo_change",
        "Execution",
        "Relative_time",
        "Causation",
        "Capability",
        "Using",
        "Concessive"
    ],
    "All callbacks registered via addCallback are evaluated when you call super.onBackPressed ( ).": [
        "Temporal_collocation",
        "Quantity",
        "Recording",
        "Execution",
        "Assessing"
    ],
    "onBackPressed is always called, regardless of any registered instances of OnBackPressedCallback.": [
        "Frequency",
        "Quantity",
        "Instance",
        "Execution"
    ],
    "Make sure your the ActionBar Home Button is enabled in the Activity:": [
        "Buildings",
        "Closure",
        "Intentionally_act"
    ],
    "Example MainActivity that extends ActionBarActivity:": [],
    "This way all the activities you want can have the backpress.": [
        "Quantity",
        "Intentionally_act",
        "Capability",
        "Possession",
        "Execution"
    ],
    "AndroidManifest.xml:": [],
    "Selvin already posted the right answer.": [
        "Communication_response",
        "Time_vector",
        "Morality_evaluation",
        "Sending"
    ],
    "Here, the solution in pretty code:": [
        "Locative_relation"
    ],
    "The function NavUtils.navigateUpFromSameTask -LRB- this -RRB- requires you to define the parent activity in the AndroidManifest.xml file": [
        "Kinship",
        "Intentionally_act",
        "Have_as_requirement",
        "Communicate_categorization"
    ],
    "See LINK for further reading.": [
        "Grasp",
        "Reading",
        "Increment"
    ],
    "Source: LINK": [],
    "To enable the ActionBar back button you obviously need an ActionBar in your Activity.": [
        "Observable_body_parts",
        "Likelihood",
        "Intentionally_act",
        "Required_event",
        "Closure"
    ],
    "This is set by the theme you are using.": [
        "Topic",
        "Intentionally_create",
        "Using"
    ],
    "You can set the theme for your Activity in the AndroidManfiest.xml.": [
        "Intentionally_act",
        "Topic",
        "Intentionally_create",
        "Capability"
    ],
    "If you are using e.g the @android: style/Theme.": [
        "Using"
    ],
    "NoTitleBar theme, you don't have an ActionBar.": [
        "Topic",
        "Intentionally_act"
    ],
    "In this case the call to getActionBar -LRB- -RRB- will return null.": [
        "Instance",
        "Execution",
        "Execution"
    ],
    "So make sure you have an ActionBar first.": [
        "Ordinal_numbers",
        "Verification"
    ],
    "The next step is to set the android: parentActivityName to the activity you want to navigate if you press the back button.": [
        "Intentionally_act",
        "Clothing_parts",
        "Intentionally_act",
        "Locative_relation",
        "Part_orientational",
        "Attempt_suasion",
        "Possession",
        "Intentionally_create"
    ],
    "This should be done in the AndroidManifest.xml too.": [
        "Sufficiency",
        "Intentionally_act",
        "Being_obligated"
    ],
    "Now you can enable the back button in the onCreate method of your `` child'' activity.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Intentionally_act",
        "Part_orientational",
        "Execution",
        "Capability"
    ],
    "Now you should implement the logic for the back button.": [
        "Temporal_collocation",
        "Gizmo",
        "Clothing_parts",
        "Part_orientational",
        "Being_obligated"
    ],
    "You simply override the onOptionsItemSelected method in your `` child'' activity and check for the id of the back button which is android.R.id.home.": [
        "Intentionally_act",
        "Part_orientational",
        "Clothing_parts",
        "Execution"
    ],
    "Now you can fire the method NavUtils.navigateUpFromSameTask -LRB- this -RRB- ; BUT if you don't have specified the android: parentActivityName in you AndroidManifest.xml this will crash your app.": [
        "Temporal_collocation",
        "Execution",
        "Intentionally_act",
        "Shoot_projectiles",
        "Impact",
        "Capability"
    ],
    "Sometimes this is what you want because it is reminding you that you forgot `` something''.": [
        "Frequency",
        "Remembering_information",
        "Evoking",
        "Desiring"
    ],
    "So if you want to prevent this, you can check if your activity has a parent using the getParentActivityIntent -LRB- -RRB- method.": [
        "Kinship",
        "Preventing",
        "Possession",
        "Using",
        "Execution",
        "Intentionally_act",
        "Inspecting",
        "Capability"
    ],
    "If this returns null, you don't have specified the parent.": [
        "Kinship",
        "Execution",
        "Intentionally_act"
    ],
    "In this case you can fire the onBackPressed -LRB- -RRB- method that does basically the same as if the user would press the back button on the device.": [
        "Instance",
        "Execution",
        "Identicality",
        "Clothing_parts",
        "Gizmo",
        "Intentionally_act",
        "Part_orientational",
        "Shoot_projectiles",
        "Capability",
        "Attempt_suasion"
    ],
    "A good implementation that never crashes your app would be:": [
        "Relational_quantity",
        "Execute_plan",
        "Frequency",
        "Impact"
    ],
    "Please notice that the animation that the user sees is different between NavUtils.navigateUpFromSameTask -LRB- this -RRB- ; and onBackPressed -LRB- -RRB-.": [
        "Perception_experience",
        "Similarity",
        "Becoming_aware"
    ],
    "It is up to you which road you take, but I found the solution helpful, especially if you use a base class for all of your activities.": [
        "Locale_by_use",
        "Intentionally_act",
        "Being_up_to_it",
        "Assistance",
        "Have_as_requirement",
        "Quantity",
        "Using",
        "Becoming_aware"
    ],
    "AndroidManifest file:": [],
    "add in DetailsActivity:": [],
    "it's work: -RSB-": [],
    "I think onSupportNavigateUp -LRB- -RRB- is simplest and best way to do so": [
        "Execution",
        "Desirability",
        "Intentionally_act",
        "Opinion"
    ],
    "check the code in this link LINK": [
        "Inspecting"
    ],
    "To achieved this, there are simply two steps,": [
        "Intentionally_act",
        "Accomplishment",
        "Cardinal_numbers",
        "Existence"
    ],
    "Step 1: Go to AndroidManifest.xml and in the add the parameter in tag - android: parentActivityName =''.": [
        "Terms_of_agreement",
        "Motion",
        "Intentionally_act"
    ],
    "home.HomeActivity''": [],
    "example:": [],
    "Step 2: in ActivityDetail add your action for previous page/activity": [
        "Cardinal_numbers",
        "Intentionally_act",
        "Intentionally_act",
        "Time_vector"
    ],
    "Following Steps are much enough to back button:": [
        "Intentionally_act",
        "Clothing_parts",
        "Relative_time",
        "Taking_sides",
        "Sufficiency",
        "Relational_quantity"
    ],
    "Step 1: This code should be in Manifest.xml": [
        "Intentionally_act",
        "Being_obligated"
    ],
    "Step 2: You won't give": [
        "Intentionally_act",
        "Cardinal_numbers",
        "Giving"
    ],
    "in your Parent Activity while starting Child Activity.": [
        "Kinship",
        "Process_start",
        "Intentionally_act"
    ],
    "Step 3: If you need to come back to Parent Activity from Child Activity, Then you just give this code for Child Activity.": [
        "Observable_body_parts",
        "Intentionally_act",
        "Kinship",
        "Intentionally_act",
        "Required_event",
        "Cardinal_numbers",
        "Giving",
        "Temporal_collocation",
        "Execution"
    ],
    "in onCreated method for the new apis.": [
        "Execution",
        "Age"
    ],
    "In the OnCreate method add this:": [
        "Execution"
    ],
    "Then add this method:": [],
    "If you are using Toolbar, I was facing the same issue.": [
        "Point_of_dispute",
        "Identicality",
        "Confronting_problem",
        "Using"
    ],
    "I solved by following these two steps": [
        "Intentionally_act",
        "Cardinal_numbers",
        "Relative_time",
        "Resolve_problem"
    ],
    "Building on Jared's answer, I had to enable and implement the action bar back button behavior in several activities and created this helper class to reduce code duplication.": [
        "Buildings",
        "Gizmo",
        "Intentionally_act",
        "Buildings",
        "Observable_body_parts",
        "Intentionally_act",
        "Cause_change_of_position_on_a_scale",
        "Duplication",
        "Conduct",
        "Quantity",
        "Communication_response",
        "Being_obligated",
        "Intentionally_create"
    ],
    "Usage in an activity:": [],
    "Is there an accepted best-practice on making asynchronous HTTP requests in Android?": [
        "Receiving",
        "Execution",
        "Causation",
        "Existence"
    ],
    "This lesson describes how to use the common request types that Volley supports:": [
        "Execution",
        "Supporting",
        "Using"
    ],
    "If your expected response is one of these types, you probably don't have to implement a custom request.": [
        "Response",
        "Gizmo",
        "Custom",
        "Likelihood",
        "Execution",
        "Cardinal_numbers",
        "Being_obligated",
        "Intentionally_act"
    ],
    "This lesson describes how to use these standard request types.": [
        "Execution",
        "Using"
    ],
    "For information on how to implement your own custom request, see Implementing a Custom Request.": [
        "Gizmo",
        "Custom",
        "Gizmo",
        "Custom",
        "Perception_experience",
        "Execution",
        "Possession",
        "Execution",
        "Information"
    ],
    "Volley provides the following classes for JSON requests:": [
        "Relative_time",
        "Execution",
        "Supply"
    ],
    "Both classes are based on the common base class JsonRequest.": [
        "Locale_by_use",
        "Quantity"
    ],
    "You use them following the same basic pattern you use for other types of requests.": [
        "Execution",
        "Pattern",
        "Being_necessary",
        "Increment",
        "Using",
        "Identicality",
        "Relative_time"
    ],
    "For example, this snippet fetches a JSON feed and displays it as text in the UI:": [
        "Instance",
        "Part_piece",
        "Bringing"
    ],
    "Specify a URL and receive a raw string in response.": [
        "Response",
        "Degree_of_processing",
        "Receiving"
    ],
    "See Setting Up a Request Queue for an example.": [
        "Execution",
        "Instance",
        "Grasp"
    ],
    "JsonObjectRequest and JsonArrayRequest ( both subclasses of JsonRequest ).": [
        "Quantity"
    ],
    "Specify a URL and get a JSON object or array ( respectively ) in response.": [
        "Diversity",
        "Response",
        "Execution"
    ],
    "JsonArrayRequest -- A request for retrieving a JSONArray response body at a given URL.": [
        "Execution",
        "Response",
        "Execution",
        "Giving"
    ],
    "JsonObjectRequest -- A request for retrieving a JSONObject response body at a given URL, allowing for an optional JSONObject to be passed in as part of the request body.": [
        "Execution",
        "Response",
        "Grant_permission",
        "Natural_features",
        "Giving",
        "Execution",
        "Part_whole"
    ],
    "This is absolutely not a good way to go about updating information in a ListView.": [
        "Execution",
        "Information",
        "Relational_quantity",
        "Becoming"
    ],
    "The getView method should simply create the view from data that you already have.": [
        "Execution",
        "Opinion",
        "Time_vector",
        "Being_obligated",
        "Possession",
        "Intentionally_create"
    ],
    "It certainly shouldn't be running anything to get more information.": [
        "Information",
        "Likelihood",
        "Increment",
        "Execution",
        "Execution",
        "Being_obligated"
    ],
    "The best advice that I could give you is to fetch the data beforehand.": [
        "Desirability",
        "Capability",
        "Time_vector",
        "Giving",
        "Bringing"
    ],
    "Pull the data, update the ArrayList that your Adapter is connected to, then call adapter.notifyDataSetChanged -LRB- -RRB-.": [
        "Execution",
        "Cause_motion",
        "Cognitive_connection",
        "Temporal_collocation"
    ],
    "This will redraw all of your information.": [
        "Information",
        "Quantity"
    ],
    "Pull the data all at once - not in small parts.": [
        "Time_vector",
        "Part_whole",
        "Dimension",
        "Cause_motion"
    ],
    "This is the best and most reasonable way to do this.": [
        "Desirability",
        "Mental_property",
        "Intentionally_act",
        "Execution"
    ],
    "There are several appraoches for this.": [
        "Quantity",
        "Existence"
    ],
    "Although what you are doing is really not appropriate.": [
        "Intentionally_act"
    ],
    "LINK and Threads": [],
    "In conclusion, the major drawbacks of your current approach: - is loss of context when the changes need to be made.": [
        "Coming_to_believe",
        "Execution",
        "Temporal_collocation",
        "Undergo_change",
        "Importance",
        "Temporal_collocation",
        "Required_event",
        "Finish_competition",
        "Intentionally_create"
    ],
    "- the explicit creation of multiple threads": [
        "Candidness",
        "Natural_features",
        "Quantity",
        "Intentionally_create"
    ],
    "While the latter is a major issue, the more `` user-noticeable'' problem would the first.": [
        "Predicament",
        "Point_of_dispute",
        "Importance",
        "Increment",
        "Ordinal_numbers"
    ],
    "There are and could be several other approaches based on the control you require and the your expertise with android callbacks and thread management.But these three are -LRB- according to me -RRB- most suitable.": [
        "Execution",
        "Cardinal_numbers",
        "Capability",
        "Increment",
        "Control",
        "Have_as_requirement",
        "Expertise",
        "Quantity",
        "Attributed_information",
        "Suitability",
        "Existence"
    ],
    "PS: the common point in all these approaches is,": [
        "Locale",
        "Quantity",
        "Execution"
    ],
    "PPS: You could also look into LINK to again automate your requirements.": [
        "Being_necessary",
        "Scrutiny",
        "Capability"
    ],
    "You can use something like this:": [
        "Capability",
        "Using"
    ],
    "Also, for even better performance you need to add interaction awareness to your ListView adapter so that it doesn't trigger any asynchronous operation per row after, say, a fling gesture on the ListView -- which means that the scrolling is so fast that it doesn't make sense to even start any asynchronous operation.": [
        "Quantity",
        "Using",
        "Quarreling",
        "Sensation",
        "Performing_arts",
        "Required_event",
        "Desirability",
        "Intentionally_act",
        "Speed",
        "Awareness",
        "Temporal_subregion",
        "Causation",
        "Linguistic_meaning",
        "Gesture"
    ],
    "Once scrolling stops, or is about to stop, is when you want to start actually showing the heavy content for each row.": [
        "Frequency",
        "Activity_stop",
        "Preventing",
        "Temporal_collocation",
        "Quarreling",
        "Measurable_attributes",
        "Relational_quantity",
        "Reasoning",
        "Activity_start",
        "Desiring"
    ],
    "A very good example can be found here: LINK": [
        "Locative_relation",
        "Degree",
        "Instance",
        "Desirability",
        "Likelihood",
        "Locating"
    ],
    "Volley library seems to have abstracted out some of the common patters for use ...": [
        "Buildings",
        "Relational_quantity",
        "Motion_noise",
        "Locative_relation",
        "Becoming_aware",
        "Appearance"
    ],
    "For finer control over network requests and caching, you could have a look at: LINK": [
        "Network",
        "Scrutiny",
        "Execution",
        "Capability",
        "Control",
        "Desirability"
    ],
    "Like in the architechture diagram, on making a request, it looks up cache, and in case of misses tries the network request and adds it to cache for later use, Moreover it seems you can provide custom back off-retry request suiting your needs and handle/invalidate cache as and when required.": [
        "Execution",
        "Success_or_failure",
        "Network",
        "Appearance",
        "Observable_body_parts",
        "Clothing",
        "Temporal_collocation",
        "Being_necessary",
        "Change_position_on_a_scale",
        "Scrutiny",
        "Time_vector",
        "Needing",
        "Causation",
        "Instance",
        "Change_position_on_a_scale",
        "Supply",
        "Custom",
        "Capability",
        "Attempt"
    ],
    "For in-depth reference you could take a look at - LINK": [
        "Scrutiny",
        "Capability",
        "Have_as_requirement"
    ],
    "IMHO, the best practice would be not to perform asynchronous operations in getView -LRB- -RRB-.": [
        "Practice",
        "Businesses",
        "Desirability",
        "Intentionally_act"
    ],
    "Your Adapter class is only supposed to transform Objects into Views and you should keep it as straightforward as possible.": [
        "Sole_instance",
        "Categorization",
        "Likelihood",
        "Cause_change",
        "Being_obligated",
        "Activity_ongoing",
        "Candidness",
        "Required_event"
    ],
    "You can run into trouble if you start an asynchronous task -LRB- or a Thread -RRB- which references newly created View if the task finishes after the view is not on screen anymore or if it was recycled by the adapter as a result of scrolling.": [
        "Predicament",
        "Temporal_subregion",
        "Being_obligated",
        "Natural_features",
        "Temporal_collocation",
        "Categorization",
        "Opinion",
        "Capability",
        "Activity_finish",
        "Causation",
        "Execution",
        "Intentionally_create"
    ],
    "You should consider performing asynchronous operations outside of the adapter.": [
        "Intentionally_act",
        "Businesses",
        "Being_obligated",
        "Categorization"
    ],
    "Start an operation and update the list after it is done.": [
        "Temporal_subregion",
        "Using",
        "Intentionally_act"
    ],
    "You can update the whole list or some elements when the asynchronous operation is finished.": [
        "Ingredients",
        "Temporal_collocation",
        "Using",
        "Ranked_expectation",
        "Relational_quantity",
        "Capability",
        "Process_completed_state"
    ],
    "Operations themselves can be done in AsyncTask of your activity or in a dedicated Service.": [
        "Businesses",
        "Rite",
        "Likelihood",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "Avoid creating new Threads because creating threads is expensive and if for some reason you call it too often, you can run out of memory.": [
        "Natural_features",
        "Natural_features",
        "Causation",
        "Remembering_experience",
        "Age",
        "Relational_quantity",
        "Execution",
        "Sufficiency",
        "Intentionally_create",
        "Frequency",
        "Partitive",
        "Execution",
        "Avoiding",
        "Expensiveness",
        "Capability"
    ],
    "AsyncTasks use a Thread pool and therefore you will not have this problem.": [
        "Natural_features",
        "Predicament",
        "Using"
    ],
    "So, taking a step back and looking at this completely abstractly, it seems the question you are asking is along the lines of how to manage some potentially long-running action -LRB- network or otherwise -RRB- that will affect the appearance of a list view item.": [
        "Intentionally_act",
        "Observable_body_parts",
        "Relational_quantity",
        "Intentionally_act",
        "Network",
        "Entity",
        "Appearance",
        "Opinion",
        "Taking",
        "Scrutiny",
        "Execution",
        "Point_of_dispute",
        "Operating_a_system",
        "Objective_influence"
    ],
    "Given that assumption, you face two main problems:": [
        "Predicament",
        "Confronting_problem",
        "First_rank",
        "Giving",
        "Cardinal_numbers"
    ],
    "Issue 1 can be addressed by using a ThreadPoolExecutor -LRB- or whatever other mechanisim you feel like -RRB-.": [
        "Point_of_dispute",
        "Increment",
        "Likelihood",
        "Using",
        "Desiring"
    ],
    "The idea being that the threads are recycled as well, so they don't take so much time to spin up.": [
        "Natural_features",
        "Intentionally_act",
        "Measure_duration",
        "Relational_quantity",
        "Locative_relation",
        "Motion",
        "Have_as_requirement"
    ],
    "Issue 2 is a little more complicated.": [
        "Point_of_dispute",
        "Increment"
    ],
    "You can cancel the thread operation when the view is about to be recycled -LRB- there are a few ways of doing this -RRB- but you need to decide if losing the effort is acceptable -LRB- the user may scroll your view back on the screen and you have to start again -RRB-.": [
        "Using",
        "Temporal_collocation",
        "Execution",
        "Finish_competition",
        "Attempt",
        "Observable_body_parts",
        "Intentionally_act",
        "Required_event",
        "Opinion",
        "Capability",
        "Quantity",
        "Likelihood",
        "Relational_quantity",
        "Being_obligated",
        "Existence",
        "Activity_start",
        "Deciding"
    ],
    "You could store the result of your long-running task against the list item -LRB- or some data holder associated with the list item -RRB- but you need to be wary of running out of memory -LRB- least recently used caching or lru caches can sometimes be useful here -RRB-.": [
        "Being_obligated",
        "Entity",
        "Relational_quantity",
        "Remembering_experience",
        "Temporal_collocation",
        "Locative_relation",
        "Required_event",
        "Capability",
        "Partitive",
        "Using",
        "Execution",
        "Cognitive_connection",
        "Capability",
        "Causation",
        "Storing",
        "Frequency"
    ],
    "This would allow you to keep your effort and only update your list view if it is still on-screen.": [
        "Sole_instance",
        "Attempt",
        "Opinion",
        "Continued_state_of_affairs",
        "Grant_permission",
        "Activity_ongoing"
    ],
    "A flag in your item data could be used to indicate you already have the data and not load it again.": [
        "Entity",
        "Time_vector",
        "Evidence",
        "Using",
        "Capability"
    ],
    "Sorry, I don't have enough time to go into more detail at the moment.": [
        "Intentionally_act",
        "Increment",
        "Measure_duration",
        "Sufficiency",
        "Becoming"
    ],
    "It's bedtime for me: - -RRB-": [],
    "Good luck.": [],
    "I'll write some more if I have time.": [
        "Relational_quantity",
        "Increment",
        "Measure_duration"
    ],
    "Kind regards, CJ": [],
    "EDIT": [],
    "I think this is an interesting question, worth some kind of `` canonical'' solution": [
        "Stimulus_focus",
        "Relational_quantity",
        "Point_of_dispute",
        "Opinion"
    ],
    "LINK :P I suggest you to watch this Google I/O from 2013.": [
        "Perception_active"
    ],
    "They have clealy explained a lot of these stuff there.": [
        "Quantity",
        "Locative_relation"
    ],
    "All of your questions will be answered there.": [
        "Questioning",
        "Locative_relation",
        "Communication_response",
        "Quantity"
    ],
    "It's canon.": [],
    "I have used Volley library here.": [
        "Buildings",
        "Locative_relation",
        "Using"
    ],
    "If you read the docs then you'll see that Volley runs on background threads.": [
        "Natural_features",
        "Perception_experience",
        "Reading",
        "Execution",
        "Temporal_collocation"
    ],
    "So no need to implement your async tasks.": [
        "Quantity",
        "Gizmo",
        "Being_obligated",
        "Needing"
    ],
    "Since others have already covered the issues in using Threads I will not talk about those.": [
        "Increment",
        "Natural_features",
        "Using",
        "Time_vector",
        "Topic"
    ],
    "Let me go into code directly: -RRB-": [
        "Grant_permission",
        "Becoming"
    ],
    "The following has served me well whenever my listviews or gridviews or any other views depend on information from the web:": [
        "Quantity",
        "Network",
        "Increment",
        "Categorization",
        "Information",
        "Assistance"
    ],
    "Create an interface: WebInfoUpdateReceiver.java": [],
    "Create a class to download stuff: Downloader.java": [
        "Cause_to_start"
    ],
    "Now make your activity implement the interface:": [
        "Temporal_collocation",
        "Gizmo",
        "Intentionally_act",
        "Causation"
    ],
    "Android AsyncTask HTTP GET request TutorialJason CromerOct 27, 2015 \u00b7 7 min readQuickly and efficiently implement an asynchronous HTTP GET requestNOTE: This method is now inferior to the new Architecture Components pattern and should be considered deprecated.Our Expectations and GoalsIf we have an application that requires the use of a standard HTTP request, we better do it right.": [
        "Gizmo",
        "Execution",
        "Ingredients",
        "Expectation",
        "Using",
        "Getting",
        "Desirability",
        "Correctness",
        "Temporal_collocation",
        "Pattern",
        "Age",
        "Intentionally_act",
        "Desirability",
        "Have_as_requirement",
        "Being_obligated",
        "Possession",
        "Categorization",
        "Execution"
    ],
    "Due to the specifics of Android threading, we can not run network tasks on the same thread as the UI thread.": [
        "Network",
        "Being_obligated",
        "Identicality",
        "Execution",
        "Capability"
    ],
    "Aside from the compiler not letting you within recent updates, using the UI thread to complete a request has deadly consequences.For example: Lets say we implement a GET request on our UI thread, and our API ( for some reason ) can not process it.": [
        "Natural_features",
        "Execution",
        "Killing",
        "Instance",
        "Gizmo",
        "Causation",
        "Relative_time",
        "Getting",
        "Relational_quantity",
        "Processing_materials",
        "Grant_permission",
        "Activity_finish",
        "Capability",
        "Using"
    ],
    "If we do not have catches for timeout exceptions or other exceptions that might have been raised, our thread is now blocked.Why on earth would you want to risk blocking your UI thread, if, lets say, we are doing database maintenance or adjustments that cause it to go down.": [
        "Causation",
        "Natural_features",
        "Part_inner_outer",
        "Eclipse",
        "Adjusting",
        "Ingestion",
        "Intentionally_act",
        "Increment",
        "Causation",
        "Becoming",
        "Likelihood",
        "Temporal_collocation",
        "Activity_ongoing",
        "Run_risk",
        "Intentionally_act",
        "Desiring"
    ],
    "Blocking the UI thread would mean the application would freeze and become unresponsive.": [
        "Eclipse",
        "Natural_features",
        "Using",
        "Becoming",
        "Activity_pause",
        "Causation"
    ],
    "Android handles this by a pop-up window asking the user to `` wait'' until the app responds, or `` close'' the application due to it being unresponsive.": [
        "Connecting_architecture",
        "Resolve_problem",
        "Response",
        "Using",
        "Execution"
    ],
    "Sounds like that app is getting an instant un-install to me.So, with that explained, lets outline what we want from our HTTP request.": [
        "Make_noise",
        "Execution",
        "Possession",
        "Execution",
        "Grant_permission"
    ],
    "First off, do we want to retrieve, add, update, or delete data from our database ?": [
        "Ordinal_numbers",
        "Locative_relation",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_act",
        "Desiring"
    ],
    "These operations are commonly known as CRUD ( Create, Read, Update, Delete ) and allow us to manipulate the data stored in our database in those manners.": [
        "Businesses",
        "Storing",
        "Manipulate_into_doing",
        "Grant_permission"
    ],
    "In conjunction with a REST-ful API, we have our POST, GET, PUT, and DELETE requests.": [
        "Sending",
        "Getting",
        "Execution",
        "Collaboration"
    ],
    "If we want to retrieve, for example, the number of users in our application, we would perform a GET request.": [
        "Instance",
        "Using",
        "Getting",
        "Quantity",
        "Execution",
        "Intentionally_act",
        "Possession"
    ],
    "If we want to add a new user, we would use a POST request.": [
        "Sending",
        "Age",
        "Execution",
        "Using",
        "Possession"
    ],
    "Updating a user could be done with either a PUT or POST request.": [
        "Sending",
        "Execution",
        "Capability",
        "Intentionally_act"
    ],
    "Deleting a user would be done with a DELETE request.": [
        "Execution",
        "Intentionally_act"
    ],
    "Using these methods appropriately with our REST-ful API will allow us to maintain a properly organized system of requests.I just thought I'd note: There are some semantics behind using the phrase `` CRUD'' and `` REST'' in the same phrase, since in a REST-ful API, you actually Create and Update when you perform a POST request, but that should be little to no concern for this tutorial.To summarize, what do we want?We want a method that is performed asynchronously with our UI thread, that cleanly performs a GET, POST, PUT or DELETE request, and handles any exceptions.": [
        "Execution",
        "Encoding",
        "Temporal_collocation",
        "Quantity",
        "Execution",
        "Sending",
        "Relational_quantity",
        "Identicality",
        "Execution",
        "Being_obligated",
        "Quantity",
        "Using",
        "System",
        "Cause_to_start",
        "Intentionally_act",
        "Emotion_directed",
        "Intentionally_act",
        "Existence",
        "Using",
        "Intentionally_act",
        "Sufficiency",
        "Getting",
        "Activity_ongoing",
        "Grant_permission",
        "Summarizing",
        "Intentionally_act",
        "Possession",
        "Intentionally_act",
        "Awareness"
    ],
    "So lets get started.Step 1: Using the AsyncTask for AndroidTo start, whether you're in Android Studio or Eclipse, create a new class.": [
        "Temporal_subregion",
        "Building_subparts",
        "Eclipse",
        "Age",
        "Execution",
        "Intentionally_create",
        "Using"
    ],
    "Since we're going to be doing a GET request in this tutorial, lets call it HttpGetRequest.": [
        "Getting",
        "Execution",
        "Intentionally_act",
        "Execution",
        "Motion"
    ],
    "After that, extend the class AsyncTask.": [
        "Expansion"
    ],
    "There are a few parameters that you have to pass in that correlate to AsyncTask's methods.": [
        "Execution",
        "Terms_of_agreement",
        "Quantity",
        "Being_obligated",
        "Process_end",
        "Existence"
    ],
    "The ones we'll be using are doInBackground ( ) and onPostExecute, and the type we want to return is String.": [
        "Clothing",
        "Possession",
        "Using",
        "Execution"
    ],
    "This is merely a preference for this tutorial, so you can return any primitive data type or object if you pleased.Passing the String parameters into our extended class should look like so: Now, you'll be bothered because you need to implement AsyncTask's override methods.": [
        "Quantity",
        "Duration_attribute",
        "Gizmo",
        "Terms_of_agreement",
        "Temporal_collocation",
        "Execution",
        "Execution",
        "Capability",
        "Being_obligated",
        "Required_event",
        "Scrutiny"
    ],
    "If you have the options to left click and `` generate'' its override methods, select `` doInBackground ( )'' and `` onPostExecute''.": [
        "Part_orientational",
        "Execution",
        "Possibilities",
        "Sounds"
    ],
    "If not, look below at what our class should now look like.After instantiating a new instance of this class in another class or activity, we can access these methods to perform some background task in doInBackground ( ) and retrieve the result in onPostExecute ( ).": [
        "Instance",
        "Intentionally_act",
        "Relational_quantity",
        "Being_obligated",
        "Causation",
        "Age",
        "Increment",
        "Execution",
        "Temporal_collocation",
        "Being_obligated",
        "Intentionally_act",
        "Scrutiny",
        "Capability"
    ],
    "Lets take a look at an example below: With the skeleton of our class now set up, lets start implementing the actual HTTP request part of it.Step 2: Making the GET RequestWe should now understand the basics of how making the request works, as well as how to use it.": [
        "Scrutiny",
        "Instance",
        "Gizmo",
        "Membership",
        "Actually_occurring_entity",
        "Execution",
        "Getting",
        "Being_obligated",
        "Temporal_collocation",
        "Intentionally_create",
        "Categorization",
        "Causation",
        "Using",
        "Causation",
        "Cardinal_numbers",
        "Temporal_subregion",
        "Have_as_requirement"
    ],
    "Now lets begin implementing the steps to perform the actual request.As a quick outline, we will be doing the following: Create a connection to our urlSet our method types ( GET, POST, etc ... ) Create an InputStream to read our resultsCatch our exceptionsHere we are setting up some variables to hold our url and result String.": [
        "Temporal_collocation",
        "Gizmo",
        "Social_connection",
        "Execution",
        "Getting",
        "Sending",
        "Process_start",
        "Actually_occurring_entity",
        "Speed",
        "Relative_time",
        "Relational_quantity",
        "Categorization",
        "Intentionally_act",
        "Intentionally_act",
        "Causation",
        "Intentionally_act",
        "Containing",
        "Intentionally_create",
        "Cause_to_start"
    ],
    "In the method `` doInBackground ( String ... params )'', params is an array holding the data we passed in.": [
        "Execution",
        "Diversity",
        "Natural_features",
        "Containing"
    ],
    "So if we have passed in a url of type String, we will naturally set our result variable equal to the 0th index of params.Now we will be connecting to our url.": [
        "Evaluative_comparison",
        "Traversing",
        "Causation",
        "Intentionally_create",
        "Attaching"
    ],
    "The next steps will all be wrapped in this try-catch block as we will need to catch certain exceptions that may occur during the GET request.As you can see we are casting our myUrl.openConnection ( ) to a HttpURLConnection type.": [
        "Measure_linear_extent",
        "Hunting_success_or_failure",
        "Locative_relation",
        "Likelihood",
        "Intentionally_act",
        "Required_event",
        "Likelihood",
        "Grasp",
        "Perception_experience",
        "Event",
        "Capability"
    ],
    "This should be pretty straightforward.": [
        "Candidness",
        "Being_obligated"
    ],
    "Next, we will be setting our request method, read and connection timeouts.": [
        "Execution",
        "Social_connection",
        "Execution"
    ],
    "I will be using a standard 15 second timeout for each ( in milliseconds ) and, of course, our request method will be a GET request.": [
        "Execution",
        "Measure_duration",
        "Execution",
        "Getting",
        "Cardinal_numbers",
        "Using"
    ],
    "For good practice, I'll make these constants as well.Now that we have set our timeouts, request method, and connected ( attempted anyway ), we are going to create a Stringbuilder and InputStreamReader to read our input from the API.": [
        "Practice",
        "Execution",
        "Cognitive_connection",
        "Desirability",
        "Execution",
        "Causation",
        "Categorization",
        "Intentionally_create",
        "Intentionally_create",
        "Motion",
        "Attempt"
    ],
    "Doing so involves a few small steps.": [
        "Participation",
        "Intentionally_act",
        "Intentionally_act",
        "Quantity",
        "Dimension"
    ],
    "First, we will create an InputStreamReader that reads our request input.": [
        "Ordinal_numbers",
        "Execution",
        "Categorization",
        "Intentionally_create"
    ],
    "Next, we will create a BufferedReader that will allow us to iterate through the response.": [
        "Response",
        "Grant_permission",
        "Intentionally_create"
    ],
    "We will then iterate through each line of our response and append it to our StringBuilder.": [
        "Response",
        "Temporal_collocation",
        "Attaching"
    ],
    "We will also create a new variable of type String called inputLine by the other two String we created in doInBackground ( ).": [
        "Age",
        "Execution",
        "Increment",
        "Cardinal_numbers",
        "Intentionally_create",
        "Intentionally_create"
    ],
    "See, that wasn't that bad, now was it ?": [
        "Temporal_collocation",
        "Desirability",
        "Grasp"
    ],
    "We are just reading our input, parsing through each line, appending it to a StringBuilder, and converting it to our String result afterwards.Now, however, we have to deal with our exceptions.": [
        "Causation",
        "Attaching",
        "Reading",
        "Resolve_problem",
        "Being_obligated",
        "Cause_change",
        "Concessive"
    ],
    "In the case of a GET request, we only need to catch IOException.": [
        "Instance",
        "Execution",
        "Getting",
        "Sole_instance",
        "Hunting_success_or_failure",
        "Required_event"
    ],
    "The other request methods can have more catching to do if, for example, we decide to create a JSON object to write to.": [
        "Hunting_success_or_failure",
        "Instance",
        "Execution",
        "Increment",
        "Capability",
        "Intentionally_create",
        "Deciding",
        "Increment",
        "Execution",
        "Intentionally_act"
    ],
    "That is a discussion for another Medium post though, and won't be covered here.": [
        "Discussion",
        "Increment",
        "Sending",
        "Locative_relation",
        "Position_on_a_scale",
        "Topic"
    ],
    "So lets implement this IOException and handle it nicely.": [
        "Make_possible_to_do",
        "Gizmo",
        "Resolve_problem"
    ],
    "We'll be setting our result to null here, so it is VERY important to check for a null response in the other classes that you are using this with.": [
        "Being_in_effect",
        "Importance",
        "Increment",
        "Locative_relation",
        "Using",
        "Causation",
        "Response",
        "Inspecting"
    ],
    "If you want to play it safe and avoid a null pointer exception, you can always return an empty String ( ``'' ).": [
        "Performers_and_roles",
        "Being_in_effect",
        "Fullness",
        "Risky_situation",
        "Frequency",
        "Execution",
        "Capability",
        "Preventing",
        "Possession"
    ],
    "Here we caught our IOException, printed the stack trace in order to see more details if/when we have do debug, and set our result to null.": [
        "Locative_relation",
        "Hunting_success_or_failure",
        "Emptying",
        "Increment",
        "Causation",
        "Text_creation",
        "Intentionally_act",
        "Grasp",
        "Intentionally_create"
    ],
    "We won't be doing anything with our onPostExecute method, but if you feel inclined to, this is where you would do any post-processing on your result.": [
        "Execution",
        "Locative_relation",
        "Quantity",
        "Causation",
        "Inclination",
        "Feeling",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "The full implementation to our HTTP GET request is complete.Step 3: SummarizeWe've gone through and implemented, step by step, the process of creating an asynchronous HTTP GET request in Java, using Android's AsyncTask class.": [
        "Fullness",
        "Execute_plan",
        "Intentionally_act",
        "Cardinal_numbers",
        "Getting",
        "Execution",
        "Motion",
        "Using",
        "Intentionally_create",
        "Execute_plan",
        "Execution"
    ],
    "This will allow your app to perform requests while the user interacts with your app's UI.If you have any questions or input, go ahead and leave a comment and I'll get back to you as soon as I can.": [
        "Questioning",
        "Temporal_subregion",
        "Quantity",
        "Becoming",
        "Departing",
        "Revenge",
        "Grant_permission",
        "Execution",
        "Intentionally_act",
        "Capability",
        "Possession"
    ],
    "I hope this tutorial is of some use to you, and helps you on your way to creating an awesome Android application.": [
        "Using",
        "Relational_quantity",
        "Intentionally_create",
        "Desiring",
        "Assistance"
    ],
    "Android AsyncTask HTTP GET request TutorialJason CromerOct 27, 2015 \u00b7 7 min readQuickly and efficiently implement an asynchronous HTTP GET requestNOTE: This method is now inferior to the new Architecture Components pattern and should be considered deprecated.": [
        "Gizmo",
        "Execution",
        "Ingredients",
        "Getting",
        "Temporal_collocation",
        "Pattern",
        "Age",
        "Desirability",
        "Being_obligated",
        "Judgment_communication",
        "Categorization",
        "Execution"
    ],
    "Android AsyncTask HTTP GET request TutorialJason CromerOct 27, 2015 \u00b7 7 min read": [
        "Execution",
        "Getting"
    ],
    "Jason CromerOct 27, 2015 \u00b7 7 min read": [],
    "Our Expectations and GoalsIf we have an application that requires the use of a standard HTTP request, we better do it right.": [
        "Expectation",
        "Using",
        "Execution",
        "Desirability",
        "Correctness",
        "Intentionally_act",
        "Have_as_requirement",
        "Possession"
    ],
    "Jason CromerSoftware Engineer at Postmates.": [
        "People_by_vocation"
    ],
    "I write about Android-related things, as well as personal/professional health and success.Follow886 15": [
        "Relational_quantity",
        "Medical_conditions",
        "Cardinal_numbers"
    ],
    "I write about Android-related things, as well as personal/professional health and success.Follow": [
        "Relational_quantity",
        "Medical_conditions"
    ],
    "I write about Android-related things, as well as personal/professional health and success.": [
        "Relational_quantity",
        "Medical_conditions",
        "Success_or_failure"
    ],
    "Level up your Twilio API skills in TwilioQuest, an educational game for Mac, Windows, and Linux.": [
        "Rank",
        "Expertise",
        "Education_teaching",
        "Connecting_architecture"
    ],
    "Voice & Video Programmable Voice Programmable Video Elastic SIP Trunking TaskRouter Network Traversal": [
        "Ingestion",
        "Network"
    ],
    "Messaging Programmable SMS Programmable Chat Notify": [
        "Chatting"
    ],
    "Lookup Phone Numbers Programmable Wireless Sync": [
        "Contacting",
        "Quantity"
    ],
    "Access Security Call & Text Marketing Collaboration Commerce Communications Contact Center": [
        "Having_or_lacking_access",
        "Collaboration",
        "Exchange",
        "Communication",
        "Contacting",
        "Locale_by_use",
        "Being_at_risk",
        "Execution"
    ],
    "Customer Stories Partner Showcase Why Twilio ?": [
        "Collaboration",
        "Reason"
    ],
    "API & Docs Blog Help Jobs at Twilio": [
        "Assistance",
        "Being_obligated"
    ],
    "Build the future of communications.": [
        "Communication",
        "Possibilities",
        "Building"
    ],
    "Start today with Twilio's APIs and services.": [
        "Public_services",
        "Temporal_collocation",
        "Temporal_subregion"
    ],
    "Please enter a valid email address.": [
        "Being_in_effect",
        "Contacting",
        "Speak_on_topic",
        "Execution"
    ],
    "Tutorials Sample applications that cover common use cases in a variety of languages.": [
        "Instance",
        "Filling"
    ],
    "Download, test drive, and tweak them yourself.": [
        "Operational_testing",
        "Manipulation"
    ],
    "Sample applications that cover common use cases in a variety of languages.": [
        "Instance",
        "Filling"
    ],
    "-LSB- header image credit: Iron in the Butterfly Nebula, NASA Astronomy Picture of the Day July 21 2020 ( modified ) -RSB- Making HTTP requests is a core feature of modern programming, and is often one of the first things you want to do when learning a new programming language.": [
        "Similarity",
        "Substance",
        "Physical_artworks",
        "Calendric_unit",
        "Calendric_unit",
        "Cause_change",
        "Gizmo",
        "Education_teaching",
        "Causation",
        "Execution",
        "Temporal_collocation",
        "Frequency",
        "Ordinal_numbers",
        "Age",
        "Temporal_collocation",
        "Intentionally_act",
        "Possession",
        "Cardinal_numbers"
    ],
    "For Java programmers there are many ways to do it - core libraries in the JDK and third-party libraries.": [
        "Gizmo",
        "Buildings",
        "Quantity",
        "Intentionally_act",
        "Execution",
        "Existence"
    ],
    "This post will introduce you to the Java HTTP clients that I reach for.": [
        "Sending",
        "Execution"
    ],
    "If you use other ones, that's great !": [
        "Clothing",
        "Increment",
        "Desirability",
        "Using"
    ],
    "Let me know about it.": [
        "Awareness",
        "Grant_permission"
    ],
    "In this post I'll cover: Core Java:": [
        "Sending",
        "Topic",
        "Gizmo"
    ],
    "I'll use the Astronomy Picture of the Day API from the NASA APIs for the code samples, and the code is all on GitHub in a project based on Java 11.": [
        "Physical_artworks",
        "Calendric_unit",
        "Project",
        "Quantity",
        "Using"
    ],
    "Core Java APIs for making Java http requests Since Java 1.1 there has been an HTTP client in the core libraries provided with the JDK.": [
        "Gizmo",
        "Gizmo",
        "Buildings",
        "Supply",
        "Existence",
        "Execution",
        "Causation"
    ],
    "With Java 11 a new client was added.": [
        "Age"
    ],
    "One of these might be a good choice if you are sensitive about adding extra dependencies to your project.": [
        "Choosing",
        "Reliance",
        "Project",
        "Relational_quantity",
        "Cardinal_numbers",
        "Health_response",
        "Likelihood"
    ],
    "Java 1.1 HttpURLConnection First of all, do we capitalize acronyms in class names or not ?": [
        "Quantity",
        "Intentionally_act"
    ],
    "Anyway, close your eyes and center yourself in 1997.": [
        "Locale_by_use",
        "Observable_body_parts",
        "Social_connection"
    ],
    "Titanic was rocking the box office and inspiring a thousand memes, Spice Girls had a best-selling album, but the biggest news of the year was surely HttpURLConnection being added to Java 1.1.": [
        "Containers",
        "Subjective_influence",
        "Food",
        "People",
        "Calendric_unit",
        "Building_subparts",
        "Cardinal_numbers",
        "Being_obligated",
        "Moving_in_place"
    ],
    "Here's how you would use it to make a GET request to get the APOD data:": [
        "Locative_relation",
        "Execution",
        "Getting",
        "Execution",
        "Causation",
        "Using"
    ],
    "-LSB- full code on GitHub -RSB- This seems quite verbose, and I find the order that we have to do things is confusing ( why do we set headers after opening the URL ? )": [
        "Fullness",
        "Reason",
        "Body_movement",
        "Appearance",
        "Intentionally_create",
        "Intentionally_act",
        "Being_obligated",
        "Stimulus_focus",
        "Coming_to_believe"
    ],
    "If you need to make more complex requests with POST bodies, or custom timeouts etc then it's all possible but I never found this API intuitive at all.": [
        "Increment",
        "Observable_body_parts",
        "Custom",
        "Temporal_collocation",
        "Quantity",
        "Required_event",
        "Execution",
        "Frequency",
        "Likelihood",
        "Causation",
        "Becoming_aware"
    ],
    "When would you use HTTPUrlConnection, then ?": [
        "Temporal_collocation",
        "Temporal_collocation",
        "Using"
    ],
    "If you are supporting clients who are using older versions of Java, and you can't add a dependency then this might be for you.": [
        "Reliance",
        "Likelihood",
        "Age",
        "Temporal_collocation",
        "Using",
        "Taking_sides",
        "Capability"
    ],
    "I suspect that's only a small minority of developers, but you might see it in older codebases - for more modern approaches, read on.": [
        "Sole_instance",
        "Execution",
        "Dimension",
        "Likelihood",
        "Age",
        "Increment",
        "Temporal_collocation",
        "Categorization",
        "Grasp",
        "Awareness"
    ],
    "Java 11 HttpClient More than twenty years after HttpURLConnection we had Black Panther in the cinemas and a new HTTP client added to Java 11: java.net.http.HttpClient.": [
        "Increment",
        "Measure_duration",
        "Cardinal_numbers",
        "Being_obligated",
        "Color",
        "Age"
    ],
    "This has a much more logical API and can handle HTTP/2, and Websockets.": [
        "Relational_quantity",
        "Increment",
        "Resolve_problem",
        "Capability",
        "Inclusion"
    ],
    "It also has the option to make requests synchronously or asynchronously by using the CompletableFuture API.": [
        "Execution",
        "Using",
        "Causation",
        "Possibilities",
        "Inclusion"
    ],
    "99 times out of 100 when I make an HTTP request I want to read the response body into my code.": [
        "Timespan",
        "Cardinal_numbers",
        "Temporal_collocation",
        "Response",
        "Execution",
        "Partitive",
        "Reading",
        "Execution",
        "Possession",
        "Causation"
    ],
    "Libraries that make this difficult will not spark joy in me.": [
        "Buildings",
        "Difficulty",
        "Causation",
        "Cause_to_start"
    ],
    "HttpClient accepts a BodyHandler which can convert an HTTP response into a class of your choosing.": [
        "Response",
        "Capability",
        "Cause_change",
        "Receiving"
    ],
    "There are some built-in handlers: String, byte -LSB- -RSB- for binary data, Stream <String> which splits by lines, and a few others.": [
        "Relational_quantity",
        "Quantity",
        "Increment",
        "Separating",
        "Quantity",
        "Existence"
    ],
    "You can also define your own, which might be helpful as there isn't a built-in BodyHandler for parsing JSON.": [
        "Likelihood",
        "Communicate_categorization",
        "Assistance",
        "Existence",
        "Possession",
        "Capability"
    ],
    "I've written one ( here ) based on Jackson following an example from Java Docs.": [
        "Cardinal_numbers",
        "Locative_relation",
        "Instance",
        "Relative_time"
    ],
    "It returns a Supplier for the APOD class, so we call.": [
        "Execution",
        "Execution"
    ],
    "get ( ) when we need the result.": [
        "Temporal_collocation",
        "Causation",
        "Execution",
        "Required_event"
    ],
    "This is a synchronous request:": [
        "Execution"
    ],
    "For an asynchronous request the client and request are made in the same way, then call.": [
        "Execution",
        "Temporal_collocation",
        "Identicality",
        "Execution",
        "Causation"
    ],
    "-LSB- full code on GitHub -RSB- Third-party Java HTTP client libraries If the built-in clients don't work for you, don't worry !": [
        "Fullness",
        "Buildings",
        "Intentionally_act",
        "Working_on",
        "Emotion_active"
    ],
    "There are plenty of libraries you can bring into your project which will do the job.": [
        "Buildings",
        "Project",
        "Being_obligated",
        "Sufficiency",
        "Intentionally_act",
        "Causation",
        "Capability",
        "Existence"
    ],
    "Apache HttpClient The Apache Software Foundation's HTTP clients have been around for a long time.": [
        "Body_decoration",
        "Locative_relation",
        "Duration_attribute",
        "Measure_duration"
    ],
    "They're widely-used and are the foundation for a lot of higher-level libraries.": [
        "Body_decoration",
        "Buildings",
        "Quantity"
    ],
    "The history is a little confusing.": [
        "History",
        "Quantity",
        "Stimulus_focus"
    ],
    "The old Commons HttpClient is no longer being developed, and the new version ( also called HttpClient ), is under the HttpComponents project.": [
        "Project",
        "Temporal_collocation",
        "Age",
        "Execution",
        "Age",
        "Cause_to_make_progress"
    ],
    "Version 5.0 was released in early 2020, adding HTTP/2 support.": [
        "Temporal_subregion",
        "Taking_sides",
        "Releasing"
    ],
    "The library also supports synchronous and asynchronous requests.": [
        "Buildings",
        "Execution",
        "Evidence"
    ],
    "Overall the API is rather low-level - you are left to implement a lot for yourself.": [
        "Clothing",
        "Direction",
        "Gizmo",
        "Quantity"
    ],
    "The following code calls the NASA API.": [
        "Relative_time",
        "Execution"
    ],
    "It doesn't look too hard to use but I have skipped a lot of the error handling which you would want in production code and again I had to add Jackson code to parse the JSON response.": [
        "Sufficiency",
        "Intentionally_create",
        "Cause_change_of_position_on_a_scale",
        "Response",
        "Intentionally_act",
        "Quantity",
        "Self_motion",
        "Being_obligated",
        "Scrutiny",
        "Difficulty",
        "Desiring",
        "Using",
        "Resolve_problem"
    ],
    "You might also want to configure a logging framework to avoid warnings on stdout ( no big deal, but it does irk me a bit ).": [
        "Quantity",
        "Likelihood",
        "Size",
        "Quantity",
        "Resolve_problem",
        "Experiencer_obj",
        "Intentionally_act",
        "Preventing",
        "Desiring"
    ],
    "-LSB- full code on GitHub -RSB- Apache provides several more examples for sync and async requests.": [
        "Fullness",
        "Instance",
        "Execution",
        "Increment",
        "Quantity",
        "Supply"
    ],
    "OkHttp OkHttp is an HTTP client from Square with a lot of helpful built-in features, like automatic handling of GZIP, response caching and retries or fallback to other hosts in case of network errors as well as HTTP/2 and WebSocket support.": [
        "Locale_by_use",
        "Response",
        "Instance",
        "Network",
        "Increment",
        "Taking_sides",
        "Quantity",
        "Assistance"
    ],
    "The API is clean although there is no built-in parsing of JSON responses so again I added code to parse the JSON with Jackson:": [
        "Quantity",
        "Response",
        "Existence"
    ],
    "-LSB- full code on GitHub -RSB- This is fine, but the real power of OkHttp is clear when you add Retrofit over the top.": [
        "Fullness",
        "Temporal_collocation",
        "Part_orientational",
        "Existence",
        "Desirability",
        "Execution",
        "Obviousness"
    ],
    "Retrofit Retrofit is another library from Square, built on top of OkHttp.": [
        "Buildings",
        "Locale_by_use",
        "Increment",
        "Part_orientational",
        "Building"
    ],
    "Along with all the low-level features of OkHttp it adds a way to build Java classes which abstract the HTTP details and present a nice Java-friendly API.": [
        "Quantity",
        "Stimulus_focus",
        "Presence",
        "Coming_to_believe",
        "Building",
        "Accompaniment"
    ],
    "First, we need to create an interface which declares the methods we want to call against the APOD API, with annotations defining how those correspond to HTTP requests:": [
        "Ordinal_numbers",
        "Execution",
        "Possession",
        "Communicate_categorization",
        "Execution",
        "Execution",
        "Intentionally_create",
        "Required_event"
    ],
    "The return type of CompletableFuture <APOD> makes this an asynchronous client.": [
        "Execution",
        "Causation"
    ],
    "Square provide other adapters or you could write your own.": [
        "Locale_by_use",
        "Increment",
        "Capability",
        "Supply",
        "Possession"
    ],
    "Having an interface like this helps with mocking the client for tests, which I appreciate.": [
        "Operational_testing",
        "Judgment_communication",
        "Judgment",
        "Possession",
        "Assistance"
    ],
    "After declaring the interface we ask Retrofit to create an implementation which we can use to make requests against a given base URL.": [
        "Execute_plan",
        "Locale_by_use",
        "Giving",
        "Execution",
        "Causation",
        "Capability",
        "Using",
        "Intentionally_create",
        "Execution"
    ],
    "It's also helpful for integration testing to be able to switch the base URL.": [
        "Change_tool",
        "Locale_by_use",
        "Operational_testing",
        "Capability",
        "Assistance"
    ],
    "To generate the client, the code looks like this:": [
        "Cause_to_start",
        "Scrutiny"
    ],
    "-LSB- full code on GitHub -RSB- API Authentication If there are multiple methods in our interface which all need an API key it is possible to configure that by adding an HttpInterceptor to the base OkHttpClient.": [
        "Fullness",
        "Execution",
        "Quantity",
        "Importance",
        "Locale_by_use",
        "Quantity",
        "Likelihood",
        "Existence",
        "Required_event"
    ],
    "The custom client can be added to the Retrofit.Builder.": [
        "Custom",
        "Likelihood"
    ],
    "The code needed to create the custom client is:": [
        "Custom",
        "Required_event",
        "Intentionally_create"
    ],
    "-LSB- full code on GitHub -RSB- I like this kind of Java API for all but the simplest cases.": [
        "Fullness",
        "Quantity",
        "Instance",
        "Experiencer_focus"
    ],
    "Building classes to represent remote APIs is a nice abstraction that plays well with dependency injection, and having Retrofit create them for you based on a customizable OkHttp client is great.": [
        "Building",
        "Performers_and_roles",
        "Reliance",
        "Stimulus_focus",
        "Communicate_categorization",
        "Intentionally_create",
        "Categorization",
        "Desirability"
    ],
    "Other HTTP clients for Java Since posting this article on Twitter I have been delighted to see people discussing which HTTP clients they use.": [
        "Sounds",
        "People",
        "Discussion",
        "Increment",
        "Using",
        "Grasp",
        "Experiencer_focus",
        "Sending"
    ],
    "If none of the above is quite what you want, have a look at these suggestions:": [
        "Scrutiny",
        "Possession"
    ],
    "REST Assured - an HTTP client designed for testing your REST services.": [
        "Stimulus_focus",
        "Likelihood",
        "Public_services",
        "Operational_testing",
        "Coming_up_with"
    ],
    "Offers a fluent interface for making requests and helpful methods for making assertions about responses.": [
        "Execution",
        "Response",
        "Assistance",
        "Execution",
        "Causation"
    ],
    "cvurl - a wrapper for the Java 11 HttpClient which rounds off some of the sharp edges you might encounter making complex requests.": [
        "Change_position_on_a_scale",
        "Sharpness",
        "Likelihood",
        "Execution",
        "Shapes",
        "Causation",
        "Relational_quantity",
        "Locative_relation",
        "Becoming_aware"
    ],
    "Feign - Similar to Retrofit, Feign can build classes from annotated interfaces.": [
        "Similarity",
        "Capability",
        "Building"
    ],
    "Feign is highly flexible with multiple options for making and reading requests, metrics, retries and more.": [
        "Reading",
        "Execution",
        "Increment",
        "Quantity",
        "Causation",
        "Possibilities"
    ],
    "Spring RestTemplate ( synchronous ) and WebClient ( asynchronous ) clients - if you've used Spring for everything else in your project it could be a good idea to stick with that ecosystem.": [
        "Project",
        "Relational_quantity",
        "Using",
        "Being_attached",
        "Capability",
        "Self_motion"
    ],
    "Baeldung has an article comparing them.": [
        "Evaluative_comparison",
        "Inclusion"
    ],
    "MicroProfile Rest Client - another client in the `` build a class from an annotated interface'' mode, this one is interesting because you can reuse the same interface to create a web server too, and be sure that the client and server match.": [
        "Cardinal_numbers",
        "Evaluative_comparison",
        "Stimulus_focus",
        "Increment",
        "Identicality",
        "Sufficiency",
        "Building",
        "Stimulus_focus",
        "Likelihood",
        "Intentionally_create",
        "Capability"
    ],
    "If you're building a service and a client for that service then it could be the one for you.": [
        "Public_services",
        "Cardinal_numbers",
        "Capability",
        "Temporal_collocation",
        "Building"
    ],
    "Summary There are a lot of choices for HTTP clients in Java - for simple cases I would recommend the built-in java.net.http.HttpClient.": [
        "Choosing",
        "Instance",
        "Quantity",
        "Existence"
    ],
    "For more complex use-cases or if you want to have your HTTP APIs abstracted as Java classes as part of a larger application look at Retrofit or Feign.": [
        "Increment",
        "Using",
        "Scrutiny",
        "Dimension",
        "Becoming_aware",
        "Part_whole",
        "Desiring"
    ],
    "Happy hacking, I can't wait to see what you build !": [
        "Emotion_directed",
        "Building",
        "Waiting",
        "Grasp",
        "Capability"
    ],
    "Sign up and start building": [
        "Sign_agreement",
        "Locative_relation",
        "Buildings",
        "Temporal_subregion"
    ],
    "Thanks for rating this post !": [
        "Judgment_direct_address",
        "Sending"
    ],
    "We are always striving to improve our blog quality, and your feedback is valuable to us.": [
        "Frequency",
        "Cause_to_make_progress"
    ],
    "How could this post serve you better ?": [
        "Sending",
        "Desirability",
        "Assistance",
        "Capability"
    ],
    "If applicable fill in the countries where you are using Twilio": [
        "Political_locales",
        "Locative_relation",
        "Using",
        "Filling"
    ],
    "Protected by reCAPTCHA -- Privacy - Terms": [
        "Simple_name",
        "Protecting"
    ],
    "\ud83c\udf89 Thank you for your feedback !": [
        "Judgment_direct_address"
    ],
    "shouldn't snackbar DSL helpers take CharSequence?": [
        "Being_obligated",
        "Have_as_requirement"
    ],
    "public class Snackbar extends BaseTransientBottomBar <Snackbar>": [
        "Secrecy_status",
        "Expansion"
    ],
    "Snackbars provide lightweight feedback about an operation.": [
        "Using",
        "Supply"
    ],
    "They show a brief message at the bottom of the screen on mobile and lower left on larger devices.": [
        "Duration_attribute",
        "Bringing",
        "Direction",
        "Gizmo",
        "Dimension",
        "Part_orientational",
        "Position_on_a_scale",
        "Reasoning"
    ],
    "Snackbars appear above all other elements on screen and only one can be displayed at a time.": [
        "Quantity",
        "Sole_instance",
        "Cardinal_numbers",
        "Measure_duration",
        "Coming_to_be",
        "Increment",
        "Ingredients",
        "Likelihood"
    ],
    "They automatically disappear after a timeout or after user interaction elsewhere on the screen, particularly after interactions that summon a new surface or activity.": [
        "Part_inner_outer",
        "Intentionally_act",
        "Age",
        "Departing",
        "Locative_relation",
        "Execution"
    ],
    "Snackbars can be swiped off screen.": [
        "Likelihood",
        "Removing"
    ],
    "Snackbars can contain an action which is set via setAction ( CharSequence, android.view.View.OnClickListener ).": [
        "Capability",
        "Intentionally_act",
        "Inclusion",
        "Intentionally_create"
    ],
    "To be notified when a snackbar has been shown or dismissed, you can provide a Snackbar.Callback via BaseTransientBottomBar.addCallback ( BaseCallback ).": [
        "Temporal_collocation",
        "Reasoning",
        "Supply",
        "Telling",
        "Capability"
    ],
    "Callback class for Snackbar instances.": [
        "Instance"
    ],
    "Return whether this BaseTransientBottomBar is currently being shown.": [
        "Execution",
        "Temporal_collocation",
        "Evidence"
    ],
    "Make a Snackbar to display a message": [
        "Causation"
    ],
    "Snackbar will try and find a parent view to hold Snackbar's view from the value given to view.": [
        "Kinship",
        "Attempt",
        "Opinion",
        "Containing",
        "Giving",
        "Locating"
    ],
    "Make a Snackbar to display a message.": [
        "Causation"
    ],
    "Set the action to be displayed in this BaseTransientBottomBar.": [
        "Intentionally_act"
    ],
    "Sets the text color of the action specified in setAction ( CharSequence, View.OnClickListener ).": [
        "Intentionally_act",
        "Stimulus_focus"
    ],
    "Sets the tint color of the background Drawable.": [
        "Execution",
        "Stimulus_focus"
    ],
    "Sets the tint color state list of the background Drawable.": [
        "Political_locales",
        "Stimulus_focus"
    ],
    "Use BaseTransientBottomBar.addCallback ( BaseCallback )": [],
    "Sets the max width of the action to be in the same line as the message.": [
        "Dimension",
        "Identicality",
        "Intentionally_act"
    ],
    "Update the text in this Snackbar.": [],
    "Sets the text color of the message specified in setText ( CharSequence ) and setText ( int ).": [
        "Stimulus_focus"
    ],
    "This is for backward compatibility with AppCompat themes.": [
        "Compatibility",
        "Topic"
    ],
    "Snackbar will walk up the view tree trying to find a suitable parent, which is defined as a CoordinatorLayout or the window decor's content view, whichever comes first.": [
        "Kinship",
        "Connecting_architecture",
        "Ordinal_numbers",
        "Suitability",
        "Self_motion",
        "Execution",
        "Opinion",
        "Categorization",
        "Locating",
        "Attempt"
    ],
    "Having a CoordinatorLayout in your view hierarchy allows Snackbar to enable certain features, such as swipe-to-dismiss and automatically moving of widgets.": [
        "Opinion",
        "Grant_permission",
        "Likelihood",
        "Possession",
        "Motion"
    ],
    "Set a callback to be called when this the visibility of this Snackbar changes.": [
        "Temporal_collocation",
        "Undergo_change",
        "Execution"
    ],
    "Note that this method is deprecated and you should use BaseTransientBottomBar.addCallback ( BaseCallback ) to add a callback and BaseTransientBottomBar.removeCallback ( BaseCallback ) to remove a registered callback.": [
        "Execution",
        "Recording",
        "Judgment_communication",
        "Removing",
        "Using",
        "Being_obligated"
    ],
    "If the width is exceeded the action would go to the next line.": [
        "Dimension",
        "Intentionally_act",
        "Locative_relation",
        "Change_position_on_a_scale",
        "Becoming"
    ],
    "Snackbars should still work with AppCompat themes, which don't specify a snackbarButtonStyle.": [
        "Being_obligated",
        "Topic",
        "Intentionally_act",
        "Continued_state_of_affairs",
        "Working_on"
    ],
    "This method helps to check if a valid snackbarButtonStyle is set within the current context, so that we know whether we can use the attribute.": [
        "Execution",
        "Being_in_effect",
        "Temporal_collocation",
        "Capability",
        "Using",
        "Awareness",
        "Intentionally_create",
        "Inspecting",
        "Assistance"
    ],
    "Content and code samples on this page are subject to the licenses described in the Content License.": [
        "Contacting",
        "Communicate_categorization"
    ],
    "Java is a registered trademark of Oracle and/or its affiliates.": [
        "Distinctiveness"
    ],
    "Twitter Follow @AndroidDev on Twitter": [
        "Sounds"
    ],
    "YouTube Check out Android Developers on YouTube": [],
    "More Android Android Enterprise Security Source": [
        "Increment",
        "Being_at_risk",
        "Source_of_getting"
    ],
    "Support Report platform bug Report documentation bug Google Play support Join research studies": [
        "Taking_sides",
        "Performers_and_roles",
        "Taking_sides",
        "Cause_to_amalgamate",
        "Research",
        "Scrutiny"
    ],
    "Documentation Developer guides Design guides API reference Samples Android Studio": [
        "Coming_up_with",
        "Building_subparts",
        "Cotheme"
    ],
    "Get news and tips by email Subscribe": [
        "Part_orientational",
        "Contacting",
        "Execution"
    ],
    "SeekTo Position of cutted song not working": [
        "Removing",
        "Working_on"
    ],
    "Offset and length audio files specified, unable to seek after playback \u00b7 Issue # 8387 \u00b7 google/ExoPlayer \u00b7 GitHub": [
        "Shapes",
        "Submitting_documents",
        "Seeking_to_achieve",
        "Point_of_dispute",
        "Capability"
    ],
    "Offset and length audio files specified, unable to seek after playback": [
        "Shapes",
        "Submitting_documents",
        "Seeking_to_achieve",
        "Capability"
    ],
    "The Audio dies after you call seekTo ( position )": [
        "Execution",
        "Death"
    ],
    "Android device: Pixel 4 XL": [
        "Gizmo",
        "Cardinal_numbers"
    ],
    "code of media source creation:": [
        "Source_of_getting",
        "Intentionally_create"
    ],
    "Media is contained in a file, so dataSpec in FileDataSource specifies offset and length.": [
        "Dimension",
        "Inclusion"
    ],
    "In most cases, it can play normally, but seekTo ( position ) is called, and the sound disappears, accompanied by the following log:": [
        "Instance",
        "Sensation",
        "Relative_time",
        "Relational_quantity",
        "Performers_and_roles",
        "Capability",
        "Departing",
        "Cotheme",
        "Execution"
    ],
    "Audio file has sent from mail.": [
        "Sent_items",
        "Causation"
    ],
    "audio content length after offset: 47413829": [
        "Dimension"
    ],
    "It's not clear how you are actually applying the offset and length in or before FileDataSource.": [
        "Dimension",
        "Using",
        "Obviousness"
    ],
    "This is the critical piece of information, since it's highly likely that this is just implemented incorrectly.": [
        "Information",
        "Judgment_communication",
        "Execute_plan",
        "Part_piece",
        "Likelihood"
    ],
    "If you have a custom DataSource implementation then you'll need to share it so that we can take a look at what might be wrong.": [
        "Custom",
        "Execute_plan",
        "Scrutiny",
        "Likelihood",
        "Morality_evaluation",
        "Have_as_requirement",
        "Capability",
        "Required_event",
        "Temporal_collocation"
    ],
    "Thanks your reply at first: )": [
        "Judgment_direct_address",
        "Communication_response"
    ],
    "One thing to note about this issue is that media can safely play without calling seek": [
        "Point_of_dispute",
        "Seeking_to_achieve",
        "Cardinal_numbers",
        "Execution",
        "Risky_situation",
        "Performers_and_roles",
        "Capability"
    ],
    "Here is how I apply offset and length.": [
        "Locative_relation",
        "Using",
        "Dimension"
    ],
    "This is the contents of the file, which means the offset is correct, as well as the fact that it can be played": [
        "Linguistic_meaning",
        "Performers_and_roles",
        "Likelihood",
        "Suitability"
    ],
    "I think your DataSource is implemented incorrectly.": [
        "Execute_plan",
        "Opinion"
    ],
    "The dataSpec argument is not defining the entire media.": [
        "Reasoning",
        "Ranked_expectation",
        "Communicate_categorization"
    ],
    "It's defining the part of the media that the caller wants to read for this particular call to open.": [
        "Membership",
        "Idiosyncrasy",
        "Communicate_categorization",
        "Categorization",
        "Secrecy_status",
        "Execution",
        "Desiring"
    ],
    "dataSpec.position is the position within the media that the caller wants to start reading from.": [
        "Activity_start",
        "Reading",
        "Desiring"
    ],
    "dataSpec.length is the length of data that the caller wants to read, or C.LENGTH _ UNSET to read to the end of the media.": [
        "Dimension",
        "Temporal_subregion",
        "Desiring",
        "Categorization"
    ],
    "Your implementation is currently ignoring these parameters.": [
        "Execute_plan",
        "Terms_of_agreement",
        "Temporal_collocation"
    ],
    "This becomes a problem specifically when seeking, because dataSpec.position will not be 0 in this case, yet your implementation will nevertheless read from the start of the media.": [
        "Temporal_collocation",
        "Instance",
        "Execute_plan",
        "Becoming",
        "Seeking_to_achieve",
        "Predicament",
        "Frequency",
        "Temporal_subregion",
        "Reading"
    ],
    "You probably need your implementation to do something more like ( untested pseudocode ):": [
        "Execute_plan",
        "Similarity",
        "Likelihood",
        "Intentionally_affect",
        "Increment",
        "Required_event"
    ],
    "It looks work for me, the difference for me is readPosition = mediaPosition + dataSpec.position and newDataSpec = dataSpec.buildUpon ( ) ...": [
        "Being_employed",
        "Similarity",
        "Scrutiny"
    ],
    "But I dont understand what difference they made ?": [
        "Similarity",
        "Causation",
        "Grasp"
    ],
    "It should hopefully be clear that if dataSpec.position is non-zero, readPosition = mediaPosition + dataSpec.position ( correct ) is going to end up reading from a different position than readPosition = mediaPosition ( incorrect ).": [
        "Suitability",
        "Correctness",
        "Similarity",
        "Being_obligated",
        "Reading",
        "Motion",
        "Obviousness",
        "Becoming"
    ],
    "The reason why dataSpec.position needs to be included is already explained as clearly as I'm able to explain it in my response above.": [
        "Causation",
        "Reason",
        "Time_vector",
        "Response",
        "Required_event",
        "Inclusion",
        "Obviousness",
        "Capability"
    ],
    "locked and limited conversation to collaborators": [
        "Inhibit_movement",
        "Chatting",
        "Collaboration"
    ],
    "to subscribe to this conversation on GitHub.": [
        "Chatting"
    ],
    "Want to add drawable icons insteadof colorful dots": [
        "Desiring"
    ],
    "custom event icon/add small icon to event \u00b7 Issue # 181 \u00b7 SundeepK/CompactCalendarView \u00b7 GitHub": [
        "Point_of_dispute",
        "Event",
        "Dimension"
    ],
    "custom event icon/add small icon to event": [
        "Event",
        "Dimension"
    ],
    "is that possible if i want to change the event icon/adding some small icon like this ?": [
        "Relational_quantity",
        "Likelihood",
        "Dimension",
        "Event",
        "Cause_change",
        "Desiring"
    ],
    "Hi, this should not be too difficult todo this.": [
        "Being_obligated",
        "Difficulty",
        "Sufficiency"
    ],
    "That line draws a single event.": [
        "Sole_instance",
        "Event",
        "Cause_motion"
    ],
    "You can remove the if conditions because you only want to draw one icon right ?": [
        "Part_orientational",
        "Sole_instance",
        "Cardinal_numbers",
        "Removing",
        "Capability",
        "Cause_motion",
        "Possession",
        "State_of_entity"
    ],
    "So really you want to replace:": [
        "Replacing",
        "Desiring"
    ],
    "with some custome code which simply draws a drawable icon.": [
        "Relational_quantity",
        "Cause_motion"
    ],
    "Since you want to offset the icon to the top right, you will need to offset the ( x, y ) position slightly, but make sure you use dp because if you simply offset the ( x, y ) by some amount it willnot translate to different devices.": [
        "Part_orientational",
        "Relational_quantity",
        "Quantity",
        "Gizmo",
        "Part_orientational",
        "Similarity",
        "Verification",
        "Using",
        "Required_event",
        "Possession",
        "Categorization"
    ],
    "There is a simple method call in android to go from pixels to dp.": [
        "Execution",
        "Becoming",
        "Execution",
        "Existence"
    ],
    "It should be a few lines of code to achieve what you want.": [
        "Desirable_event",
        "Quantity",
        "Possession",
        "Accomplishment"
    ],
    "Let me know if you need more help.": [
        "Required_event",
        "Increment",
        "Assistance",
        "Awareness",
        "Grant_permission"
    ],
    "Also if you have more than one event for a given day, you only need to draw the icon once, then exit.": [
        "Temporal_collocation",
        "Cardinal_numbers",
        "Calendric_unit",
        "Giving",
        "Sole_instance",
        "Cause_motion",
        "Frequency",
        "Event",
        "Departing",
        "Increment",
        "Required_event"
    ],
    "This will save some cpu cycles.": [
        "Relational_quantity",
        "Operate_vehicle"
    ],
    "how can i modify the CompactCalendarController.java ?": [
        "Capability",
        "Cause_change"
    ],
    "It is simple - you can copy source folder to your project source )": [
        "Source_of_getting",
        "Containers",
        "Project",
        "Capability",
        "Duplication"
    ],
    "As @airstep mentioned, it's simple.": [],
    "Download the source locally and import as a android using android-studios.": [
        "Source_of_getting",
        "Using",
        "Importing"
    ],
    "You may need to change your gradle file to import it as a library project but there are many resources showing how todo this.": [
        "Buildings",
        "Project",
        "Likelihood",
        "Importing",
        "Quantity",
        "Reasoning",
        "Undergo_change",
        "Existence",
        "Required_event"
    ],
    "Here are just 2 stack overflow answers:": [
        "Locative_relation",
        "Communication_response",
        "Cardinal_numbers"
    ],
    "Delete the sample android application project ( under sample directory ) since it's not required, you only want the library.": [
        "Using",
        "Project",
        "Buildings",
        "Sole_instance",
        "Being_necessary",
        "Desiring"
    ],
    "Then change CompactCalendarController.java by removing those lines I mentioned and replacing with a call to draw your icon.": [
        "Temporal_collocation",
        "Undergo_change",
        "Removing",
        "Cause_motion",
        "Execution",
        "Replacing"
    ],
    "You will need to load your icon probably in the init ( ) method of that class and draw using the that bitmap method.": [
        "Execution",
        "Cause_motion",
        "Required_event",
        "Likelihood",
        "Using"
    ],
    "If you have more than one event in the day make sure to just draw once because it's wasteful to draw multiple time in your case.": [
        "Calendric_unit",
        "Frugality",
        "Measure_duration",
        "Instance",
        "Increment",
        "Cardinal_numbers",
        "Quantity",
        "Cause_motion",
        "Event",
        "Verification",
        "Frequency"
    ],
    "Hi, if you are looking for this functionality.": [
        "Scrutiny"
    ],
    "I spent some time thinking about it.": [
        "Used_up",
        "Relational_quantity",
        "Measure_duration",
        "Awareness"
    ],
    "I uploaded some sample code in a branch here:": [
        "Relational_quantity",
        "Locative_relation"
    ],
    "Basically you need to load a bitmap and pass to each event you want to draw.": [
        "Natural_features",
        "Cause_motion",
        "Possession",
        "Event",
        "Required_event"
    ],
    "Study the CompactCalendarTab class in the sample code to see how to use it.": [
        "Scrutiny",
        "Using",
        "Grasp"
    ],
    "You can tweak the code on how you want to draw the icons:": [
        "Capability",
        "Cause_motion",
        "Manipulation",
        "Desiring"
    ],
    "That line controls where it's drawn.": [
        "Prohibiting",
        "Cause_motion",
        "Locative_relation"
    ],
    "This is an example of how to get this done.": [
        "Instance",
        "Intentionally_act",
        "Execution"
    ],
    "Again you can import the code as mentioned above.": [
        "Importing",
        "Capability"
    ],
    "How to record phone calls in Android": [
        "Contacting",
        "Recording",
        "Contacting"
    ],
    "The Android multimedia framework includes support for capturing and encoding a variety of common audio and video formats.": [
        "Conquering",
        "Taking_sides",
        "Inclusion"
    ],
    "You can use the MediaRecorder APIs if supported by the device hardware.": [
        "Gizmo",
        "Using",
        "Taking_sides",
        "Capability"
    ],
    "This document shows you how to use MediaRecorder to write an application that captures audio from a device microphone, save the audio, and play it back ( with MediaPlayer ).": [
        "Documents",
        "Gizmo",
        "Observable_body_parts",
        "Performers_and_roles",
        "Conquering",
        "Evidence",
        "Using",
        "Using"
    ],
    "To record video you'll need to use the device's camera along with MediaRecorder.": [
        "Gizmo",
        "Required_event",
        "Accompaniment",
        "Using",
        "Recording"
    ],
    "This is described in the Camera guide.": [
        "Communicate_categorization"
    ],
    "Note: The Android Emulator can not record audio.": [
        "Becoming_aware",
        "Capability",
        "Recording"
    ],
    "Be sure to test your code on a real device that can record.": [
        "Gizmo",
        "Existence",
        "Operational_testing",
        "Recording",
        "Capability",
        "Likelihood"
    ],
    "To be able to record, your app must tell the user that it will access the device's audio input.": [
        "Recording",
        "Gizmo",
        "Being_obligated",
        "Capability"
    ],
    "You must include this permission tag in the app's manifest file:": [
        "Grant_permission",
        "Being_obligated",
        "Inclusion"
    ],
    "RECORD_AUDIO is considered a `` dangerous'' permission because it may pose a risk to the user's privacy.": [
        "Grant_permission",
        "Run_risk",
        "Likelihood",
        "Causation",
        "Categorization"
    ],
    "Starting with Android 6.0 ( API level 23 ) an app that uses a dangerous permission must ask the user for approval at run time.": [
        "Process_start",
        "Grant_permission",
        "Operating_a_system",
        "Measure_duration",
        "Rank",
        "Risky_situation",
        "Using",
        "Being_obligated",
        "Execution",
        "Grant_permission"
    ],
    "After the user has granted permission, the app should remember and not ask again.": [
        "Grant_permission",
        "Execution",
        "Being_obligated",
        "Memory"
    ],
    "The sample code below shows how to implement this behavior using ActivityCompat.requestPermissions ( ).": [
        "Evidence",
        "Gizmo",
        "Using",
        "Conduct"
    ],
    "Initialize a new instance of MediaRecorder with the following calls:": [
        "Instance",
        "Relative_time",
        "Age",
        "Contacting"
    ],
    "Note: Most of the audio sources ( including DEFAULT ) apply processing to the audio signal.": [
        "Relational_quantity",
        "Processing_materials",
        "Gesture",
        "Source_of_getting",
        "Inclusion",
        "Using"
    ],
    "To record raw audio select UNPROCESSED.": [
        "Degree_of_processing",
        "Recording"
    ],
    "Some devices do not support unprocessed input.": [
        "Gizmo",
        "Relational_quantity",
        "Expensiveness",
        "Intentionally_act",
        "Taking_sides"
    ],
    "Call AudioManager.getProperty ( AudioManager.PROPERTY _ SUPPORT_AUDIO_SOURCE_UNPROCESSED ) first to verify it's available.": [
        "Ordinal_numbers",
        "Verification",
        "Execution"
    ],
    "If it is not, try using VOICE_RECOGNITION instead, which does not employ AGC or noise suppression.": [
        "Sensation",
        "Intentionally_act",
        "Attempt",
        "Using",
        "Using"
    ],
    "You can use UNPROCESSED as an audio source even when the property is not supported, but there is no guarantee whether the signal will be unprocessed or not in that case.": [
        "Taking_sides",
        "Quantity",
        "Gesture",
        "Instance",
        "Likelihood",
        "Source_of_getting",
        "Possession",
        "Using",
        "Temporal_collocation",
        "Expensiveness",
        "Existence"
    ],
    "Start and stop the recorder by calling start ( ) and stop ( ) respectively.": [
        "Temporal_subregion",
        "Temporal_subregion",
        "Execution",
        "Preventing"
    ],
    "When you are done with the MediaRecorder instance free its resources as soon as possible by calling release ( ).": [
        "Temporal_collocation",
        "Instance",
        "Likelihood",
        "Releasing",
        "Intentionally_act",
        "Execution"
    ],
    "Note: On devices running Android 9 ( API level 28 ) or higher, apps running in the background can not access the microphone.": [
        "Becoming_aware",
        "Gizmo",
        "Rank",
        "Position_on_a_scale",
        "Operating_a_system",
        "Capability"
    ],
    "Therefore, your app should record audio only when it's in the foreground or when you include an instance of MediaRecorder in a foreground service.": [
        "Sole_instance",
        "Temporal_collocation",
        "Public_services",
        "Instance",
        "Recording",
        "Being_obligated",
        "Inclusion"
    ],
    "Starting with Android 8.0 ( API level 26 ) you can use a MediaMuxer to record multiple simultaneous audio and video streams.": [
        "Rank",
        "Quantity",
        "Relative_time",
        "Quantity",
        "Recording",
        "Using",
        "Capability",
        "Process_start"
    ],
    "In earlier versions of Android you can only record one audio track and/or one video track at a time.": [
        "Sole_instance",
        "Measure_duration",
        "Cardinal_numbers",
        "Relative_time",
        "Recording",
        "Capability"
    ],
    "Use the addTrack ( ) method to mix multipe tracks together.": [
        "Collaboration",
        "Execution",
        "Cause_to_amalgamate",
        "Using"
    ],
    "You can also add one or more metadata tracks with custom information for each frame, but only to MP4 containers.": [
        "Increment",
        "Information",
        "Sole_instance",
        "Containers",
        "Capability",
        "Cardinal_numbers"
    ],
    "Your app defines the format and content of the metadata.": [
        "Communicate_categorization"
    ],
    "Metadata can be useful for offline processing.": [
        "Processing_materials",
        "Capability"
    ],
    "For example, data captured from the gyro sensor could be used to perform video stabilization.": [
        "Instance",
        "Intentionally_act",
        "Conquering",
        "Capability",
        "Using"
    ],
    "When you add a metadata track, the track's mime format must start with the prefix application /.": [
        "Temporal_collocation",
        "Using",
        "Cause_change_of_position_on_a_scale",
        "Being_obligated",
        "Activity_start"
    ],
    "Writing metadata is the same as writing video or audio data, except that the data does not come from a MediaCodec.": [
        "Text_creation",
        "Intentionally_act",
        "Identicality",
        "Text_creation",
        "Execution"
    ],
    "Instead, the app passes a ByteBuffer with an associated timestamp to the writeSampleData ( ) method.": [
        "Execution",
        "Cognitive_connection",
        "Traversing"
    ],
    "The timestamp must be in the same time base as the video and audio tracks.": [
        "Measure_duration",
        "Locale_by_use",
        "Identicality",
        "Being_obligated"
    ],
    "The generated MP4 file uses the TextMetaDataSampleEntry defined in section 12.3.3.2 of the ISO BMFF specification to signal the metadata's mime format.": [
        "Creating",
        "Communication",
        "Using",
        "Part_whole",
        "Communicate_categorization"
    ],
    "When you use a MediaExtractor to extract a file that contains metadata tracks, the metadata's mime format appears as an instance of MediaFormat.": [
        "Temporal_collocation",
        "Instance",
        "Removing",
        "Using",
        "Coming_to_be",
        "Inclusion"
    ],
    "The MediaRecorder sample demonstrates how to make a video recording using MediaRecorder and the Camera API.": [
        "Causation",
        "Using",
        "Evidence"
    ],
    "The example activity below shows how to use MediaRecorder to record an audio file.": [
        "Instance",
        "Evidence",
        "Recording",
        "Intentionally_act",
        "Using"
    ],
    "It Also uses MediaPlayer to play the audio back.": [
        "Observable_body_parts",
        "Performers_and_roles",
        "Using"
    ],
    "These pages cover topics relating to recording, storing, and playing back audio and video.": [
        "Contacting",
        "Topic",
        "Performers_and_roles",
        "Observable_body_parts",
        "Topic",
        "Storing"
    ],
    "Set the audio source using setAudioSource ( ).": [
        "Source_of_getting",
        "Using"
    ],
    "Set the output file format using setOutputFormat ( ).": [
        "Using"
    ],
    "Note that starting with Android 8.0 ( API level 26 ) MediaRecorder supports the MPEG2_TS format, which is useful for streaming: Kotlin Java": [
        "Fluidic_motion",
        "Rank",
        "Supporting",
        "Process_start"
    ],
    "Set the output file name using setOutputFile ( ).": [
        "Using"
    ],
    "You must specify a file descriptor that represents an actual file.": [
        "Actually_occurring_entity",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "Set the audio encoder using setAudioEncoder ( ).": [
        "Using"
    ],
    "Complete the initialization by calling prepare ( ).": [
        "Completeness",
        "Activity_prepare",
        "Execution"
    ],
    "First off, you have to be careful with recording calls as there are legal requirements depending on the country.": [
        "Ordinal_numbers",
        "Locative_relation",
        "Recording",
        "Political_locales",
        "Contacting",
        "Legality",
        "Being_obligated",
        "Being_necessary",
        "Existence"
    ],
    "Here is a LINK on how to record audio using the LINK.": [
        "Locative_relation",
        "Using",
        "Recording"
    ],
    "I haven't tried recording phone call's but there is a option in LINK for:": [
        "Contacting",
        "Possibilities",
        "Recording",
        "Execution",
        "Existence",
        "Attempt"
    ],
    "As long as the audio source options work, you should be good to go.": [
        "Source_of_getting",
        "Possibilities",
        "Working_on",
        "Desirability",
        "Being_obligated",
        "Becoming",
        "Desiring"
    ],
    "to record just hit the menu button while in call in android phone it will store conversation in amr format and in root directory of sd card max 20 min conversation.": [
        "Recording",
        "Closure",
        "Execution",
        "Impact",
        "Contacting",
        "Cardinal_numbers",
        "Chatting",
        "Storing"
    ],
    "I am using mic to record calls for better support and compatibility.": [
        "Contacting",
        "Taking_sides",
        "Compatibility",
        "Desirability",
        "Recording",
        "Using"
    ],
    "I am using mic to record phone audio and also use the Telephony manager to find the calling state.": [
        "Contacting",
        "Political_locales",
        "People_by_vocation",
        "Execution",
        "Recording",
        "Becoming_aware",
        "Using",
        "Using"
    ],
    "after that, you can easily start recording anywhere you want": [
        "Desiring",
        "Capability",
        "Recording",
        "Activity_start"
    ],
    "and after finishing recording you can easily also stop the recording": [
        "Capability",
        "Preventing",
        "Activity_finish"
    ],
    "Using oboe to record incoming and outgoing voice/telephony calls \u00b7 Issue # 447 \u00b7 google/oboe \u00b7 GitHub": [
        "Point_of_dispute",
        "Sociability",
        "Recording",
        "Execution",
        "Using"
    ],
    "Using oboe to record incoming and outgoing voice/telephony calls": [
        "Sociability",
        "Contacting",
        "Recording",
        "Using"
    ],
    "First of all, thanks for such a great effort to provide us with low-latency Android API that we, as developers, can use it in our apps.": [
        "Ordinal_numbers",
        "Quantity",
        "Judgment_direct_address",
        "Desirability",
        "Capability",
        "Using",
        "Supply",
        "Attempt"
    ],
    "Currently, I am a bit stuck with Oboe and trying to figure out a way to record incoming/outgoing voice/audio streams using oboe in a telephony audio call.": [
        "Temporal_collocation",
        "Opinion",
        "Quantity",
        "Quantity",
        "Being_attached",
        "Execution",
        "Using",
        "Recording",
        "Execution",
        "Locative_relation",
        "Attempt"
    ],
    "I am able to successfully record my voice in a telephony call but I can not hear other side's voice in the recorded audio.": [
        "Taking_sides",
        "Execution",
        "Increment",
        "Hear",
        "Recording",
        "Capability",
        "Capability"
    ],
    "Following is the device log printed when I request opening a recording stream with deviceId = MediaRecorder.AudioSource.VOICE _ CALL ( 4 ) or VOICE_UPLINK ( 2 ) or VOICE_DOWNLINK ( 3 )": [
        "Relative_time",
        "Gizmo",
        "Temporal_collocation",
        "Quantity",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Execution",
        "Execution",
        "Body_movement"
    ],
    "I/AAudioStream: AudioStream:: open ( ) rate = 48000, channels = 2, format = 1, sharing = SH, dir = INPUT": [
        "Frequency",
        "Natural_features",
        "Cardinal_numbers",
        "Secrecy_status"
    ],
    "I/AAudioStream: AudioStream:: open ( ) device = 2, perfMode = 12, callback: ON with frames = 0": [
        "Gizmo",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Secrecy_status"
    ],
    "As you guys can see that onAudioDeviceUpdate method is called and now DeviceId is changed to VOICE_RECOGNITION ( 6 ).": [
        "People",
        "Execution",
        "Temporal_collocation",
        "Execution",
        "Capability",
        "Grasp",
        "Undergo_change"
    ],
    "Is there something I am doing wrong or is the Android system not allowing me to record VOICE_CALL feature ?": [
        "Morality_evaluation",
        "System",
        "Recording",
        "Intentionally_act",
        "Grant_permission",
        "Existence"
    ],
    "I have tested on Android Samsung J4 device ( API Level 27 ) & Samsung Note 3 Neo ( Api Level 18 ).": [
        "Gizmo",
        "Rank",
        "Cardinal_numbers",
        "Operational_testing"
    ],
    "On API Level 27, when I set recording device as VOICE_COMMUNICATION ( 7 ) then I get following error in the logcat.": [
        "Rank",
        "Temporal_collocation",
        "Gizmo",
        "Relative_time",
        "Recording",
        "Intentionally_create",
        "Execution",
        "Temporal_collocation"
    ],
    "W/AAudio: AudioStreamBuilder ( ): EXCLUSIVE sharing mode not supported.": [
        "Taking_sides"
    ],
    "I/AAudioStream: AudioStream:: open ( ) device = 7, perfMode = 12, callback: ON with frames = 0": [
        "Gizmo",
        "Cardinal_numbers",
        "Secrecy_status"
    ],
    "E/AudioRecord: Could not get audio input for session 4297, record source 6, sample rate 0, format 0x1, channel mask 0xc, flags 0x5": [
        "Recording",
        "Frequency",
        "Natural_features",
        "Accoutrements",
        "Source_of_getting",
        "Capability",
        "Execution"
    ],
    "D/AAudioStream: destroying 0x8e750500, state = AAUDIO_STREAM_STATE_CLOSED": [
        "Political_locales",
        "Killing"
    ],
    "When I print the Oboe:: Result when opening the recording stream, I get following error statement printed in logcat.": [
        "Temporal_collocation",
        "Quantity",
        "Text_creation",
        "Temporal_collocation",
        "Causation",
        "Body_movement",
        "Relative_time",
        "Execution"
    ],
    "Waiting anxiously for your help on this, as I have been struggling with this for more than a week now and I can't seem to figure our the mistake that I am doing.": [
        "Calendric_unit",
        "Assistance",
        "Increment",
        "Appearance",
        "Intentionally_act",
        "Temporal_collocation",
        "Opinion",
        "Waiting",
        "Hostile_encounter",
        "Capability"
    ],
    "Those recording sources may only be used by system apps.": [
        "Sole_instance",
        "Gizmo",
        "Attributed_information",
        "Likelihood",
        "Using"
    ],
    "This is designed to prevent apps from eavesdropping on telephone conversations.": [
        "Contacting",
        "Chatting",
        "Perception_active",
        "Preventing",
        "Coming_up_with"
    ],
    "See here for more information.": [
        "Locative_relation",
        "Information",
        "Grasp",
        "Increment"
    ],
    "Java: Efficient ArrayList filtering?": [],
    "In addition to Stream, which is a stream of object references, there are primitive specializations for IntStream, LongStream, and DoubleStream, all of which are referred to as `` streams'' and conform to the characteristics and restrictions described here.": [
        "Quantity",
        "Quantity",
        "Distinctiveness",
        "Locative_relation",
        "Communicate_categorization",
        "Quantity",
        "Compliance",
        "Communication_response",
        "Existence"
    ],
    "To perform a computation, stream operations are composed into a stream pipeline.": [
        "Quantity",
        "Businesses",
        "Intentionally_act",
        "Text_creation"
    ],
    "A stream pipeline consists of a source ( which might be an array, a collection, a generator function, an I/O channel, etc ), zero or more intermediate operations ( which transform a stream into another stream, such as filter ( Predicate ) ), and a terminal operation ( which produces a result or side-effect, such as count ( ) or forEach ( Consumer ) ).": [
        "Quantity",
        "Source_of_getting",
        "Diversity",
        "Execution",
        "Natural_features",
        "Using",
        "Causation",
        "Categorization",
        "Likelihood",
        "Businesses",
        "Increment",
        "Increment",
        "Cause_change",
        "Cardinal_numbers",
        "Manufacturing"
    ],
    "Streams are lazy ; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.": [
        "Quantity",
        "Source_of_getting",
        "Sole_instance",
        "Temporal_collocation",
        "Buildings",
        "Using",
        "Ingredients",
        "Ingestion",
        "Activity_start",
        "Required_event",
        "Intentionally_act"
    ],
    "Collections and streams, while bearing some superficial similarities, have different goals.": [
        "Execution",
        "Quantity",
        "Relational_quantity",
        "Similarity",
        "Similarity",
        "Change_direction"
    ],
    "Collections are primarily concerned with the efficient management of, and access to, their elements.": [
        "Execution",
        "Having_or_lacking_access",
        "Ingredients",
        "Emotion_directed"
    ],
    "By contrast, streams do not provide a means to directly access or manipulate their elements, and are instead concerned with declaratively describing their source and the computational operations which will be performed in aggregate on that source.": [
        "Quantity",
        "Having_or_lacking_access",
        "Source_of_getting",
        "Intentionally_act",
        "Ingredients",
        "Businesses",
        "Manipulate_into_doing",
        "Intentionally_act",
        "Supply",
        "Execution",
        "Communicate_categorization",
        "Emotion_directed"
    ],
    "However, if the provided stream operations do not offer the desired functionality, the BaseStream.iterator ( ) and BaseStream.spliterator ( ) operations can be used to perform a controlled traversal.": [
        "Concessive",
        "Quantity",
        "Desiring",
        "Control",
        "Supply",
        "Businesses",
        "Intentionally_act",
        "Intentionally_act",
        "Offering",
        "Likelihood",
        "Using"
    ],
    "A stream pipeline, like the `` widgets'' example above, can be viewed as a query on the stream source.": [
        "Quantity",
        "Instance",
        "Source_of_getting",
        "Questioning",
        "Likelihood",
        "Categorization"
    ],
    "Unless the source was explicitly designed for concurrent modification ( such as a ConcurrentHashMap ), unpredictable or erroneous behavior may result from modifying the stream source while it is being queried.": [
        "Frequency",
        "Cause_change",
        "Conduct",
        "Quantity",
        "Source_of_getting",
        "Likelihood",
        "Expectation",
        "Cause_change",
        "Questioning",
        "Coming_up_with",
        "Causation"
    ],
    "Most stream operations accept parameters that describe user-specified behavior, such as the lambda expression w - > w.getWeight ( ) passed to mapToInt in the example above.": [
        "Relational_quantity",
        "Quantity",
        "Businesses",
        "Conduct",
        "Encoding",
        "Traversing",
        "Instance",
        "Communicate_categorization",
        "Terms_of_agreement",
        "Receiving"
    ],
    "To preserve correct behavior, these behavioral parameters:": [
        "Conduct",
        "Suitability",
        "Preserving",
        "Terms_of_agreement"
    ],
    "Such parameters are always instances of a functional interface such as Function, and are often lambda expressions or method references.": [
        "Instance",
        "Being_operational",
        "Execution",
        "Terms_of_agreement",
        "Frequency",
        "Frequency",
        "Encoding"
    ],
    "Unless otherwise specified these parameters must be non-null.": [
        "Terms_of_agreement",
        "Being_obligated"
    ],
    "A stream should be operated on ( invoking an intermediate or terminal stream operation ) only once.": [
        "Using",
        "Quantity",
        "Being_obligated",
        "Sole_instance",
        "Frequency",
        "Using"
    ],
    "This rules out, for example, `` forked'' streams, where the same source feeds two or more pipelines, or multiple traversals of the same stream.": [
        "Execution",
        "Locative_relation",
        "Instance",
        "Source_of_getting",
        "Ingestion",
        "Quantity",
        "Quantity",
        "Identicality",
        "Quantity",
        "Locative_relation",
        "Cardinal_numbers",
        "Increment"
    ],
    "A stream implementation may throw IllegalStateException if it detects that the stream is being reused.": [
        "Quantity",
        "Execute_plan",
        "Cause_motion",
        "Likelihood",
        "Becoming_aware"
    ],
    "However, since some stream operations may return their receiver rather than a new stream object, it may not be possible to detect reuse in all cases.": [
        "Concessive",
        "Relational_quantity",
        "Quantity",
        "Businesses",
        "Instance",
        "Age",
        "Quantity",
        "Likelihood",
        "Likelihood",
        "Execution",
        "Becoming_aware"
    ],
    "Streams have a BaseStream.close ( ) method and implement AutoCloseable, but nearly all stream instances do not actually need to be closed after use.": [
        "Quantity",
        "Execution",
        "Gizmo",
        "Relational_quantity",
        "Quantity",
        "Quantity",
        "Instance",
        "Body_movement",
        "Required_event",
        "Intentionally_act"
    ],
    "Generally, only streams whose source is an IO channel ( such as those returned by Files.lines ( Path, Charset ) ) will require closing.": [
        "Quantity",
        "Source_of_getting",
        "Natural_features",
        "Sole_instance",
        "Execution",
        "Have_as_requirement"
    ],
    "Most streams are backed by collections, arrays, or generating functions, which require no special resource management.": [
        "Arranging",
        "Quantity",
        "Quantity",
        "Relational_quantity",
        "Creating",
        "Taking_sides",
        "Execution",
        "Have_as_requirement"
    ],
    "( If a stream does require closing, it can be declared as a resource in a try-with-resources statement. )": [
        "Quantity",
        "Likelihood",
        "Needing",
        "Intentionally_act"
    ],
    "Stream pipelines may execute either sequentially or in parallel.": [
        "Execution",
        "Quantity",
        "Likelihood"
    ],
    "This execution mode is a property of the stream.": [
        "Execution",
        "Quantity",
        "Possession"
    ],
    "Streams are created with an initial choice of sequential or parallel execution.": [
        "Quantity",
        "Sequence",
        "Execution",
        "Version_sequence",
        "Choosing",
        "Intentionally_create"
    ],
    "( For example, Collection.stream ( ) creates a sequential stream, and Collection.parallelStream ( ) creates a parallel one. )": [
        "Instance",
        "Sequence",
        "Quantity",
        "Creating"
    ],
    "This choice of execution mode may be modified by the BaseStream.sequential ( ) or BaseStream.parallel ( ) methods, and may be queried with the BaseStream.isParallel ( ) method.": [
        "Execution",
        "Execution",
        "Questioning",
        "Execution",
        "Choosing",
        "Likelihood",
        "Cause_change"
    ],
    "This is an intermediate operation.": [
        "Using"
    ],
    "If orders is a stream of purchase orders, and each purchase order contains a collection of line items, then the following produces a stream containing all the line items in all the orders:": [
        "Execution",
        "Quantity",
        "Entity",
        "Quantity",
        "Execution",
        "Manufacturing",
        "Temporal_collocation",
        "Commerce_buy",
        "Inclusion",
        "Inclusion"
    ],
    "If path is the path to a file, then the following produces a stream of the words contained in that file:": [
        "Quantity",
        "Simple_name",
        "Manufacturing",
        "Inclusion",
        "Temporal_collocation"
    ],
    "For ordered streams, the selection of distinct elements is stable ( for duplicated elements, the element appearing first in the encounter order is preserved. )": [
        "Quantity",
        "Ingredients",
        "Buildings",
        "Duplication",
        "Ingredients",
        "Becoming_aware",
        "Execution",
        "Similarity",
        "Coming_to_be",
        "Ordinal_numbers"
    ],
    "For unordered streams, no stability guarantees are made.": [
        "Quantity",
        "Quantity",
        "Causation"
    ],
    "This is a stateful intermediate operation.": [
        "Using"
    ],
    "For ordered streams, the sort is stable.": [
        "Quantity",
        "Buildings",
        "Execution"
    ],
    "For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation.": [
        "Quantity",
        "Measure_duration",
        "Ingredients",
        "Using",
        "Intentionally_act",
        "Likelihood",
        "Causation",
        "Execution"
    ],
    "If the action modifies shared state, it is responsible for providing the required synchronization.": [
        "Political_locales",
        "Intentionally_act",
        "Being_necessary",
        "Supply",
        "Cause_change"
    ],
    "This is a short-circuiting stateful intermediate operation.": [
        "Using"
    ],
    "This is a terminal operation.": [
        "Using"
    ],
    "The behavior of this operation is explicitly nondeterministic.": [
        "Using",
        "Conduct"
    ],
    "For parallel stream pipelines, this operation does not guarantee to respect the encounter order of the stream, as doing so would sacrifice the benefit of parallelism.": [
        "Quantity",
        "Using",
        "Becoming_aware",
        "Rite",
        "Intentionally_act",
        "Intentionally_act",
        "Likelihood",
        "Judgment"
    ],
    "For any given element, the action may be performed at whatever time and in whatever thread the library chooses.": [
        "Ingredients",
        "Measure_duration",
        "Natural_features",
        "Buildings",
        "Giving",
        "Intentionally_act",
        "Quantity",
        "Likelihood",
        "Choosing",
        "Intentionally_act"
    ],
    "If the action accesses shared state, it is responsible for providing the required synchronization.": [
        "Political_locales",
        "Intentionally_act",
        "Being_necessary",
        "Supply"
    ],
    "This operation processes the elements one at a time, in encounter order if one exists.": [
        "Using",
        "Ingredients",
        "Cardinal_numbers",
        "Measure_duration",
        "Becoming_aware",
        "Existence",
        "Processing_materials"
    ],
    "Performing the action for one element happens-before performing the action for subsequent elements, but for any given element, the action may be performed in whatever thread the library chooses.": [
        "Intentionally_act",
        "Ingredients",
        "Ingredients",
        "Natural_features",
        "Buildings",
        "Cardinal_numbers",
        "Relative_time",
        "Giving",
        "Intentionally_act",
        "Intentionally_act",
        "Quantity",
        "Likelihood",
        "Choosing",
        "Intentionally_act"
    ],
    "The identity value must be an identity for the accumulator function.": [
        "Identicality",
        "Being_obligated"
    ],
    "This means that for all t, accumulator.apply ( identity, t ) is equal to t.": [
        "Identicality",
        "Evaluative_comparison",
        "Quantity",
        "Evidence"
    ],
    "The accumulator function must be an associative function.": [
        "Being_obligated"
    ],
    "While this may seem a more roundabout way to perform an aggregation compared to simply mutating a running total in a loop, reduction operations parallelize more gracefully, without needing additional synchronization and with greatly reduced risk of data races.": [
        "Appearance",
        "Completeness",
        "Businesses",
        "Likelihood",
        "Increment",
        "Execution",
        "Cause_expansion",
        "Increment",
        "Intentionally_act",
        "Needing",
        "Run_risk",
        "Cause_change_of_position_on_a_scale",
        "Evaluative_comparison",
        "Execution"
    ],
    "The identity value must be an identity for the combiner function.": [
        "Identicality",
        "Being_obligated"
    ],
    "This means that for all u, combiner ( identity, u ) is equal to u. Additionally, the combiner function must be compatible with the accumulator function ; for all u and t, the following must hold:": [
        "Identicality",
        "Evaluative_comparison",
        "Compatibility",
        "Quantity",
        "Being_obligated",
        "Containing",
        "Evidence"
    ],
    "Like reduce ( Object, BinaryOperator ), collect operations can be parallelized without requiring additional synchronization.": [
        "Cause_change_of_position_on_a_scale",
        "Gathering_up",
        "Businesses",
        "Needing",
        "Increment",
        "Likelihood"
    ],
    "The following will take a stream of strings and concatenates them into a single string:": [
        "Relative_time",
        "Being_obligated",
        "Sole_instance",
        "Quantity",
        "Have_as_requirement"
    ],
    "If the stream is parallel, and the Collector is concurrent, and either the stream is unordered or the collector is unordered, then a concurrent reduction will be performed ( see Collector for details on concurrent reduction. )": [
        "Quantity",
        "Reference_text",
        "Cause_change_of_position_on_a_scale",
        "Frequency",
        "Intentionally_act",
        "Temporal_collocation"
    ],
    "When executed in parallel, multiple intermediate results may be instantiated, populated, and merged so as to maintain isolation of mutable data structures.": [
        "Temporal_collocation",
        "Execution",
        "Residence",
        "Cause_to_amalgamate",
        "Causation",
        "Buildings",
        "Quantity",
        "Likelihood"
    ],
    "Therefore, even when executed in parallel with non-thread-safe data structures ( such as ArrayList ), no additional synchronization is needed for a parallel reduction.": [
        "Temporal_collocation",
        "Execution",
        "Quantity",
        "Buildings",
        "Increment",
        "Cause_expansion",
        "Required_event"
    ],
    "The following will classify Person objects by city:": [
        "People",
        "Political_locales",
        "Categorization"
    ],
    "The following will classify Person objects by state and city, cascading two Collectors together:": [
        "People",
        "Political_locales",
        "Political_locales",
        "Fluidic_motion",
        "Collaboration",
        "Cardinal_numbers",
        "Categorization"
    ],
    "This is a short-circuiting terminal operation.": [
        "Buildings",
        "Using"
    ],
    "The behavior of this operation is explicitly nondeterministic ; it is free to select any element in the stream.": [
        "Using",
        "Quantity",
        "Quantity",
        "Expensiveness",
        "Ingredients",
        "Conduct",
        "Choosing"
    ],
    "This is to allow for maximal performance in parallel operations ; the cost is that multiple invocations on the same source may not return the same result.": [
        "Businesses",
        "Expensiveness",
        "Source_of_getting",
        "Causation",
        "Quantity",
        "Identicality",
        "Grant_permission",
        "Performing_arts",
        "Likelihood",
        "Execution"
    ],
    "( If a stable result is desired, use findFirst ( ) instead. )": [
        "Buildings",
        "Desiring",
        "Causation"
    ],
    "The first element ( position 0 ) in the Stream will be the provided seed.": [
        "Ingredients",
        "Quantity",
        "Ordinal_numbers",
        "Supply",
        "Filling"
    ],
    "For n > 0, the element at position n, will be the result of applying the function f to the element at position n - 1.": [
        "Ingredients",
        "Using",
        "Causation"
    ],
    "Use LINK, from Apache Commons.": [
        "Make_cognitive_connection"
    ],
    "Consider LINK for an updated Collections framework that supports generics.": [
        "Execution",
        "Supporting",
        "Categorization"
    ],
    "UPDATE: The google collections library is now deprecated.": [
        "Execution",
        "Buildings",
        "Temporal_collocation",
        "Judgment_communication"
    ],
    "You should use the latest release of LINK instead.": [
        "Relative_time",
        "Being_obligated",
        "Releasing",
        "Using"
    ],
    "It still has all the same extensions to the collections framework including a mechanism for filtering based on a predicate.": [
        "Quantity",
        "Documents",
        "Execution",
        "Execution",
        "Continued_state_of_affairs",
        "Identicality",
        "Inclusion",
        "Inclusion"
    ],
    "Are you sure you want to filter the Collection itself, rather than an iterator ?": [
        "Execution",
        "Likelihood",
        "Desiring"
    ],
    "see LINK": [],
    "or using version 4 of apache commons LINK": [
        "Cardinal_numbers",
        "Cognitive_connection",
        "Using"
    ],
    "The setup:": [],
    "The usage:": [],
    "`` Best'' way is too wide a request.": [
        "Execution",
        "Execution",
        "Sufficiency",
        "Dimension"
    ],
    "Is it `` shortest'' ?": [],
    "`` Fastest'' ?": [],
    "`` Readable'' ?": [],
    "Filter in place or into another collection ?": [
        "Locale",
        "Execution",
        "Increment"
    ],
    "Simplest -LRB- but not most readable -RRB- way is to iterate it and use Iterator.remove -LRB- -RRB- method:": [
        "Relational_quantity",
        "Execution",
        "Using"
    ],
    "Now, to make it more readable, you can wrap it into a utility method.": [
        "Temporal_collocation",
        "Execution",
        "Increment",
        "Execution",
        "Capability"
    ],
    "Then invent a IPredicate interface, create an anonymous implementation of that interface and do something like:": [
        "Temporal_collocation",
        "Intentionally_affect",
        "Coming_up_with",
        "Execute_plan",
        "Intentionally_create"
    ],
    "where filterInPlace -LRB- -RRB- iterate the collection and calls Predicate.keepIt -LRB- -RRB- to learn if the instance to be kept in the collection.": [
        "Locative_relation",
        "Execution",
        "Contacting",
        "Instance",
        "Activity_ongoing",
        "Education_teaching"
    ],
    "I don't really see a justification for bringing in a third-party library just for this task.": [
        "Buildings",
        "Being_obligated",
        "Intentionally_act",
        "Bringing",
        "Justifying",
        "Grasp"
    ],
    "Assuming that you are using LINK, and that you can not add LINK, I would do something very similar to what the Google guys did.": [
        "Adopt_selection",
        "Cause_change_of_position_on_a_scale",
        "People",
        "Similarity",
        "Using",
        "Intentionally_affect",
        "Intentionally_act",
        "Degree",
        "Capability"
    ],
    "This is a slight variation on Jon's comments.": [
        "Cause_change"
    ],
    "First add this interface to your codebase.": [
        "Ordinal_numbers"
    ],
    "Its implementers can answer when a certain predicate is true of a certain type.": [
        "Temporal_collocation",
        "Likelihood",
        "Capability",
        "Communication_response"
    ],
    "E.g..": [],
    "If T were User and AuthorizedUserPredicate <User> implements IPredicate <T>, then AuthorizedUserPredicate #apply returns whether the passed in User is authorized.": [
        "Gizmo",
        "Execution",
        "Grant_permission",
        "Using",
        "Traversing",
        "Temporal_collocation"
    ],
    "Then in some utility class, you could say": [
        "Temporal_collocation",
        "Relational_quantity",
        "Capability"
    ],
    "So, assuming that you have the use of the above might be": [
        "Adopt_selection",
        "Likelihood"
    ],
    "If performance on the linear check is of concern, then I might want to have a domain object that has the target collection.": [
        "Performing_arts",
        "Emotion_directed",
        "Likelihood",
        "Execution",
        "Inclusion",
        "Temporal_collocation",
        "Desiring"
    ],
    "The domain object that has the target collection would have filtering logic for the methods that initialize, add and set the target collection.": [
        "Execution",
        "Execution",
        "Intentionally_create"
    ],
    "UPDATE:": [],
    "In the utility class -LRB- let's say Predicate -RRB-, I have added a select method with an option for default value when the predicate doesn't return the expected value, and also a static property for params to be used inside the new IPredicate.": [
        "Grant_permission",
        "Execution",
        "Possibilities",
        "Temporal_collocation",
        "Expectation",
        "Age",
        "Possession",
        "Execution",
        "Intentionally_act",
        "Using"
    ],
    "The following example looks for missing objects between collections:": [
        "Relative_time",
        "Instance",
        "Success_or_failure",
        "Execution",
        "Scrutiny"
    ],
    "The following example, looks for an instance in a collection, and returns the first element of the collection as default value when the instance is not found:": [
        "Instance",
        "Instance",
        "Execution",
        "Temporal_collocation",
        "Relative_time",
        "Ordinal_numbers",
        "Coming_to_believe",
        "Ingredients",
        "Execution",
        "Scrutiny"
    ],
    "UPDATE -LRB- after Java 8 release -RRB-:": [
        "Releasing"
    ],
    "It's been several years since I -LRB- Alan -RRB- first posted this answer, and I still can not believe I am collecting SO points for this answer.": [
        "Ordinal_numbers",
        "Communication_response",
        "Measure_duration",
        "Quantity",
        "Continued_state_of_affairs",
        "Locale",
        "Sending",
        "Gathering_up",
        "Awareness",
        "Capability"
    ],
    "At any rate, now that Java 8 has introduced closures to the language, my answer would now be considerably different, and simpler.": [
        "Frequency",
        "Temporal_collocation",
        "Similarity",
        "Quantity",
        "Communication_response"
    ],
    "With Java 8, there is no need for a distinct static utility class.": [
        "Quantity",
        "Similarity",
        "Needing",
        "Existence"
    ],
    "So if you want to find the 1st element that matches your predicate.": [
        "Ingredients",
        "Evaluative_comparison",
        "Becoming_aware",
        "Possession"
    ],
    "The JDK 8 API for optionals has the ability to get -LRB- -RRB-, isPresent -LRB- -RRB-, orElse -LRB- defaultUser -RRB-, orElseGet -LRB- userSupplier -RRB- and orElseThrow -LRB- exceptionSupplier -RRB-, as well as other ` monadic' functions such as map, flatMap and filter.": [
        "Increment",
        "Execution",
        "Capability",
        "Inclusion"
    ],
    "If you want to simply collect all the users which match the predicate, then use the Collectors to terminate the stream in the desired collection.": [
        "Quantity",
        "Evaluative_comparison",
        "Quantity",
        "Desiring",
        "Execution",
        "Activity_stop",
        "Gathering_up",
        "Using",
        "Desiring",
        "Temporal_collocation"
    ],
    "See LINK for more examples on how Java 8 streams work.": [
        "Being_employed",
        "Grasp",
        "Instance",
        "Natural_features",
        "Increment"
    ],
    "The LINK method in LINK does just what you're looking for.": [
        "Execution",
        "Cognitive_connection",
        "Intentionally_act",
        "Scrutiny"
    ],
    "With the ForEach DSL you may write": [
        "Likelihood"
    ],
    "Given a collection of -LSB- The, quick, brown, fox, jumps, over, the, lazy, dog -RSB- this results in -LSB- quick, brown, jumps, over, lazy -RSB-, ie all strings longer than three characters.": [
        "Execution",
        "Apply_heat",
        "Self_motion",
        "Physical_artworks",
        "Causation",
        "Quantity",
        "Cardinal_numbers",
        "Speed",
        "Giving"
    ],
    "All iteration styles supported by the ForEach DSL are": [
        "Quantity",
        "Hair_configuration",
        "Taking_sides"
    ],
    "For more details, please refer to LINK": [
        "Increment",
        "Emotion_directed"
    ],
    "Java 8 -LRB- LINK -RRB- solves this problem using streams and lambdas in one line of code:": [
        "Predicament",
        "Quantity",
        "Cardinal_numbers",
        "Using",
        "Resolve_problem"
    ],
    "Here's a LINK.": [],
    "Use LINK to modify the collection in place.": [
        "Execution",
        "Locale",
        "Cause_change"
    ],
    "-LRB- Notice: In this case, the predicate will remove objects who satisfy the predicate -RRB-:": [
        "Becoming_aware",
        "Instance",
        "Experiencer_focus",
        "Removing"
    ],
    "LINK allows filtering collections without writing loops or inner classes:": [
        "Execution",
        "Text_creation",
        "Part_inner_outer",
        "Grant_permission"
    ],
    "Can you imagine something more readable ?": [
        "Increment",
        "Awareness",
        "Capability"
    ],
    "Disclaimer: I am a contributor on lambdaj": [],
    "This, combined with the lack of real closures, is my biggest gripe for Java.": [
        "Complaining",
        "Existence",
        "Possession",
        "Cause_to_amalgamate"
    ],
    "Honestly, most of the methods mentioned above are pretty easy to read and REALLY efficient ; however, after spending time with.": [
        "Execution",
        "Categorization",
        "Concessive",
        "Used_up",
        "Measure_duration",
        "Relational_quantity",
        "Difficulty"
    ],
    "Net, Erlang, etc..": [],
    ".": [],
    "list comprehension integrated at the language level makes everything so much cleaner.": [
        "Relational_quantity",
        "Rank",
        "Awareness",
        "Causation"
    ],
    "Without additions at the language level, Java just cant be as clean as many other languages in this area.": [
        "Locale",
        "Rank",
        "Increment",
        "Quantity",
        "Communication_response"
    ],
    "If performance is a huge concern, Google collections is the way to go -LRB- or write your own simple predicate utility -RRB-.": [
        "Performing_arts",
        "Execution",
        "Topic",
        "Size",
        "Execution",
        "Possession",
        "Becoming"
    ],
    "Lambdaj syntax is more readable for some people, but it is not quite as efficient.": [
        "People",
        "Increment",
        "Relational_quantity"
    ],
    "And then there is a library I wrote.": [
        "Temporal_collocation",
        "Buildings",
        "Existence"
    ],
    "I will ignore any questions in regard to its efficiency -LRB- yea, its that bad -RRB- ....": [
        "Quantity",
        "Desirability",
        "Questioning",
        "Categorization"
    ],
    "Yes, i know its clearly reflection based, and no I don't actually use it, but it does work:": [
        "Cogitation",
        "Quantity",
        "Obviousness",
        "Working_on",
        "Intentionally_act",
        "Certainty",
        "Using",
        "Intentionally_act"
    ],
    "OR": [],
    "I wrote LINK that support applying functional algorithms without copying the collection content.": [
        "Cognitive_connection",
        "Being_operational",
        "Duplication",
        "Execution",
        "Using",
        "Taking_sides"
    ],
    "Usage:": [],
    "The code above will actually execute": [
        "Execution"
    ],
    "JFilter LINK is best suited for your requirement.": [
        "Being_necessary",
        "Desirability",
        "Suitability"
    ],
    "JFilter is a simple and high performance open source library to query collection of Java beans.": [
        "Position_on_a_scale",
        "Performing_arts",
        "Buildings",
        "Questioning",
        "Source_of_getting",
        "Secrecy_status",
        "Execution"
    ],
    "Key features": [],
    "Use LINK.": [],
    "It is by far the fastest way to do this.": [
        "People_along_political_spectrum",
        "Intentionally_act"
    ],
    "See also: LINK": [],
    "Let's look at how to filter a built-in JDK List and a LINK using LINK.": [
        "Grant_permission",
        "Using",
        "Scrutiny"
    ],
    "If you wanted to filter the numbers less than 3, you would expect the following outputs.": [
        "Quantity",
        "Relative_time",
        "Cardinal_numbers",
        "Expectation",
        "Desiring"
    ],
    "Here's how you can filter using a Java 8 lambda as the Predicate.": [
        "Locative_relation",
        "Capability",
        "Using"
    ],
    "Here's how you can filter using an anonymous inner class as the Predicate.": [
        "Locative_relation",
        "Part_inner_outer",
        "Capability",
        "Using"
    ],
    "Here are some alternatives to filtering JDK lists and LINK MutableLists using the LINK factory.": [
        "Locative_relation",
        "Relational_quantity",
        "Locale_by_use",
        "Cognitive_connection",
        "Using",
        "Execution"
    ],
    "Here is a version that doesn't allocate an object for the predicate, by using the LINK factory instead with the selectWith method that takes a Predicate2.": [
        "Locative_relation",
        "Execution",
        "Locale_by_use",
        "Cognitive_connection",
        "Using",
        "Taking_time",
        "Intentionally_act"
    ],
    "Sometimes you want to filter on a negative condition.": [
        "Frequency",
        "State_of_entity",
        "Desiring"
    ],
    "There is a special method in Eclipse Collections for that called reject.": [
        "Execution",
        "Eclipse",
        "Execution",
        "Execution",
        "Respond_to_proposal",
        "Existence"
    ],
    "The method partition will return two collections, containing the elements selected by and rejected by the Predicate.": [
        "Execution",
        "Execution",
        "Ingredients",
        "Separating",
        "Cardinal_numbers",
        "Respond_to_proposal",
        "Execution",
        "Choosing",
        "Inclusion"
    ],
    "Note: I am a committer for Eclipse Collections.": [
        "Eclipse",
        "Execution"
    ],
    "Wait for Java 8:": [],
    "Since the early release of Java 8, you could try something like:": [
        "Temporal_collocation",
        "Capability",
        "Releasing",
        "Attempt"
    ],
    "For example, if you had a list of integers and you wanted to filter the numbers that are > 10 and then print out those numbers to the console, you could do something like:": [
        "Instance",
        "Cardinal_numbers",
        "Being_obligated",
        "Intentionally_affect",
        "Temporal_collocation",
        "Capability",
        "Text_creation",
        "Quantity",
        "Desiring"
    ],
    "How about some plain and straighforward Java": [
        "Relational_quantity",
        "Relational_quantity"
    ],
    "Simple, readable and easy -LRB- and works in Android ! -RRB-": [
        "Difficulty"
    ],
    "But if you're using Java 8 you can do it in a sweet one line:": [
        "Social_interaction_evaluation",
        "Cardinal_numbers",
        "Intentionally_act",
        "Using",
        "Capability"
    ],
    "Note that toList -LRB- -RRB- is statically imported": [
        "Importing"
    ],
    "The simple pre-Java8 solution:": [],
    "Unfortunately this solution isn't fully generic, outputting a list rather than the type of the given collection.": [
        "Degree",
        "Execution",
        "Giving"
    ],
    "Also, bringing in libraries or writing functions that wrap this code seems like overkill to me unless the condition is complex, but then you can write a function for the condition.": [
        "Bringing",
        "Buildings",
        "Text_creation",
        "Capability",
        "Appearance",
        "Filling",
        "State_of_entity",
        "Temporal_collocation"
    ],
    "I'll throw LINK in the ring, which is also available on LINK.": [
        "Cause_to_make_noise",
        "Cause_motion"
    ],
    "RxJava might not always be the best option, but it will give you more flexibility if you wish add more transformations on your collection or handle errors while filtering.": [
        "Cause_change",
        "Likelihood",
        "Possibilities",
        "Desirability",
        "Increment",
        "Execution",
        "Resolve_problem",
        "Frequency",
        "Giving",
        "Desiring"
    ],
    "Output:": [],
    "More details on RxJava's filter can be found LINK.": [
        "Locating",
        "Increment",
        "Likelihood"
    ],
    "Supports different possibilities,": [],
    "Given collection,": [],
    "of type,": [],
    "Filter": [],
    "Java 7": [],
    "Java 8": [],
    "Also,": [],
    "Sorting -LRB- also available for the Java 7 -RRB-": [],
    "Grouping -LRB- also available for the Java 7 -RRB-": [],
    "Joins -LRB- also available for the Java 7 -RRB-": [
        "Attaching"
    ],
    "Given,": [],
    "Can be Joined like,": [],
    "Expressions": [],
    "Some really great great answers here.": [
        "Relational_quantity",
        "Communication_response",
        "Locative_relation"
    ],
    "Me, I'd like to keep thins as simple and readable as possible:": [
        "Likelihood",
        "Activity_ongoing",
        "Experiencer_focus"
    ],
    "My answer builds on that from Kevin Wong, here as a one-liner using CollectionUtils from spring and a Java 8 lambda expression.": [
        "Locative_relation",
        "Calendric_unit",
        "Encoding",
        "Communication_response",
        "Using",
        "Building"
    ],
    "This is as concise and readable as any alternative I have seen -LRB- without using aspect-based libraries -RRB-": [
        "Buildings",
        "Quantity",
        "Perception_experience",
        "Using",
        "Possibilities"
    ],
    "Spring LINK is available from spring version 4.0.2.": [
        "Calendric_unit",
        "Natural_features"
    ],
    "RELEASE, and remember you need JDK 1.8 and language level 8 +.": [
        "Releasing",
        "Memory",
        "Required_event",
        "Rank"
    ],
    "Using java 8, specifically lambda expression, you can do it simply like the below example:": [
        "Instance",
        "Using",
        "Capability",
        "Intentionally_act",
        "Encoding"
    ],
    "where for each product inside myProducts collection, if prod.price > 10, then add this product to the new filtered list.": [
        "Gizmo",
        "Cardinal_numbers",
        "Execution",
        "Age",
        "Temporal_collocation",
        "Locative_relation"
    ],
    "With Guava:": [],
    "I needed to filter a list depending on the values already present in the list.": [
        "Required_event",
        "Time_vector",
        "Presence"
    ],
    "For example, remove all values following that is less than the current value.": [
        "Instance",
        "Quantity",
        "Temporal_collocation",
        "Removing",
        "Relative_time"
    ],
    "-LCB- 2 5 3 4 7 5 -RCB- - > -LCB- 2 5 7 -RCB-.": [],
    "Or for example to remove all duplicates -LCB- 3 5 4 2 3 5 6 -RCB- - > -LCB- 3 5 4 2 6 -RCB-.": [
        "Instance",
        "Duplication",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Quantity",
        "Cardinal_numbers",
        "Removing"
    ],
    "This will bee used like this.": [
        "Using"
    ],
    "Since java 9 Collectors.filtering is enabled:": [],
    "Thus filtering should be:": [],
    "Example:": [],
    "In Java 8, You can directly use this filter method and then do that.": [
        "Execution",
        "Intentionally_act",
        "Capability",
        "Temporal_collocation",
        "Using"
    ],
    "DZone > Java Zone > Iteration Over Java Collections With High Performance": [
        "Locale",
        "Performing_arts",
        "Execution",
        "Dimension"
    ],
    "Iteration Over Java Collections With High Performance": [
        "Performing_arts",
        "Execution",
        "Dimension"
    ],
    "Learn more about the forEach loop in Java and how it compares to C style and Stream API in this article on dealing with collections in Java.": [
        "Increment",
        "Evaluative_comparison",
        "Hair_configuration",
        "Execution",
        "Quantity",
        "Resolve_problem"
    ],
    "Jul. 13, 18 \u00b7 Java Zone": [
        "Locale"
    ],
    "Introduction Java developers usually deal with collections such as ArrayList and HashSet.": [
        "Make_agreement_on_action",
        "Execution"
    ],
    "Java 8 came with lambda and the streaming API that helps us to easily work with collections.": [
        "Execution",
        "Execution",
        "Being_employed",
        "Assistance"
    ],
    "In most cases, we work with a few thousands of items and performance isn't a concern.": [
        "Instance",
        "Entity",
        "Performing_arts",
        "Emotion_directed",
        "Relational_quantity",
        "Quantity",
        "Quantity",
        "Working_on"
    ],
    "But, in some extreme situations, when we have to travel over a few millions of items several times, performance will become a pain.": [
        "Relational_quantity",
        "Temporal_collocation",
        "Travel",
        "Entity",
        "Timespan",
        "Performing_arts",
        "Quantity",
        "Being_obligated",
        "Quantity",
        "Becoming",
        "Quantity",
        "Emotion_directed"
    ],
    "I use JMH for checking the running time of each code snippet.": [
        "Execution",
        "Part_piece",
        "Measure_duration",
        "Inspecting",
        "Using"
    ],
    "forEach vs. C Style vs. Stream API Iteration is a basic feature.": [
        "Hair_configuration",
        "Quantity",
        "Being_necessary"
    ],
    "All programming languages have simple syntax to allow programmers to run through collections.": [
        "Quantity",
        "Execution",
        "Grant_permission",
        "Practice"
    ],
    "Stream API can iterate over Collections in a very straightforward manner.": [
        "Execution",
        "Quantity",
        "Candidness",
        "Degree",
        "Conduct",
        "Capability"
    ],
    "The forEach loop is just as simple:": [],
    "C style is more verbose, but still very compact:": [
        "Hair_configuration",
        "Increment",
        "Continued_state_of_affairs",
        "Degree"
    ],
    "With C style, JVM simply increases an integer, then reads the value directly from memory.": [
        "Hair_configuration",
        "Remembering_experience",
        "Reading",
        "Change_position_on_a_scale",
        "Temporal_collocation"
    ],
    "This makes it very fast.": [
        "Degree",
        "Speed",
        "Execution"
    ],
    "But forEach is very different, according to this answer on StackOverFlow and document from Oracle, JVM has to convert forEach to an iterator and call hasNext ( ) with every item.": [
        "Similarity",
        "Communication_response",
        "Documents",
        "Execution",
        "Entity",
        "Degree",
        "Cause_change",
        "Frequency",
        "Required_event",
        "Attributed_information"
    ],
    "This is why forEach is slower than the C style.": [
        "Reason",
        "Hair_configuration"
    ],
    "Which Is the High-Performance Way to Travelling Over Set ?": [
        "Travel"
    ],
    "The Java Set also supports Stream API and forEach loop.": [
        "Quantity",
        "Evidence"
    ],
    "According to the previous test, if we convert Set to ArrayList, then travel over ArrayList, maybe the performance improve ?": [
        "Time_vector",
        "Operational_testing",
        "Travel",
        "Performing_arts",
        "Cause_change",
        "Temporal_collocation",
        "Attributed_information",
        "Intentionally_create",
        "Cause_to_make_progress"
    ],
    "How about a combination of the iterator with the C style for loop ?": [
        "Relational_quantity",
        "Hair_configuration"
    ],
    "Or, what about simple travel ?": [
        "Travel"
    ],
    "This is a nice idea, but it doesn't work because initializing the new ArrayList also consumes resources.": [
        "Stimulus_focus",
        "Intentionally_act",
        "Age",
        "Ingestion",
        "Working_on"
    ],
    "HashMap ( HashSet uses HashMap < E, Object > ) isn't designed for iterating all items.": [
        "Entity",
        "Quantity",
        "Coming_up_with",
        "Using"
    ],
    "The fastest way to iterate over HashMap is a combination of Iterator and the C style for loop, because JVM doesn't have to call hasNext ( ).": [
        "Hair_configuration",
        "Intentionally_act",
        "Execution",
        "Being_obligated",
        "Execution"
    ],
    "Conclusion Foreach and Stream API are convenient to work with Collections.": [
        "Coming_to_believe",
        "Execution",
        "Quantity",
        "Being_employed"
    ],
    "You can write code faster.": [
        "Capability"
    ],
    "But, when your system is stable and performance is a major concern, you should think about rewriting your loop.": [
        "Temporal_collocation",
        "Buildings",
        "Performing_arts",
        "System",
        "Emotion_directed",
        "Importance",
        "Being_obligated",
        "Opinion"
    ],
    "If you enjoyed this article and want to learn more about Java Collections, check out this collection of tutorials and articles on all things Java Collections.": [
        "Quantity",
        "Execution",
        "Experiencer_focus",
        "Increment",
        "Execution",
        "Education_teaching",
        "Desiring"
    ],
    "java, collection, high performance, c style, foreach loop, stream api": [
        "Execution",
        "Hair_configuration",
        "Quantity",
        "Performing_arts",
        "Position_on_a_scale"
    ],
    "Published at DZone with permission of Dang Ngoc Vu.": [
        "Grant_permission"
    ],
    "The Biggest Microservices Mistake You Don't Want to Make": [
        "Causation",
        "Intentionally_act",
        "Desiring"
    ],
    "Open Source Solution for Building Invincible Apps": [
        "Buildings",
        "Source_of_getting"
    ],
    "Advice for Someone Moving From SRE to Backend Engineering": [
        "Motion"
    ],
    "Eight Questions I Had Every Day As A Dev Team Lead": [
        "Questioning",
        "Frequency",
        "Execution",
        "First_rank",
        "Cardinal_numbers",
        "Being_obligated",
        "Calendric_unit"
    ],
    "About DZone Send feedback Careers Sitemap": [],
    "Article Submission Guidelines MVB Program Become a Contributor Visit the Writers' Zone": [
        "Submitting_documents",
        "Project",
        "Locale"
    ],
    "Don\u2019t leak MockWebServer ports across tests": [
        "Operational_testing",
        "Locale_by_use",
        "Reveal_secret",
        "Intentionally_act"
    ],
    "to be clear with whe types of exceptions here you can see the differences:": [
        "Similarity",
        "Capability",
        "Grasp",
        "Obviousness",
        "Locative_relation"
    ],
    "So you can get two types:": [
        "Cardinal_numbers",
        "Capability",
        "Execution"
    ],
    "UnknownHostException - When you don't have internet or unknown host ... to simulate this, set to the adapter an incorrect end point.": [
        "Temporal_collocation",
        "Feigning",
        "Temporal_subregion",
        "Adducing",
        "Correctness",
        "Awareness",
        "Intentionally_act",
        "Intentionally_create"
    ],
    "ConnectException - mockwebserver can throw a timeout exception.": [
        "Capability",
        "Cause_motion"
    ],
    "You can see how to do it here:": [
        "Locative_relation",
        "Intentionally_act",
        "Grasp",
        "Capability"
    ],
    "Really I don't know how your code is, but I hope this is useful": [
        "Intentionally_act",
        "Certainty",
        "Desiring"
    ],
    "Retrofit has a retrofit-mock module which offers a MockRestAdapter class whose purpose is to simulate network delay and errors.": [
        "Network",
        "Change_event_time",
        "Offering",
        "Inclusion",
        "Feigning"
    ],
    "This is a used in conjunction with the normal RestAdapter to create an instance of your service.": [
        "Instance",
        "Public_services",
        "Mental_property",
        "Collaboration",
        "Intentionally_create",
        "Using"
    ],
    "You can see a full example in the samples/mock-github-client / folder of the repo: LINK": [
        "Fullness",
        "Instance",
        "Containers",
        "Capability",
        "Grasp"
    ],
    "MockRestAdapter offers these APIs:": [],
    "In your test, you can call setErrorPercentage -LRB- 100 -RRB- to guarantee that a network error will occur.": [
        "Operational_testing",
        "Cardinal_numbers",
        "Network",
        "Capability",
        "Event",
        "Likelihood",
        "Execution"
    ],
    "By default the amount of time for the error to be thrown is anywhere from 0 to 3x the delay.": [
        "Measure_duration",
        "Change_event_time",
        "Quantity",
        "Cause_motion"
    ],
    "Set the delay to 0 for instant results.": [
        "Causation",
        "Change_event_time"
    ],
    "I don't know if it's useful, but you can simulate a timeout with MockWebServer:": [
        "Intentionally_act",
        "Capability",
        "Feigning",
        "Certainty"
    ],
    "Note: Please, set HttpClient of your code -LRB- e.g. AsyncHttpClient -RRB- with that number port for testing purpose.": [
        "Locale_by_use",
        "Operational_testing",
        "Quantity",
        "Intentionally_create"
    ],
    "What worked for me is pointing the Retrofit URL -LRB- end-point -RRB- to a random non-existent host.": [
        "Frequency",
        "Being_employed",
        "Adducing"
    ],
    "I used \"thisIsARandomHost.com'' and bingo i was able to mock the unknown host exception.": [
        "Practice",
        "Awareness",
        "Capability",
        "Using"
    ],
    "For example: setAPP_URL = `` LINK'' ;": [
        "Instance"
    ],
    "Here, setAPP_URL is the string variable that contains my url which I pass on to retrofit, when I want to mock unknown host exception in my tests I set the url as above.": [
        "Locative_relation",
        "Temporal_collocation",
        "Process_end",
        "Operational_testing",
        "Execution",
        "Awareness",
        "Inclusion",
        "Practice",
        "Desiring"
    ],
    "For all other purposes it is set to the valid URL required by my app.": [
        "Quantity",
        "Being_in_effect",
        "Increment",
        "Execution",
        "Being_necessary"
    ],
    "As stated in above answers, MockWebServer is a great library for mocking retrofit responses, but you don't need that library for mocking this exception.": [
        "Communication_response",
        "Response",
        "Buildings",
        "Desirability",
        "Intentionally_act",
        "Judgment_communication",
        "Required_event"
    ],
    "For mocking all other exceptions I would recommend MockWebServer, I use it a lot in my project for testing responses.": [
        "Judgment_communication",
        "Quantity",
        "Project",
        "Response",
        "Increment",
        "Quantity",
        "Operational_testing",
        "Using"
    ],
    "Note: You can set the app url to anything as long as that url doesn't exist on the web.": [
        "Network",
        "Intentionally_act",
        "Intentionally_create",
        "Existence",
        "Desiring",
        "Capability"
    ],
    "The easiest way to simulate network issues with MockWebServer is by setting the SocketPolicy to SocketPolicy.DISCONNECT _ AT_START, SocketPolicy.NO _ RESPONSE or etc:": [
        "Network",
        "Response",
        "Feigning"
    ],
    "This way you can simulate network errors like connection prematurely closed before response or Timeout exceptions": [
        "Network",
        "Social_connection",
        "Response",
        "Capability",
        "Feigning",
        "Body_movement",
        "Execution"
    ],
    "Spring Ahead Sale -- Save on Everything.All videos.": [
        "Calendric_unit",
        "Commerce_sell"
    ],
    "Build your mobile development skills and save !": [
        "Bringing",
        "Cause_to_make_progress",
        "Expertise",
        "Building"
    ],
    "Stay ahead of the rest with an Ultimate book & video subscription.": [
        "Temporary_stay",
        "Stimulus_focus",
        "Part_ordered_segments",
        "Relative_time"
    ],
    "Starting at just $ 149/year as part of the Spring Ahead sale.": [
        "Commerce_sell",
        "Natural_features",
        "Process_start",
        "Part_whole"
    ],
    "Why Use a Mock Server to Test API Calls": [
        "Reason",
        "Practice",
        "Operational_testing",
        "Execution",
        "Using"
    ],
    "Why Use MockWebServer Over Manual Client Mocking": [
        "Judgment_communication",
        "Reason"
    ],
    "Setting up a Mock Response": [
        "Practice",
        "Response",
        "Intentionally_create"
    ],
    "Creating a File Reader to Read the Response": [
        "Response",
        "Categorization",
        "Reading",
        "Creating"
    ],
    "Setting up an Idling Resource": [
        "Intentionally_create"
    ],
    "Testing REST APIs Using MockWebServer In this MockWebserver Android tutorial, you'll learn how to mock REST API responses and use Espresso UI tests to check how your app handles success or error responses.": [
        "Practice",
        "Response",
        "Success_or_failure",
        "Using",
        "Intentionally_act",
        "Stimulus_focus",
        "Inspecting",
        "Operational_testing",
        "Operational_testing",
        "Education_teaching"
    ],
    "Jun 8 2020 \u00b7 Article ( 20 mins ) \u00b7 Intermediate": [
        "Cardinal_numbers"
    ],
    "MockWebServer is a library from Square -- the people who made Retrofit and OkHttp.": [
        "Buildings",
        "Locale_by_use",
        "People",
        "Causation"
    ],
    "MockWebServer makes it possible to easily test how your apps behave when making HTTP/HTTPS calls.": [
        "Conduct",
        "Likelihood",
        "Contacting",
        "Execution",
        "Causation",
        "Temporal_collocation",
        "Operational_testing"
    ],
    "A mock web server is a program that mocks the behavior of an actual remote server but doesn't make calls over the internet.": [
        "Practice",
        "Network",
        "Project",
        "Conduct",
        "Intentionally_act",
        "Actually_occurring_entity",
        "Causation",
        "Contacting",
        "Judgment_communication"
    ],
    "This makes it easy to test different scenarios without internet access and without having to make changes to your remote server.": [
        "Having_or_lacking_access",
        "Undergo_change",
        "Similarity",
        "Causation",
        "Execution",
        "Being_obligated",
        "Difficulty",
        "Operational_testing"
    ],
    "In this tutorial, you'll learn:": [
        "Education_teaching"
    ],
    "The benefits of using a mock server while testing.": [
        "Practice",
        "Operational_testing",
        "Using"
    ],
    "How to set up MockWebServer.": [
        "Intentionally_create"
    ],
    "How to make MockWebServer mock the behavior of your actual server.": [
        "Practice",
        "Actually_occurring_entity",
        "Conduct",
        "Causation"
    ],
    "How to write UI tests to make sure your app functions as expected.": [
        "Operational_testing",
        "Verification",
        "Expectation"
    ],
    "You'll do this by working on an app called Potterverse that displays a list of characters from the Harry Potter universe and their roles.": [
        "Being_employed",
        "Physical_artworks",
        "Performers_and_roles",
        "Execution",
        "Intentionally_act"
    ],
    "Getting Started Download the starter project by clicking the Download Materials button at the top or bottom of the tutorial.": [
        "Impact",
        "Substance",
        "Clothing_parts",
        "Part_orientational",
        "Part_orientational",
        "Project",
        "Getting"
    ],
    "Inside the materials, you'll find a starter project and a final project.": [
        "Substance",
        "Project",
        "Ordinal_numbers",
        "Locating"
    ],
    "The starter project consists of the following files": [
        "Project",
        "Relative_time"
    ],
    "CharacterAdapter.kt: A RecyclerView adapter that displays the list of characters.": [
        "Physical_artworks"
    ],
    "CharacterModel.kt: A Kotlin data model that represents each character.": [
        "Gizmo",
        "Physical_artworks",
        "Communicate_categorization"
    ],
    "MainActivity.kt: Displays the list and the error states, when required.": [
        "Political_locales",
        "Temporal_collocation",
        "Being_necessary"
    ],
    "OkHttpProvider.kt: Contains a helper method to access a networking client.": [
        "Execution",
        "Inclusion"
    ],
    "PotterApi.kt: Contains the API key and a method corresponding to the API call you want to make.": [
        "Execution",
        "Importance",
        "Desiring",
        "Execution",
        "Causation",
        "Inclusion"
    ],
    "In this tutorial, you'll focus less on the code from the above files and more on setting up MockWebServer and writing tests.": [
        "Operational_testing",
        "Text_creation",
        "Intentionally_create",
        "Increment",
        "Place_weight_on"
    ],
    "Open Android Studio and select Open an existing Android Studio project.": [
        "Building_subparts",
        "Project",
        "Existence"
    ],
    "Select starter-project from the MockWebserver_Materials folder.": [
        "Choosing",
        "Containers"
    ],
    "After you've imported the starter project, build and run.": [
        "Project",
        "Importing",
        "Building",
        "Execution"
    ],
    "You'll see a screen like this:": [
        "Grasp"
    ],
    "You'll notice an error text appears because the API call failed.": [
        "Execution",
        "Success_or_failure",
        "Becoming_aware",
        "Coming_to_be"
    ],
    "To fix this, you have to add an API key.": [
        "Importance",
        "Resolve_problem",
        "Being_obligated"
    ],
    "Adding an API Key For this tutorial, you'll use the PotterAPI to provide data for your app.": [
        "Importance",
        "Supply",
        "Using"
    ],
    "You'll get your API key from https://www.potterapi.com/.": [
        "Importance",
        "Execution"
    ],
    "You'll see a GET A KEY button at the top-right edge of the screen.": [
        "Clothing_parts",
        "Importance",
        "Getting",
        "Change_position_on_a_scale",
        "Grasp"
    ],
    "Clicking on GET A KEY will take you to the sign-up page with a form like the one below:": [
        "Importance",
        "Contacting",
        "Getting",
        "Cardinal_numbers",
        "Sounds",
        "Have_as_requirement"
    ],
    "Once you sign up, you'll see your email ID and API key.": [
        "Contacting",
        "Frequency",
        "Sign_agreement",
        "Importance",
        "Locative_relation",
        "Grasp"
    ],
    "Open the PotterApi.kt file and assign the API key as follows:": [
        "Importance",
        "Relative_time"
    ],
    "The API call no longer fails and the app successfully shows a list of characters from the Harry Potter universe.": [
        "Quantity",
        "Physical_artworks",
        "Success_or_failure",
        "Evidence",
        "Execution"
    ],
    "Why Use a Mock Server to Test API Calls Before you setup your MockWebServer, you might be wondering why you'd want to test your API calls.": [
        "Reason",
        "Practice",
        "Operational_testing",
        "Reason",
        "Likelihood",
        "Contacting",
        "Cogitation",
        "Using",
        "Operational_testing",
        "Desiring",
        "Execution"
    ],
    "There are a few advantages to doing this:": [
        "Quantity",
        "Intentionally_act",
        "Existence"
    ],
    "Testing Adapters Is Easy Sometimes, the API might give responses that aren't straightforward to serialize and deserialize directly.": [
        "Response",
        "Operational_testing",
        "Frequency",
        "Giving",
        "Likelihood",
        "Candidness"
    ],
    "In other cases, you might want to convert the data from your API response from one data type to another.": [
        "Instance",
        "Increment",
        "Increment",
        "Likelihood",
        "Cardinal_numbers",
        "Cause_change",
        "Response",
        "Desiring"
    ],
    "For example, the API might return dates as Strings but you want to use them as DateTime objects.": [
        "Instance",
        "Food",
        "Likelihood",
        "Execution",
        "Using",
        "Possession"
    ],
    "For such cases, you might write an adapter to convert the data.": [
        "Instance",
        "Likelihood",
        "Cause_change"
    ],
    "A mock web server makes it easy to test that these adapters are working as expected when making API calls.": [
        "Practice",
        "Network",
        "Being_employed",
        "Difficulty",
        "Contacting",
        "Causation",
        "Temporal_collocation",
        "Expectation",
        "Execution",
        "Operational_testing"
    ],
    "Testing Empty and Error States It can be tricky to test that apps handle empty and error states properly when you're dealing with a remote server.": [
        "Emptying",
        "Fullness",
        "Political_locales",
        "Temporal_collocation",
        "Political_locales",
        "Resolve_problem",
        "Operational_testing",
        "Resolve_problem",
        "Operational_testing",
        "Difficulty",
        "Capability"
    ],
    "Servers are designed to be as reliable as possible, making it difficult to get error responses while testing.": [
        "Likelihood",
        "Response",
        "Operational_testing",
        "Trust",
        "Difficulty",
        "Execution",
        "Execution",
        "Coming_up_with"
    ],
    "By using a mock server, you can easily emulate error responses and see if the app handles them properly.": [
        "Practice",
        "Response",
        "Capability",
        "Using",
        "Intentionally_act",
        "Grasp"
    ],
    "All this, without making any changes to your actual server.": [
        "Quantity",
        "Undergo_change",
        "Quantity",
        "Actually_occurring_entity",
        "Causation"
    ],
    "Why Use MockWebServer Over Manual Client Mocking Now that you're sold on testing your API calls, you may be wondering why you should use MockWebServer when you could instead just mock out whatever class makes your API calls.": [
        "Reason",
        "Reason",
        "Temporal_collocation",
        "Practice",
        "Likelihood",
        "Being_obligated",
        "Contacting",
        "Commerce_sell",
        "Operational_testing",
        "Using",
        "Judgment_communication",
        "Causation",
        "Temporal_collocation",
        "Capability",
        "Cogitation"
    ],
    "Here are a few reasons:": [
        "Locative_relation",
        "Causation",
        "Quantity"
    ],
    "MockWebServer exercises the full HTTP stack, which would be tedious to do manually.": [
        "Fullness",
        "Intentionally_act",
        "Stimulus_focus",
        "Practice"
    ],
    "You don't need to make changes on the app side when using a MockWebServer.": [
        "Undergo_change",
        "Intentionally_act",
        "Taking_sides",
        "Using",
        "Temporal_collocation",
        "Causation",
        "Required_event"
    ],
    "It's easy to recreate edge-cases like throttling and rare error codes.": [
        "Frequency",
        "Difficulty"
    ],
    "Configuring MockWebServer In this section, you'll configure a MockWebServer instance and make it return the response you saved in the JSON file.": [
        "Part_whole",
        "Instance",
        "Response",
        "Execution",
        "Execution"
    ],
    "Changing the API URL The base URL for the app is stored in PotterApp.": [
        "Locale_by_use",
        "Undergo_change",
        "Storing"
    ],
    "Open the file to find the following function:": [
        "Relative_time",
        "Coming_to_believe"
    ],
    "When you create a test with a mock server, the app shouldn't use the real URL.": [
        "Temporal_collocation",
        "Practice",
        "Existence",
        "Operational_testing",
        "Being_obligated",
        "Intentionally_create",
        "Using"
    ],
    "Instead, it should use the mock server's URL.": [
        "Practice",
        "Being_obligated",
        "Using"
    ],
    "To set this up, you'll need a mechanism to tell the app to use the real URL normally, but the mock URL when you run tests.": [
        "Locative_relation",
        "Practice",
        "Temporal_collocation",
        "Operational_testing",
        "Existence",
        "Required_event",
        "Execution",
        "Using",
        "Execution",
        "Telling",
        "Intentionally_create"
    ],
    "A test runner makes this possible.": [
        "Operational_testing",
        "Likelihood",
        "Causation"
    ],
    "It helps you configure the conditions you use to run your tests.": [
        "Operational_testing",
        "Execution",
        "State_of_entity",
        "Using",
        "Assistance"
    ],
    "First, you need to create an equivalent of PotterApp that returns the mock URL instead of the real URL.": [
        "Ordinal_numbers",
        "Practice",
        "Required_event",
        "Existence",
        "Execution",
        "Intentionally_create"
    ],
    "Do this by creating a file named PotterTestApp.kt in the androidTest folder and add the following code to it:": [
        "Relative_time",
        "Containers",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_create",
        "Intentionally_act"
    ],
    "Here, http://127.0.0.1 is the local URL of your computer and 8080 is the port MockWebServer will use.": [
        "Locative_relation",
        "Political_locales",
        "Using"
    ],
    "After you add the PotterTestApp.kt file, your package structure should look like this:": [
        "Cause_change_of_position_on_a_scale",
        "Execution",
        "Self_motion",
        "Buildings",
        "Being_obligated",
        "Scrutiny"
    ],
    "Creating a Test Runner Now, you need to provide a test runner that uses PotterTestApp instead of PotterApp when running a test.": [
        "Operational_testing",
        "Operational_testing",
        "Required_event",
        "Using",
        "Intentionally_create",
        "Temporal_collocation",
        "Temporal_collocation",
        "Execution",
        "Supply"
    ],
    "Create a file named MockTestRunner.kt in the androidTest folder and add the following code to it:": [
        "Relative_time",
        "Containers",
        "Cause_change_of_position_on_a_scale",
        "Cause_to_start"
    ],
    "The newApplication method provides the application instance you'll use in the test.": [
        "Execution",
        "Using",
        "Instance",
        "Operational_testing",
        "Supply",
        "Using"
    ],
    "You can see that it returns an application instance using PotterTestApp instead of PotterApp.": [
        "Using",
        "Instance",
        "Capability",
        "Execution",
        "Using",
        "Grasp"
    ],
    "Now that you've written a test runner, you need to tell Gradle to use it for your project.": [
        "Operational_testing",
        "Project",
        "Temporal_collocation",
        "Using",
        "Telling",
        "Required_event"
    ],
    "To do this, open the app-level build.gradle and change the value of testInstrumentationRunner as follows:": [
        "Intentionally_act",
        "Secrecy_status",
        "Undergo_change",
        "Relative_time"
    ],
    "Click Sync Now and let Gradle finish syncing.": [
        "Sounds",
        "Temporal_collocation",
        "Activity_finish",
        "Grant_permission"
    ],
    "From now on, Gradle will use MockTestRunner whenever you run any UI tests.": [
        "Temporal_collocation",
        "Quantity",
        "Operational_testing",
        "Using",
        "Execution"
    ],
    "To use a mock web server and verify that it's working as expected, you'll write a few Espresso tests next.": [
        "Practice",
        "Network",
        "Being_employed",
        "Operational_testing",
        "Expectation",
        "Quantity",
        "Using",
        "Locative_relation",
        "Verification"
    ],
    "Using Espresso Espresso is a testing framework that Android provides to write UI tests.": [
        "Operational_testing",
        "Operational_testing",
        "Supply",
        "Using"
    ],
    "You can use it to emulate user interactions while running tests and to verify if your views respond as expected.": [
        "Operational_testing",
        "Expectation",
        "Categorization",
        "Capability",
        "Response",
        "Execution",
        "Verification",
        "Using"
    ],
    "You can test MockWebServer even without Espresso but this tutorial uses it to demonstrate a complete testing scenario.": [
        "Process_completed_state",
        "Operational_testing",
        "Capability",
        "Operational_testing",
        "Reasoning",
        "Using"
    ],
    "Note: If you're new to UI testing using Espresso, check out this introduction to Espresso tutorial.": [
        "Operational_testing",
        "Using",
        "Age"
    ],
    "Before starting to write the test, it's helpful to review the contents of activity_main.xml.": [
        "Operational_testing",
        "Process_start",
        "Assistance"
    ],
    "It contain three main views:": [
        "Categorization",
        "First_rank",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "ProgressBar: Displays the loading status.": [],
    "TextView: Shows the error message.": [
        "Evidence"
    ],
    "RecyclerView: Display the list of characters.": [
        "Physical_artworks"
    ],
    "Create a file named MainActivityTest.kt in the androidTest folder and add this to it:": [
        "Containers",
        "Cause_change_of_position_on_a_scale",
        "Cause_to_start"
    ],
    "This is the basic structure of an Espresso test.": [
        "Buildings",
        "Being_necessary",
        "Operational_testing"
    ],
    "You annotate a class with @RunWith ( AndroidJUnit4:: class ) to specify that AndroidJUnit4 is the runner for this test.": [
        "Operational_testing"
    ],
    "A @Before annotation on a method specifies that it will run before every test.": [
        "Execution",
        "Operational_testing",
        "Frequency",
        "Execution"
    ],
    "Any method with the @After annotation will run after every test.": [
        "Execution",
        "Operational_testing",
        "Quantity",
        "Frequency",
        "Execution"
    ],
    "Use these annotations to keep initialization logic common to all tests.": [
        "Operational_testing",
        "Quantity",
        "Activity_ongoing"
    ],
    "You use ActivityTestRule to specify the Activity that you want to run the UI tests on and the initial actions you want to perform.": [
        "Intentionally_act",
        "Examination",
        "Intentionally_act",
        "Version_sequence",
        "Intentionally_act",
        "Execution",
        "Possession",
        "Using"
    ],
    "Setting up MockWebServer You'll need to add the Gradle dependency for MockWebServer first to be able to use instances of MockWebServer.": [
        "Reliance",
        "Ordinal_numbers",
        "Instance",
        "Using",
        "Cause_change_of_position_on_a_scale",
        "Capability",
        "Required_event",
        "Intentionally_create"
    ],
    "Open the app-level build.gradle and add the following line below the corresponding / / TODO at the end of the file:": [
        "Relative_time",
        "Temporal_subregion"
    ],
    "Next, you'll create an instance of MockWebServer.": [
        "Instance",
        "Intentionally_create"
    ],
    "Add the following line before setup ( ) in the MainActivityTest file:": [
        "Relative_time"
    ],
    "Place the cursor on the word MockWebServer and press Alt-Enter, then choose Import to automatically add the missing import line and fix the build.": [
        "Simple_name",
        "Cause_motion",
        "Importing",
        "Cause_change_of_position_on_a_scale",
        "Importing",
        "Choosing",
        "Resolve_problem",
        "Building",
        "Temporal_collocation"
    ],
    "You have to start the server before every test and stop it after every test.": [
        "Frequency",
        "Operational_testing",
        "Preventing",
        "Activity_start",
        "Being_obligated"
    ],
    "You can do this by modifying setup ( ) as follows:": [
        "Relative_time",
        "Capability",
        "Intentionally_act",
        "Cause_change"
    ],
    "This starts the mock server on the 8080 port.": [
        "Practice",
        "Locale_by_use",
        "Process_start"
    ],
    "Next, modify teardown ( ) to stop the server:": [
        "Preventing",
        "Cause_change"
    ],
    "And that's all it takes to get MockWebServer ready.": [
        "Quantity",
        "Activity_ready_state",
        "Execution",
        "Taking_time"
    ],
    "All you need to do now is to setup some mock responses and write some tests.": [
        "Quantity",
        "Temporal_collocation",
        "Relational_quantity",
        "Practice",
        "Response",
        "Operational_testing",
        "Required_event",
        "Intentionally_act"
    ],
    "Setting up a Mock Response Before you can actually write your tests, you need to define the response your mock web server will return.": [
        "Practice",
        "Operational_testing",
        "Response",
        "Practice",
        "Network",
        "Required_event",
        "Intentionally_create",
        "Communicate_categorization",
        "Execution",
        "Response",
        "Capability"
    ],
    "To find what the structure of the response of the PotterAPI is, you need to make a real API call first.": [
        "Ordinal_numbers",
        "Existence",
        "Execution",
        "Response",
        "Buildings",
        "Causation",
        "Required_event",
        "Becoming_aware"
    ],
    "Creating a JSON Response Open a web browser and paste the following URL: https://www.potterapi.com/v1/characters?key=API_KEY.": [
        "Network",
        "Relative_time",
        "Creating",
        "Response"
    ],
    "Replace API_KEY with the real API key you obtained in the previous section.": [
        "Time_vector",
        "Existence",
        "Importance",
        "Part_whole",
        "Getting"
    ],
    "The response will be in the following format:": [
        "Response",
        "Relative_time"
    ],
    "Keep the browser open, you'll need it later.": [
        "Time_vector",
        "Secrecy_status",
        "Required_event",
        "Activity_ongoing"
    ],
    "If it doesn't already exist, create a directory named assets in your app module.": [
        "Intentionally_act",
        "Appointing",
        "Time_vector",
        "Existence",
        "Intentionally_create"
    ],
    "It will look something like this:": [
        "Scrutiny"
    ],
    "Create a file named success_response.": [
        "Cause_to_start"
    ],
    "json in the assets directory.": [],
    "This file will contain the response that the mock server will return.": [
        "Response",
        "Practice",
        "Execution",
        "Inclusion"
    ],
    "Switch to your browser and copy the first 10 items from the response and paste them in this file.": [
        "Entity",
        "Response",
        "Ordinal_numbers",
        "Cardinal_numbers",
        "Duplication"
    ],
    "json file will look something like this:": [
        "Scrutiny"
    ],
    "Remember to remove the last comma and add a square bracket `` -RSB-'' at the end of the file to make sure it's a valid JSON file.": [
        "Cause_change_of_position_on_a_scale",
        "Shapes",
        "Being_in_effect",
        "Relative_time",
        "Self_motion",
        "Removing",
        "Temporal_subregion",
        "Verification",
        "Memory"
    ],
    "Creating a File Reader to Read the Response MockWebServer can't read the response from the JSON file directly.": [
        "Response",
        "Categorization",
        "Response",
        "Reading",
        "Creating",
        "Reading",
        "Capability"
    ],
    "For this, you need to create a file reader to read the contents of the JSON file and convert them into a String object.": [
        "Cause_change",
        "Categorization",
        "Reading",
        "Intentionally_create",
        "Required_event"
    ],
    "Start by creating a file named FileReader.kt in androidTest.": [
        "Intentionally_create",
        "Temporal_subregion"
    ],
    "Add the following code to FileReader.kt:": [
        "Relative_time"
    ],
    "FileReader consists of a single method: readStringFromFile.": [
        "Execution",
        "Sole_instance"
    ],
    "This opens the JSON file as an InputStream and writes its contents in a String line-by-line.": [
        "Body_movement"
    ],
    "The final built up String is then returned.": [
        "Building",
        "Ordinal_numbers",
        "Temporal_collocation",
        "Execution"
    ],
    "You'll use FileReader to read from the success_response.": [
        "Categorization",
        "Using"
    ],
    "json file you created earlier.": [
        "Intentionally_create",
        "Relative_time"
    ],
    "Writing the Tests Now that the mock server is fully set up, you'll write a few Espresso tests to ensure the server is working as expected.": [
        "Operational_testing",
        "Practice",
        "Degree",
        "Expectation",
        "Text_creation",
        "Quantity",
        "Working_on",
        "Operational_testing",
        "Temporal_collocation",
        "Intentionally_create"
    ],
    "But there's one last thing you need to do before writing the actual tests.": [
        "Operational_testing",
        "Relative_time",
        "Actually_occurring_entity",
        "Cardinal_numbers",
        "Text_creation",
        "Required_event",
        "Intentionally_act",
        "Existence"
    ],
    "API calls are asynchronous tasks, so you need a way to tell Espresso to wait for the API calls to complete.": [
        "Being_obligated",
        "Execution",
        "Contacting",
        "Have_as_requirement",
        "Activity_finish",
        "Waiting",
        "Telling"
    ],
    "You'll use an idling resource to solve this.": [
        "Resolve_problem",
        "Using"
    ],
    "Setting up an Idling Resource An idling resource represents an asynchronous operation whose results affect subsequent operations in a UI test.": [
        "Using",
        "Relative_time",
        "Businesses",
        "Causation",
        "Operational_testing",
        "Objective_influence",
        "Communicate_categorization",
        "Intentionally_create"
    ],
    "You can read more about them in the Espresso documentation.": [
        "Reading",
        "Capability",
        "Increment"
    ],
    "This adds the Gradle dependency, which you need to do before you can call OkHttp3IdlingResource.": [
        "Reliance",
        "Capability",
        "Execution",
        "Intentionally_act",
        "Required_event"
    ],
    "Now, click Sync Now and let Gradle finish syncing.": [
        "Temporal_collocation",
        "Sounds",
        "Activity_finish",
        "Grant_permission"
    ],
    "Open MainActivityTest.kt and add the following lines to setup ( ):": [
        "Relative_time"
    ],
    "Place the cursor on the words IdlingRegistry and OkHttp3IdlingResource respectively, then press Alt-Enter.": [
        "Simple_name",
        "Temporal_collocation",
        "Cause_motion"
    ],
    "Next, choose Import to automatically add the missing import lines and fix the build.": [
        "Importing",
        "Success_or_failure",
        "Importing",
        "Choosing",
        "Resolve_problem",
        "Building"
    ],
    "OkHttp3IdlingResource is a class that the okhttp-idling-resource library provides.": [
        "Buildings",
        "Supply"
    ],
    "It tells Espresso to wait for the OkHttp client to finish performing its task.": [
        "Intentionally_act",
        "Being_obligated",
        "Activity_finish",
        "Waiting"
    ],
    "OkHttp is the networking client used in the project.": [
        "Project",
        "Using"
    ],
    "OkHttpProvider is a helper class in the project that gives you access to a static OkHttp instance.": [
        "Project",
        "Having_or_lacking_access",
        "Instance",
        "Giving"
    ],
    "For your next step, you'll actually run a test to see what happens when the case is successful.": [
        "Intentionally_act",
        "Reasoning",
        "Locative_relation",
        "Temporal_collocation",
        "Success_or_failure",
        "Execution",
        "Event",
        "Operational_testing",
        "Grasp"
    ],
    "Testing a Successful Case For your first test case, you'll make MockWebServer return the response from the JSON file.": [
        "Successful_action",
        "Reasoning",
        "Ordinal_numbers",
        "Operational_testing",
        "Instance",
        "Response",
        "Execution",
        "Operational_testing",
        "Causation"
    ],
    "You can tell MockWebServer what to send as a response by creating a dispatcher.": [
        "Capability",
        "Intentionally_create",
        "Response",
        "Sending"
    ],
    "Add the following method to the MainActivityTest.kt class and import dependencies:": [
        "Execution",
        "Importing",
        "Reliance",
        "Relative_time"
    ],
    "Here's what's happening with this code: @Test tells Espresso that the method contains a test.": [
        "Locative_relation",
        "Execution",
        "Operational_testing",
        "Operational_testing",
        "Event",
        "Inclusion"
    ],
    "MockResponse ( ) creates a mock response that the mock server will return.": [
        "Practice",
        "Response",
        "Execution",
        "Creating"
    ],
    "setResponseCode ( ) specifies the response code.": [
        "Response"
    ],
    "Since you're mocking a successful response, the code is 200.": [
        "Successful_action",
        "Response",
        "Cardinal_numbers",
        "Judgment_communication"
    ],
    "setBody ( ) contains the body of the response.": [
        "Execution",
        "Response",
        "Inclusion"
    ],
    "In this case, you use the FileReader utility class to convert the JSON response into a String instance.": [
        "Instance",
        "Response",
        "Instance",
        "Using",
        "Cause_change"
    ],
    "With the mock server set up, you need to write the UI test to run to verify the successful response.": [
        "Practice",
        "Successful_action",
        "Response",
        "Required_event",
        "Operational_testing",
        "Verification",
        "Intentionally_create",
        "Execution"
    ],
    "Add the following at the end of testSuccessfulResponse ( ):": [
        "Relative_time",
        "Temporal_subregion"
    ],
    "The code above launches the Activity and verifies the following conditions are met after a successful response:": [
        "Intentionally_act",
        "Successful_action",
        "Response",
        "State_of_entity",
        "Relative_time",
        "Shoot_projectiles",
        "Verification",
        "Make_acquaintance"
    ],
    "The view with R.id.progress _ bar has a visibility of View.GONE.": [
        "Opinion",
        "Buildings",
        "Inclusion"
    ],
    "The one with R.id.character _ recyclerview has a visibility of View.VISIBLE.": [
        "Cardinal_numbers",
        "Inclusion"
    ],
    "The view with R.id.textview has a visibility of View.GONE.": [
        "Opinion",
        "Inclusion"
    ],
    "Run the test by clicking the Play icon next to the class definition then select Run MainActivityTest.": [
        "Operational_testing",
        "Impact",
        "Performers_and_roles",
        "Communicate_categorization",
        "Temporal_collocation",
        "Operating_a_system",
        "Locative_relation",
        "Choosing"
    ],
    "Once the app launches on your device, Android Studio will show you a green tick indicating the successful test.": [
        "Gizmo",
        "Building_subparts",
        "Successful_action",
        "Operational_testing",
        "Shoot_projectiles",
        "Evidence",
        "Reasoning",
        "Frequency"
    ],
    "Now, it's time to see what happens when you get a failed response.": [
        "Temporal_collocation",
        "Temporal_collocation",
        "Successful_action",
        "Response",
        "Event",
        "Execution",
        "Measure_duration",
        "Grasp"
    ],
    "Testing a Failed Response For this test, you'll create a response that returns after five seconds.": [
        "Operational_testing",
        "Successful_action",
        "Cardinal_numbers",
        "Response",
        "Execution",
        "Response",
        "Operational_testing",
        "Intentionally_create"
    ],
    "You've configured the app to request timeout after three seconds, so it will treat a five-second response as a failure.": [
        "Execution",
        "Response",
        "Success_or_failure",
        "Cardinal_numbers",
        "Communicate_categorization"
    ],
    "Add the following method to MainActivityTest.kt:": [
        "Execution",
        "Relative_time"
    ],
    "In the above code, throttleBody ( ) throttles the response by five seconds.": [
        "Response",
        "Cardinal_numbers"
    ],
    "This test verifies one extra thing: It checks if the view with ID R.id.textview contains the text that the string resource R.string.something _ went_wrong refers to.": [
        "Operational_testing",
        "Opinion",
        "Inspecting",
        "Verification",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "You will see that both the tests pass.": [
        "Operational_testing",
        "Process_end",
        "Grasp"
    ],
    "You've now set up tests to check both the success and failure responses of your app on a mock web server.": [
        "Operational_testing",
        "Success_or_failure",
        "Success_or_failure",
        "Practice",
        "Network",
        "Temporal_collocation",
        "Response",
        "Inspecting",
        "Intentionally_create"
    ],
    "Download the final project using the Download Materials button at the top or bottom of this tutorial.": [
        "Project",
        "Substance",
        "Clothing_parts",
        "Ordinal_numbers",
        "Part_orientational",
        "Using",
        "Part_orientational"
    ],
    "In this tutorial, you've set up MockWebServer, configured it to mock API calls from a remote server and written UI tests to verify how an app functions.": [
        "Practice",
        "Contacting",
        "Intentionally_create",
        "Verification",
        "Operational_testing"
    ],
    "As a further enhancement, make the app display a text saying Oops !": [
        "Increment",
        "Causation"
    ],
    "Seems like a server error when the API returns a status code of 500.": [
        "Temporal_collocation",
        "Cardinal_numbers",
        "Execution"
    ],
    "Configure MockWebServer to return a 500 status code and write a UI test to verify that the app displays the text.": [
        "Operational_testing",
        "Cardinal_numbers",
        "Execution",
        "Verification"
    ],
    "Hopefully, you've enjoyed this tutorial !": [
        "Experiencer_focus"
    ],
    "If you have any questions or ideas to share, please join the forum discussion below.": [
        "Questioning",
        "Quantity",
        "Discussion",
        "Becoming_a_member",
        "Stimulus_focus"
    ],
    "Networking Testing Android & Kotlin Tutorials": [
        "Operational_testing"
    ],
    "Spring Ahead Sale -- Save on Everything.": [
        "Calendric_unit",
        "Commerce_sell"
    ],
    "The mobile development world moves quickly -- make 2021 the year you stand out from the rest.": [
        "Bringing",
        "Event",
        "Political_locales",
        "Calendric_unit",
        "Stimulus_focus",
        "Being_located",
        "Locative_relation",
        "Cause_motion",
        "Speed",
        "Causation"
    ],
    "Ultimate book & video subscriptions start at just $ 149/year for as part of our Spring Ahead sale.": [
        "Part_ordered_segments",
        "Commerce_sell",
        "Natural_features",
        "Activity_start",
        "Part_whole"
    ],
    "New Spring Ahead Sale: Subscriptions from $ 149 and Books 50 % Off !": [
        "Calendric_unit",
        "Commerce_sell",
        "Cardinal_numbers",
        "Age"
    ],
    "iOS & Swift Announcements Apr 6 2021 \u00b7 Article ( 10 mins )": [
        "Cardinal_numbers"
    ],
    "Grab our best deals of the year: Yearly Ultimate Subscriptions starting at just $ 149/year and every single book on our site for 50 % off.": [
        "Make_agreement_on_action",
        "Calendric_unit",
        "Frequency",
        "Part_ordered_segments",
        "Locale_by_use",
        "Sole_instance",
        "Cardinal_numbers",
        "Process_start",
        "Locative_relation"
    ],
    "Save big during this year's Spring Ahead Sale !": [
        "Calendric_unit",
        "Natural_features",
        "Size"
    ],
    "Apr 6 2021 \u00b7 Article ( 10 mins )": [
        "Cardinal_numbers"
    ],
    "New Firebase Cloud Messaging for iOS: Push Notifications iOS & Swift Networking Apr 5 2021 \u00b7 Article ( 25 mins )": [
        "Age",
        "Telling",
        "Cause_motion"
    ],
    "Learn how to use Firebase Cloud Messaging to send and receive remote push notifications in your SwiftUI iOS app.": [
        "Cause_motion",
        "Telling",
        "Receiving",
        "Sending",
        "Using"
    ],
    "Apr 5 2021 \u00b7 Article ( 25 mins )": [],
    "New Annyce Davis -- Podcast S11 E09 iOS & Swift Podcast Mar 31 2021 \u00b7 Article ( 1 min )": [
        "Age"
    ],
    "Annyce Davis brings even more joy and enthusiasm while Dru and Nishant discuss her interview in ` Living By The Code.'": [
        "Increment",
        "Residence",
        "Causation",
        "Discussion"
    ],
    "Mar 31 2021 \u00b7 Article ( 1 min )": [],
    "New Announcing Server-Side Swift with Vapor -- Fully Updated for Vapor 4 !": [
        "Degree",
        "Cardinal_numbers",
        "Age"
    ],
    "Server-Side Swift Announcements Mar 31 2021 \u00b7 Article ( 20 mins )": [
        "Cardinal_numbers"
    ],
    "We're beyond excited to announce that our book, Server-Side Swift with Vapor, has been fully updated for Vapor 4 -- and includes a completely new chapter !": [
        "Part_ordered_segments",
        "Degree",
        "Cardinal_numbers",
        "Part_ordered_segments",
        "Age",
        "Emotion_directed",
        "Inclusion"
    ],
    "Mar 31 2021 \u00b7 Article ( 20 mins )": [
        "Cardinal_numbers"
    ],
    "Subhrajyoti Sen I am an Android Developer at KeepTruckin.": [],
    "I am passionate about creating good mobile experiences and sharing my learnings with ... Author": [
        "Bringing",
        "Expertise",
        "Coming_to_believe",
        "Intentionally_create"
    ],
    "Alain Muller Alain is the Lead Android Engineer at AriadNEXT, France.": [
        "Execution",
        "People_by_vocation"
    ],
    "He has fallen in love with Android since its Eclair version.": [
        "Experiencer_focus",
        "Conquering"
    ],
    "Sandra Grauschopf Sandra Grauschopf is the Editing Team Lead for raywenderlich.com.": [
        "Execution",
        "First_rank"
    ],
    "She's an experienced writer, editor, and content manager as ... Editor": [
        "People_by_vocation",
        "Expertise"
    ],
    "Julia Zinchenko Graphic designer and illustrator based in Ukraine Illustrator": [],
    "Alex Sullivan Alex is an Android and iOS developer at ( Thoughtbot ) -LSB- https://thoughtbot.com/ -RSB- in Boston, MA.": [],
    "He's a big fan of reactive ... Fpe": [
        "Size"
    ],
    "Eric Soto Eric is Android Tutorial Team Lead and a Professional Software Engineer and certified Agile-Scrum Master focusing on Apple iOS ... Team Lead": [
        "Execution",
        "First_rank",
        "People_by_vocation",
        "People_by_vocation",
        "Expertise",
        "Food",
        "Verification",
        "Place_weight_on"
    ],
    "In this MockWebserver Android tutorial, you'll learn how to mock REST API responses and use Espresso UI tests to check how your app handles success or error responses.": [
        "Practice",
        "Stimulus_focus",
        "Response",
        "Success_or_failure",
        "Education_teaching",
        "Intentionally_act",
        "Inspecting",
        "Operational_testing"
    ],
    "Sign inAndroidLearn Advanced Android By DoingRoadmapLearn Advanced AndroidInstrumentation testing with MockWebServer and Dagger2Mohak PuriFollowJun 30, 2018 \u00b7 5 min readCredit: GoogleTesting on android is tough specially when it comes to instrumentation testing.": [
        "Cardinal_numbers",
        "Temporal_collocation",
        "Waking_up",
        "Operational_testing",
        "Sign_agreement",
        "Difficulty"
    ],
    "Handling UI changes along with tons of network calls becomes a nightmare with Espresso.Thanks to the guys at Square we have MockWebServer that allows you to mock web request and helps a ton with instrumentation test.": [
        "Network",
        "People",
        "Locale_by_use",
        "Measure_mass",
        "Operational_testing",
        "Undergo_change",
        "Contacting",
        "Execution",
        "Grant_permission",
        "Practice",
        "Measure_mass",
        "Accompaniment",
        "Becoming",
        "Assistance",
        "Possession"
    ],
    "Rather than making an actual network call MockWebServer allows you to mock the response of the network request.": [
        "Network",
        "Actually_occurring_entity",
        "Execution",
        "Grant_permission",
        "Execution",
        "Practice",
        "Response",
        "Causation"
    ],
    "So in a nutshell, when you run your test MockWebServer intercepts your network call providing you with the data you mock data.Why?So it comes down to this.": [
        "Temporal_collocation",
        "Operational_testing",
        "Network",
        "Ingestion",
        "Practice",
        "Execution",
        "Supply",
        "Execution",
        "Intercepting",
        "Execution"
    ],
    "Why on earth do we need this ?": [
        "Reason",
        "Part_inner_outer",
        "Required_event",
        "Intentionally_act"
    ],
    "Well when it comes to testing it will make your life damn easy.": [
        "Temporal_collocation",
        "Waking_up",
        "Operational_testing",
        "Judgment_communication",
        "Difficulty",
        "Causation"
    ],
    "Let us see how !": [
        "Grant_permission",
        "Grasp"
    ],
    "I will be using Dagger from here.": [
        "Locative_relation",
        "Using"
    ],
    "If you don't know what it is then you should definitely google some tutorials before proceeding further.": [
        "Activity_ongoing",
        "Increment",
        "Relational_quantity",
        "Being_obligated",
        "Intentionally_act",
        "Temporal_collocation",
        "Certainty"
    ],
    "Also the focus is on MockWebServer and I wont be explaining Dagger.Enough talking !": [
        "Place_weight_on"
    ],
    "Let's codeAdding MockWebServer as a dependencyLet us quickly go through some dagger stuff.": [
        "Relational_quantity",
        "Speed",
        "Becoming"
    ],
    "Let us start with our custom application class.": [
        "Custom",
        "Using",
        "Temporal_subregion",
        "Grant_permission"
    ],
    "Here we create our application component.": [
        "Locative_relation",
        "Using",
        "Ingredients",
        "Intentionally_create"
    ],
    "Don't forget to add this to the manifest file !": [
        "Intentionally_act",
        "Remembering_information",
        "Cause_change_of_position_on_a_scale"
    ],
    "MyTestingApp.javaHere is what the application component looks likeApplicationComponent.javaNow let's check the Application Module.": [
        "Ingredients",
        "Using",
        "Scrutiny",
        "Inspecting",
        "Using",
        "Grant_permission"
    ],
    "Look at the Retrofit component and its baseUrl.": [
        "Perception_active",
        "Ingredients"
    ],
    "You can ignore the OkHttp client as it has nothing to do with testing !": [
        "Operational_testing",
        "Intentionally_act",
        "Possession",
        "Capability"
    ],
    "ApplicationModule.javaSo we are done with the basic structure of the application.": [
        "Being_necessary",
        "Using",
        "Intentionally_act",
        "Buildings"
    ],
    "Now let us dive into the testing part !": [
        "Temporal_collocation",
        "Operational_testing",
        "Part_whole",
        "Grant_permission"
    ],
    "All the files from now must be a part of android test folder and not the main java folder !": [
        "Quantity",
        "Temporal_collocation",
        "Operational_testing",
        "Containers",
        "First_rank",
        "Self_motion",
        "Part_whole",
        "Being_obligated"
    ],
    "First, create a new application class that extends your previous class ( the one that is mentioned in your manifest file ).": [
        "Ordinal_numbers",
        "Using",
        "Clothing",
        "Time_vector",
        "Age",
        "Intentionally_create",
        "Expansion"
    ],
    "If you haven't noticed yet we are providing a different module to our application component this time.": [
        "Using",
        "Measure_duration",
        "Similarity",
        "Ingredients",
        "Supply",
        "Becoming_aware"
    ],
    "It is not the ApplicationModule but TestApplicationModule.Do not replace the manifest file with this class.": [
        "Replacing"
    ],
    "Just leave the manifest file alone we don't need it: ) UiTestApp.javaHere is what the TestApplicationModule class looks like.": [
        "Mental_property",
        "Self_motion",
        "Required_event",
        "Scrutiny",
        "Intentionally_act",
        "Departing"
    ],
    "Yes it extends ApplicationModule but it's getRetrofit ( ) looks a bit different.": [
        "Scrutiny",
        "Similarity",
        "Expansion",
        "Quantity"
    ],
    "Rather than using the API endpoint that your application is using we are using some http://localhost:8080/.": [
        "Using",
        "Relational_quantity",
        "Using"
    ],
    "This will make complete sense just a little more patience !": [
        "Process_completed_state",
        "Increment",
        "Sensation",
        "Causation"
    ],
    "Let us create our custom runner class that extends the AndroidJUnitRunner.MockRunner.javaLet me bring you focus to this lineWhen we use this MockRunner for testing our application, rather than using MyTestingApp for creating our application component the test will use UiTestApp.So how does that help ?": [
        "Custom",
        "Using",
        "Operational_testing",
        "Assistance",
        "Using",
        "Operational_testing",
        "Ingredients",
        "Using",
        "Intentionally_create",
        "Intentionally_act",
        "Place_weight_on",
        "Expansion",
        "Intentionally_create",
        "Grant_permission",
        "Causation"
    ],
    "Basically this is what happens - Since you are using UiTestApp for creating your application component and the application component is using TestApplicationModule for creating the dependencies your Retrofit baseUrl will be http://localhost:8080/ when you are testing your application.": [
        "Using",
        "Temporal_collocation",
        "Event",
        "Ingredients",
        "Operational_testing",
        "Intentionally_create",
        "Using"
    ],
    "To conclude - When you are running your tests you will be hitting http://localhost:8080/ for the API request instead of the real one !": [
        "Temporal_collocation",
        "Cardinal_numbers",
        "Execution",
        "Existence",
        "Impact",
        "Operational_testing",
        "Execution",
        "Coming_to_believe"
    ],
    "I hope it all makes sense !": [
        "Quantity",
        "Sensation",
        "Desiring",
        "Causation"
    ],
    "and yes for all of this to work make changes to your build.gradle fileNow that all the setup is done let us dive into MockWebServerCase Study - A basic application that sends an API request as soon as you open the application.": [
        "Being_necessary",
        "Using",
        "Undergo_change",
        "Scrutiny",
        "Execution",
        "Quantity",
        "Secrecy_status",
        "Working_on",
        "Causation",
        "Intentionally_act",
        "Grant_permission"
    ],
    "Initially it shows some progress bar that hides once the response is received.": [
        "Progress",
        "Eclipse",
        "Response",
        "Buildings",
        "Relational_quantity",
        "Frequency",
        "Receiving",
        "Evidence"
    ],
    "It also has a retry button that sends the request in case it fails for some reason.App Opens - > ProgressBar - > Result - > ProgressBar hidesNow lets see the test !": [
        "Clothing_parts",
        "Execution",
        "Instance",
        "Operational_testing",
        "Relational_quantity",
        "Causation",
        "Body_movement",
        "Grasp",
        "Causation",
        "Inclusion",
        "Success_or_failure"
    ],
    "Nothing much happening here before starting the test we create the server and start it at port 8080.": [
        "Relational_quantity",
        "Locative_relation",
        "Operational_testing",
        "Event",
        "Intentionally_create",
        "Process_start",
        "Activity_start"
    ],
    "Once the test is done we shutdown the server.": [
        "Frequency",
        "Operational_testing",
        "Intentionally_act"
    ],
    "One thing here to notice is the 3rd parameter to the ActivityTestRule.": [
        "Locative_relation",
        "Becoming_aware",
        "Cardinal_numbers",
        "Terms_of_agreement"
    ],
    "From the documentation - boolean: true if the Activity should be launched once per Test method.": [
        "Operational_testing",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Time_vector",
        "Shoot_projectiles"
    ],
    "It will be launched before the first Before method, and terminated after the last After method.So basically with false we will have to launch the activity by our self.": [
        "Execution",
        "Activity_stop",
        "Relative_time",
        "Weapon",
        "Artificiality",
        "Ordinal_numbers",
        "Being_obligated",
        "Intentionally_act",
        "Shoot_projectiles",
        "Activity_start"
    ],
    "The system is not going to do that for us.": [
        "System",
        "Intentionally_act",
        "Motion"
    ],
    "This is important if you have an API request as soon as you open your application.": [
        "Using",
        "Execution",
        "Secrecy_status",
        "Importance"
    ],
    "This allows us to start the server and attach dispatcher ( will see later ) before our activity starts or in other words before our activity makes an API request.": [
        "Attaching",
        "Simple_name",
        "Intentionally_act",
        "Increment",
        "Execution",
        "Process_start",
        "Perception_experience",
        "Activity_start",
        "Causation",
        "Grant_permission",
        "Time_vector"
    ],
    "Thanks to ISHAAN KAKKAR for helping me with this !": [
        "Assistance",
        "Judgment_direct_address"
    ],
    "Note: In case your activity does not have an API request as soon as it opens you can skip the launchActivity parameter.MainActivityTest.javaLets say that our API has multiple endpoints.": [
        "Instance",
        "Intentionally_act",
        "Quantity",
        "Intentionally_act",
        "Self_motion",
        "Becoming_aware",
        "Inclusion",
        "Capability",
        "Body_movement",
        "Execution"
    ],
    "With dispatcher we can tell what data is to be returned when our application hits those endpoints.": [
        "Temporal_collocation",
        "Using",
        "Telling",
        "Cause_harm",
        "Execution",
        "Capability"
    ],
    "Not only that we can easily generate error conditions for our application by setting appropriate value of response code.": [
        "Sole_instance",
        "Using",
        "Response",
        "State_of_entity",
        "Cause_to_start",
        "Capability"
    ],
    "Here is what a dispatcher may look like.Note: Our case study has just one endpoint.": [
        "Locative_relation",
        "Reasoning",
        "Scrutiny",
        "Cardinal_numbers",
        "Likelihood",
        "Possession",
        "Scrutiny"
    ],
    "This is just an example of how you can handle multiple endpoints.": [
        "Instance",
        "Quantity",
        "Capability",
        "Resolve_problem"
    ],
    "You can also use json files to set the body through GSONMockServerDispatcher.javaLet us see test our app in Happy Condition i.e everything goes fine and there are no errors.": [
        "Execution",
        "Operational_testing",
        "Quantity",
        "State_of_entity",
        "Existence",
        "Grasp",
        "Desirability",
        "Becoming",
        "Intentionally_create",
        "Using",
        "Capability"
    ],
    "In happy condition the progress bar is invisible, the errorUI is invisible, the retry button is invisible and the textview showing the mock response is visible.": [
        "Progress",
        "Buildings",
        "Clothing_parts",
        "Practice",
        "Response",
        "Emotion_directed",
        "Reasoning",
        "State_of_entity",
        "Obviousness"
    ],
    "Make sure to add the following line - Happy case testingThat is all !": [
        "Emotion_directed",
        "Reasoning",
        "Quantity",
        "Relative_time",
        "Verification"
    ],
    "Now you can tweak network calls easily in your instrumentation test: ) mohak1712 ( Mohak Puri ) mohak1712 has 34 repositories available.": [
        "Temporal_collocation",
        "Network",
        "Operational_testing",
        "Building_subparts",
        "Contacting",
        "Capability",
        "Manipulation"
    ],
    "Follow their code on GitHub.github.comIf you find anything wrong do let me know and if you have a better approach do share in the comment section below !": [
        "Relative_time",
        "Morality_evaluation",
        "Execution",
        "Intentionally_act",
        "Desirability",
        "Part_whole",
        "Awareness",
        "Grant_permission",
        "Locating"
    ],
    "MindOrksOur community publishes stories worth reading on Android ... Follow828 5 AndroidTesting828 claps828 claps5 Written byMohak PuriFollowProduct Engineer GO-JEK | GSoC 2018 @openMF | Mobile | Backend | mohak1712 everywhereFollowMindOrksFollowOur community publishes stories worth reading on Android DevelopmentFollowWritten byMohak PuriFollowProduct Engineer GO-JEK | GSoC 2018 @openMF | Mobile | Backend | mohak1712 everywhereMindOrksFollowOur community publishes stories worth reading on Android DevelopmentMore From MediumOpen Source Is Not Necessarily FreeDaniel Okwufulueze in The StartupBuild automation with GradleAmalfitanoYour Responsibilities on a Software TeamChris Fox in CodeXWhy programming is hardJos VisserComparing Data in SQL Server Using ReflectionMike Beaton in The StartupConnect Mendix With REST-DB for BackupMax Bareis in The StartupDeploy a Gatsby Site to Digital Ocean in 7 StepsChulooFixing Python module ( pip install ) installation problemsAlexandra WilliamsLearn more.Medium is an open platform where 170 million readers come to find insightful and dynamic thinking.": [
        "People_by_vocation",
        "Locale",
        "Locative_relation",
        "Mental_property",
        "Execution",
        "Source_of_getting",
        "Being_obligated",
        "Natural_features",
        "Installing",
        "Secrecy_status",
        "Waking_up",
        "Reading",
        "Using",
        "Reading",
        "Cardinal_numbers",
        "Becoming_aware",
        "Installing"
    ],
    "Here, expert and undiscovered voices alike dive into the heart of any topic and bring new ideas to the surface.": [
        "Locative_relation",
        "Expertise",
        "Similarity",
        "Topic",
        "Part_inner_outer",
        "Quantity",
        "Age",
        "Causation",
        "Part_orientational"
    ],
    "Learn moreMake Medium yours.Follow the writers, publications, and topics that matter to you, and you'll see them on your homepage and in your inbox.": [
        "Topic",
        "Position_on_a_scale",
        "Grasp"
    ],
    "ExploreShare your thinking.If you have a story to tell, knowledge to share, or a perspective to offer -- welcome home.": [
        "Buildings",
        "Awareness",
        "Telling",
        "Offering"
    ],
    "It's easy and free to post your thinking on any topic.": [
        "Expensiveness",
        "Topic",
        "Quantity",
        "Sending",
        "Difficulty"
    ],
    "Write on MediumAboutHelpLegalGet the Medium app": [
        "Position_on_a_scale"
    ],
    "Sign inAndroidLearn Advanced Android By DoingRoadmapLearn Advanced Android": [
        "Sign_agreement"
    ],
    "AndroidLearn Advanced Android By DoingRoadmapLearn Advanced Android": [],
    "Instrumentation testing with MockWebServer and Dagger2Mohak PuriFollowJun 30, 2018 \u00b7 5 min readCredit: GoogleTesting on android is tough specially when it comes to instrumentation testing.": [
        "Cardinal_numbers",
        "Temporal_collocation",
        "Waking_up",
        "Operational_testing",
        "Difficulty"
    ],
    "Instrumentation testing with MockWebServer and Dagger2Mohak PuriFollowJun 30, 2018 \u00b7 5 min read": [
        "Cardinal_numbers",
        "Operational_testing"
    ],
    "Mohak PuriFollowJun 30, 2018 \u00b7 5 min read": [
        "Cardinal_numbers"
    ],
    "mohak1712 ( Mohak Puri ) mohak1712 has 34 repositories available.": [
        "Building_subparts"
    ],
    "Follow their code on GitHub.github.com": [
        "Relative_time"
    ],
    "Follow their code on GitHub.": [
        "Relative_time"
    ],
    "MindOrksOur community publishes stories worth reading on Android ... Follow828 5": [
        "Execution",
        "Reading"
    ],
    "MindOrksOur community publishes stories worth reading on Android ... Follow": [
        "Execution",
        "Reading"
    ],
    "Our community publishes stories worth reading on Android ...": [
        "Execution",
        "Reading"
    ],
    "AndroidTesting828 claps828 claps5 Written byMohak PuriFollowProduct Engineer GO-JEK | GSoC 2018 @openMF | Mobile | Backend | mohak1712 everywhereFollowMindOrksFollowOur community publishes stories worth reading on Android DevelopmentFollowWritten byMohak PuriFollowProduct Engineer GO-JEK | GSoC 2018 @openMF | Mobile | Backend | mohak1712 everywhereMindOrksFollowOur community publishes stories worth reading on Android DevelopmentMore From MediumOpen Source Is Not Necessarily FreeDaniel Okwufulueze in The StartupBuild automation with GradleAmalfitanoYour Responsibilities on a Software TeamChris Fox in CodeXWhy programming is hardJos VisserComparing Data in SQL Server Using ReflectionMike Beaton in The StartupConnect Mendix With REST-DB for BackupMax Bareis in The StartupDeploy a Gatsby Site to Digital Ocean in 7 StepsChulooFixing Python module ( pip install ) installation problemsAlexandra Williams": [
        "People_by_vocation",
        "Locale",
        "Execution",
        "Source_of_getting",
        "Being_obligated",
        "Natural_features",
        "Installing",
        "Using",
        "Installing",
        "Reading"
    ],
    "Camera API: Cross device issues": [
        "Gizmo",
        "Emotion_directed",
        "Point_of_dispute"
    ],
    "The Android framework includes support for various cameras and camera features available on devices, allowing you to capture pictures and videos in your applications.": [
        "Diversity",
        "Gizmo",
        "Physical_artworks",
        "Taking_sides",
        "Conquering",
        "Inclusion",
        "Grant_permission"
    ],
    "This document discusses a quick, simple approach to image and video capture and outlines an advanced approach for creating custom camera experiences for your users.": [
        "Documents",
        "Similarity",
        "Stage_of_progress",
        "Intentionally_create",
        "Speed",
        "Perception_experience",
        "Summarizing",
        "Execution",
        "Topic"
    ],
    "Note: This page describes the Camera class, which has been deprecated.": [
        "Contacting",
        "Judgment_communication"
    ],
    "We recommend using the CameraX Jetpack library or, for specific use cases, the camera2, class.": [
        "Buildings",
        "Instance",
        "Using"
    ],
    "Both CameraX and Camera2 work on Android 5.0 ( API level 21 ) and higher.": [
        "Position_on_a_scale",
        "Quantity",
        "Rank",
        "Working_on"
    ],
    "Refer to the following related resources:": [
        "Relative_time",
        "Cognitive_connection"
    ],
    "Before enabling your application to use cameras on Android devices, you should consider a few questions about how your app intends to use this hardware feature.": [
        "Gizmo",
        "Being_obligated",
        "Quantity",
        "Using",
        "Categorization",
        "Questioning",
        "Using"
    ],
    "The Android framework supports capturing images and video through the android.hardware.camera2 API or camera Intent.": [
        "Sensation",
        "Conquering",
        "Evidence"
    ],
    "Here are the relevant classes:": [
        "Locative_relation"
    ],
    "Before starting development on your application with the Camera API, you should make sure your manifest has the appropriate declarations to allow use of camera hardware and other related features.": [
        "Increment",
        "Using",
        "Cognitive_connection",
        "Being_obligated",
        "Event",
        "Process_start",
        "Grant_permission",
        "Possession",
        "Verification"
    ],
    "Note: If you are using the camera by invoking an existing camera app, your application does not need to request this permission.": [
        "Grant_permission",
        "Existence",
        "Intentionally_act",
        "Required_event",
        "Using",
        "Execution",
        "Becoming_aware",
        "Using"
    ],
    "For a list of camera features, see the manifest Features Reference.": [
        "Mental_property",
        "Grasp"
    ],
    "Adding camera features to your manifest causes Google Play to prevent your application from being installed to devices that do not include a camera or do not support the camera features you specify.": [
        "Performers_and_roles",
        "Using",
        "Gizmo",
        "Intentionally_act",
        "Experiencer_focus",
        "Preventing",
        "Inclusion",
        "Taking_sides",
        "Installing",
        "Causation"
    ],
    "For more information about using feature-based filtering with Google Play, see Google Play and Feature-Based Filtering.": [
        "Performers_and_roles",
        "Using",
        "Grasp",
        "Information",
        "Increment"
    ],
    "If your application can use a camera or camera feature for proper operation, but does not require it, you should specify this in the manifest by including the android: required attribute, and setting it to false:": [
        "Using",
        "Using",
        "Proper_reference",
        "Being_necessary",
        "Being_obligated",
        "Artificiality",
        "Capability",
        "Intentionally_act",
        "Inclusion",
        "Using",
        "Have_as_requirement"
    ],
    "Location Permission - If your application tags images with GPS location information, you must request the ACCESS_FINE_LOCATION permission.": [
        "Locale",
        "Using",
        "Sensation",
        "Locale",
        "Information",
        "Being_obligated",
        "Grant_permission",
        "Execution",
        "Grant_permission"
    ],
    "Note that, if your app targets Android 5.0 ( API level 21 ) or higher, you also need to declare that your app uses the device's GPS:": [
        "Rank",
        "Gizmo",
        "Aiming",
        "Position_on_a_scale",
        "Using",
        "Required_event"
    ],
    "For more information about getting user location, see Location Strategies.": [
        "Locale",
        "Locale",
        "Execution",
        "Grasp",
        "Information",
        "Increment"
    ],
    "A quick way to enable taking pictures or videos in your application without a lot of extra code is to use an Intent to invoke an existing Android camera application.": [
        "Physical_artworks",
        "Using",
        "Existence",
        "Speed",
        "Quantity",
        "Removing",
        "Using"
    ],
    "The details are described in the training lessons Taking Photos Simply and Recording Videos Simply.": [
        "Education_teaching",
        "Physical_artworks",
        "Removing",
        "Communicate_categorization"
    ],
    "Some developers may require a camera user interface that is customized to the look of their application or provides special features.": [
        "Scrutiny",
        "Using",
        "Relational_quantity",
        "Likelihood",
        "Have_as_requirement",
        "Supply"
    ],
    "Writing your own picture-taking code can provide a more compelling experience for your users.": [
        "Increment",
        "Expertise",
        "Possession",
        "Text_creation",
        "Capability",
        "Supply"
    ],
    "Note: The following guide is for the older, deprecated Camera API.": [
        "Relative_time",
        "Judgment_communication",
        "Becoming_aware",
        "Age"
    ],
    "For new or advanced camera applications, the newer android.hardware.camera2 API is recommended.": [
        "Change_position_on_a_scale",
        "Age"
    ],
    "The general steps for creating a custom camera interface for your application are as follows:": [
        "Custom",
        "Using",
        "Execution",
        "Relative_time",
        "Intentionally_create",
        "Intentionally_act"
    ],
    "Camera hardware is a shared resource that must be carefully managed so your application does not collide with other applications that may also want to use it.": [
        "Taking_time",
        "Impact",
        "Being_obligated",
        "Increment",
        "Likelihood",
        "Using",
        "Intentionally_act",
        "Possession",
        "Operating_a_system",
        "Using"
    ],
    "The following sections discusses how to detect camera hardware, how to request access to a camera, how to capture pictures or video and how to release the camera when your application is done using it.": [
        "Part_whole",
        "Physical_artworks",
        "Temporal_collocation",
        "Using",
        "Relative_time",
        "Using",
        "Releasing",
        "Having_or_lacking_access",
        "Intentionally_act",
        "Execution",
        "Perception_experience",
        "Conquering",
        "Topic"
    ],
    "Caution: Remember to release the Camera object by calling the Camera.release ( ) when your application is done using it !": [
        "Temporal_collocation",
        "Using",
        "Using",
        "Execution",
        "Intentionally_act",
        "Releasing",
        "Memory"
    ],
    "If your application does not properly release the camera, all subsequent attempts to access the camera, including those by your own application, will fail and may cause your or other applications to be shut down.": [
        "Using",
        "Quantity",
        "Body_movement",
        "Ingestion",
        "Relative_time",
        "Increment",
        "Intentionally_act",
        "Possession",
        "Inclusion",
        "Releasing",
        "Likelihood",
        "Attempt",
        "Success_or_failure",
        "Causation"
    ],
    "If your application does not specifically require a camera using a manifest declaration, you should check to see if a camera is available at runtime.": [
        "Using",
        "Intentionally_act",
        "Using",
        "Being_obligated",
        "Have_as_requirement",
        "Grasp",
        "Inspecting"
    ],
    "To perform this check, use the PackageManager.hasSystemFeature ( ) method, as shown in the example code below:": [
        "Execution",
        "Instance",
        "Intentionally_act",
        "Using",
        "Evidence"
    ],
    "Android devices can have multiple cameras, for example a back-facing camera for photography and a front-facing camera for video calls.": [
        "Gizmo",
        "Instance",
        "Quantity",
        "Contacting",
        "Capability"
    ],
    "Android 2.3 ( API Level 9 ) and later allows you to check the number of cameras available on a device using the Camera.getNumberOfCameras ( ) method.": [
        "Gizmo",
        "Execution",
        "Rank",
        "Using",
        "Quantity",
        "Permitting",
        "Inspecting",
        "Time_vector"
    ],
    "If you have determined that the device on which your application is running has a camera, you must request to access it by getting an instance of Camera ( unless you are using an intent to access the camera ).": [
        "Gizmo",
        "Using",
        "Instance",
        "Being_obligated",
        "Execution",
        "Using",
        "Execution",
        "Inclusion",
        "Execution"
    ],
    "To access the primary camera, use the Camera.open ( ) method and be sure to catch any exceptions, as shown in the code below:": [
        "Execution",
        "Hunting_success_or_failure",
        "First_rank",
        "Quantity",
        "Likelihood",
        "Evidence",
        "Using"
    ],
    "Caution: Always check for exceptions when using Camera.open ( ).": [
        "Temporal_collocation",
        "Using",
        "Inspecting"
    ],
    "Failing to check for exceptions if the camera is in use or does not exist will cause your application to be shut down by the system.": [
        "Using",
        "Body_movement",
        "Ingestion",
        "Gizmo",
        "Inspecting",
        "Intentionally_act",
        "Existence",
        "Causation",
        "Success_or_failure"
    ],
    "On devices running Android 2.3 ( API Level 9 ) or higher, you can access specific cameras using Camera.open ( int ).": [
        "Gizmo",
        "Position_on_a_scale",
        "Using",
        "Rank",
        "Capability",
        "Operating_a_system"
    ],
    "The example code above will access the first, back-facing camera on a device with more than one camera.": [
        "Instance",
        "Ordinal_numbers",
        "Gizmo",
        "Increment",
        "Cardinal_numbers"
    ],
    "Once you obtain access to a camera, you can get further information about its capabilities using the Camera.getParameters ( ) method and checking the returned Camera.Parameters object for supported capabilities.": [
        "Information",
        "Execution",
        "Inspecting",
        "Time_vector",
        "Increment",
        "Taking_sides",
        "Capability",
        "Having_or_lacking_access",
        "Using",
        "Capability",
        "Getting",
        "Execution",
        "Execution"
    ],
    "When using API Level 9 or higher, use the Camera.getCameraInfo ( ) to determine if a camera is on the front or back of the device, and the orientation of the image.": [
        "Rank",
        "Part_orientational",
        "Observable_body_parts",
        "Gizmo",
        "Similarity",
        "Position_on_a_scale",
        "Using",
        "Temporal_collocation",
        "Using"
    ],
    "For users to effectively take pictures or video, they must be able to see what the device camera sees.": [
        "Physical_artworks",
        "Gizmo",
        "Taking_time",
        "Being_obligated",
        "Perception_experience",
        "Grasp",
        "Capability"
    ],
    "A camera preview class is a SurfaceView that can display the live image data coming from a camera, so users can frame and capture a picture or video.": [
        "Similarity",
        "Physical_artworks",
        "Capability",
        "Encoding",
        "Execution",
        "Conquering"
    ],
    "The following example code demonstrates how to create a basic camera preview class that can be included in a View layout.": [
        "Relative_time",
        "Instance",
        "Being_necessary",
        "Categorization",
        "Inclusion",
        "Likelihood",
        "Intentionally_create",
        "Evidence"
    ],
    "This class implements SurfaceHolder.Callback in order to capture the callback events for creating and destroying the view, which are needed for assigning the camera preview input.": [
        "Gizmo",
        "Intentionally_create",
        "Experiencer_obj",
        "Opinion",
        "Required_event",
        "Event",
        "Conquering"
    ],
    "If you want to set a specific size for your camera preview, set this in the surfaceChanged ( ) method as noted in the comments above.": [
        "Execution",
        "Intentionally_create",
        "Desiring"
    ],
    "When setting preview size, you must use values from getSupportedPreviewSizes ( ).": [
        "Temporal_collocation",
        "Being_obligated",
        "Using"
    ],
    "Do not set arbitrary values in the setPreviewSize ( ) method.": [
        "Intentionally_act",
        "Execution",
        "Intentionally_create"
    ],
    "Note: With the introduction of the Multi-Window feature in Android 7.0 ( API level 24 ) and higher, you can no longer assume the aspect ratio of the preview is the same as your activity even after calling setDisplayOrientation ( ).": [
        "Becoming_aware",
        "Rank",
        "Identicality",
        "Temporal_collocation",
        "Distinctiveness",
        "Intentionally_act",
        "Execution",
        "Capability",
        "Position_on_a_scale",
        "Adopt_selection"
    ],
    "Depending on the window size and aspect ratio, you may may have to fit a wide camera preview into a portrait-orientated layout, or vice versa, using a letterbox layout.": [
        "Connecting_architecture",
        "Execution",
        "Likelihood",
        "Dimension",
        "Distinctiveness",
        "Suitability",
        "Using",
        "Being_obligated"
    ],
    "A camera preview class, such as the example shown in the previous section, must be placed in the layout of an activity along with other user interface controls for taking a picture or video.": [
        "Instance",
        "Time_vector",
        "Intentionally_act",
        "Prohibiting",
        "Physical_artworks",
        "Part_whole",
        "Increment",
        "Taking",
        "Being_obligated",
        "Reasoning",
        "Accompaniment"
    ],
    "This section shows you how to build a basic layout and activity for the preview.": [
        "Part_whole",
        "Intentionally_act",
        "Being_necessary",
        "Building",
        "Evidence"
    ],
    "The following layout code provides a very basic view that can be used to display a camera preview.": [
        "Relative_time",
        "Being_necessary",
        "Opinion",
        "Degree",
        "Likelihood",
        "Supply",
        "Using"
    ],
    "In this example, the FrameLayout element is meant to be the container for the camera preview class.": [
        "Instance",
        "Ingredients",
        "Containers",
        "Evidence"
    ],
    "This layout type is used so that additional picture information or controls can be overlaid on the live camera preview images.": [
        "Physical_artworks",
        "Control",
        "Sensation",
        "Increment",
        "Likelihood",
        "Information",
        "Using"
    ],
    "On most devices, the default orientation of the camera preview is landscape.": [
        "Gizmo",
        "Relational_quantity"
    ],
    "This example layout specifies a horizontal ( landscape ) layout and the code below fixes the orientation of the application to landscape.": [
        "Instance",
        "Attaching",
        "Using"
    ],
    "For simplicity in rendering a camera preview, you should change your application's preview activity orientation to landscape by adding the following to your manifest.": [
        "Using",
        "Intentionally_act",
        "Undergo_change",
        "Being_obligated",
        "Causation",
        "Relative_time"
    ],
    "Note: A camera preview does not have to be in landscape mode.": [
        "Intentionally_act",
        "Being_obligated"
    ],
    "Starting in Android 2.2 ( API Level 8 ), you can use the setDisplayOrientation ( ) method to set the rotation of the preview image.": [
        "Process_start",
        "Rank",
        "Similarity",
        "Capability",
        "Using",
        "Intentionally_create",
        "Execution"
    ],
    "In order to change preview orientation as the user re-orients the phone, within the surfaceChanged ( ) method of your preview class, first stop the preview with Camera.stopPreview ( ) change the orientation and then start the preview again with Camera.startPreview ( ).": [
        "Contacting",
        "Ordinal_numbers",
        "Temporal_collocation",
        "Undergo_change",
        "Execution",
        "Preventing",
        "Activity_start"
    ],
    "In the activity for your camera view, add your preview class to the FrameLayout element shown in the example above.": [
        "Ingredients",
        "Instance",
        "Opinion",
        "Evidence",
        "Intentionally_act"
    ],
    "Your camera activity must also ensure that it releases the camera when it is paused or shut down.": [
        "Temporal_collocation",
        "Body_movement",
        "Ingestion",
        "Intentionally_act",
        "Being_obligated",
        "Releasing"
    ],
    "The following example shows how to modify a camera activity to attach the preview class shown in Creating a preview class.": [
        "Instance",
        "Relative_time",
        "Intentionally_create",
        "Evidence",
        "Attaching",
        "Intentionally_act",
        "Cause_change",
        "Evidence"
    ],
    "Note: The getCameraInstance ( ) method in the example above refers to the example method shown in Accessing cameras.": [
        "Execution",
        "Instance",
        "Evidence"
    ],
    "Once you have built a preview class and a view layout in which to display it, you are ready to start capturing images with your application.": [
        "Opinion",
        "Sensation",
        "Using",
        "Frequency",
        "Conquering",
        "Activity_ready_state",
        "Activity_start",
        "Building"
    ],
    "In your application code, you must set up listeners for your user interface controls to respond to a user action by taking a picture.": [
        "Using",
        "Physical_artworks",
        "Being_obligated",
        "Taking",
        "Intentionally_act",
        "Intentionally_create",
        "Response",
        "Prohibiting"
    ],
    "In order to retrieve a picture, use the Camera.takePicture ( ) method.": [
        "Physical_artworks",
        "Execution",
        "Using"
    ],
    "This method takes three parameters which receive data from the camera.": [
        "Execution",
        "Cardinal_numbers",
        "Receiving",
        "Terms_of_agreement",
        "Removing"
    ],
    "In order to receive data in a JPEG format, you must implement an Camera.PictureCallback interface to receive the image data and write it to a file.": [
        "Gizmo",
        "Similarity",
        "Being_obligated",
        "Receiving"
    ],
    "The following code shows a basic implementation of the Camera.PictureCallback interface to save an image received from the camera.": [
        "Similarity",
        "Relative_time",
        "Being_necessary",
        "Execute_plan",
        "Receiving",
        "Evidence"
    ],
    "Trigger capturing an image by calling the Camera.takePicture ( ) method.": [
        "Similarity",
        "Execution",
        "Conquering",
        "Execution"
    ],
    "The following example code shows how to call this method from a button View.OnClickListener.": [
        "Relative_time",
        "Instance",
        "Execution",
        "Closure",
        "Execution",
        "Evidence"
    ],
    "Note: The mPicture member in the following example refers to the example code above.": [
        "Relative_time",
        "Instance",
        "Membership"
    ],
    "For information about how to release the camera, see Releasing the camera.": [
        "Releasing",
        "Releasing",
        "Information",
        "Perception_experience"
    ],
    "Video capture using the Android framework requires careful management of the Camera object and coordination with the MediaRecorder class.": [
        "Using",
        "Have_as_requirement"
    ],
    "When recording video with Camera, you must manage the Camera.lock ( ) and Camera.unlock ( ) calls to allow MediaRecorder access to the camera hardware, in addition to the Camera.open ( ) and Camera.release ( ) calls.": [
        "Contacting",
        "Having_or_lacking_access",
        "Being_obligated",
        "Recording",
        "Temporal_collocation",
        "Communication_response",
        "Grant_permission",
        "Operating_a_system"
    ],
    "Note: Starting with Android 4.0 ( API level 14 ), the Camera.lock ( ) and Camera.unlock ( ) calls are managed for you automatically.": [
        "Rank",
        "Cardinal_numbers",
        "Contacting",
        "Process_start",
        "Operating_a_system"
    ],
    "Unlike taking pictures with a device camera, capturing video requires a very particular call order.": [
        "Physical_artworks",
        "Gizmo",
        "Idiosyncrasy",
        "Execution",
        "Conquering",
        "Degree",
        "Taking",
        "Have_as_requirement"
    ],
    "You must follow a specific order of execution to successfully prepare for and capture video with your application, as detailed below.": [
        "Using",
        "Conquering",
        "Activity_prepare",
        "Execution",
        "Relative_time",
        "Being_obligated"
    ],
    "Caution: You must call these MediaRecorder configuration methods in this order, otherwise your application will encounter errors and the recording will fail.": [
        "Using",
        "Being_obligated",
        "Execution",
        "Becoming_aware",
        "Execution",
        "Success_or_failure"
    ],
    "Note: It is possible to use MediaRecorder without creating a camera preview first and skip the first few steps of this process.": [
        "Self_motion",
        "Execution",
        "Quantity",
        "Intentionally_create",
        "Using",
        "Ordinal_numbers",
        "Intentionally_act",
        "Likelihood"
    ],
    "However, since users typically prefer to see a preview before starting a recording, that process is not discussed here.": [
        "Locative_relation",
        "Partiality",
        "Perception_experience",
        "Process_start",
        "Topic",
        "Execution",
        "Concessive"
    ],
    "Tip: If your application is typically used for recording video, set setRecordingHint ( boolean ) to true prior to starting your preview.": [
        "Part_orientational",
        "Recording",
        "Process_start",
        "Time_vector",
        "Using",
        "Using",
        "Intentionally_create"
    ],
    "This setting can help reduce the time it takes to start recording.": [
        "Recording",
        "Measure_duration",
        "Capability",
        "Activity_start",
        "Taking_time",
        "Cause_change_of_position_on_a_scale",
        "Assistance"
    ],
    "When using the MediaRecorder class to record video, you must perform configuration steps in a specific order and then call the MediaRecorder.prepare ( ) method to check and implement the configuration.": [
        "Recording",
        "Inspecting",
        "Gizmo",
        "Intentionally_act",
        "Being_obligated",
        "Intentionally_act",
        "Using",
        "Execution",
        "Temporal_collocation",
        "Execution",
        "Temporal_collocation"
    ],
    "The following example code demonstrates how to properly configure and prepare the MediaRecorder class for video recording.": [
        "Relative_time",
        "Instance",
        "Activity_prepare",
        "Evidence"
    ],
    "Prior to Android 2.2 ( API Level 8 ), you must set the output format and encoding formats parameters directly, instead of using CamcorderProfile.": [
        "Time_vector",
        "Rank",
        "Terms_of_agreement",
        "Being_obligated",
        "Using",
        "Intentionally_create"
    ],
    "This approach is demonstrated in the following code:": [
        "Execution",
        "Relative_time",
        "Reasoning"
    ],
    "The following video recording parameters for MediaRecorder are given default settings, however, you may want to adjust these settings for your application:": [
        "Concessive",
        "Using",
        "Relative_time",
        "Likelihood",
        "Terms_of_agreement",
        "Adjusting",
        "Possession",
        "Giving"
    ],
    "When starting and stopping video recording using the MediaRecorder class, you must follow a specific order, as listed below.": [
        "Temporal_collocation",
        "Process_start",
        "Relative_time",
        "Being_obligated",
        "Using",
        "Activity_stop"
    ],
    "The following example code demonstrates how to wire up a button to properly start and stop video recording using the camera and the MediaRecorder class.": [
        "Relative_time",
        "Instance",
        "Locative_relation",
        "Clothing_parts",
        "Process_start",
        "Preventing",
        "Using",
        "Evidence"
    ],
    "Note: When completing a video recording, do not release the camera or else your preview will be stopped.": [
        "Temporal_collocation",
        "Activity_stop",
        "Activity_finish",
        "Becoming_aware",
        "Intentionally_act",
        "Releasing"
    ],
    "Note: In the above example, the prepareVideoRecorder ( ) method refers to the example code shown in Configuring MediaRecorder.": [
        "Becoming_aware",
        "Execution",
        "Instance",
        "Evidence"
    ],
    "This method takes care of locking the camera, configuring and preparing the MediaRecorder instance.": [
        "Execution",
        "Hair_configuration",
        "Instance",
        "Activity_prepare",
        "Removing"
    ],
    "Cameras are a resource that is shared by applications on a device.": [
        "Gizmo"
    ],
    "Your application can make use of the camera after getting an instance of Camera, and you must be particularly careful to release the camera object when your application stops using it, and as soon as your application is paused ( Activity.onPause ( ) ).": [
        "Using",
        "Instance",
        "Temporal_collocation",
        "Using",
        "Capability",
        "Releasing",
        "Causation",
        "Activity_stop",
        "Execution",
        "Being_obligated"
    ],
    "To release an instance of the Camera object, use the Camera.release ( ) method, as shown in the example code below.": [
        "Instance",
        "Execution",
        "Instance",
        "Using",
        "Evidence",
        "Releasing"
    ],
    "Caution: If your application does not properly release the camera, all subsequent attempts to access the camera, including those by your own application, will fail and may cause your or other applications to be shut down.": [
        "Using",
        "Quantity",
        "Body_movement",
        "Ingestion",
        "Relative_time",
        "Increment",
        "Intentionally_act",
        "Possession",
        "Inclusion",
        "Releasing",
        "Causation",
        "Likelihood",
        "Attempt",
        "Success_or_failure"
    ],
    "Media files created by users such as pictures and videos should be saved to a device's external storage directory ( SD Card ) to conserve system space and to allow users to access these files without their device.": [
        "Physical_artworks",
        "Gizmo",
        "Gizmo",
        "Submitting_documents",
        "Storing",
        "Grant_permission",
        "Intentionally_create",
        "Being_obligated"
    ],
    "There are many possible directory locations to save media files on a device, however there are only two standard locations you should consider as a developer:": [
        "Gizmo",
        "Sole_instance",
        "Locale",
        "Being_obligated",
        "Cardinal_numbers",
        "Quantity",
        "Categorization",
        "Likelihood",
        "Existence",
        "Concessive",
        "Existence"
    ],
    "The following example code demonstrates how to create a File or Uri location for a media file that can be used when invoking a device's camera with an Intent or as part of a Building a Camera App.": [
        "Relative_time",
        "Instance",
        "Locale",
        "Gizmo",
        "Building",
        "Part_whole",
        "Temporal_collocation",
        "Using",
        "Likelihood",
        "Intentionally_create",
        "Evidence"
    ],
    "Note: Environment.getExternalStoragePublicDirectory ( ) is available in Android 2.2 ( API Level 8 ) or higher.": [
        "Position_on_a_scale",
        "Rank"
    ],
    "If you are targeting devices with earlier versions of Android, use Environment.getExternalStorageDirectory ( ) instead.": [
        "Gizmo",
        "Relative_time"
    ],
    "For more information, see Saving Shared Files.": [
        "Information",
        "Self_motion",
        "Increment",
        "Perception_experience"
    ],
    "To make the URI support work profiles, first convert the file URI to a content URI.": [
        "Taking_sides",
        "Locale_by_use",
        "Self_motion",
        "Cause_change",
        "Causation",
        "Ordinal_numbers"
    ],
    "Then, add the content URI to EXTRA_OUTPUT of an Intent.": [
        "Temporal_collocation",
        "Cause_change_of_position_on_a_scale"
    ],
    "For more information about saving files on an Android device, see Data Storage.": [
        "Self_motion",
        "Gizmo",
        "Storing",
        "Information",
        "Increment",
        "Grasp"
    ],
    "Android supports a wide array of camera features you can control with your camera application, such as picture format, flash mode, focus settings, and many more.": [
        "Diversity",
        "Physical_artworks",
        "Location_of_light",
        "Place_weight_on",
        "Dimension",
        "Using",
        "Increment",
        "Quantity",
        "Capability",
        "Control",
        "Evidence"
    ],
    "This section lists the common camera features, and briefly discusses how to use them.": [
        "Part_whole",
        "Topic",
        "Using"
    ],
    "Most camera features can be accessed and set using the through Camera.Parameters object.": [
        "Relational_quantity",
        "Likelihood",
        "Using",
        "Intentionally_create"
    ],
    "However, there are several important features that require more than simple settings in Camera.Parameters.": [
        "Concessive",
        "Importance",
        "Quantity",
        "Increment",
        "Have_as_requirement",
        "Existence"
    ],
    "These features are covered in the following sections:": [
        "Part_whole",
        "Relative_time",
        "Topic"
    ],
    "For general information about how to use features that are controlled through Camera.Parameters, review the Using camera features section.": [
        "Execution",
        "Part_whole",
        "Using",
        "Control",
        "Using",
        "Information"
    ],
    "For more detailed information about how to use features controlled through the camera parameters object, follow the links in the feature list below to the API reference documentation.": [
        "Relative_time",
        "Make_cognitive_connection",
        "Increment",
        "Terms_of_agreement",
        "Control",
        "Using",
        "Information"
    ],
    "Common camera features sorted by the Android API Level in which they were introduced.": [
        "Rank",
        "Differentiation"
    ],
    "Note: These features are not supported on all devices due to hardware differences and software implementation.": [
        "Becoming_aware",
        "Gizmo",
        "Similarity",
        "Execute_plan",
        "Quantity",
        "Taking_sides"
    ],
    "For information on checking the availability of features on the device where your application is running, see Checking feature availability.": [
        "Gizmo",
        "Using",
        "Locative_relation",
        "Inspecting",
        "Execution",
        "Perception_experience",
        "Inspecting",
        "Information"
    ],
    "The first thing to understand when setting out to use camera features on Android devices is that not all camera features are supported on all devices.": [
        "Ordinal_numbers",
        "Temporal_collocation",
        "Gizmo",
        "Quantity",
        "Taking_sides",
        "Categorization",
        "Using",
        "Departing"
    ],
    "In addition, devices that support a particular feature may support them to different levels or with different options.": [
        "Gizmo",
        "Idiosyncrasy",
        "Rank",
        "Possibilities",
        "Similarity",
        "Likelihood",
        "Taking_sides",
        "Communication_response"
    ],
    "Therefore, part of your decision process as you develop a camera application is to decide what camera features you want to support and to what level.": [
        "Rank",
        "Deciding",
        "Part_whole",
        "Taking_sides",
        "Desiring",
        "Experiencer_focus",
        "Using",
        "Deciding",
        "Cause_to_make_progress",
        "Execution"
    ],
    "After making that decision, you should plan on including code in your camera application that checks to see if device hardware supports those features and fails gracefully if a feature is not available.": [
        "Deciding",
        "Gizmo",
        "Causation",
        "Being_obligated",
        "Supporting",
        "Success_or_failure",
        "Inclusion",
        "Perception_experience",
        "Using"
    ],
    "You can check the availability of camera features by getting an instance of a camera's parameters object, and checking the relevant methods.": [
        "Instance",
        "Terms_of_agreement",
        "Execution",
        "Capability",
        "Inspecting",
        "Inspecting",
        "Execution"
    ],
    "The following code sample shows you how to obtain a Camera.Parameters object and check if the camera supports the autofocus feature:": [
        "Relative_time",
        "Supporting",
        "Getting",
        "Evidence"
    ],
    "You can use the technique shown above for most camera features.": [
        "Execution",
        "Relational_quantity",
        "Capability",
        "Evidence",
        "Using"
    ],
    "The Camera.Parameters object provides a getSupported ... ( ), is ... Supported ( ) or getMax ... ( ) method to determine if ( and to what extent ) a feature is supported.": [
        "Taking_sides",
        "Supply",
        "Coming_to_believe",
        "Execution"
    ],
    "If your application requires certain camera features in order to function properly, you can require them through additions to your application manifest.": [
        "Using",
        "Likelihood",
        "Communication_response",
        "Have_as_requirement",
        "Capability",
        "Needing"
    ],
    "When you declare the use of specific camera features, such as flash and auto-focus, Google Play restricts your application from being installed on devices which do not support these features.": [
        "Temporal_collocation",
        "Location_of_light",
        "Performers_and_roles",
        "Using",
        "Gizmo",
        "Intentionally_act",
        "Taking_sides",
        "Installing",
        "Using",
        "Grant_permission"
    ],
    "For a list of camera features that can be declared in your app manifest, see the manifest Features Reference.": [
        "Mental_property",
        "Likelihood",
        "Grasp"
    ],
    "Most camera features are activated and controlled using a Camera.Parameters object.": [
        "Relational_quantity",
        "Change_operational_state",
        "Using",
        "Control"
    ],
    "You obtain this object by first getting an instance of the Camera object, calling the getParameters ( ) method, changing the returned parameter object and then setting it back into the camera object, as demonstrated in the following example code:": [
        "Instance",
        "Execution",
        "Terms_of_agreement",
        "Observable_body_parts",
        "Relative_time",
        "Instance",
        "Getting",
        "Execution",
        "Reasoning",
        "Undergo_change",
        "Temporal_collocation",
        "Ordinal_numbers",
        "Execution",
        "Execution"
    ],
    "This technique works for nearly all camera features, and most parameters can be changed at any time after you have obtained an instance of the Camera object.": [
        "Execution",
        "Relational_quantity",
        "Quantity",
        "Measure_duration",
        "Instance",
        "Terms_of_agreement",
        "Relational_quantity",
        "Quantity",
        "Being_employed",
        "Likelihood",
        "Getting",
        "Undergo_change"
    ],
    "Changes to parameters are typically visible to the user immediately in the application's camera preview.": [
        "Terms_of_agreement",
        "Using",
        "Undergo_change",
        "Obviousness"
    ],
    "On the software side, parameter changes may take several frames to actually take effect as the camera hardware processes the new instructions and then sends updated image data.": [
        "Terms_of_agreement",
        "Objective_influence",
        "Education_teaching",
        "Similarity",
        "Taking_sides",
        "Undergo_change",
        "Quantity",
        "Age",
        "Likelihood",
        "Processing_materials",
        "Causation",
        "Temporal_collocation",
        "Have_as_requirement"
    ],
    "Important: Some camera features can not be changed at will.": [
        "Relational_quantity",
        "Desiring",
        "Likelihood",
        "Undergo_change"
    ],
    "In particular, changing the size or orientation of the camera preview requires that you first stop the preview, change the preview size, and then restart the preview.": [
        "Ordinal_numbers",
        "Undergo_change",
        "Temporal_collocation",
        "Preventing",
        "Undergo_change",
        "Have_as_requirement",
        "Activity_resume"
    ],
    "Starting with Android 4.0 ( API Level 14 ) preview orientation can be changed without restarting the preview.": [
        "Activity_resume",
        "Rank",
        "Cardinal_numbers",
        "Undergo_change",
        "Likelihood",
        "Process_start"
    ],
    "Other camera features require more code in order to implement, including:": [
        "Gizmo",
        "Increment",
        "Increment",
        "Have_as_requirement",
        "Inclusion"
    ],
    "A quick outline of how to implement these features is provided in the following sections.": [
        "Gizmo",
        "Part_whole",
        "Speed",
        "Relative_time",
        "Supply"
    ],
    "In some photographic scenarios, automatic focusing and light metering may not produce the desired results.": [
        "Relational_quantity",
        "Place_weight_on",
        "Location_of_light",
        "Desiring",
        "Causation",
        "Likelihood",
        "Manufacturing"
    ],
    "Starting with Android 4.0 ( API Level 14 ), your camera application can provide additional controls to allow your app or users to specify areas in an image to use for determining focus or light level settings and pass these values to the camera hardware for use in capturing images or video.": [
        "Locale",
        "Similarity",
        "Place_weight_on",
        "Rank",
        "Sensation",
        "Rank",
        "Increment",
        "Dimension",
        "Cardinal_numbers",
        "Prohibiting",
        "Process_end",
        "Conquering",
        "Grant_permission",
        "Coming_to_believe",
        "Supply",
        "Using",
        "Using",
        "Capability",
        "Process_start"
    ],
    "Areas for metering and focus work very similarly to other camera features, in that you control them through methods in the Camera.Parameters object.": [
        "Locale",
        "Place_weight_on",
        "Execution",
        "Degree",
        "Increment",
        "Control",
        "Working_on"
    ],
    "The following code demonstrates setting two light metering areas for an instance of Camera:": [
        "Locale",
        "Relative_time",
        "Dimension",
        "Instance",
        "Cardinal_numbers",
        "Evidence"
    ],
    "The Camera.Area object contains two data parameters: A Rect object for specifying an area within the camera's field of view and a weight value, which tells the camera what level of importance this area should be given in light metering or focus calculations.": [
        "Opinion",
        "Weapon",
        "Locale",
        "Place_weight_on",
        "Cardinal_numbers",
        "Terms_of_agreement",
        "Dimension",
        "Rank",
        "Importance",
        "Being_obligated",
        "Giving",
        "Fields",
        "Inclusion"
    ],
    "The Rect field in a Camera.Area object describes a rectangular shape mapped on a 2000 x 2000 unit grid.": [
        "Shapes",
        "Fields"
    ],
    "The coordinates -1000, -1000 represent the top, left corner of the camera image, and coordinates 1000, 1000 represent the bottom, right corner of the camera image, as shown in the illustration below.": [
        "Occupy_rank",
        "Cardinal_numbers",
        "Part_orientational",
        "Direction",
        "Similarity",
        "Morality_evaluation",
        "Communicate_categorization",
        "Evidence"
    ],
    "The red lines illustrate the coordinate system for specifying a Camera.Area within a camera preview.": [
        "Gizmo",
        "Color",
        "Evidence"
    ],
    "The blue box shows the location and shape of an camera area with the Rect values 333,333,667,667.": [
        "Locale",
        "Shapes",
        "Locale",
        "Emotion_directed",
        "Containers",
        "Assessing",
        "Evidence"
    ],
    "The bounds of this coordinate system always correspond to the outer edge of the image visible in the camera preview and do not shrink or expand with the zoom level.": [
        "System",
        "Similarity",
        "Intentionally_act",
        "Frequency",
        "Self_motion",
        "Part_inner_outer",
        "Rank",
        "Expansion",
        "Obviousness",
        "Expansion"
    ],
    "Similarly, rotation of the image preview using Camera.setDisplayOrientation ( ) does not remap the coordinate system.": [
        "Similarity",
        "Intentionally_act",
        "System",
        "Using"
    ],
    "For pictures that include people, faces are usually the most important part of the picture, and should be used for determining both focus and white balance when capturing an image.": [
        "Physical_artworks",
        "People",
        "Part_orientational",
        "Physical_artworks",
        "Quantity",
        "Place_weight_on",
        "Similarity",
        "Color",
        "Inclusion",
        "Importance",
        "Conquering",
        "Part_whole",
        "Temporal_collocation",
        "Coming_to_believe",
        "Being_obligated",
        "Using"
    ],
    "The Android 4.0 ( API Level 14 ) framework provides APIs for identifying faces and calculating picture settings using face recognition technology.": [
        "Supply",
        "Observable_body_parts",
        "Physical_artworks",
        "Artifact",
        "Rank",
        "Categorization",
        "Part_orientational",
        "Cardinal_numbers",
        "Using"
    ],
    "Note: While the face detection feature is running, setWhiteBalance ( String ), setFocusAreas ( List <Camera.Area> ) and setMeteringAreas ( List <Camera.Area> ) have no effect.": [
        "Objective_influence",
        "Part_orientational",
        "Quantity",
        "Execution"
    ],
    "Using the face detection feature in your camera application requires a few general steps:": [
        "Part_orientational",
        "Intentionally_act",
        "Using",
        "Quantity",
        "Execution",
        "Using",
        "Have_as_requirement"
    ],
    "The face detection feature is not supported on all devices.": [
        "Taking_sides",
        "Gizmo",
        "Part_orientational",
        "Quantity"
    ],
    "You can check that this feature is supported by calling getMaxNumDetectedFaces ( ).": [
        "Execution",
        "Inspecting",
        "Capability",
        "Taking_sides"
    ],
    "An example of this check is shown in the startFaceDetection ( ) sample method below.": [
        "Instance",
        "Execution",
        "Evidence"
    ],
    "In order to be notified and respond to the detection of a face, your camera application must set a listener for face detection events.": [
        "Observable_body_parts",
        "Using",
        "Event",
        "Being_obligated",
        "Intentionally_create",
        "Response",
        "Telling"
    ],
    "In order to do this, you must create a listener class that implements the Camera.FaceDetectionListener interface as shown in the example code below.": [
        "Gizmo",
        "Instance",
        "Intentionally_act",
        "Being_obligated",
        "Intentionally_create",
        "Evidence"
    ],
    "After creating this class, you then set it into your application's Camera object, as shown in the example code below:": [
        "Instance",
        "Temporal_collocation",
        "Using",
        "Intentionally_create",
        "Intentionally_create",
        "Evidence"
    ],
    "Your application must start the face detection function each time you start ( or restart ) the camera preview.": [
        "Using",
        "Part_orientational",
        "Process_start",
        "Being_obligated",
        "Measure_duration"
    ],
    "Create a method for starting face detection so you can call it as needed, as shown in the example code below.": [
        "Part_orientational",
        "Have_as_requirement",
        "Instance",
        "Execution",
        "Process_start",
        "Capability",
        "Evidence",
        "Execution",
        "Cause_to_start"
    ],
    "You must start face detection each time you start ( or restart ) the camera preview.": [
        "Part_orientational",
        "Measure_duration",
        "Being_obligated",
        "Activity_start"
    ],
    "If you use the preview class shown in Creating a preview class, add your startFaceDetection ( ) method to both the surfaceCreated ( ) and surfaceChanged ( ) methods in your preview class, as shown in the sample code below.": [
        "Execution",
        "Execution",
        "Intentionally_create",
        "Using",
        "Evidence"
    ],
    "Note: Remember to call this method after calling startPreview ( ).": [
        "Becoming_aware",
        "Execution",
        "Execution",
        "Execution",
        "Memory"
    ],
    "Do not attempt to start face detection in the onCreate ( ) method of your camera app's main activity, as the preview is not available by this point in your application's the execution.": [
        "Intentionally_act",
        "Part_orientational",
        "Execution",
        "Using",
        "Execution",
        "First_rank",
        "Temporal_subregion",
        "Intentionally_act",
        "Locale",
        "Attempt"
    ],
    "Time lapse video allows users to create video clips that combine pictures taken a few seconds or minutes apart.": [
        "Measure_duration",
        "Physical_artworks",
        "Measure_duration",
        "Event",
        "Quantity",
        "Cause_to_amalgamate",
        "Grant_permission",
        "Intentionally_create"
    ],
    "This feature uses MediaRecorder to record the images for a time lapse sequence.": [
        "Sensation",
        "Measure_duration",
        "Sequence",
        "Recording",
        "Using"
    ],
    "To record a time lapse video with MediaRecorder, you must configure the recorder object as if you are recording a normal video, setting the captured frames per second to a low number and using one of the time lapse quality settings, as shown in the code example below.": [
        "Ordinal_numbers",
        "Instance",
        "Mental_property",
        "Conquering",
        "Quantity",
        "Position_on_a_scale",
        "Being_obligated",
        "Measure_duration",
        "Evidence",
        "Recording",
        "Recording",
        "Cardinal_numbers",
        "Using"
    ],
    "These settings must be done as part of a larger configuration procedure for MediaRecorder.": [
        "Dimension",
        "Execution",
        "Intentionally_act",
        "Being_obligated",
        "Part_whole"
    ],
    "For a full configuration code example, see Configuring MediaRecorder.": [
        "Fullness",
        "Instance",
        "Perception_experience"
    ],
    "Once the configuration is complete, you start the video recording as if you were recording a normal video clip.": [
        "Mental_property",
        "Frequency",
        "Process_completed_state",
        "Recording",
        "Activity_start"
    ],
    "For more information about configuring and running MediaRecorder, see Capturing videos.": [
        "Execution",
        "Conquering",
        "Perception_experience",
        "Information",
        "Increment"
    ],
    "The Camera2Video and HdrViewfinder samples further demonstrate the use of the APIs covered on this page.": [
        "Contacting",
        "Topic",
        "Reasoning",
        "Increment"
    ],
    "Apps running Android 10 ( API level 29 ) or higher must have the CAMERA permission in order to access the values of the following fields that the getCameraCharacteristics ( ) method returns:": [
        "Cardinal_numbers",
        "Position_on_a_scale",
        "Fields",
        "Rank",
        "Grant_permission",
        "Relative_time",
        "Execution",
        "Execution",
        "Execution",
        "Being_obligated"
    ],
    "To download sample apps, see the Camera2Basic sample and Official CameraX sample app.": [
        "Execution",
        "Grasp"
    ],
    "Data and file storage overview": [
        "Storing"
    ],
    "Camera Requirement - Is the use of a camera so important to your application that you do not want your application installed on a device that does not have a camera ?": [
        "Being_necessary",
        "Using",
        "Gizmo",
        "Intentionally_act",
        "Intentionally_act",
        "Importance",
        "Installing",
        "Desiring"
    ],
    "If so, you should declare the camera requirement in your manifest.": [
        "Being_obligated",
        "Being_necessary"
    ],
    "Quick Picture or Customized Camera - How will your application use the camera ?": [
        "Physical_artworks",
        "Using",
        "Using"
    ],
    "Are you just interested in snapping a quick picture or video clip, or will your application provide a new way to use cameras ?": [
        "Cause_to_fragment",
        "Physical_artworks",
        "Using",
        "Speed",
        "Age",
        "Using",
        "Supply",
        "Execution",
        "Desiring"
    ],
    "For getting a quick snap or clip, consider Using Existing Camera Apps.": [
        "Cause_to_fragment",
        "Speed",
        "Existence",
        "Using",
        "Execution",
        "Categorization"
    ],
    "For developing a customized camera feature, check out the Building a Camera App section.": [
        "Building",
        "Part_whole",
        "Cause_to_make_progress"
    ],
    "Foreground Services Requirement - When does your app interact with the camera ?": [
        "Public_services",
        "Being_necessary",
        "Temporal_collocation",
        "Intentionally_act"
    ],
    "On Android 9 ( API level 28 ) and later, apps running in the background can not access the camera.": [
        "Rank",
        "Time_vector",
        "Execution",
        "Capability"
    ],
    "Therefore, you should use the camera either when your app is in the foreground or as part of a foreground service.": [
        "Temporal_collocation",
        "Public_services",
        "Being_obligated",
        "Using",
        "Part_whole"
    ],
    "Storage - Are the images or videos your application generates intended to be only visible to your application or shared so that other applications such as Gallery or other media and social apps can use them ?": [
        "Sensation",
        "Sole_instance",
        "Locale_by_use",
        "Social_event",
        "Storing",
        "Increment",
        "Obviousness",
        "Creating",
        "Capability",
        "Using",
        "Using"
    ],
    "Do you want the pictures and videos to be available even if your application is uninstalled ?": [
        "Physical_artworks",
        "Using",
        "Intentionally_act",
        "Desiring"
    ],
    "Check out the Saving Media Files section to see how to implement these options.": [
        "Self_motion",
        "Gizmo",
        "Possibilities",
        "Part_whole",
        "Grasp"
    ],
    "Camera Permission - Your application must request permission to use a device camera.": [
        "Grant_permission",
        "Gizmo",
        "Using",
        "Grant_permission",
        "Using",
        "Execution",
        "Being_obligated"
    ],
    "Camera Features - Your application must also declare use of camera features, for example: For a list of camera features, see the manifest Features Reference.": [
        "Using",
        "Instance",
        "Mental_property",
        "Being_obligated",
        "Grasp",
        "Experiencer_focus"
    ],
    "Storage Permission - Your application can save images or videos to the device's external storage ( SD Card ) if it targets Android 10 ( API level 29 ) or lower and specifies the following in the manifest.": [
        "Grant_permission",
        "Using",
        "Sensation",
        "Gizmo",
        "Storing",
        "Cardinal_numbers",
        "Relative_time",
        "Storing",
        "Rank",
        "Capability"
    ],
    "Audio Recording Permission - For recording audio with video capture, your application must request the audio capture permission.": [
        "Using",
        "Grant_permission",
        "Grant_permission",
        "Execution",
        "Being_obligated",
        "Recording"
    ],
    "Note that, if your app targets Android 5.0 ( API level 21 ) or higher, you also need to declare that your app uses the device's GPS: For more information about getting user location, see Location Strategies.": [
        "Rank",
        "Gizmo",
        "Locale",
        "Locale",
        "Aiming",
        "Required_event",
        "Grasp",
        "Position_on_a_scale",
        "Information",
        "Increment",
        "Using",
        "Execution"
    ],
    "Detect and Access Camera - Create code to check for the existence of cameras and request access.": [
        "Having_or_lacking_access",
        "Execution",
        "Having_or_lacking_access",
        "Existence",
        "Inspecting"
    ],
    "Create a Preview Class - Create a camera preview class that extends SurfaceView and implements the SurfaceHolder interface.": [
        "Gizmo",
        "Expansion",
        "Cause_to_start"
    ],
    "This class previews the live images from the camera.": [
        "Sensation"
    ],
    "Build a Preview Layout - Once you have the camera preview class, create a view layout that incorporates the preview and the user interface controls you want.": [
        "Opinion",
        "Time_vector",
        "Building",
        "Intentionally_create",
        "Desiring",
        "Inclusion",
        "Control"
    ],
    "Setup Listeners for Capture - Connect listeners for your interface controls to start image or video capture in response to user actions, such as pressing a button.": [
        "Similarity",
        "Clothing_parts",
        "Attempt_suasion",
        "Intentionally_act",
        "Response",
        "Activity_start",
        "Prohibiting"
    ],
    "Capture and Save Files - Setup the code for capturing pictures or videos and saving the output.": [
        "Self_motion",
        "Physical_artworks",
        "Conquering"
    ],
    "Release the Camera - After using the camera, your application must properly release it for use by other applications.": [
        "Using",
        "Increment",
        "Releasing",
        "Using",
        "Being_obligated",
        "Releasing"
    ],
    "Open Camera - Use the Camera.open ( ) to get an instance of the camera object.": [
        "Instance",
        "Execution",
        "Using"
    ],
    "Connect Preview - Prepare a live camera image preview by connecting a SurfaceView to the camera using Camera.setPreviewDisplay ( ).": [
        "Similarity",
        "Attaching",
        "Using",
        "Activity_prepare"
    ],
    "Start Preview - Call Camera.startPreview ( ) to begin displaying the live camera images.": [
        "Sensation",
        "Temporal_subregion",
        "Process_start",
        "Execution"
    ],
    "Start Recording Video - The following steps must be completed in order to successfully record video: Unlock the Camera - Unlock the camera for use by MediaRecorder by calling Camera.unlock ( ).": [
        "Relative_time",
        "Execution",
        "Temporal_subregion",
        "Intentionally_act",
        "Being_obligated",
        "Recording",
        "Activity_finish"
    ],
    "Configure MediaRecorder - Call in the following MediaRecorder methods in this order.": [
        "Relative_time",
        "Execution",
        "Execution"
    ],
    "For more information, see the MediaRecorder reference documentation.": [
        "Information",
        "Increment",
        "Grasp"
    ],
    "setCamera ( ) - Set the camera to be used for video capture, use your application's current instance of Camera.": [
        "Using",
        "Temporal_collocation",
        "Instance",
        "Using",
        "Using"
    ],
    "setAudioSource ( ) - Set the audio source, use MediaRecorder.AudioSource.CAMCORDER.": [
        "Source_of_getting"
    ],
    "setVideoSource ( ) - Set the video source, use MediaRecorder.VideoSource.CAMERA.": [
        "Source_of_getting"
    ],
    "Set the video output format and encoding.": [],
    "For Android 2.2 ( API Level 8 ) and higher, use the MediaRecorder.setProfile method, and get a profile instance using CamcorderProfile.get ( ).": [
        "Position_on_a_scale",
        "Execution",
        "Instance",
        "Rank",
        "Using",
        "Using",
        "Execution"
    ],
    "For versions of Android prior to 2.2, you must set the video output format and encoding parameters: setOutputFormat ( ) - Set the output format, specify the default setting or MediaRecorder.OutputFormat.MPEG _ 4.": [
        "Terms_of_agreement",
        "Cardinal_numbers",
        "Being_obligated",
        "Time_vector",
        "Intentionally_create"
    ],
    "setAudioEncoder ( ) - Set the sound encoding type, specify the default setting or MediaRecorder.AudioEncoder.AMR _ NB.": [
        "Sensation"
    ],
    "setVideoEncoder ( ) - Set the video encoding type, specify the default setting or MediaRecorder.VideoEncoder.MPEG _ 4_SP.": [],
    "setOutputFile ( ) - Set the output file, use getOutputMediaFile ( MEDIA_TYPE_VIDEO ).": [],
    "toString ( ) from the example method in the Saving Media Files section.": [
        "Instance",
        "Self_motion",
        "Execution",
        "Part_whole"
    ],
    "setPreviewDisplay ( ) - Specify the SurfaceView preview layout element for your application.": [
        "Ingredients",
        "Using"
    ],
    "Use the same object you specified for Connect Preview.": [
        "Identicality",
        "Using"
    ],
    "Prepare MediaRecorder - Prepare the MediaRecorder with provided configuration settings by calling MediaRecorder.prepare ( ).": [
        "Execution",
        "Supply",
        "Activity_prepare"
    ],
    "Start MediaRecorder - Start recording video by calling MediaRecorder.start ( ).": [
        "Recording",
        "Temporal_subregion",
        "Execution"
    ],
    "Unlock the Camera - Unlock the camera for use by MediaRecorder by calling Camera.unlock ( ).": [
        "Execution"
    ],
    "setOutputFormat ( ) - Set the output format, specify the default setting or MediaRecorder.OutputFormat.MPEG _ 4.": [
        "Cardinal_numbers"
    ],
    "Stop Recording Video - Call the following methods in order, to successfully complete a video recording: Stop MediaRecorder - Stop recording video by calling MediaRecorder.stop ( ).": [
        "Relative_time",
        "Execution",
        "Recording",
        "Activity_stop",
        "Execution",
        "Execution",
        "Activity_finish"
    ],
    "Reset MediaRecorder - Optionally, remove the configuration settings from the recorder by calling MediaRecorder.reset ( ).": [
        "Execution",
        "Removing"
    ],
    "Release MediaRecorder - Release the MediaRecorder by calling MediaRecorder.release ( ).": [
        "Execution",
        "Releasing"
    ],
    "Lock the Camera - Lock the camera so that future MediaRecorder sessions can use it by calling Camera.lock ( ).": [
        "Temporal_collocation",
        "Execution",
        "Capability",
        "Using",
        "Inhibit_movement"
    ],
    "Starting with Android 4.0 ( API level 14 ), this call is not required unless the MediaRecorder.prepare ( ) call fails.": [
        "Rank",
        "Cardinal_numbers",
        "Execution",
        "Success_or_failure",
        "Being_necessary",
        "Process_start"
    ],
    "Stop MediaRecorder - Stop recording video by calling MediaRecorder.stop ( ).": [
        "Activity_stop",
        "Recording",
        "Execution"
    ],
    "Stop the Preview - When your activity has finished using the camera, stop the preview using Camera.stopPreview ( ).": [
        "Temporal_collocation",
        "Intentionally_act",
        "Activity_stop",
        "Using",
        "Preventing",
        "Process_completed_state"
    ],
    "Release Camera - Release the camera so that other applications can use it by calling Camera.release ( ).": [
        "Increment",
        "Execution",
        "Releasing",
        "Capability",
        "Using"
    ],
    "Unlock the camera with Camera.unlock ( )": [],
    "Configure MediaRecorder as shown in the code example above": [
        "Instance",
        "Evidence"
    ],
    "Start recording using MediaRecorder.start ( )": [
        "Temporal_subregion",
        "Recording",
        "Using"
    ],
    "Stop recording using MediaRecorder.stop ( )": [
        "Activity_stop",
        "Using"
    ],
    "Release the media recorder with MediaRecorder.release ( )": [
        "Releasing"
    ],
    "Lock the camera using Camera.lock ( )": [
        "Using",
        "Inhibit_movement"
    ],
    "Environment.getExternalStoragePublicDirectory ( Environment.DIRECTORY _ PICTURES ) - This method returns the standard, shared and recommended location for saving pictures and videos.": [
        "Physical_artworks",
        "Execution",
        "Locale",
        "Physical_artworks",
        "Execution"
    ],
    "This directory is shared ( public ), so other applications can easily discover, read, change and delete files saved in this location.": [
        "Becoming_aware",
        "Undergo_change",
        "Locale",
        "Increment",
        "Self_motion",
        "Capability",
        "Categorization",
        "Secrecy_status"
    ],
    "If your application is uninstalled by the user, media files saved to this location will not be removed.": [
        "Using",
        "Locale",
        "Self_motion",
        "Removing"
    ],
    "To avoid interfering with users existing pictures and videos, you should create a sub-directory for your application's media files within this directory, as shown in the code sample below.": [
        "Hindering",
        "Physical_artworks",
        "Using",
        "Being_obligated",
        "Existence",
        "Evidence",
        "Preventing",
        "Intentionally_create"
    ],
    "This method is available in Android 2.2 ( API Level 8 ), for equivalent calls in earlier API versions, see Saving Shared Files.": [
        "Execution",
        "Relative_time",
        "Self_motion",
        "Contacting",
        "Rank",
        "Grasp"
    ],
    "Context.getExternalFilesDir ( Environment.DIRECTORY _ PICTURES ) - This method returns a standard location for saving pictures and videos which are associated with your application.": [
        "Physical_artworks",
        "Execution",
        "Locale",
        "Physical_artworks",
        "Using",
        "Execution",
        "Cognitive_connection"
    ],
    "If your application is uninstalled, any files saved in this location are removed.": [
        "Using",
        "Locale",
        "Quantity",
        "Removing"
    ],
    "Security is not enforced for files in this location and other applications may read, change and delete them.": [
        "Being_at_risk",
        "Enforcing",
        "Locale",
        "Increment",
        "Reading",
        "Likelihood",
        "Undergo_change"
    ],
    "Check that face detection is supported on the device": [
        "Part_orientational",
        "Gizmo",
        "Taking_sides"
    ],
    "Create a face detection listener": [
        "Part_orientational",
        "Cause_to_start"
    ],
    "Add the face detection listener to your camera object": [
        "Part_orientational"
    ],
    "Start face detection after preview ( and after every preview restart )": [
        "Frequency",
        "Part_orientational",
        "Temporal_subregion"
    ],
    " height must be > 0": [
        "Dimension",
        "Being_obligated"
    ],
    "It sounds like you may be using the support library ?": [
        "Sensation",
        "Buildings",
        "Likelihood",
        "Taking_sides",
        "Using"
    ],
    "I had the same error and traced it to a bug with DrawableCompat.wrap -LRB- -RRB- in 23.4.0 that doesn't exist in earlier & later versions of the support library.": [
        "Relative_time",
        "Time_vector",
        "Taking_sides",
        "Buildings",
        "Being_obligated",
        "Identicality",
        "Intentionally_act",
        "Existence"
    ],
    "This bug incorrectly sets the drawable bounds to 0 -LRB- or negative in the case of an inset drawable -RRB-.": [
        "Instance"
    ],
    "I've seen this cause a crash on Android 5.1.": [
        "Impact",
        "Causation",
        "Grasp"
    ],
    "I didn't see a specific issue opened for this, but looking at the code for DrawableWrapperDonut/DrawableWrapperGingerbread, I can see that the problem was introduced around 23.4.0 and later fixed, so if you were using the buggy version, switching to a good version should fix this crash.": [
        "Point_of_dispute",
        "Predicament",
        "Impact",
        "Resolve_problem",
        "Relational_quantity",
        "Resolve_problem",
        "Being_obligated",
        "Change_tool",
        "Body_movement",
        "Scrutiny",
        "Using",
        "Grasp",
        "Intentionally_act",
        "Capability",
        "Time_vector"
    ],
    "Android App Retrieve Data from Server but in a Secure way": [
        "Being_at_risk"
    ],
    "If you want to pretty much ensure the user can not see the data other than by looking at your app then encryption is really the only way.": [
        "Relational_quantity",
        "Sole_instance",
        "Scrutiny",
        "Temporal_collocation",
        "Increment",
        "Grasp",
        "Capability",
        "Desiring"
    ],
    "Even the `` protected'' storage is accessible to the user if a device is rooted.": [
        "Gizmo",
        "Storing",
        "Having_or_lacking_access"
    ],
    "Even encryption is not totally secure as you need to decrypt the data at some point in order to display it.": [
        "Degree",
        "Getting",
        "Locale",
        "Have_as_requirement",
        "Relational_quantity"
    ],
    "You will dissuade the casual browser but not the determined hacker.": [
        "Certainty",
        "Suasion"
    ],
    "Use SSL on HTTPS to transfer data instead of HTTP you need to setup the certificates on the webserver not very sure how it works.": [
        "Documents",
        "Required_event",
        "Degree",
        "Being_employed",
        "Likelihood",
        "Transfer"
    ],
    "If you are really concerned about the data then further encrypt it with a unique algorithm before sending and decrypt it when it reaches the app.": [
        "Increment",
        "Causation",
        "Temporal_collocation",
        "Path_shape",
        "Idiosyncrasy",
        "Temporal_collocation",
        "Topic"
    ],
    "I guess that's all about it.": [
        "Quantity",
        "Estimating"
    ],
    "Unless you need something really strong then develop your own protocol based on TCP and/or use another port.": [
        "Temporal_collocation",
        "Law",
        "Locale_by_use",
        "Required_event",
        "Increment",
        "Exertive_force",
        "Possession",
        "Cause_to_make_progress"
    ],
    "maybe that'll help": [],
    "LINK http://developer.android.com/reference/javax/net/ssl/package-summary.html LINK": [],
    "As for storing data in the app what you can encrypt the data before storing or you can use another format other than SQLite for better security as you can view sqlite databases using the browser pretty easily.": [
        "Storing",
        "Increment",
        "Being_at_risk",
        "Desirability",
        "Using",
        "Using",
        "Increment",
        "Categorization",
        "Capability"
    ],
    "Unless the phone is rooted there should not be a way to extract the data from it.": [
        "Contacting",
        "Being_obligated",
        "Removing",
        "Execution",
        "Locative_relation"
    ],
    "That depends very much on your audience.": [
        "Degree",
        "Relational_quantity"
    ],
    "Normally, the Android OS prohibits apps from accessing each other's files -LRB- i.e. databases, preference files, regular files stored in the app's private directory -RRB- through proven Linux file permissions.": [
        "Self_motion",
        "Reasoning",
        "Self_motion",
        "Grant_permission",
        "Storing",
        "Prohibiting",
        "Increment"
    ],
    "However, on rooted devices an application can obtain root access and read everything.": [
        "Concessive",
        "Gizmo",
        "Using",
        "Having_or_lacking_access",
        "Categorization",
        "Getting",
        "Capability"
    ],
    "A few things to think about:": [
        "Relational_quantity",
        "Quantity",
        "Opinion"
    ],
    "To conclude, if your information is not super-duper sensitive -LRB- e.g. credit card information -RRB-, I'd suggest just sticking with the default security provided by Android -LRB- i.e. save everything in plain text, knowing other apps can't access it -RRB-.": [
        "Coming_to_believe",
        "Health_response",
        "Information",
        "Increment",
        "Being_at_risk",
        "Awareness",
        "Supply",
        "Capability"
    ],
    "Otherwise, encryption is the way to go.": [
        "Execution",
        "Becoming"
    ],
    "It's not 100 % secure -LRB- a hacker could de-compile your app and figure out how to decrypt the data -RRB-, but it's a major pain to crack and will stop most hackers.": [
        "Protecting",
        "Expertise",
        "Cardinal_numbers",
        "Importance",
        "Capability",
        "Emotion_directed",
        "Preventing"
    ],
    "Especially if you obfuscate your code with something like LINK.": [],
    "You have a few options here.": [
        "Possibilities",
        "Quantity",
        "Locative_relation"
    ],
    "First of all, always use HTTPS.": [
        "Quantity",
        "Frequency",
        "Ordinal_numbers",
        "Using"
    ],
    "After enabling HTTPS, here are two extra security measures I would propose:": [
        "Locative_relation",
        "Being_at_risk",
        "Intentionally_act",
        "Cardinal_numbers"
    ],
    "The second method is more useful if you are also doing plain HTTP requests, where everyone can see the parameters being sent.": [
        "Measure_duration",
        "Execution",
        "Locative_relation",
        "Terms_of_agreement",
        "Increment",
        "Execution",
        "Capability",
        "Causation",
        "Perception_experience",
        "Intentionally_act"
    ],
    "Also, it's much harder to figure out from decompiled code.": [
        "Relational_quantity",
        "Locative_relation",
        "Opinion"
    ],
    "Especially if you spread the key calculation logic across multiple classes.": [
        "Quantity",
        "Importance",
        "Filling"
    ],
    "However, note that nothing makes it impossible to crack your app.": [
        "Concessive",
        "Likelihood",
        "Execution",
        "Expertise",
        "Becoming_aware"
    ],
    "You can obfuscate as much as you want, if a hacker is really determined to get to your data, he will be able to so by decompiling your application and spending many sleepless nights passing through your code and figuring out how the requests are formed.": [
        "Relational_quantity",
        "Using",
        "Used_up",
        "Quantity",
        "Execution",
        "Calendric_unit",
        "Natural_features",
        "Creating",
        "Capability",
        "Required_event",
        "Opinion",
        "Locative_relation",
        "Desiring",
        "Capability"
    ],
    "The only real way of securing your data is by asking your user for a password, besides doing all the work I wrote about above.": [
        "Sole_instance",
        "Weapon",
        "Quantity",
        "Working_on",
        "Existence",
        "Getting",
        "Relational_quantity",
        "Intentionally_act",
        "Execution"
    ],
    "You can't get a password that only exists in someone's -LRB- the user -RRB- head from decompiled code :-RRB-.": [
        "Being_obligated",
        "Execution",
        "Sole_instance",
        "Capability",
        "Existence",
        "Execution"
    ],
    "-LRB- Came here thanks to a Google search -RRB-": [
        "Locative_relation",
        "Judgment_direct_address",
        "Scrutiny"
    ],
    "I've been researching this a lot lately and this page has come up a lot thanks to Google and Bing searches.": [
        "Contacting",
        "Locative_relation",
        "Judgment_direct_address",
        "Scrutiny",
        "Quantity",
        "Research",
        "Execution"
    ],
    "The widely-accepted procedure for storing data on the device securely has been to use a strong encryption algorithm like AES.": [
        "Gizmo",
        "Exertive_force",
        "Storing",
        "Using",
        "Execution"
    ],
    "The harder question is `` AES requires a secure key.": [
        "Being_at_risk",
        "Importance",
        "Point_of_dispute",
        "Have_as_requirement"
    ],
    "What do you do with the key ?''": [
        "Importance",
        "Intentionally_act"
    ],
    "Google recently announced a cloud-based storage solution for apps, so you could consider storing the key there if the situation allows.": [
        "Storing",
        "Importance",
        "Temporal_collocation",
        "Grant_permission",
        "Capability",
        "Storing",
        "Locative_relation",
        "Categorization"
    ],
    "Otherwise, its seems that getting the key outside the device, like on a server, is better.": [
        "Appearance",
        "Importance",
        "Gizmo",
        "Desirability",
        "Execution"
    ],
    "If you can make the user punch in a PIN, that would actually work the best.": [
        "Cause_harm",
        "Desirability",
        "Capability",
        "Working_on",
        "Causation"
    ],
    "You can do password derivation in order to store the password, and you can redo the derivation to verify the password": [
        "Natural_features",
        "Capability",
        "Storing",
        "Intentionally_act",
        "Verification"
    ],
    "Without the `` user punching in a PIN'' part, I haven't found a lot of good answers to that question.": [
        "Part_whole",
        "Communication_response",
        "Point_of_dispute",
        "Cause_harm",
        "Quantity",
        "Locating"
    ],
    "However, DO NOT HARD-CODE THE KEY IF YOU MUST STORE ONE WITH THE APP.": [
        "Concessive",
        "Importance",
        "Cardinal_numbers",
        "Being_obligated",
        "Storing"
    ],
    "At the minimum, generate a key using a secure password generator and/or a derivation function like PBKDF2 -LRB- Password-based derivation function 2 -RRB-.": [
        "Extreme_value",
        "Importance",
        "Being_at_risk",
        "Natural_features",
        "Cause_to_start",
        "Using"
    ],
    "If I read the posts correctly, Google did say that one approach is to generate a key once the app starts the first time, store the key via the MODE_PRIVATE flag to a lot of file I/O operations, and use that as the key.": [
        "Sending",
        "Importance",
        "Businesses",
        "Cardinal_numbers",
        "Measure_duration",
        "Ordinal_numbers",
        "Intentionally_act",
        "Cause_to_start",
        "Process_start",
        "Categorization",
        "Quantity",
        "Storing",
        "Execution"
    ],
    "You can also derive other keys based on that master key, and the NIST actually suggests something along that lines.": [
        "Natural_features",
        "Expertise",
        "Importance",
        "Increment",
        "Capability"
    ],
    "Whether or not to trust the master-key method, I'll leave to you.": [
        "Execution",
        "Departing",
        "Trust"
    ],
    "This key would get exposed on a rooted device.": [
        "Importance",
        "Gizmo",
        "Execution",
        "Reveal_secret"
    ],
    "I'll also admit that I'm still researching the issue": [
        "Point_of_dispute",
        "Continued_state_of_affairs",
        "Reveal_secret",
        "Research"
    ],
    "Every application on Android runs in a secure sandbox environment, so other processes on the system can not access your code or private data without proper handshake.": [
        "Frequency",
        "Using",
        "Being_at_risk",
        "Gizmo",
        "Execution",
        "Increment",
        "Proper_reference",
        "Execution",
        "Capability"
    ],
    "But still there are many vulnerabilities are possible by poor design of the apps.": [
        "Being_at_risk",
        "Wealthiness",
        "Quantity",
        "Coming_up_with",
        "Likelihood",
        "Continued_state_of_affairs",
        "Existence"
    ],
    "This link from Android developers site advice you some of the good tips for security - LINK": [
        "Locale_by_use",
        "Relational_quantity",
        "Part_orientational",
        "Being_at_risk",
        "Cognitive_connection"
    ],
    "Sign inAndroidLearn Advanced Android By DoingRoadmapLearn Advanced AndroidHow to pass large data between server and client ( android ) securely?Using RSA and AES ( Hybrid ) encryption techniqueMayank Mohan UpadhyayFollowJun 14, 2017 \u00b7 5 min readHello guys, Most of the times, we pass sensitive data from our Android app to our server.": [
        "Cardinal_numbers",
        "People",
        "Timespan",
        "Health_response",
        "Dimension",
        "Relational_quantity",
        "Sign_agreement",
        "Process_end",
        "Using"
    ],
    "Such sensitive data could be a personal message one user is sending to another, could be an information about the user, could be user's SMS, so on and so forth.": [
        "Health_response",
        "Increment",
        "Cardinal_numbers",
        "Causation",
        "Information",
        "Capability"
    ],
    "While we should always explicitly inform users before transferring such sensitive data, but we should also make sure we transfer this data as securely as possible.It shouldn't surprize you that companies have faced huge financial losses due to poor security, and it has lead to shut down of companies as well.": [
        "Health_response",
        "Observable_body_parts",
        "Finish_competition",
        "Wealthiness",
        "Ingestion",
        "Businesses",
        "Being_at_risk",
        "Frequency",
        "Size",
        "Being_obligated",
        "Transfer",
        "Transfer",
        "Execution",
        "Verification",
        "Body_movement",
        "Possession",
        "Telling"
    ],
    "Another surprize is that implementing this isn't complicated at all !": [
        "Gizmo",
        "Quantity",
        "Increment"
    ],
    "With little knowledge you can create a rock solid security for the client -- server communication.ABC of EncryptionConsider you have a sensitive information say user's email ID.": [
        "Awareness",
        "Substance",
        "Health_response",
        "Information",
        "Contacting",
        "Sufficiency",
        "Being_at_risk",
        "Capability",
        "Intentionally_create"
    ],
    "You want to securely transfer it to your server.": [
        "Transfer",
        "Desiring"
    ],
    "How will you do it ?": [
        "Intentionally_act"
    ],
    "one way could be to encrypt it using a passcode.": [
        "Execution",
        "Cardinal_numbers",
        "Capability",
        "Using"
    ],
    "Client will use this passcode to encrypt user's email ID and send to the server.": [
        "Contacting",
        "Sending",
        "Using"
    ],
    "Server will, in turn, use the same passcode to decrypt the data received from the client.": [
        "Temporal_subregion",
        "Identicality",
        "Receiving",
        "Using"
    ],
    "If during the transmission of the data someone gets access to the transmitting data, he / she wouldn't be able to make sense of it as it is encrypted.": [
        "Sensation",
        "Having_or_lacking_access",
        "Execution",
        "Causation",
        "Capability"
    ],
    "Also, since the intruder doesn't have access to the passcode, he / she wouldn't be able to decrypt the data.This kind of encryption technique is called symmetric encryption.": [
        "Execution",
        "Intentionally_act",
        "Having_or_lacking_access",
        "Possession",
        "Capability",
        "Execution"
    ],
    "It is fast and can encrypt large texts of data.": [
        "Dimension",
        "Speed",
        "Capability"
    ],
    "The drawback includes safe distribution of the key.": [
        "Being_at_risk",
        "Importance",
        "Dispersal",
        "Inclusion"
    ],
    "Also, you need to ship the key in your app -- which is a highly unrecommended practice.": [
        "Importance",
        "Required_event",
        "Sending",
        "Practice"
    ],
    "The most popular Symmetric Algorithms are DES, Triple-DES, AES, Blowfish, RC2, RC4 ( ARCFOUR ), RC5, RC6.Hmm, this is an issue.": [
        "Point_of_dispute",
        "Desirability"
    ],
    "You can't ship the passcode in your app.": [
        "Vehicle",
        "Capability"
    ],
    "If the intruder gets access to your passcode then he / she can easily get all the sensitive data that will be transmitted from your app.What to do now ?": [
        "Having_or_lacking_access",
        "Quantity",
        "Health_response",
        "Temporal_collocation",
        "Intentionally_act",
        "Execution",
        "Execution",
        "Capability",
        "Temporal_collocation"
    ],
    "What if there was an encryption technique where the algorithm would generate a key pair for you comprising of 2 keys.": [
        "Natural_features",
        "Execution",
        "Importance",
        "Cardinal_numbers",
        "Locative_relation",
        "Personal_relationship",
        "Cause_to_start",
        "Existence"
    ],
    "1 public key and 1 private key.": [
        "Importance",
        "Secrecy_status"
    ],
    "Public key is visible publicly and anyone can use that key to encrypt sensitive data.": [
        "Importance",
        "Health_response",
        "Secrecy_status",
        "Using",
        "Capability",
        "Secrecy_status",
        "Obviousness"
    ],
    "But now the decryption of that data can only be done by private key which only you have access to.": [
        "Temporal_collocation",
        "Sole_instance",
        "Having_or_lacking_access",
        "Likelihood",
        "Importance",
        "Intentionally_act"
    ],
    "That means you can safely ship public key in your app and keep the private key on server.": [
        "Vehicle",
        "Importance",
        "Secrecy_status",
        "Risky_situation",
        "Capability",
        "Activity_ongoing",
        "Evidence"
    ],
    "This is just wonderful!This kind of encryption technique is called asymmetric encryption.": [
        "Execution",
        "Desirability",
        "Execution"
    ],
    "It is comparatively very slow and can encrypt only very small texts of data at a time ( 128 bytes to be exact ! )": [
        "Sole_instance",
        "Measure_duration",
        "Correctness",
        "Degree",
        "Dimension",
        "Taking_time",
        "Capability"
    ],
    "The most popular Asymmetric Algorithms ( aka Public Key Algorithms ) are RSA, Diffie-Hellman, ElGamal, DSS.So now it is clear that you can't use symmetric encryption because you can't ship the passcode in your app.": [
        "Temporal_collocation",
        "Obviousness",
        "Vehicle",
        "Importance",
        "Desirability",
        "Capability",
        "Using"
    ],
    "Also, it is impractical to use asymmetric encryption because 99 % of the times the data that you'd want to transfer would be of more than 128 bytes in size !": [
        "Timespan",
        "Transfer",
        "Possession",
        "Increment",
        "Using"
    ],
    "What to do?Hybrid solution to the rescue!Consider this: Using an asymmetric encryption ( say RSA ), the server generates a key pair consisting of a public key and a private key.Server saves these keys in a secure location.We take public key and ship it in our app ( client ).": [
        "Execution",
        "Natural_features",
        "Being_at_risk",
        "Have_as_requirement",
        "Importance",
        "Secrecy_status",
        "Vehicle",
        "Using",
        "Categorization",
        "Intentionally_act",
        "Creating"
    ],
    "When we want to transfer some sensitive data to server ( at runtime ), we generate a passcode ( aka secret key ) using a symmetric encryption ( say AES ).": [
        "Temporal_collocation",
        "Relational_quantity",
        "Health_response",
        "Importance",
        "Secrecy_status",
        "Cause_to_start",
        "Transfer",
        "Desiring",
        "Using"
    ],
    "Using this secret key we encrypt our large texts of data quickly.Now we use the public key to encrypt our secret key.We send this encrypted data and encrypted secret key combination to server ( using any commonly used way to send combination of data, like JSON ) Server receives this combination, extracts encrypted data and encrypted secret key from it.Server uses private key to decrypt the encrypted secret key.Server uses decrypted secret key ( or simply called secret key ) to decrypt the encrypted data.": [
        "Quantity",
        "Secrecy_status",
        "Dimension",
        "Secrecy_status",
        "Importance",
        "Using",
        "Receiving",
        "Using",
        "Execution",
        "Using",
        "Execution",
        "Using",
        "Sending",
        "Using"
    ],
    "Hence it gets the large texts of data which was sent by the client securely.This technique is called Hybrid Cryptography.Show me the code!First of all server needs to generates a key pair using RSA.": [
        "Execution",
        "Dimension",
        "Execution",
        "Quantity",
        "Importance",
        "Using",
        "Execution",
        "Required_event",
        "Causation",
        "Execution",
        "Creating"
    ],
    "This will be done via the following class: ( Note that this code needs to be run only 1 time as you'll use the same key pair going forward ) 2.": [
        "Sole_instance",
        "Cardinal_numbers",
        "Relative_time",
        "Measure_duration",
        "Importance",
        "Required_event",
        "Identicality",
        "Intentionally_act",
        "Becoming_aware",
        "Motion",
        "Sending",
        "Personal_relationship",
        "Using",
        "Execution"
    ],
    "On client side, to generate secret key at runtime, encrypt sensitive string using secret key, and encrypt secret key using public key, this class will help you: 3.": [
        "Importance",
        "Health_response",
        "Taking_sides",
        "Secrecy_status",
        "Secrecy_status",
        "Using",
        "Creating",
        "Assistance"
    ],
    "Upon receiving the encrypted text and encrypted secret key on server side, the server will decrypt the encrypted secret key using private key.": [
        "Taking_sides",
        "Importance",
        "Secrecy_status",
        "Using",
        "Receiving"
    ],
    "Afterwards, the server will retrieve the original text transmitted by the client by decrypting the encrypted text using secret key ( decrypted ).": [
        "Importance",
        "Secrecy_status",
        "Using",
        "Time_vector"
    ],
    "The following class will help you in the same: ConclusionFriends, as you saw it is a piece of cake to implement this solution.": [
        "Gizmo",
        "Relative_time",
        "Identicality",
        "Assistance",
        "Difficulty",
        "Grasp"
    ],
    "This will not only save your app from intruders, but will also increase trust of your app users.": [
        "Sole_instance",
        "Trust",
        "Cause_change_of_position_on_a_scale"
    ],
    "Remember: It is not a feature that you're providing to your app users, it is a responsibility you're fulfilling that you owe to all of them.Bonus hintAs you can see we have used Base64 class methods in the above code snippets, sometimes due to difference in implementation the default import can import slightly different files ( android has a modified version ).": [
        "Execution",
        "Similarity",
        "Execute_plan",
        "Part_piece",
        "Similarity",
        "Cause_change",
        "Quantity",
        "Being_obligated",
        "Importing",
        "Possession",
        "Using",
        "Supply",
        "Frequency",
        "Memory",
        "Perception_experience",
        "Capability"
    ],
    "You can find the correct file here which you can import on your server side code so that client and server work in harmony: ) Check out all the top articles at blog.mindorks.comMindOrksOur community publishes stories worth reading on Android ... Follow658 22 SecurityAndroidEncryptionServersRsa658 claps658 claps22 responsesWritten byMayank Mohan UpadhyayFollowgoogle certified mobile engineer \u2022 an artist who engineers softwareFollowMindOrksFollowOur community publishes stories worth reading on Android DevelopmentFollowWritten byMayank Mohan UpadhyayFollowgoogle certified mobile engineer \u2022 an artist who engineers softwareMindOrksFollowOur community publishes stories worth reading on Android DevelopmentMore From MediumIn 40 years, email is still the weakest link in security ... so how can we stop email snooping?Prof Bill Buchanan OBE in ASecuritySite: When Bob Met AliceTryHackMe - Linux PrivEsctheRandomizer100 Words On ....": [
        "Locative_relation",
        "Being_employed",
        "Weapon",
        "Quantity",
        "Execution",
        "People_by_vocation",
        "People_by_vocation",
        "Reading",
        "Contacting",
        "Being_at_risk",
        "Observable_body_parts",
        "Temporal_collocation",
        "Body_movement",
        "Simple_name",
        "Suitability",
        "Part_orientational",
        "Bringing",
        "Calendric_unit",
        "Cardinal_numbers",
        "Capability",
        "Continued_state_of_affairs",
        "Preventing",
        "Create_physical_artwork",
        "Locating",
        "Inspecting",
        "Taking_sides",
        "Verification",
        "Importing"
    ],
    "Christmas CybersecurityDigitally VicariousBiometrics: Who Has Your Data?Varju Luceno in The StartupBlind XPath Injections: The Path Less TravelledZhang ZeyuWhy Facebook wants to integrate its messaging appsC Y SOne of the greatest advancements in Cybersecurity: The Sponge Function ( Keccak and SHAKE ) Prof Bill Buchanan OBE in ASecuritySite: When Bob Met AliceOWASP: SENSITIVE DATA EXPOSURE AttacksIsha Kudkar in ShallVhackLearn more.Medium is an open platform where 170 million readers come to find insightful and dynamic thinking.": [
        "Progress",
        "Experiencer_obj",
        "Observable_body_parts",
        "Temporal_collocation",
        "Body_movement",
        "Mental_property",
        "Expertise",
        "Secrecy_status",
        "Waking_up",
        "Reading",
        "Cardinal_numbers",
        "Becoming_aware",
        "Locative_relation",
        "Desiring"
    ],
    "How to pass large data between server and client ( android ) securely?Using RSA and AES ( Hybrid ) encryption techniqueMayank Mohan UpadhyayFollowJun 14, 2017 \u00b7 5 min readHello guys, Most of the times, we pass sensitive data from our Android app to our server.": [
        "Cardinal_numbers",
        "People",
        "Timespan",
        "Health_response",
        "Dimension",
        "Process_end",
        "Relational_quantity",
        "Using"
    ],
    "You can find the correct file here which you can import on your server side code so that client and server work in harmony: ) Check out all the top articles at blog.mindorks.com": [
        "Locative_relation",
        "Weapon",
        "Quantity",
        "Suitability",
        "Part_orientational",
        "Capability",
        "Locating",
        "Working_on",
        "Taking_sides",
        "Importing",
        "Inspecting"
    ],
    "How to pass large data between server and client ( android ) securely ?": [
        "Process_end",
        "Dimension"
    ],
    "Using RSA and AES ( Hybrid ) encryption techniqueMayank Mohan UpadhyayFollowJun 14, 2017 \u00b7 5 min read": [
        "Cardinal_numbers",
        "Using"
    ],
    "Mayank Mohan UpadhyayFollowJun 14, 2017 \u00b7 5 min read": [
        "Cardinal_numbers"
    ],
    "MindOrksOur community publishes stories worth reading on Android ... Follow658 22": [
        "Execution",
        "Reading"
    ],
    "SecurityAndroidEncryptionServersRsa658 claps658 claps22 responsesWritten byMayank Mohan UpadhyayFollowgoogle certified mobile engineer \u2022 an artist who engineers softwareFollowMindOrksFollowOur community publishes stories worth reading on Android DevelopmentFollowWritten byMayank Mohan UpadhyayFollowgoogle certified mobile engineer \u2022 an artist who engineers softwareMindOrksFollowOur community publishes stories worth reading on Android DevelopmentMore From MediumIn 40 years, email is still the weakest link in security ... so how can we stop email snooping?Prof Bill Buchanan OBE in ASecuritySite: When Bob Met AliceTryHackMe - Linux PrivEsctheRandomizer100 Words On ....": [
        "People_by_vocation",
        "People_by_vocation",
        "Execution",
        "Reading",
        "Contacting",
        "Being_at_risk",
        "Observable_body_parts",
        "Temporal_collocation",
        "Body_movement",
        "Simple_name",
        "Bringing",
        "Calendric_unit",
        "Cardinal_numbers",
        "Capability",
        "Preventing",
        "Create_physical_artwork",
        "Verification",
        "Continued_state_of_affairs"
    ],
    "Christmas CybersecurityDigitally VicariousBiometrics: Who Has Your Data?Varju Luceno in The StartupBlind XPath Injections: The Path Less TravelledZhang ZeyuWhy Facebook wants to integrate its messaging appsC Y SOne of the greatest advancements in Cybersecurity: The Sponge Function ( Keccak and SHAKE ) Prof Bill Buchanan OBE in ASecuritySite: When Bob Met AliceOWASP: SENSITIVE DATA EXPOSURE AttacksIsha Kudkar in ShallVhack": [
        "Progress",
        "Experiencer_obj",
        "Observable_body_parts",
        "Temporal_collocation",
        "Body_movement",
        "Expertise",
        "Desiring"
    ],
    "Get startedOpen in appReza Bigdeli263 FollowersAboutFollowSign inGet startedFollow263 FollowersAboutGet startedOpen in appHow to Send a Semi Secure Request to a Server in AndroidReza BigdeliJan 14, 2016 \u00b7 5 min readDisclaimer: This article is written a couple of years ago.": [
        "Protecting",
        "Cardinal_numbers",
        "Calendric_unit",
        "Time_vector",
        "Personal_relationship",
        "Execution",
        "Execution",
        "Sending"
    ],
    "There should be a lot of better ways to tackle this issue.": [
        "Point_of_dispute",
        "Being_obligated",
        "Execution",
        "Expertise",
        "Quantity",
        "Existence"
    ],
    "Yet, I don't think reading this article would be of no value.Imagine that you have a server for your Android application.": [
        "Quantity",
        "Using",
        "Intentionally_act",
        "Reading",
        "Opinion"
    ],
    "What the server does is registering the users of the application and creates accounts for them.": [
        "Using",
        "Intentionally_act",
        "Creating",
        "Becoming_aware"
    ],
    "But the problem here is, as usual, security.": [
        "Predicament",
        "Locative_relation",
        "Being_at_risk"
    ],
    "What if a hacker sniff your requests from the application and just creates the same structured requests and sends them to your server to fill its database with fake users.": [
        "Using",
        "Artificiality",
        "Identicality",
        "Execution",
        "Creating",
        "Filling",
        "Causation"
    ],
    "Of course there are some solutions for this type of attack, for example CAPTCHAS, but again the problem is CAPTCHAS will ruin the UX of your application.": [
        "Attack",
        "Instance",
        "Predicament",
        "Using",
        "Relational_quantity",
        "Bungling",
        "Existence"
    ],
    "I mean who wants to write a bunch of nonsense when signing up in Instagram application ?": [
        "Using",
        "Execution",
        "Causation",
        "Sign_agreement",
        "Temporal_collocation",
        "Locative_relation",
        "Desiring"
    ],
    "So is there a way to somehow stop a hacker from attacking our server without needing us to destroy our valuable UX ?": [
        "Existence",
        "Preventing",
        "Needing",
        "Attack",
        "Destroying",
        "Execution"
    ],
    "Well I believe I have a solution.The solution has some steps to follow and in each step a problem will arise and we will try to solve them along the way to get to what we want which is a secure valid request to the server.Step One: Just Respond to Application RequestsIf we make the server to only respond to the requests sent from the application we can be a little bit more sure that requests are sent from a real person who is using our application, not a bot or a program of a hacker.": [
        "Intentionally_act",
        "Relative_time",
        "Intentionally_act",
        "Predicament",
        "Being_at_risk",
        "Cardinal_numbers",
        "Sole_instance",
        "Execution",
        "Using",
        "Increment",
        "People",
        "Project",
        "Relational_quantity",
        "Being_in_effect",
        "Quantity",
        "Existence",
        "Coming_to_be",
        "Required_event",
        "Likelihood",
        "Resolve_problem",
        "Causation",
        "Response",
        "Capability",
        "Response",
        "Causation",
        "Using",
        "Execution",
        "Possession",
        "Attempt",
        "Certainty"
    ],
    "But how does the server know a request is sent from the application ?": [
        "Execution",
        "Using",
        "Intentionally_act",
        "Causation",
        "Awareness"
    ],
    "Well we can put some kind of encryption into our requests, for example using RSA we can have a private key, put it into the application, and encrypt the requests.": [
        "Instance",
        "Importance",
        "Using",
        "Relational_quantity",
        "Execution",
        "Capability",
        "Causation",
        "Using"
    ],
    "So this way the hacker who is sniffing our requests wouldn't know what we are doing and what information are we sending so they can't go ahead and make fake requests.But the new problem here is that decompiling an Android application isn't that hard, actually it's pretty easy.": [
        "Execution",
        "Information",
        "Temporal_subregion",
        "Artificiality",
        "Predicament",
        "Using",
        "Execution",
        "Age",
        "Intentionally_act",
        "Becoming",
        "Locative_relation",
        "Difficulty",
        "Sending",
        "Capability",
        "Perception_active",
        "Difficulty",
        "Certainty",
        "Causation"
    ],
    "There are tons of decompiling applications on the web that will decompile our APK to the java code that we have written.": [
        "Network",
        "Existence",
        "Measure_mass"
    ],
    "Of course there are some obfuscating approaches, like ProGuard that you should use, but they wouldn't stop a determined hacker to find our private key in our code.": [
        "Relational_quantity",
        "Importance",
        "Certainty",
        "Being_obligated",
        "Using",
        "Execution",
        "Existence",
        "Locating",
        "Preventing"
    ],
    "So even with obfuscating, after decompilation our code will look like this: As you can see finding the key isn't that hard.": [
        "Locating",
        "Importance",
        "Difficulty",
        "Capability",
        "Scrutiny",
        "Grasp"
    ],
    "So what do we do?Step two: Use Native CodeIn android you can write some or all of your code in c/c + + languages using NDK.": [
        "Self_motion",
        "Quantity",
        "Cardinal_numbers",
        "Intentionally_act",
        "Using",
        "Text_creation",
        "Relational_quantity",
        "Capability"
    ],
    "The important thing is you have to know when to use it.": [
        "Temporal_collocation",
        "Importance",
        "Being_obligated",
        "Awareness",
        "Using"
    ],
    "I am not going to explain when to use native code but in our situation we are going to benefit from it.": [
        "Temporal_collocation",
        "Indigenous_origin",
        "Motion",
        "Using"
    ],
    "Decompiling c/c + + code is possible and there some tools to do it but a c/c + + decompiled code is a complete nonsense.": [
        "Locative_relation",
        "Relational_quantity",
        "Gizmo",
        "Intentionally_act",
        "Process_completed_state",
        "Likelihood"
    ],
    "Understanding and debugging a c/c + + decompiled code is super complex and time consuming.": [
        "Measure_duration",
        "Ingestion",
        "Locale_by_use",
        "Desirability",
        "Emptying",
        "Grasp"
    ],
    "And again of course a hacker can go all the way down to the machine code but at least we can make it as hard and as boring and as time consuming as possible.": [
        "Quantity",
        "Execution",
        "Ingestion",
        "Gizmo",
        "Stimulus_focus",
        "Measure_duration",
        "Likelihood",
        "Relational_quantity",
        "Difficulty",
        "Ingestion",
        "Capability",
        "Becoming",
        "Execution"
    ],
    "So our step two is to put our private key into the native code.": [
        "Cardinal_numbers",
        "Importance",
        "Indigenous_origin",
        "Intentionally_act",
        "Causation"
    ],
    "So after doing so our code would look like this: But wait a minute !": [
        "Waiting",
        "Measure_duration",
        "Scrutiny",
        "Intentionally_act"
    ],
    "Even if the hacker can't find our key they can go ahead and manipulate or Java code or take the whole of our c/c + + library and method and call it in their own program with their code.": [
        "Importance",
        "Temporal_subregion",
        "Manipulate_into_doing",
        "Buildings",
        "Execution",
        "Execution",
        "Capability",
        "Project",
        "Possession",
        "Becoming",
        "Capability",
        "Locating",
        "Have_as_requirement"
    ],
    "If they create a for loop and generate random emails and passwords they can use our c/c + + library against us and create a ton of fake valid requests.": [
        "Cause_to_start",
        "Locale_by_use",
        "Buildings",
        "Execution",
        "Contacting",
        "Being_in_effect",
        "Capability",
        "Artificiality",
        "Using",
        "Measure_mass",
        "Frequency",
        "Intentionally_create"
    ],
    "Their code can be like this: So how do we stop this from happening !?": [
        "Intentionally_act",
        "Event",
        "Capability",
        "Preventing"
    ],
    "Step three: Use Other FactorsWe know that they can use our library just like we are using it.": [
        "Intentionally_act",
        "Buildings",
        "Increment",
        "Cardinal_numbers",
        "Using",
        "Using",
        "Capability",
        "Certainty"
    ],
    "But the advantage of using native code is that we can be, to some extend, sure that: First: They don't have access to our private key so if they want to create requests they have to use our library.Second: They can't see or manipulate our native code and logic.So we can use and check a lot of factors and bring in a lot of checking in our native code.": [
        "Relational_quantity",
        "Having_or_lacking_access",
        "Importance",
        "Indigenous_origin",
        "Expansion",
        "Intentionally_act",
        "Using",
        "Quantity",
        "Using",
        "Causation",
        "Inspecting",
        "Manipulate_into_doing",
        "Grasp",
        "Capability",
        "Being_obligated",
        "Execution",
        "Intentionally_create",
        "Possession",
        "Likelihood",
        "Capability"
    ],
    "For example to counteract the for loop we can send the encrypted data back to the java code with a little of delay.": [
        "Instance",
        "Observable_body_parts",
        "Change_event_time",
        "Quantity",
        "Causation",
        "Capability"
    ],
    "This will take the power of machine from it and make it more like a normal person who is trying to register many times.": [
        "Gizmo",
        "Increment",
        "People",
        "Recording",
        "Timespan",
        "Mental_property",
        "Quantity",
        "Execution",
        "Have_as_requirement",
        "Attempt",
        "Execution"
    ],
    "And at the same time, delaying for half a second wouldn't be as annoying as CAPTCHAS for someone who is trying to register.": [
        "Measure_duration",
        "Change_event_time",
        "Part_whole",
        "Ordinal_numbers",
        "Recording",
        "Identicality",
        "Stimulus_focus",
        "Attempt"
    ],
    "Or we can send something unique along with the email and password to the server so it can find repetitive requests and simply ignore them.": [
        "Contacting",
        "Natural_features",
        "Idiosyncrasy",
        "Execution",
        "Locating",
        "Accompaniment",
        "Capability",
        "Causation"
    ],
    "That unique thing can be lots of things like the processId that is the identifier of the process's UID.": [
        "Idiosyncrasy",
        "Execution",
        "Capability",
        "Quantity"
    ],
    "This is the kernel UID that the process is running under, which is the identity of its app-specific sandbox.": [
        "Execution",
        "Identicality",
        "Execution"
    ],
    "The processId wont change when its package is installed on the device so every time that you get your processId it is the same, but it can be different in another device.": [
        "Undergo_change",
        "Execution",
        "Gizmo",
        "Frequency",
        "Measure_duration",
        "Identicality",
        "Increment",
        "Temporal_collocation",
        "Execution",
        "Similarity",
        "Installing",
        "Capability"
    ],
    "You can get your processId in native code using getuid ( ), when including unistd.h and sys/types.h so if the server gets a lot of requests with the same unique factor, here processId, in a short amount of time it can simply ignore them.": [
        "Temporal_collocation",
        "Duration_attribute",
        "Indigenous_origin",
        "Using",
        "Idiosyncrasy",
        "Capability",
        "Identicality",
        "Quantity",
        "Execution",
        "Measure_duration",
        "Execution",
        "Quantity",
        "Locative_relation",
        "Execution",
        "Inclusion"
    ],
    "Also you can check the package name in your native code and a lot of other things.": [
        "Execution",
        "Indigenous_origin",
        "Increment",
        "Capability",
        "Quantity",
        "Inspecting"
    ],
    "The important key is the hacker doesn't really know what you are doing in there.Secured?No, not really.": [
        "Importance",
        "Importance",
        "Intentionally_act",
        "Intentionally_act",
        "Certainty"
    ],
    "That is why I put the `` semi'' word in the title.": [
        "Reason",
        "Simple_name",
        "Observable_body_parts",
        "Causation"
    ],
    "We did a lot of things and used a lot of methods to make the things hard for the hacker but as I said a determined hacker can do anything.": [
        "Execution",
        "Difficulty",
        "Quantity",
        "Capability",
        "Intentionally_act",
        "Intentionally_act",
        "Manufacturing",
        "Using"
    ],
    "But making things hard for them can dissuade them from doing their job or at least gives you some time to change your approach or find a better way in your next release.Reza BigdeliAndroid developer https://www.linkedin.com/in/rezabigdeli/Follow224 3 224 224 3 Android App DevelopmentNative AppEncryptionMore from Reza BigdeliFollowAndroid developer https://www.linkedin.com/in/rezabigdeli/More From MediumText Recognition in Android Using Firebase VisionPayam Asefi in The Startup5 Reasons to go Serverless With Azure.Ajiri Gunn in The StartupDesigning the Android Application Architecture: Ravi SahaniSliding Up And Down: View AnimationMudit SenManaging Application Sizearun kumarCompose O'ClockMarton Braun in Google Developers ExpertsBitrise -- Run Android instrumented tests on different modules within the same projectAlessandro Mautone in The StartupAndroid: Partition tablesDmFrProAboutHelpLegalGet the Medium app": [
        "Measure_duration",
        "Execution",
        "Execution",
        "Using",
        "Categorization",
        "Operational_testing",
        "Separating",
        "Position_on_a_scale",
        "Causation",
        "Suasion",
        "Being_obligated",
        "Relational_quantity",
        "Desirability",
        "Operating_a_system",
        "Similarity",
        "Identicality",
        "Relational_quantity",
        "Cause_change",
        "Difficulty",
        "Giving",
        "Intentionally_act",
        "Locative_relation",
        "Cardinal_numbers",
        "Locative_relation",
        "Using",
        "Becoming",
        "Locating",
        "Causation",
        "Capability"
    ],
    "How to Send a Semi Secure Request to a Server in AndroidReza BigdeliJan 14, 2016 \u00b7 5 min readDisclaimer: This article is written a couple of years ago.": [
        "Protecting",
        "Cardinal_numbers",
        "Calendric_unit",
        "Time_vector",
        "Personal_relationship",
        "Execution",
        "Causation"
    ],
    "But making things hard for them can dissuade them from doing their job or at least gives you some time to change your approach or find a better way in your next release.": [
        "Measure_duration",
        "Execution",
        "Execution",
        "Causation",
        "Suasion",
        "Being_obligated",
        "Relational_quantity",
        "Desirability",
        "Cause_change",
        "Difficulty",
        "Giving",
        "Intentionally_act",
        "Releasing",
        "Locative_relation",
        "Locating",
        "Relational_quantity",
        "Capability"
    ],
    "Well I believe I have a solution.": [
        "Certainty"
    ],
    "How to Send a Semi Secure Request to a Server in AndroidReza BigdeliJan 14, 2016 \u00b7 5 min read": [
        "Protecting",
        "Cardinal_numbers",
        "Execution",
        "Causation"
    ],
    "Reza BigdeliJan 14, 2016 \u00b7 5 min read": [
        "Cardinal_numbers"
    ],
    "The solution has some steps to follow and in each step a problem will arise and we will try to solve them along the way to get to what we want which is a secure valid request to the server.Step One: Just Respond to Application RequestsIf we make the server to only respond to the requests sent from the application we can be a little bit more sure that requests are sent from a real person who is using our application, not a bot or a program of a hacker.": [
        "Intentionally_act",
        "Relative_time",
        "Intentionally_act",
        "Predicament",
        "Being_at_risk",
        "Cardinal_numbers",
        "Sole_instance",
        "Execution",
        "Using",
        "Increment",
        "People",
        "Project",
        "Relational_quantity",
        "Being_in_effect",
        "Quantity",
        "Existence",
        "Coming_to_be",
        "Required_event",
        "Likelihood",
        "Resolve_problem",
        "Causation",
        "Response",
        "Capability",
        "Response",
        "Causation",
        "Using",
        "Execution",
        "Possession",
        "Attempt"
    ],
    "224 224 3 Android App DevelopmentNative AppEncryptionMore from Reza BigdeliFollowAndroid developer https://www.linkedin.com/in/rezabigdeli/More From MediumText Recognition in Android Using Firebase VisionPayam Asefi in The Startup5 Reasons to go Serverless With Azure.Ajiri Gunn in The StartupDesigning the Android Application Architecture: Ravi SahaniSliding Up And Down: View AnimationMudit SenManaging Application Sizearun kumarCompose O'ClockMarton Braun in Google Developers ExpertsBitrise -- Run Android instrumented tests on different modules within the same projectAlessandro Mautone in The StartupAndroid: Partition tablesDmFrPro": [
        "Using",
        "Categorization",
        "Operational_testing",
        "Separating",
        "Operating_a_system",
        "Similarity",
        "Identicality",
        "Cardinal_numbers",
        "Locative_relation",
        "Using",
        "Becoming",
        "Causation"
    ],
    "How can I make this rxjava zip to run in parallel?": [
        "Clothing_parts",
        "Capability",
        "Causation",
        "Execution"
    ],
    "In this codelab, you'll learn how to use the LiveData builder to combine Kotlin coroutines with LiveData in an Android app.": [
        "Education_teaching",
        "Cause_to_amalgamate",
        "Using"
    ],
    "We'll also use Coroutines Asynchronous Flow, which is a type from the coroutines library for representing an async sequence ( or stream ) of values, to implement the same thing.": [
        "Fluidic_motion",
        "Buildings",
        "Communicate_categorization",
        "Sequence",
        "Quantity",
        "Gizmo",
        "Identicality",
        "Using"
    ],
    "You'll start with an existing app, built using Android Architecture Components, that uses LiveData to get a list of objects from a Room database and display them in a RecyclerView grid layout.": [
        "Building_subparts",
        "Existence",
        "Ingredients",
        "Using",
        "Building",
        "Execution",
        "Using",
        "Activity_start"
    ],
    "Here are some code snippets to give you an idea of what you'll be doing.": [
        "Locative_relation",
        "Relational_quantity",
        "Part_piece",
        "Giving",
        "Intentionally_act"
    ],
    "Here is the existing code to query the Room database:": [
        "Locative_relation",
        "Questioning",
        "Building_subparts",
        "Existence"
    ],
    "The LiveData will be updated using the LiveData builder and coroutines with additional sorting logic:": [
        "Differentiation",
        "Increment",
        "Using"
    ],
    "You'll also implement the same logic with Flow:": [
        "Gizmo",
        "Fluidic_motion",
        "Identicality"
    ],
    "If you run into any issues ( code bugs, grammatical errors, unclear wording, etc. ) as you work through this codelab, please report the issue via the `` Report a mistake'' link in the lower left corner of the codelab.": [
        "Point_of_dispute",
        "People_along_political_spectrum",
        "Execution",
        "Quantity",
        "Encoding",
        "Obviousness",
        "Stimulus_focus",
        "Resolve_problem"
    ],
    "Click the following link to download all the code for this codelab:": [
        "Quantity",
        "Relative_time",
        "Impact"
    ],
    "... or clone the GitHub repository from the command line by using the following command:": [
        "Building_subparts",
        "Execution",
        "Relative_time",
        "Using"
    ],
    "The code for this codelab is in the advanced-coroutines-codelab directory.": [],
    "The advanced-coroutines-codelab directory in this repository contains several different modules:": [
        "Building_subparts",
        "Similarity",
        "Quantity",
        "Inclusion"
    ],
    "First, let's see what the starting sample app looks like.": [
        "Process_start",
        "Scrutiny",
        "Grasp",
        "Grant_permission"
    ],
    "Follow these instructions to open the sample app in Android Studio.": [
        "Building_subparts",
        "Secrecy_status",
        "Education_teaching",
        "Relative_time"
    ],
    "When the app first runs, a list of cards appears, each displaying the name and image of a specific plant:": [
        "Temporal_collocation",
        "Similarity",
        "Locale_by_use",
        "Ordinal_numbers",
        "Coming_to_be",
        "Execution"
    ],
    "Each Plant has a growZoneNumber, an attribute that represents the region where the plant is most likely to thrive.": [
        "Locale_by_use",
        "Locale",
        "Locale_by_use",
        "Communicate_categorization",
        "Locative_relation",
        "Inclusion",
        "Likelihood",
        "Thriving"
    ],
    "Users can tap the filter icon to toggle between showing all plants and plants for a specific grow zone, which is hardcoded to zone 9.": [
        "Reasoning",
        "Locale_by_use",
        "Locale",
        "Quantity",
        "Capability",
        "Attaching",
        "Change_position_on_a_scale"
    ],
    "Press the filter button a few times to see this in action.": [
        "Cause_motion",
        "Clothing_parts",
        "Timespan",
        "Intentionally_act",
        "Quantity",
        "Perception_experience"
    ],
    "This app uses Architecture Components to separate the UI code in MainActivity and PlantListFragment from the application logic in PlantListViewModel.": [
        "Using",
        "Ingredients",
        "Differentiation",
        "Using"
    ],
    "PlantRepository provides a bridge between the ViewModel and PlantDao, which accesses the Room database to return a list of Plant objects.": [
        "Building_subparts",
        "Locale_by_use",
        "Execution",
        "Supply"
    ],
    "The UI then takes this list of plants and displays them in RecyclerView grid layout.": [
        "Locale_by_use",
        "Temporal_collocation",
        "Removing"
    ],
    "A Repository is a bridge between a ViewModel and the data": [
        "Building_subparts"
    ],
    "In addition to being the bridge, a repository can be accessed by any ViewModel that wants to use its logic.": [
        "Building_subparts",
        "Quantity",
        "Likelihood",
        "Communication_response",
        "Desiring",
        "Using"
    ],
    "It can also combine the logic from multiple data sources, which we will be implemented later.": [
        "Source_of_getting",
        "Execute_plan",
        "Quantity",
        "Cause_to_amalgamate",
        "Time_vector",
        "Capability"
    ],
    "Before we start modifying the code, let's take a quick look at how the data flows from the database to the UI.": [
        "Scrutiny",
        "Speed",
        "Cause_change",
        "Temporal_subregion",
        "Grant_permission",
        "Fluidic_motion",
        "Have_as_requirement"
    ],
    "Here is how the list of plants are loaded in the ViewModel:": [
        "Locative_relation",
        "Locale_by_use"
    ],
    "A GrowZone is an inline class that only contains an Int representing its zone.": [
        "Locale",
        "Sole_instance",
        "Communicate_categorization",
        "Inclusion"
    ],
    "NoGrowZone represents the absence of a zone, and is only used for filtering.": [
        "Locale",
        "Sole_instance",
        "Communicate_categorization",
        "Using"
    ],
    "The growZone is toggled when the filter button is tapped.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Attaching"
    ],
    "We use a switchMap to determine the list of plants to return.": [
        "Locale_by_use",
        "Execution",
        "Coming_to_believe",
        "Using"
    ],
    "A switchMap applies a given function to the input LiveData ( growZone in this case ) and returns the transformed result as a LiveData.": [
        "Instance",
        "Giving",
        "Cause_change",
        "Causation",
        "Using",
        "Execution"
    ],
    "Here is what the repository and Data Access Object ( DAO ) look like for fetching the plant data from the database:": [
        "Locative_relation",
        "Having_or_lacking_access",
        "Locale_by_use",
        "Bringing",
        "Scrutiny"
    ],
    "While most of the code modifications are in PlantListViewModel and PlantRepository, it's a good idea to take a moment to familiarize yourself with the structure of the project, focusing on how the plant data surfaces through the various layers from the database to the Fragment.": [
        "Project",
        "Locale_by_use",
        "Part_piece",
        "Cause_change",
        "Relational_quantity",
        "Diversity",
        "Buildings",
        "Relational_quantity",
        "Filling",
        "Have_as_requirement",
        "Place_weight_on"
    ],
    "In the next step, we'll modify the code to add custom sorting using the LiveData builder.": [
        "Intentionally_act",
        "Custom",
        "Differentiation",
        "Locative_relation",
        "Using",
        "Cause_change"
    ],
    "The list of plants are currently displayed in alphabetical order, but we want to change the order of this list by listing certain plants first, and then the rest in alphabetical order.": [
        "Locale_by_use",
        "Ordinal_numbers",
        "Stimulus_focus",
        "Likelihood",
        "Temporal_collocation",
        "Cause_change",
        "Possession",
        "Temporal_collocation"
    ],
    "This is similar to shopping apps displaying sponsored results at the top of a list of items available for purchase.": [
        "Shopping",
        "Entity",
        "Commerce_buy",
        "Causation",
        "Similarity",
        "Part_orientational"
    ],
    "Our product team wants the ability to change the sort order dynamically without shipping a new version of the app, so we'll fetch the list of plants to sort first from the backend.": [
        "Gizmo",
        "Locale_by_use",
        "Execution",
        "Age",
        "Ordinal_numbers",
        "Sending",
        "Cause_change",
        "Differentiation",
        "Bringing",
        "Capability",
        "Desiring"
    ],
    "Here's what the app will look like with custom sorting:": [
        "Locative_relation",
        "Custom",
        "Scrutiny"
    ],
    "The custom sort order list consists of these four plants: Orange, Sunflower, Grape, and Avocado.": [
        "Custom",
        "Locale_by_use",
        "Cardinal_numbers"
    ],
    "Notice how they appear first in the list, then followed by the rest of the plants in alphabetical order.": [
        "Becoming_aware",
        "Stimulus_focus",
        "Locale_by_use",
        "Coming_to_be",
        "Ordinal_numbers",
        "Relative_time",
        "Temporal_collocation"
    ],
    "Now if the filter button is pressed ( and only GrowZone 9 plants are displayed ), the Sunflower disappears from the list since its GrowZone is not 9.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Sole_instance",
        "Locale_by_use",
        "Attempt_suasion",
        "Departing"
    ],
    "The other three plants in the custom sort list are in GrowZone 9, so they'll remain at the top of the list.": [
        "Locale_by_use",
        "Custom",
        "Increment",
        "Cardinal_numbers",
        "Part_orientational",
        "Existence"
    ],
    "The only other plant in GrowZone 9 is the Tomato, which appears last in this list.": [
        "Sole_instance",
        "Locale_by_use",
        "Increment",
        "Coming_to_be",
        "Relative_time"
    ],
    "Let's start writing code to implement the custom sort.": [
        "Gizmo",
        "Custom",
        "Text_creation",
        "Temporal_subregion",
        "Grant_permission"
    ],
    "We'll begin by writing a suspending function to fetch the custom sort order from the network and then cache it in memory.": [
        "Custom",
        "Network",
        "Remembering_experience",
        "Duplication",
        "Process_start",
        "Text_creation",
        "Activity_pause",
        "Temporal_collocation",
        "Bringing"
    ],
    "Add the following to PlantRepository:": [
        "Relative_time"
    ],
    "plantsListSortOrderCache is used as the in-memory cache for the custom sort order.": [
        "Custom",
        "Using"
    ],
    "It will fallback to an empty list if there's a network error, so that our app can still display data even if the sorting order isn't fetched.": [
        "Fullness",
        "Network",
        "Continued_state_of_affairs",
        "Capability",
        "Existence",
        "Bringing"
    ],
    "This code uses the CacheOnSuccess utility class provided in the sunflower module to handle caching.": [
        "Resolve_problem",
        "Supply",
        "Using"
    ],
    "By abstracting away the details of implementing caching like this, the application code can be more straightforward.": [
        "Using",
        "Increment",
        "Change_position_on_a_scale",
        "Execute_plan",
        "Candidness",
        "Capability",
        "Becoming_aware"
    ],
    "Since CacheOnSuccess is already well tested, we don't need to write as many tests for our repository to ensure the correct behavior.": [
        "Time_vector",
        "Operational_testing",
        "Conduct",
        "Intentionally_act",
        "Quantity",
        "Building_subparts",
        "Suitability",
        "Operational_testing",
        "Required_event"
    ],
    "It's a good idea to introduce similar higher-level abstractions in your code when using kotlinx-coroutines.": [
        "Relational_quantity",
        "Using",
        "Similarity",
        "Temporal_collocation"
    ],
    "Now let's incorporate some logic to apply the sort to a list of plants.": [
        "Temporal_collocation",
        "Locale_by_use",
        "Relational_quantity",
        "Inclusion",
        "Using",
        "Grant_permission"
    ],
    "This extension function will rearrange the list, placing Plants that are in the customSortOrder at the front of the list.": [
        "Documents",
        "Locale_by_use",
        "Part_orientational"
    ],
    "Now that the sorting logic is in place, replace the code for plants and getPlantsWithGrowZone with the LiveData builder below:": [
        "Temporal_collocation",
        "Differentiation",
        "Locale",
        "Locale_by_use",
        "Take_place_of"
    ],
    "Now if you run the app, the custom sorted plant list should appear:": [
        "Custom",
        "Locale_by_use",
        "Differentiation",
        "Execution",
        "Coming_to_be",
        "Being_obligated",
        "Temporal_collocation"
    ],
    "The LiveData builder allows us to calculate values asynchronously, as liveData is backed by coroutines.": [
        "Taking_sides",
        "Grant_permission"
    ],
    "Here we have a suspend function to fetch a LiveData list of plants from the database, while also calling a suspend function to get the custom sort order.": [
        "Locative_relation",
        "Locale_by_use",
        "Custom",
        "Bringing",
        "Execution",
        "Execution",
        "Activity_pause"
    ],
    "We then combine these two values to sort the list of plants and return the value, all within the builder.": [
        "Locale_by_use",
        "Quantity",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Cause_to_amalgamate",
        "Execution",
        "Differentiation"
    ],
    "You can emit multiple values from a LiveData by calling the emitSource ( ) function whenever you want to emit a new value.": [
        "Emitting",
        "Quantity",
        "Age",
        "Capability",
        "Desiring",
        "Execution"
    ],
    "Note that each call to emitSource ( ) removes the previously-added source.": [
        "Source_of_getting",
        "Execution",
        "Removing"
    ],
    "The coroutine starts execution when it is observed, and is cancelled when the coroutine successfully finishes or if either the database or network call fails.": [
        "Execution",
        "Temporal_collocation",
        "Network",
        "Successful_action",
        "Execution",
        "Activity_finish",
        "Process_start"
    ],
    "If any of the suspend function calls fail, the entire block is canceled and not restarted, which helps avoid leaks.": [
        "Quantity",
        "Measure_linear_extent",
        "Cause_to_resume",
        "Contacting",
        "Ranked_expectation",
        "Preventing",
        "Success_or_failure",
        "Activity_pause",
        "Assistance"
    ],
    "In the next step, we'll explore a variation of getPlantsWithGrowZone using a Transformation.": [
        "Intentionally_act",
        "Cause_change",
        "Locative_relation",
        "Cause_change",
        "Using",
        "Scrutiny"
    ],
    "We'll now modify PlantRepository to implement a suspending transform as each value is processed, learning how to build complex async transforms in LiveData.": [
        "Gizmo",
        "Cause_change",
        "Education_teaching",
        "Temporal_collocation",
        "Processing_materials",
        "Cause_change",
        "Building"
    ],
    "As a prerequisite, let's create a version of the sorting algorithm that's safe to use on the main thread.": [
        "Differentiation",
        "First_rank",
        "Intentionally_create",
        "Grant_permission",
        "Using",
        "Being_at_risk"
    ],
    "We can use withContext to switch to another dispatcher just for the lambda and then resume on the dispatcher we started with.": [
        "Increment",
        "Process_start",
        "Capability",
        "Activity_resume",
        "Change_tool",
        "Temporal_collocation",
        "Using"
    ],
    "To switch between any dispatcher, coroutines uses withContext.": [
        "Quantity",
        "Using",
        "Change_tool"
    ],
    "Calling withContext switches to the other dispatcher just for the lambda then comes back to the dispatcher that called it with the result of that lambda.": [
        "Observable_body_parts",
        "Execution",
        "Increment",
        "Execution",
        "Temporal_collocation",
        "Causation",
        "Change_tool",
        "Execution"
    ],
    "By default, Kotlin coroutines provides three Dispatchers: Main, IO, and Default.": [
        "Cardinal_numbers",
        "Supply"
    ],
    "The IO dispatcher is optimized for IO work like reading from the network or disk, while the Default dispatcher is optimized for CPU intensive tasks.": [
        "Working_on",
        "Reading",
        "Network",
        "Being_obligated"
    ],
    "We can then use this new main-safe sort with the LiveData builder.": [
        "Temporal_collocation",
        "Age",
        "Capability",
        "Using"
    ],
    "Update the block to use a switchMap, which will let you point to a new LiveData every time a new value is received.": [
        "Measure_linear_extent",
        "Frequency",
        "Age",
        "Using",
        "Grant_permission",
        "Measure_duration",
        "Receiving",
        "Adducing"
    ],
    "Compared to the previous version, once the custom sort order is received from the network, it can then be used with the new main-safe applyMainSafeSort.": [
        "Time_vector",
        "Custom",
        "Network",
        "Temporal_collocation",
        "Likelihood",
        "Age",
        "Evaluative_comparison",
        "Using",
        "Frequency",
        "Receiving"
    ],
    "This result is then emitted to the switchMap as the new value returned by getPlantsWithGrowZone.": [
        "Causation",
        "Age",
        "Temporal_collocation",
        "Emitting",
        "Execution"
    ],
    "Similar to plants LiveData above, the coroutine starts execution when it is observed and is terminated either on completion or if either the database or network call fails.": [
        "Similarity",
        "Locale_by_use",
        "Execution",
        "Temporal_collocation",
        "Activity_stop",
        "Activity_finish",
        "Network",
        "Successful_action",
        "Execution",
        "Process_start"
    ],
    "The difference here is that it's safe to make the network call in the map since it is cached.": [
        "Similarity",
        "Network",
        "Duplication",
        "Locative_relation",
        "Risky_situation",
        "Execution",
        "Causation"
    ],
    "Now let's take a look at how this code is implemented with Flow, and compare the implementations.": [
        "Scrutiny",
        "Execute_plan",
        "Fluidic_motion",
        "Evaluative_comparison",
        "Execute_plan",
        "Have_as_requirement",
        "Grant_permission",
        "Temporal_collocation"
    ],
    "We're going to build the same logic using Flow from kotlinx-coroutines.": [
        "Identicality",
        "Using",
        "Fluidic_motion",
        "Building",
        "Motion"
    ],
    "Before we do that, let's take a look at what a flow is and how you can incorporate it into your app.": [
        "Fluidic_motion",
        "Capability",
        "Inclusion",
        "Scrutiny",
        "Have_as_requirement",
        "Grant_permission",
        "Intentionally_act"
    ],
    "A flow is an asynchronous version of a Sequence, a type of collection whose values are lazily produced.": [
        "Fluidic_motion",
        "Sequence",
        "Execution",
        "Intentionally_create"
    ],
    "Just like a sequence, a flow produces each value on-demand whenever the value is needed, and flows can contain an infinite number of values.": [
        "Sequence",
        "Fluidic_motion",
        "Fluidic_motion",
        "Quantity",
        "Required_event",
        "Manufacturing",
        "Inclusion",
        "Capability"
    ],
    "So, why did Kotlin introduce a new Flow type, and how is it different than a regular sequence ?": [
        "Reason",
        "Fluidic_motion",
        "Similarity",
        "Sequence",
        "Intentionally_act",
        "Age"
    ],
    "The answer lies in the magic of asynchronicity.": [
        "Communication_response",
        "Ineffability",
        "Being_located"
    ],
    "Flow includes full support for coroutines.": [
        "Fluidic_motion",
        "Fullness",
        "Taking_sides",
        "Inclusion"
    ],
    "That means you can build, transform, and consume a Flow using coroutines.": [
        "Fluidic_motion",
        "Using",
        "Capability",
        "Ingestion",
        "Cause_change",
        "Building",
        "Evidence"
    ],
    "You can also control concurrency, which means coordinating the execution of several coroutines declaratively with Flow.": [
        "Being_obligated",
        "Fluidic_motion",
        "Quantity",
        "Capability",
        "Execution",
        "Linguistic_meaning",
        "Control"
    ],
    "This opens up a lot of exciting possibilities.": [
        "Body_movement",
        "Quantity",
        "Likelihood",
        "Stimulus_focus",
        "Locative_relation"
    ],
    "A Flow is an async sequence of values": [
        "Fluidic_motion",
        "Sequence"
    ],
    "Flow produces values one at a time ( instead of all at once ) that can generate values from async operations like network requests, database calls, or other async code.": [
        "Fluidic_motion",
        "Cardinal_numbers",
        "Measure_duration",
        "Quantity",
        "Network",
        "Assessing",
        "Execution",
        "Contacting",
        "Increment",
        "Capability",
        "Businesses",
        "Cause_to_start",
        "Frequency",
        "Manufacturing"
    ],
    "It supports coroutines throughout its API, so you can transform a flow using coroutines as well !": [
        "Fluidic_motion",
        "Using",
        "Evidence",
        "Capability",
        "Cause_change"
    ],
    "Flow can be used in a fully-reactive programming style.": [
        "Fluidic_motion",
        "Hair_configuration",
        "Likelihood",
        "Using"
    ],
    "If you've used something like RxJava before, Flow provides similar functionality.": [
        "Fluidic_motion",
        "Similarity",
        "Supply",
        "Using"
    ],
    "Application logic can be expressed succinctly by transforming a flow with functional operators such as map, flatMapLatest, combine, and so on.": [
        "Using",
        "Fluidic_motion",
        "Being_operational",
        "Cause_to_amalgamate",
        "Likelihood",
        "Expressing_publicly",
        "Cause_change"
    ],
    "Flow also supports suspending functions on most operators.": [
        "Fluidic_motion",
        "Relational_quantity",
        "Activity_pause",
        "Evidence"
    ],
    "This lets you do sequential async tasks inside an operator like map.": [
        "Sequence",
        "Being_obligated",
        "Intentionally_act",
        "Make_possible_to_do"
    ],
    "By using suspending operations inside of a flow, it often results in shorter and easier to read code than the equivalent code in a fully-reactive style.": [
        "Businesses",
        "Fluidic_motion",
        "Hair_configuration",
        "Activity_pause",
        "Frequency",
        "Categorization",
        "Using",
        "Causation"
    ],
    "In this codelab, we're going to explore using both approaches.": [
        "Execution",
        "Quantity",
        "Using",
        "Scrutiny",
        "Motion"
    ],
    "To get used to how Flow produces values on demand ( or lazily ), take a look at the following flow that emits the values ( 1, 2, 3 ) and prints before, during, and after each item is produced.": [
        "Execution",
        "Fluidic_motion",
        "Execution",
        "Scrutiny",
        "Fluidic_motion",
        "Emitting",
        "Cardinal_numbers",
        "Entity",
        "Cardinal_numbers",
        "Manufacturing",
        "Creating",
        "Relative_time",
        "Using",
        "Have_as_requirement"
    ],
    "If you run this, it produces this output:": [
        "Execution",
        "Manufacturing"
    ],
    "You can see how execution bounces between the collect lambda and the flow builder.": [
        "Execution",
        "Gathering_up",
        "Fluidic_motion",
        "Capability",
        "Grasp"
    ],
    "Every time the flow builder calls emit, it suspends until the element is completely processed.": [
        "Frequency",
        "Fluidic_motion",
        "Emitting",
        "Ingredients",
        "Execution",
        "Processing_materials",
        "Measure_duration",
        "Activity_pause"
    ],
    "Then, when another value is requested from the flow, it resumes from where it left off until it calls emit again.": [
        "Temporal_collocation",
        "Temporal_collocation",
        "Fluidic_motion",
        "Direction",
        "Emitting",
        "Increment",
        "Locative_relation",
        "Labeling",
        "Locative_relation",
        "Execution",
        "Activity_resume"
    ],
    "When the flow builder completes, the Flow is cancelled and collect resumes, letting and the calling coroutine prints `` flow is completed.''": [
        "Temporal_collocation",
        "Fluidic_motion",
        "Fluidic_motion",
        "Execution",
        "Gathering_up",
        "Activity_finish",
        "Grant_permission"
    ],
    "The call to collect is very important.": [
        "Gathering_up",
        "Degree",
        "Execution",
        "Importance"
    ],
    "Flow uses suspending operators like collect instead of exposing an Iterator interface so that it always knows when it's being actively consumed.": [
        "Fluidic_motion",
        "Gathering_up",
        "Reveal_secret",
        "Temporal_collocation",
        "Ingestion",
        "Using",
        "Frequency",
        "Activity_pause",
        "Awareness"
    ],
    "More importantly, it knows when the caller can't request any more values so it can cleanup resources.": [
        "Temporal_collocation",
        "Quantity",
        "Increment",
        "Increment",
        "Capability",
        "Capability",
        "Execution",
        "Awareness"
    ],
    "Flow is built from the ground up using coroutines.": [
        "Fluidic_motion",
        "Grinding",
        "Using",
        "Building"
    ],
    "By using the suspend and resume mechanism of coroutines, they can synchronize the execution of the producer ( flow ) with the consumer ( collect ).": [
        "Execution",
        "Fluidic_motion",
        "Gathering_up",
        "Execution",
        "Capability",
        "Manufacturing",
        "Activity_resume",
        "Activity_pause",
        "Using"
    ],
    "If you've used reactive streams and are familiar with the concept of backpressure, it is implemented in Flow by suspending a coroutine.": [
        "Fluidic_motion",
        "Quantity",
        "Execute_plan",
        "Using",
        "Expertise",
        "Activity_pause"
    ],
    "The Flow in the above example starts running when the collect operator runs.": [
        "Temporal_collocation",
        "Gathering_up",
        "Instance",
        "Execution",
        "Self_motion",
        "Fluidic_motion",
        "Process_start"
    ],
    "Creating a new Flow by calling the flow builder or other APIs does not cause any work to execute.": [
        "Fluidic_motion",
        "Fluidic_motion",
        "Working_on",
        "Execution",
        "Age",
        "Increment",
        "Quantity",
        "Creating",
        "Intentionally_act",
        "Execution",
        "Causation"
    ],
    "The suspending operator collect is called a terminal operator in Flow.": [
        "Buildings",
        "Fluidic_motion",
        "Activity_pause",
        "Gathering_up",
        "Execution"
    ],
    "There are other suspending terminal operators such as toList, first and single shipped with kotlinx-coroutines, and you can build your own.": [
        "Activity_pause",
        "Buildings",
        "Ordinal_numbers",
        "Sole_instance",
        "Sending",
        "Increment",
        "Possession",
        "Building",
        "Existence",
        "Capability"
    ],
    "By default Flow will execute:": [
        "Fluidic_motion",
        "Execution"
    ],
    "These rules are the default behavior of Flow and it is possible to make a Flow that has shared state with previous runs, doesn't restart for every terminal operator, and executes independently of collection with built-in or custom transformations of a Flow.": [
        "Execution",
        "Fluidic_motion",
        "Political_locales",
        "Time_vector",
        "Execution",
        "Intentionally_act",
        "Frequency",
        "Buildings",
        "Execution",
        "Likelihood",
        "Cause_change",
        "Activity_resume",
        "Conduct",
        "Causation"
    ],
    "Executing a Flow is called collecting a flow.": [
        "Execution",
        "Fluidic_motion",
        "Gathering_up",
        "Fluidic_motion",
        "Execution"
    ],
    "By default, a Flow will not do anything until it has been collected which means applying any terminal operator.": [
        "Fluidic_motion",
        "Gathering_up",
        "Quantity",
        "Buildings",
        "Evidence",
        "Intentionally_act",
        "Using"
    ],
    "myFlow.toList ( ) / / toList collects this flow and adds the values to a List": [
        "Fluidic_motion",
        "Gathering_up"
    ],
    "We also say an individual value is collected from the Flow by a terminal operator.": [
        "People",
        "Fluidic_motion",
        "Buildings",
        "Gathering_up"
    ],
    "myFlow.collect -LCB- item - > println ( `` $ item has been collected'' ) -RCB-": [],
    "Because of these rules, a Flow can participate in structured concurrency, and it's safe to start long-running coroutines from a Flow.": [
        "Execution",
        "Fluidic_motion",
        "Weapon",
        "Capability",
        "Participation",
        "Activity_start",
        "Risky_situation",
        "Causation"
    ],
    "There's no chance a Flow will leak resources, since they're always cleaned up using coroutine cooperative cancellation rules when the caller is cancelled.": [
        "Quantity",
        "Fluidic_motion",
        "Frequency",
        "Execution",
        "Temporal_collocation",
        "Reveal_secret",
        "Using",
        "Likelihood",
        "Existence"
    ],
    "Lets modify the flow above to only look at the first two elements using the take operator, then collect it twice.": [
        "Fluidic_motion",
        "Sole_instance",
        "Ordinal_numbers",
        "Ingredients",
        "Have_as_requirement",
        "Cardinal_numbers",
        "Gathering_up",
        "Event_instance",
        "Temporal_collocation",
        "Using",
        "Scrutiny",
        "Cause_change"
    ],
    "Running this code, you'll see this output:": [
        "Execution",
        "Grasp"
    ],
    "The flow lambda starts from the top each time collect is called.": [
        "Fluidic_motion",
        "Part_orientational",
        "Gathering_up",
        "Execution",
        "Process_start",
        "Measure_duration"
    ],
    "This is important if the flow performed expensive work like making a network request.": [
        "Fluidic_motion",
        "Working_on",
        "Network",
        "Expensiveness",
        "Execution",
        "Importance",
        "Causation",
        "Intentionally_act"
    ],
    "Also, since we applied the take ( 2 ) operator, the flow will only produce two values.": [
        "Have_as_requirement",
        "Fluidic_motion",
        "Sole_instance",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Intentionally_create",
        "Using"
    ],
    "It will not resume the flow lambda again after the second call to emit, so the line `` second value collected ...'' will never print.": [
        "Fluidic_motion",
        "Measure_duration",
        "Emitting",
        "Gathering_up",
        "Frequency",
        "Text_creation",
        "Execution",
        "Activity_resume"
    ],
    "By default, a Flow will restart from the top every time a terminal operator is applied.": [
        "Fluidic_motion",
        "Part_orientational",
        "Frequency",
        "Buildings",
        "Using",
        "Measure_duration",
        "Activity_resume"
    ],
    "This is important if the Flow performs expensive work, such as making a network request.": [
        "Fluidic_motion",
        "Being_employed",
        "Network",
        "Expensiveness",
        "Execution",
        "Importance",
        "Causation",
        "Intentionally_act"
    ],
    "OK, so Flow is lazy like a Sequence, but how is it also async ?": [
        "Fluidic_motion",
        "Sequence"
    ],
    "Let's take a look at an example of an async sequence -- observing changes to a database.": [
        "Scrutiny",
        "Instance",
        "Sequence",
        "Undergo_change",
        "Grant_permission",
        "Have_as_requirement"
    ],
    "In this example, we need to coordinate data produced on a database thread pool with observers that live on another thread such as the main or UI thread.": [
        "Instance",
        "Natural_features",
        "Creating",
        "First_rank",
        "Required_event",
        "Increment",
        "Residence"
    ],
    "And, since we'll be emitting results repeatedly as the data changes, this scenario is a natural fit for an async sequence pattern.": [
        "Emitting",
        "Sequence",
        "Pattern",
        "Undergo_change",
        "Causation"
    ],
    "Imagine you're tasked with writing the Room integration for Flow.": [
        "Awareness",
        "Building_subparts",
        "Fluidic_motion",
        "Text_creation"
    ],
    "If you started with the existing suspend query support in Room, you might write something like this:": [
        "Questioning",
        "Building_subparts",
        "Likelihood",
        "Existence",
        "Taking_sides",
        "Activity_pause",
        "Activity_start"
    ],
    "This code relies upon two imaginary suspending functions to generate a Flow:": [
        "Fluidic_motion",
        "Reliance",
        "Cardinal_numbers",
        "Activity_pause",
        "Creating"
    ],
    "When collected, the flow initially emits the first value of the query.": [
        "Temporal_collocation",
        "Gathering_up",
        "Fluidic_motion",
        "Emitting",
        "Questioning",
        "Ordinal_numbers"
    ],
    "Once that value is processed, the flow resumes and calls suspendUntilChanged, which will do as it says -- suspend the flow until one of the tables changes.": [
        "Fluidic_motion",
        "Contacting",
        "Undergo_change",
        "Processing_materials",
        "Activity_resume",
        "Intentionally_act",
        "Cardinal_numbers",
        "Activity_pause",
        "Frequency"
    ],
    "At this point, nothing is happening in the system until one of the tables changes and the flow resumes.": [
        "Locale",
        "Gizmo",
        "Undergo_change",
        "Fluidic_motion",
        "Activity_resume",
        "Event",
        "Cardinal_numbers"
    ],
    "When the flow resumes, it makes another main-safe query, and emits the results.": [
        "Temporal_collocation",
        "Fluidic_motion",
        "Increment",
        "Questioning",
        "Emitting",
        "Causation",
        "Activity_resume",
        "Causation"
    ],
    "This process continues forever in an infinite loop.": [
        "Execution",
        "Process_continue"
    ],
    "But wait -- we don't want to leak work !": [
        "Waiting",
        "Reveal_secret",
        "Working_on",
        "Intentionally_act",
        "Possession"
    ],
    "The coroutine isn't very expensive by itself, but it repeatedly wakes itself up to perform a database query.": [
        "Cause_to_wake",
        "Questioning",
        "Degree",
        "Expensiveness",
        "Being_up_to_it",
        "Intentionally_act"
    ],
    "That's a pretty expensive thing to leak.": [
        "Reveal_secret",
        "Expensiveness"
    ],
    "Even though we've created an infinite loop, Flow helps us out by supporting structured concurrency.": [
        "Fluidic_motion",
        "Locative_relation",
        "Weapon",
        "Intentionally_create",
        "Assistance",
        "Taking_sides"
    ],
    "The only way to consume values or iterate over a flow is to use a terminal operator.": [
        "Fluidic_motion",
        "Buildings",
        "Sole_instance",
        "Ingestion",
        "Using",
        "Execution"
    ],
    "Because all terminal operators are suspend functions, the work is bound to the lifetime of the scope that calls them.": [
        "Quantity",
        "Buildings",
        "Being_employed",
        "Execution",
        "Scope",
        "Attaching",
        "Activity_pause"
    ],
    "When the scope is cancelled, the flow will automatically cancel itself using the regular coroutine cooperative cancellation rules.": [
        "Temporal_collocation",
        "Scope",
        "Fluidic_motion",
        "Execution",
        "Using"
    ],
    "So, even though we've written an infinite loop in our flow builder, we can safely consume it without leaks due to structured concurrency.": [
        "Fluidic_motion",
        "Execution",
        "Risky_situation",
        "Capability",
        "Ingestion"
    ],
    "Because a flow allows you to consume values only with terminal operators, it can support structured concurrency.": [
        "Fluidic_motion",
        "Taking_time",
        "Grant_permission",
        "Sole_instance",
        "Likelihood",
        "Ingestion",
        "Taking_sides"
    ],
    "When the consumer of a flow is cancelled, the entire Flow is cancelled.": [
        "Temporal_collocation",
        "Fluidic_motion",
        "Fluidic_motion",
        "Ranked_expectation"
    ],
    "Due to structured concurrency, it is impossible to leak a coroutine from an intermediate step": [
        "Execution",
        "Reveal_secret",
        "Intentionally_act",
        "Likelihood"
    ],
    "In this step, you learn how to use Flow with Room and wire it up to the UI.": [
        "Intentionally_act",
        "Fluidic_motion",
        "Building_subparts",
        "Education_teaching",
        "Being_up_to_it",
        "Using"
    ],
    "This step is common for many usages of Flow.": [
        "Fluidic_motion",
        "Intentionally_act",
        "Quantity"
    ],
    "When used this way, the Flow from Room operates as an observable database query similar to a LiveData.": [
        "Execution",
        "Building_subparts",
        "Questioning",
        "Using",
        "Fluidic_motion",
        "Temporal_collocation",
        "Similarity",
        "Using"
    ],
    "To get started, open up PlantDao.kt, and add two new queries that return Flow < List <Plant> >:": [
        "Locative_relation",
        "Cause_change_of_position_on_a_scale",
        "Fluidic_motion",
        "Locale_by_use",
        "Execution",
        "Age",
        "Cardinal_numbers",
        "Execution",
        "Questioning",
        "Secrecy_status",
        "Activity_start"
    ],
    "Note that except for the return types, these functions are identical to the LiveData versions.": [
        "Execution",
        "Similarity"
    ],
    "But, we'll develop them side-by-side to compare them.": [
        "Evaluative_comparison",
        "Cause_to_make_progress"
    ],
    "In this codelab, we're going to build the same database transform using the LiveData builder and Flow.": [
        "Fluidic_motion",
        "Identicality",
        "Motion",
        "Using",
        "Cause_change",
        "Building"
    ],
    "In a production app, you would only include one of these, but it's useful to compare them to each other to see how they work.": [
        "Intentionally_create",
        "Sole_instance",
        "Evaluative_comparison",
        "Increment",
        "Working_on",
        "Cardinal_numbers",
        "Inclusion",
        "Grasp"
    ],
    "By specifying a Flow return type, Room executes the query with the following characteristics:": [
        "Fluidic_motion",
        "Building_subparts",
        "Questioning",
        "Distinctiveness",
        "Execution",
        "Relative_time",
        "Execution"
    ],
    "Put together, this makes Flow a great return type for observing the database from the UI layer.": [
        "Fluidic_motion",
        "Execution",
        "Desirability",
        "Compliance",
        "Building",
        "Causation"
    ],
    "To continue wiring up the new return values to the UI, open up PlantRepository.kt, and add the following code:": [
        "Execution",
        "Cause_change_of_position_on_a_scale",
        "Age",
        "Relative_time",
        "Secrecy_status",
        "Activity_ongoing"
    ],
    "For now, we're just passing the Flow values through to the caller.": [
        "Temporal_collocation",
        "Fluidic_motion",
        "Traversing",
        "Assessing"
    ],
    "This is exactly the same as when we started this codelab with passing the LiveData through to the ViewModel.": [
        "Identicality",
        "Temporal_collocation",
        "Frequency",
        "Traversing",
        "Activity_start"
    ],
    "In PlantListViewModel.kt, let's start simple and just expose the plantsFlow.": [
        "Reveal_secret",
        "Activity_start",
        "Grant_permission"
    ],
    "We'll come back and add the grow zone toggle to the flow version in the next few steps.": [
        "Observable_body_parts",
        "Change_position_on_a_scale",
        "Locale",
        "Fluidic_motion",
        "Locative_relation",
        "Intentionally_act",
        "Quantity",
        "Execution",
        "Cause_change_of_position_on_a_scale"
    ],
    "Again, we'll keep the LiveData version ( val plants ) around for comparison as we go.": [
        "Locative_relation",
        "Locale_by_use",
        "Becoming",
        "Activity_ongoing"
    ],
    "Since we want to keep LiveData in the UI layer for this codelab, we'll use the asLiveData extension function to convert our Flow into a LiveData.": [
        "Documents",
        "Activity_ongoing",
        "Fluidic_motion",
        "Cause_change",
        "Possession",
        "Using"
    ],
    "Just like the LiveData builder, this adds a configurable timeout to the LiveData generated.": [
        "Creating"
    ],
    "This is nice because it keeps us from restarting our query every time the configuration changes ( such as from device rotation ).": [
        "Frequency",
        "Gizmo",
        "Questioning",
        "Undergo_change",
        "Stimulus_focus",
        "Activity_ongoing",
        "Measure_duration",
        "Activity_resume"
    ],
    "The asLiveData operator converts a Flow into a LiveData with a configurable timeout.": [
        "Fluidic_motion",
        "Cause_change"
    ],
    "Just like the liveData builder, the timeout will help the Flow survive restart.": [
        "Fluidic_motion",
        "Surviving",
        "Assistance"
    ],
    "If another screen observes before the timeout, the Flow won't be cancelled.": [
        "Fluidic_motion",
        "Increment",
        "Compliance"
    ],
    "Since flow offers main-safety and the ability to cancel, you can choose to pass the Flow all the way through to the UI layer without converting it to a LiveData.": [
        "Fluidic_motion",
        "Fluidic_motion",
        "Quantity",
        "Cause_change",
        "Capability",
        "Execution",
        "Process_end",
        "Choosing",
        "Capability"
    ],
    "However, for this codelab we will stick to using LiveData in the UI layer.": [
        "Concessive",
        "Using"
    ],
    "Also in the ViewModel, add a cache update to the init block.": [
        "Measure_linear_extent"
    ],
    "This step is optional for now, but if you clear your cache and don't add this call, you will not see any data in the app.": [
        "Temporal_collocation",
        "Execution",
        "Intentionally_act",
        "Quantity",
        "Removing",
        "Intentionally_act",
        "Grasp"
    ],
    "Open PlantListFragment.kt, and change the subscribeUi function to point to our new plantsUsingFlow LiveData.": [
        "Cause_change",
        "Age",
        "Adducing"
    ],
    "If you run the app again, you should see that you're now loading the data using Flow !": [
        "Fluidic_motion",
        "Using",
        "Being_obligated",
        "Execution",
        "Grasp",
        "Temporal_collocation"
    ],
    "Since we haven't implemented the switchMap yet, the filter option doesn't do anything.": [
        "Possibilities",
        "Execute_plan",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "In the next step we'll take a look at transforming the data in a Flow.": [
        "Locative_relation",
        "Fluidic_motion",
        "Intentionally_act",
        "Scrutiny",
        "Cause_change",
        "Have_as_requirement"
    ],
    "In this step, you'll apply the sort order to plantsFlow.": [
        "Intentionally_act",
        "Using"
    ],
    "We'll do this using the declarative API of flow.": [
        "Fluidic_motion",
        "Intentionally_act",
        "Using"
    ],
    "Declarative is an API style that means describing what your program should do instead of how to do it.": [
        "Hair_configuration",
        "Project",
        "Being_obligated",
        "Intentionally_act",
        "Communicate_categorization",
        "Linguistic_meaning"
    ],
    "One of the more commonly known declarative languages is SQL, which allows developers to express what they would like the database to query instead of how to perform the query.": [
        "Questioning",
        "Increment",
        "Intentionally_act",
        "Cardinal_numbers",
        "Experiencer_focus",
        "Expressing_publicly",
        "Permitting",
        "Awareness"
    ],
    "By using transforms like map, combine, or mapLatest, we can express how we would like to transform each element as it moves through the flow declaratively.": [
        "Cause_to_amalgamate",
        "Ingredients",
        "Fluidic_motion",
        "Capability",
        "Using",
        "Motion",
        "Cause_change",
        "Experiencer_focus",
        "Expressing_publicly"
    ],
    "It even lets us express concurrency declaratively, which can really simplify code.": [
        "Make_possible_to_do",
        "Being_obligated",
        "Expressing_publicly",
        "Capability"
    ],
    "In this section, you'll see how you can use operators to tell Flow to launch two coroutines and combine their results declaratively.": [
        "Part_whole",
        "Fluidic_motion",
        "Cause_to_amalgamate",
        "Cardinal_numbers",
        "Causation",
        "Shoot_projectiles",
        "Telling",
        "Using",
        "Capability",
        "Grasp"
    ],
    "To get started, open up PlantRepository.kt and define a new private flow called customSortFlow:": [
        "Locative_relation",
        "Fluidic_motion",
        "Execution",
        "Secrecy_status",
        "Age",
        "Communicate_categorization",
        "Execution",
        "Activity_start"
    ],
    "This defines a Flow that, when collected, will call getOrAwait and emit the sort order.": [
        "Fluidic_motion",
        "Temporal_collocation",
        "Gathering_up",
        "Emitting",
        "Execution",
        "Communicate_categorization"
    ],
    "Since this flow only emits a single value, you can also build it directly from the getOrAwait function using asFlow.": [
        "Fluidic_motion",
        "Sole_instance",
        "Emitting",
        "Sole_instance",
        "Using",
        "Capability",
        "Building"
    ],
    "This code creates a new Flow that calls getOrAwait and emits the result as its first and only value.": [
        "Emitting",
        "Age",
        "Execution",
        "Sole_instance",
        "Ordinal_numbers",
        "Fluidic_motion",
        "Causation",
        "Creating"
    ],
    "It does this by referencing the getOrAwait method using:: and calling asFlow on the resulting Function object.": [
        "Causation",
        "Execution",
        "Using",
        "Execution",
        "Intentionally_act"
    ],
    "Both of these flows do the same thing, call getOrAwait and emit the result before completing.": [
        "Fluidic_motion",
        "Emitting",
        "Causation",
        "Identicality",
        "Quantity",
        "Activity_finish",
        "Intentionally_act"
    ],
    "Now that we have two flows, customSortFlow and plantsFlow, let's combine them declaratively !": [
        "Temporal_collocation",
        "Fluidic_motion",
        "Cause_to_amalgamate",
        "Cardinal_numbers",
        "Grant_permission"
    ],
    "Add a combine operator to plantsFlow:": [
        "Cause_to_amalgamate"
    ],
    "The combine operator combines two flows together.": [
        "Cause_to_amalgamate",
        "Cause_to_amalgamate",
        "Fluidic_motion",
        "Collaboration",
        "Cardinal_numbers"
    ],
    "Both flows will run in their own coroutine, then whenever either flow produces a new value the transformation will be called with the latest value from either flow.": [
        "Fluidic_motion",
        "Fluidic_motion",
        "Cause_change",
        "Quantity",
        "Age",
        "Relative_time",
        "Possession",
        "Execution",
        "Execution",
        "Temporal_collocation",
        "Creating"
    ],
    "By using combine, we can combine the cached network lookup with our database query.": [
        "Network",
        "Capability",
        "Cause_to_amalgamate",
        "Questioning",
        "Using"
    ],
    "Both of them will run on different coroutines concurrently.": [
        "Similarity",
        "Quantity",
        "Execution"
    ],
    "That means that while Room starts the network request, Retrofit can start the network query.": [
        "Building_subparts",
        "Network",
        "Questioning",
        "Process_start",
        "Capability",
        "Execution",
        "Activity_start",
        "Evidence"
    ],
    "Then, as soon as a result is available for both flows, it will call the combine lambda where we apply the loaded sort order to the loaded plants.": [
        "Temporal_collocation",
        "Causation",
        "Fluidic_motion",
        "Cause_to_amalgamate",
        "Locale_by_use",
        "Quantity",
        "Locative_relation",
        "Execution",
        "Using"
    ],
    "The transformation combine will launch one coroutine for each flow being combined.": [
        "Cause_change",
        "Fluidic_motion",
        "Cause_to_amalgamate",
        "Cardinal_numbers",
        "Cause_to_amalgamate",
        "Shoot_projectiles"
    ],
    "This lets you combine two flows concurrently.": [
        "Cause_to_amalgamate",
        "Fluidic_motion",
        "Make_possible_to_do",
        "Cardinal_numbers"
    ],
    "It will combine the flows in a `` fair'' manner, which means that they'll all get a chance to produce a value ( even if one of them is produced by a tight loop ).": [
        "Fluidic_motion",
        "Linguistic_meaning",
        "Conduct",
        "Cause_to_amalgamate",
        "Likelihood",
        "Intentionally_create",
        "Cardinal_numbers",
        "Manufacturing",
        "Execution"
    ],
    "To explore how the combine operator works, modify customSortFlow to emit twice with a substantial delay in onStart like this:": [
        "Cause_to_amalgamate",
        "Emitting",
        "Scrutiny",
        "Change_event_time",
        "Event_instance",
        "Cause_change"
    ],
    "The transform onStart will happen when an observer listens before other operators, and it can emit placeholder values.": [
        "Temporal_collocation",
        "Emitting",
        "Cause_change",
        "Increment",
        "Capability",
        "Perception_active",
        "Event"
    ],
    "So here we're emitting an empty list, delaying calling getOrAwait by 1500ms, then continuing the original flow.": [
        "Locative_relation",
        "Emitting",
        "Fullness",
        "Fluidic_motion",
        "Change_event_time",
        "Temporal_collocation",
        "Process_continue",
        "Execution"
    ],
    "If you run the app now, you'll see that the Room database query returns right away, combining with the empty list ( which means it'll sort alphabetically ).": [
        "Temporal_collocation",
        "Building_subparts",
        "Questioning",
        "Cause_to_amalgamate",
        "Fullness",
        "Evidence",
        "Differentiation",
        "Execution",
        "Execution",
        "Correctness",
        "Grasp"
    ],
    "Then around 1500ms later, it applies the custom sort.": [
        "Temporal_collocation",
        "Custom",
        "Locative_relation",
        "Time_vector",
        "Using"
    ],
    "Before continuing with the codelab, remove the onStart transform from the customSortFlow.": [
        "Process_continue",
        "Cause_change",
        "Removing"
    ],
    "You can use onStart to run suspending code before a flow runs.": [
        "Fluidic_motion",
        "Execution",
        "Capability",
        "Execution",
        "Activity_pause",
        "Using"
    ],
    "It can even emit extra values into the flow, so you could use it to emit a Loading state on a network request flow.": [
        "Political_locales",
        "Network",
        "Fluidic_motion",
        "Execution",
        "Capability",
        "Capability",
        "Emitting",
        "Using"
    ],
    "Flow can call main-safe functions, like we're doing here, and it will preserve the normal main-safety guarantees of coroutines.": [
        "Fluidic_motion",
        "Locative_relation",
        "Mental_property",
        "Intentionally_act",
        "Preserving",
        "Execution",
        "Capability"
    ],
    "Both Room and Retrofit will give us main-safety, and we don't need to do anything else to make network requests or database queries with Flow.": [
        "Building_subparts",
        "Network",
        "Questioning",
        "Fluidic_motion",
        "Quantity",
        "Intentionally_act",
        "Execution",
        "Giving",
        "Required_event",
        "Causation"
    ],
    "This flow uses the following threads already:": [
        "Fluidic_motion",
        "Natural_features",
        "Time_vector",
        "Using",
        "Relative_time"
    ],
    "So if all we were doing was calling suspend functions in Retrofit and and using Room flows, we wouldn't need to complicate this code with main-safety concerns.": [
        "Quantity",
        "Building_subparts",
        "Point_of_dispute",
        "Using",
        "Fluidic_motion",
        "Intentionally_act",
        "Required_event",
        "Activity_pause",
        "Execution"
    ],
    "However, as our data set grows in size, the call to applySort may become slow enough to block the main thread.": [
        "Concessive",
        "Eclipse",
        "Natural_features",
        "Execution",
        "First_rank",
        "Change_position_on_a_scale",
        "Execution",
        "Likelihood",
        "Becoming",
        "Taking_time",
        "Sufficiency"
    ],
    "Flow offers a declarative API called flowOn to control which thread the flow runs on.": [
        "Fluidic_motion",
        "Natural_features",
        "Fluidic_motion",
        "Execution",
        "Control",
        "Execution",
        "Offering"
    ],
    "Add flowOn to the plantsFlow like this:": [],
    "Calling flowOn has two important effects on how the code executes:": [
        "Execution",
        "Importance",
        "Cardinal_numbers",
        "Objective_influence",
        "Inclusion"
    ],
    "This is very similar to how withContext works to switch dispatchers, but it does introduce a buffer in the middle of our transforms that changes how the flow works.": [
        "Part_inner_outer",
        "Undergo_change",
        "Fluidic_motion",
        "Degree",
        "Being_employed",
        "Intentionally_act",
        "Similarity",
        "Change_tool"
    ],
    "The coroutine launched by flowOn is allowed to produce results faster than the caller consumes them, and it will buffer a large number of them by default.": [
        "Manufacturing",
        "Ingestion",
        "Dimension",
        "Shoot_projectiles",
        "Quantity",
        "Causation",
        "Grant_permission"
    ],
    "In this case, we plan on sending the results to the UI, so we would only ever care about the most recent result.": [
        "Instance",
        "Causation",
        "Sole_instance",
        "Relative_time",
        "Causation",
        "Causation"
    ],
    "That's what the conflate operator does -- it modifies the buffer of flowOn to store only the last result.": [
        "Storing",
        "Sole_instance",
        "Causation",
        "Relative_time",
        "Intentionally_act",
        "Cause_change"
    ],
    "If another result comes in before the previous one is read, it gets overwritten.": [
        "Causation",
        "Cardinal_numbers",
        "Increment",
        "Time_vector",
        "Execution",
        "Execution",
        "Categorization"
    ],
    "The operator flowOn launches a new coroutine to collect the flow above it and introduces a buffer to write the results.": [
        "Shoot_projectiles",
        "Gathering_up",
        "Causation",
        "Age",
        "Fluidic_motion"
    ],
    "You can control the buffer with more operators, such as conflate which says to store only the last value produced in the buffer.": [
        "Sole_instance",
        "Increment",
        "Relative_time",
        "Capability",
        "Storing",
        "Creating",
        "Control"
    ],
    "It's important to be aware of the buffer when using flowOn with large objects such as Room results since it is easy to use a large amount of memory buffering results.": [
        "Temporal_collocation",
        "Building_subparts",
        "Remembering_experience",
        "Dimension",
        "Causation",
        "Importance",
        "Quantity",
        "Using",
        "Difficulty",
        "Using",
        "Awareness"
    ],
    "If you run the app again, you should see that you're now loading the data and applying the custom sort order using Flow !": [
        "Custom",
        "Fluidic_motion",
        "Using",
        "Being_obligated",
        "Execution",
        "Using",
        "Temporal_collocation",
        "Grasp"
    ],
    "In the next step we'll take a look at another way to provide main safety using flow.": [
        "Locative_relation",
        "Scrutiny",
        "Being_at_risk",
        "Fluidic_motion",
        "Intentionally_act",
        "Increment",
        "First_rank",
        "Using",
        "Have_as_requirement",
        "Supply"
    ],
    "To finish up the flow version of this API, open up PlantListViewModel.kt, where we will switch between the flows based on GrowZone like we do in the LiveData version.": [
        "Fluidic_motion",
        "Locative_relation",
        "Fluidic_motion",
        "Secrecy_status",
        "Change_tool",
        "Activity_finish",
        "Intentionally_act",
        "Locative_relation"
    ],
    "Add the following code below the plants liveData:": [
        "Relative_time",
        "Locale_by_use"
    ],
    "Note, this example uses several @ExperimentalCoroutinesApis, and it is likely that there will be a more concise version in the final version of the Flow APIs.": [
        "Instance",
        "Fluidic_motion",
        "Quantity",
        "Increment",
        "Ordinal_numbers",
        "Becoming_aware",
        "Existence",
        "Using",
        "Likelihood"
    ],
    "This pattern shows how to integrate events ( grow zone changing ) into a flow.": [
        "Pattern",
        "Change_position_on_a_scale",
        "Locale",
        "Fluidic_motion",
        "Undergo_change",
        "Event",
        "Evidence"
    ],
    "It does exactly the same thing as the LiveData.switchMap version -- switching between two data sources based on an event.": [
        "Identicality",
        "Cardinal_numbers",
        "Source_of_getting",
        "Event",
        "Frequency",
        "Intentionally_act",
        "Change_tool"
    ],
    "This defines a new MutableStateFlow with an initial value of NoGrowZone.": [
        "Age",
        "Version_sequence",
        "Communicate_categorization"
    ],
    "This is a special kind of Flow value holder that holds only the last value it was given.": [
        "Fluidic_motion",
        "Sole_instance",
        "Relative_time",
        "Giving",
        "Containing"
    ],
    "It's a thread-safe concurrency primitive, so you can write to it from multiple threads at the same time ( and whichever is considered `` last'' will win ).": [
        "Natural_features",
        "Measure_duration",
        "Quantity",
        "Identicality",
        "Capability",
        "Finish_competition",
        "Categorization"
    ],
    "You can also subscribe to get updates to the current value.": [
        "Temporal_collocation",
        "Execution",
        "Capability"
    ],
    "Overall, it has similar behavior to a LiveData -- it just holds the last value and lets you observe changes to it.": [
        "Clothing",
        "Undergo_change",
        "Similarity",
        "Relative_time",
        "Conduct",
        "Inclusion",
        "Compliance",
        "Containing",
        "Grant_permission"
    ],
    "StateFlow is different from a regular flow created using, for example, the flow -LCB- -RCB- builder.": [
        "Instance",
        "Fluidic_motion",
        "Similarity",
        "Intentionally_create",
        "Using"
    ],
    "A StateFlow is created with an initial value and keeps its state even without being collected and between subsequent collections.": [
        "Political_locales",
        "Gathering_up",
        "Relative_time",
        "Version_sequence",
        "Execution",
        "Activity_ongoing",
        "Intentionally_create"
    ],
    "You can use the MutableStateFlow interface ( as shown above ) to change the value ( state ) of a StateFlow.": [
        "Evidence",
        "Political_locales",
        "Capability",
        "Using",
        "Undergo_change"
    ],
    "You will often find that flows that behave like StateFlow are called hot, as opposed to regular, cold flows which only execute when they're collected.": [
        "Conduct",
        "Ambient_temperature",
        "Taking_sides",
        "Fluidic_motion",
        "Execution",
        "Temporal_collocation",
        "Ambient_temperature",
        "Sole_instance",
        "Frequency",
        "Gathering_up",
        "Locating",
        "Execution"
    ],
    "StateFlow is also a regular Flow, so you can use all the operators as you normally would.": [
        "Fluidic_motion",
        "Quantity",
        "Capability",
        "Using"
    ],
    "Here we use the flatMapLatest operator which is exactly the same as switchMap from LiveData.": [
        "Locative_relation",
        "Identicality",
        "Frequency",
        "Using"
    ],
    "Whenever the growZone changes its value, this lambda will be applied and it must return a Flow.": [
        "Fluidic_motion",
        "Undergo_change",
        "Being_obligated",
        "Using",
        "Execution"
    ],
    "Then, the returned Flow will be used as the Flow for all downstream operators.": [
        "Temporal_collocation",
        "Execution",
        "Fluidic_motion",
        "Quantity",
        "Using"
    ],
    "Basically, this lets us switch between different flows based on the value of growZone.": [
        "Fluidic_motion",
        "Make_possible_to_do",
        "Change_tool",
        "Similarity"
    ],
    "Flow's flatMapLatest extensions allow you to switch between multiple flows.": [
        "Fluidic_motion",
        "Documents",
        "Fluidic_motion",
        "Quantity",
        "Grant_permission",
        "Change_tool"
    ],
    "Inside the flatMapLatest, we switch based on the growZone.": [
        "Change_tool"
    ],
    "This code is pretty much the same as the LiveData.switchMap version, with the only difference being that it returns Flows instead of LiveDatas.": [
        "Relational_quantity",
        "Similarity",
        "Fluidic_motion",
        "Sole_instance",
        "Execution",
        "Identicality"
    ],
    "And finally, we convert the Flow into a LiveData, since our Fragment expects us to expose a LiveData from the ViewModel.": [
        "Fluidic_motion",
        "Part_piece",
        "Time_vector",
        "Expectation",
        "Reveal_secret",
        "Cause_change"
    ],
    "The asLiveData operator will convert a Flow into a LiveData with a configurable timeout.": [
        "Fluidic_motion",
        "Cause_change"
    ],
    "Just like the liveData builder, the timeout will keep the flow active through rotations so your collection doesn't restart.": [
        "Fluidic_motion",
        "Execution",
        "Being_active",
        "Intentionally_act",
        "Activity_resume",
        "Activity_ongoing"
    ],
    "To let the app know about the filter change, we can set MutableStateFlow.value.": [
        "Undergo_change",
        "Capability",
        "Intentionally_create",
        "Awareness",
        "Grant_permission"
    ],
    "It's an easy way to communicate an event into a coroutine like we're doing here.": [
        "Locative_relation",
        "Difficulty",
        "Communication",
        "Intentionally_act",
        "Event",
        "Execution"
    ],
    "If you run the app again, the filter now works for both the LiveData version and the Flow version !": [
        "Quantity",
        "Fluidic_motion",
        "Being_employed",
        "Execution",
        "Temporal_collocation"
    ],
    "In the next step, we'll apply the custom sort to getPlantsWithGrowZoneFlow.": [
        "Intentionally_act",
        "Custom",
        "Locative_relation",
        "Using"
    ],
    "One of the most exciting features of Flow is its first-class support for suspend functions.": [
        "Fluidic_motion",
        "Stimulus_focus",
        "Taking_sides",
        "Activity_pause",
        "Cardinal_numbers"
    ],
    "The flow builder and almost every transform exposes a suspend operator that can call any suspending functions.": [
        "Fluidic_motion",
        "Frequency",
        "Quantity",
        "Relational_quantity",
        "Cause_change",
        "Activity_pause",
        "Capability",
        "Execution",
        "Reveal_secret"
    ],
    "As a result, main-safety for network and database calls as well as orchestrating multiple async operations can be done using calls to regular suspend functions from inside a flow.": [
        "Network",
        "Contacting",
        "Fluidic_motion",
        "Businesses",
        "Quantity",
        "Activity_pause",
        "Likelihood",
        "Causation",
        "Using",
        "Intentionally_act"
    ],
    "In effect, this allows you to naturally mix declarative transforms with imperative code.": [
        "Objective_influence",
        "Grant_permission",
        "Cause_to_amalgamate"
    ],
    "As you'll see in this example, inside of a regular map operator you can orchestrate multiple async operations without applying any extra transformations.": [
        "Instance",
        "Businesses",
        "Quantity",
        "Cause_change",
        "Quantity",
        "Capability",
        "Using",
        "Grasp"
    ],
    "In a lot of places, this can lead to substantially simpler code than that of a fully-declarative approach.": [
        "Locale",
        "Execution",
        "Capability",
        "Quantity",
        "Causation"
    ],
    "If you've used libraries like RxJava extensively, this is one of the main differences provided by Flow.": [
        "Buildings",
        "Similarity",
        "Fluidic_motion",
        "First_rank",
        "Using",
        "Supply",
        "Cardinal_numbers"
    ],
    "As you get started with Flow, carefully consider how you can use suspending transforms to simplify your code.": [
        "Fluidic_motion",
        "Locative_relation",
        "Execution",
        "Activity_start",
        "Activity_pause",
        "Using",
        "Capability",
        "Categorization"
    ],
    "In many cases, you can express async code naturally by leaning on suspending operations inside operators like map, onStart, and onCompletion.": [
        "Instance",
        "Businesses",
        "Quantity",
        "Capability",
        "Expressing_publicly",
        "Activity_pause"
    ],
    "Familiar operators from Rx like combine, mapLatest, flatMapLatest, flattenMerge, and flatMapMerge are best used to orchestrate concurrency in Flow.": [
        "Cause_to_amalgamate",
        "Being_obligated",
        "Fluidic_motion",
        "Desirability",
        "Using"
    ],
    "To wrap up our exploration of Flow, we'll apply the custom sort using suspend operators.": [
        "Locative_relation",
        "Fluidic_motion",
        "Custom",
        "Using",
        "Using",
        "Activity_pause"
    ],
    "Open up PlantRepository.kt and add a map transform to getPlantsWithGrowZoneNumberFlow.": [
        "Cause_change_of_position_on_a_scale",
        "Locative_relation",
        "Cause_change"
    ],
    "By relying on regular suspend functions to handle the async work, this map operation is main-safe even though it combines two async operations.": [
        "Reliance",
        "Working_on",
        "Using",
        "Businesses",
        "Cause_to_amalgamate",
        "Cardinal_numbers",
        "Resolve_problem",
        "Activity_pause"
    ],
    "As each result from the database is returned, we'll get the cached sort order -- and if it's not ready yet, it will wait on the async network request.": [
        "Causation",
        "Change_position_on_a_scale",
        "Waiting",
        "Network",
        "Execution",
        "Activity_ready_state",
        "Execution",
        "Execution"
    ],
    "Then once we have the sort order, it's safe to call applyMainSafeSort, which will run the sort on the default dispatcher.": [
        "Temporal_collocation",
        "Time_vector",
        "Execution",
        "Execution",
        "Risky_situation"
    ],
    "This code is now entirely main-safe by deferring the main safety concerns to regular suspend functions.": [
        "Being_at_risk",
        "Point_of_dispute",
        "First_rank",
        "Temporal_collocation",
        "Change_event_time",
        "Activity_pause"
    ],
    "It's quite a bit simpler than the same transformation implemented in plantsFlow.": [
        "Cause_change",
        "Quantity",
        "Identicality",
        "Execute_plan"
    ],
    "In Flow, map and other operators accept a suspending lambda.": [
        "Fluidic_motion",
        "Increment",
        "Activity_pause",
        "Receiving"
    ],
    "By using the suspend and resume mechanism of coroutines, you can often orchestrate sequential async calls easily without using declarative transforms.": [
        "Sequence",
        "Execution",
        "Frequency",
        "Capability",
        "Activity_resume",
        "Activity_pause",
        "Using",
        "Execution"
    ],
    "It is an error to emit a value from a different coroutine than the one that called the suspending transformation.": [
        "Emitting",
        "Cause_change",
        "Similarity",
        "Cardinal_numbers",
        "Activity_pause",
        "Execution"
    ],
    "If you do launch another coroutine inside a flow operation like we're doing here inside getOrAwait and applyMainSafeSort, make sure the value is returned to the original coroutine before emitting it.": [
        "Fluidic_motion",
        "Using",
        "Locative_relation",
        "Emitting",
        "Intentionally_act",
        "Increment",
        "Launch_process",
        "Intentionally_act",
        "Execution",
        "Verification"
    ],
    "However, it is worth noting that it will execute a bit differently.": [
        "Concessive",
        "Execution",
        "Quantity",
        "Deserving"
    ],
    "The cached value will be fetched every single time the database emits a new value.": [
        "Change_position_on_a_scale",
        "Frequency",
        "Measure_duration",
        "Emitting",
        "Sole_instance",
        "Age",
        "Bringing"
    ],
    "This is OK because we're caching it correctly in plantsListSortOrderCache, but if that started a new network request this implementation would make a lot of unnecessary network requests.": [
        "Network",
        "Execution",
        "Execute_plan",
        "Change_position_on_a_scale",
        "Execution",
        "Age",
        "Activity_start",
        "Quantity",
        "Manufacturing"
    ],
    "combine version, the network request and the database query run concurrently, while in this version they run in sequence.": [
        "Cause_to_amalgamate",
        "Network",
        "Questioning",
        "Sequence",
        "Execution",
        "Execution"
    ],
    "Due to these differences, there is not a clear rule to structure this code.": [
        "Similarity",
        "Execution",
        "Obviousness",
        "Existence"
    ],
    "In many cases, it's fine to use suspending transformations like we're doing here, which makes all async operations sequential.": [
        "Instance",
        "Locative_relation",
        "Quantity",
        "Businesses",
        "Sequence",
        "Quantity",
        "Desirability",
        "Cause_change",
        "Intentionally_act",
        "Causation",
        "Activity_pause",
        "Using"
    ],
    "However, in other cases, it's better to use operators to control concurrency and provide main-safety.": [
        "Concessive",
        "Instance",
        "Being_obligated",
        "Increment",
        "Control",
        "Desirability",
        "Supply",
        "Using"
    ],
    "As one final ( optional ) step, let's move the network requests into a flow-based coroutine.": [
        "Intentionally_act",
        "Network",
        "Ordinal_numbers",
        "Execution",
        "Cardinal_numbers",
        "Motion",
        "Grant_permission"
    ],
    "By doing so, we'll remove the logic for making the network calls from the handlers called by onClick and drive them from the growZone.": [
        "Network",
        "Intentionally_act",
        "Causation",
        "Execution",
        "Operate_vehicle",
        "Removing",
        "Execution"
    ],
    "This helps us create a single source of truth and avoid code duplication -- there's no way any code can change the filter without refreshing the cache.": [
        "Duplication",
        "Quantity",
        "Sole_instance",
        "Quantity",
        "Preventing",
        "Experiencer_obj",
        "Source_of_getting",
        "Capability",
        "Cause_change",
        "Intentionally_create",
        "Assistance",
        "Existence"
    ],
    "Open up PlantListViewModel.kt, and add this to the init block:": [
        "Locative_relation",
        "Measure_linear_extent"
    ],
    "This code will launch a new coroutine to observe the values sent to growZoneChannel.": [
        "Age",
        "Compliance",
        "Causation",
        "Launch_process"
    ],
    "You can comment out the network calls in the methods below now as they're only needed for the LiveData version.": [
        "Network",
        "Execution",
        "Temporal_collocation",
        "Sole_instance",
        "Being_necessary",
        "Contacting",
        "Capability"
    ],
    "If you run the app again now, you'll see that the network refresh is now controlled by the growZone !": [
        "Temporal_collocation",
        "Network",
        "Execution",
        "Control",
        "Grasp"
    ],
    "We've improved the code substantially, as more ways to change the filter come in the channel acts as a single source of truth for which filter is active.": [
        "Natural_features",
        "Being_active",
        "Increment",
        "Sole_instance",
        "Cause_to_make_progress",
        "Execution",
        "Undergo_change",
        "Intentionally_act",
        "Source_of_getting",
        "Execution"
    ],
    "That way the network request and the current filter can never get out of sync.": [
        "Execution",
        "Network",
        "Execution",
        "Temporal_collocation",
        "Capability",
        "Frequency",
        "Partitive",
        "Execution"
    ],
    "Let's step through all the new functions used one at a time, starting from the outside:": [
        "Quantity",
        "Cardinal_numbers",
        "Measure_duration",
        "Process_start",
        "Part_inner_outer",
        "Age",
        "Intentionally_act",
        "Using"
    ],
    "This time, we use the launchIn operator to collect the flow inside our ViewModel.": [
        "Measure_duration",
        "Fluidic_motion",
        "Gathering_up",
        "Using"
    ],
    "The operator launchIn creates a new coroutine and collects every value from the flow.": [
        "Frequency",
        "Fluidic_motion",
        "Age",
        "Gathering_up",
        "Creating"
    ],
    "It'll launch in the CoroutineScope provided -- in this case, the viewModelScope.": [
        "Supply",
        "Instance",
        "Launch_process"
    ],
    "This is great because it means when this ViewModel gets cleared, the collection will be cancelled.": [
        "Execution",
        "Desirability",
        "Temporal_collocation",
        "Execution",
        "Removing",
        "Evidence"
    ],
    "Without providing any other operators, this doesn't do very much -- but since Flow provides suspending lambdas in all of its operators it's easy to make async actions based on every value.": [
        "Relational_quantity",
        "Fluidic_motion",
        "Intentionally_act",
        "Increment",
        "Degree",
        "Frequency",
        "Quantity",
        "Intentionally_act",
        "Supply",
        "Quantity",
        "Intentionally_act",
        "Activity_pause",
        "Supply",
        "Difficulty",
        "Causation"
    ],
    "Using Flow, it's natural to collect data in the ViewModel, Repository, or other data layers when needed.": [
        "Fluidic_motion",
        "Building_subparts",
        "Temporal_collocation",
        "Using",
        "Increment",
        "Gathering_up",
        "Being_necessary"
    ],
    "Since Flow is not tied to the UI, you don't need a UI observer to collect a flow.": [
        "Fluidic_motion",
        "Finish_competition",
        "Gathering_up",
        "Fluidic_motion",
        "Intentionally_act",
        "Required_event"
    ],
    "This is a big difference from LiveData which always requires a UI-observer to run.": [
        "Similarity",
        "Size",
        "Frequency",
        "Have_as_requirement",
        "Execution"
    ],
    "It is not a good idea to try to observe a LiveData in your ViewModel because it doesn't have an appropriate observation lifecycle.": [
        "Perception_active",
        "Relational_quantity",
        "Intentionally_act",
        "Compliance",
        "Attempt"
    ],
    "This is where the magic lies -- mapLatest will apply this map function for each value.": [
        "Locative_relation",
        "Ineffability",
        "Being_located",
        "Using"
    ],
    "However, unlike regular map, it'll launch a new coroutine for each call to the map transform.": [
        "Concessive",
        "Age",
        "Execution",
        "Launch_process",
        "Cause_change"
    ],
    "Then, if a new value is emitted by the growZoneChannel before the previous coroutine completes, it'll cancel it before starting a new one.": [
        "Temporal_collocation",
        "Emitting",
        "Time_vector",
        "Process_start",
        "Cardinal_numbers",
        "Age",
        "Activity_finish"
    ],
    "We can use mapLatest to control concurrency for us.": [
        "Being_obligated",
        "Capability",
        "Control",
        "Using"
    ],
    "Instead of building cancel/restart logic ourselves, the flow transform can take care of it.": [
        "Fluidic_motion",
        "Building",
        "Cause_change",
        "Have_as_requirement",
        "Capability"
    ],
    "This code saves a lot of code and complexity compared to writing the same cancellation logic by hand.": [
        "Observable_body_parts",
        "Identicality",
        "Quantity",
        "Text_creation",
        "Evaluative_comparison"
    ],
    "Cancellation of a Flow follows the normal cooperative cancellation rules of coroutines.": [
        "Fluidic_motion",
        "Mental_property",
        "Execution",
        "Relative_time"
    ],
    "If you've used RxJava, you can use mapLatest exactly like you'd use switchMap.": [
        "Frequency",
        "Using",
        "Using",
        "Capability"
    ],
    "The key difference is that it provides a suspending lambda for you in a new coroutine, so you can call regular suspend functions directly from mapLatest.": [
        "Similarity",
        "Importance",
        "Age",
        "Capability",
        "Activity_pause",
        "Activity_pause",
        "Supply",
        "Execution"
    ],
    "onEach will be called every time the flow above it emits a value.": [
        "Frequency",
        "Fluidic_motion",
        "Emitting",
        "Measure_duration",
        "Execution"
    ],
    "Here we're using it to reset the spinner after processing is complete.": [
        "Locative_relation",
        "Processing_materials",
        "Process_completed_state",
        "Using"
    ],
    "The catch operator will capture any exceptions thrown above it in the flow.": [
        "Fluidic_motion",
        "Quantity",
        "Cause_motion",
        "Conquering"
    ],
    "It can emit a new value to the flow like an error state, rethrow the exception back into the flow, or perform work like we're doing here.": [
        "Political_locales",
        "Observable_body_parts",
        "Fluidic_motion",
        "Working_on",
        "Locative_relation",
        "Age",
        "Intentionally_act",
        "Capability",
        "Intentionally_act",
        "Emitting"
    ],
    "When there's an error we're just telling our _ snackbar to display the error message.": [
        "Temporal_collocation",
        "Existence",
        "Telling"
    ],
    "This step showed you how you can control concurrency using Flow, as well as consume Flows inside a ViewModel without depending on a UI observer.": [
        "Fluidic_motion",
        "Evidence",
        "Being_obligated",
        "Fluidic_motion",
        "Capability",
        "Ingestion",
        "Using",
        "Control",
        "Intentionally_act"
    ],
    "As a challenge step, try to define a function to encapsulate the data loading of this flow with the following signature:": [
        "Fluidic_motion",
        "Relative_time",
        "Intentionally_act",
        "Sign_agreement",
        "Communicate_categorization",
        "Attempt",
        "Difficulty"
    ],
    "Experience with the Architecture Components ViewModel, LiveData, Repository, and Room.": [
        "Feeling",
        "Ingredients",
        "Building_subparts",
        "Building_subparts"
    ],
    "Experience with Kotlin syntax, including extension functions and lambdas.": [
        "Feeling",
        "Documents",
        "Inclusion"
    ],
    "A basic understanding of using threads on Android, including the main thread, background threads, and callbacks.": [
        "Being_necessary",
        "Natural_features",
        "Natural_features",
        "Using",
        "First_rank",
        "Grasp",
        "Inclusion"
    ],
    "For an introduction to the Architecture Components used in this codelab, see Room with a View.": [
        "Building_subparts",
        "Categorization",
        "Ingredients",
        "Using",
        "Grasp"
    ],
    "For an introduction to Kotlin syntax, see Kotlin Bootcamp for Programmers.": [
        "Grasp"
    ],
    "For an introduction to Kotlin Coroutines, see Using Kotlin Coroutines in your Android App": [
        "Perception_experience",
        "Using"
    ],
    "Convert an existing LiveData to use the Kotlin coroutines-friendly LiveData builder.": [
        "Existence",
        "Using"
    ],
    "Add logic within a LiveData builder.": [],
    "Use Flow for asynchronous operations.": [
        "Fluidic_motion",
        "Businesses"
    ],
    "Combine Flows and transform multiple asynchronous sources.": [
        "Cause_to_amalgamate",
        "Fluidic_motion",
        "Cause_change",
        "Source_of_getting",
        "Quantity"
    ],
    "Learn how to choose between LiveData and Flow.": [
        "Fluidic_motion",
        "Choosing"
    ],
    "Android Studio 4.1 or above.": [
        "Building_subparts"
    ],
    "The codelab may work with other versions, but some things might be missing or look different.": [
        "Relational_quantity",
        "Success_or_failure",
        "Scrutiny",
        "Similarity",
        "Increment",
        "Likelihood",
        "Likelihood",
        "Working_on"
    ],
    "start -- code to modify for this codelab.": [
        "Temporal_subregion",
        "Cause_change"
    ],
    "finished_code -- the code for the completed codelab.": [
        "Activity_finish"
    ],
    "Refer to this module if you run into issues.": [
        "Execution"
    ],
    "sunflower -- supporting app code.": [
        "Taking_sides"
    ],
    "We will not make modifications to code in this module.": [
        "Cause_change",
        "Causation"
    ],
    "How do I install Android Studio ?": [
        "Building_subparts",
        "Intentionally_act",
        "Installing"
    ],
    "How do I set up a device for development ?": [
        "Gizmo",
        "Event",
        "Intentionally_act",
        "Intentionally_create"
    ],
    "If you downloaded the kotlin-coroutines zip file, unzip the file.": [
        "Clothing_parts",
        "Self_motion",
        "Closure"
    ],
    "Open the advanced-coroutines-codelab directory in Android Studio.": [
        "Building_subparts"
    ],
    "Make sure start is selected in the configuration drop-down.": [
        "Likelihood",
        "Choosing",
        "Temporal_subregion"
    ],
    "Click the Run button, and either choose an emulated device or connect your Android device.": [
        "Clothing_parts",
        "Gizmo",
        "Operating_a_system",
        "Impact",
        "Choosing",
        "Cognitive_connection"
    ],
    "The device must be capable of running Android Lollipop ( the minimum supported SDK is 21 ).": [
        "Gizmo",
        "Extreme_value",
        "Being_obligated",
        "Taking_sides",
        "Execution",
        "Capability"
    ],
    "This codelab's app is based on the Android Sunflower open source sample": [
        "Source_of_getting",
        "Secrecy_status"
    ],
    "Fun fact: the growZoneNumber is loosely based on the United States Department of Agriculture's Plant Hardiness Zone Map": [
        "Political_locales",
        "Locale",
        "Locale_by_use"
    ],
    "Every time a terminal operator is applied ( and each new invocation is independent from any previously started ones )": [
        "Frequency",
        "Measure_duration",
        "Buildings",
        "Political_locales",
        "Clothing",
        "Age",
        "Activity_start",
        "Quantity",
        "Using",
        "Time_vector"
    ],
    "Until the coroutine it is running in is cancelled": [
        "Execution"
    ],
    "When the last value has been fully processed, and another value has been requested": [
        "Temporal_collocation",
        "Execution",
        "Relative_time",
        "Degree",
        "Increment",
        "Processing_materials"
    ],
    "suspendQuery -- a main-safe function that runs a regular Room suspend query": [
        "Building_subparts",
        "Questioning",
        "Execution",
        "Activity_pause"
    ],
    "suspendUntilChanged -- a function that suspends the coroutine until one of the tables changes": [
        "Undergo_change",
        "Cardinal_numbers",
        "Activity_pause"
    ],
    "Main-safety -- Queries with a Flow return type always run on the Room executors, so they are always main-safe.": [
        "Fluidic_motion",
        "Building_subparts",
        "Execution",
        "Frequency",
        "Execution",
        "Questioning"
    ],
    "You don't need to do anything in your code to make them run off the main thread.": [
        "Intentionally_act",
        "First_rank",
        "Execution",
        "Causation",
        "Required_event"
    ],
    "Observes changes -- Room automatically observes changes and emits new values to the flow.": [
        "Undergo_change",
        "Building_subparts",
        "Emitting",
        "Fluidic_motion",
        "Age",
        "Compliance"
    ],
    "Async sequence -- Flow emits the entire query result on each change, and it won't introduce any buffers.": [
        "Sequence",
        "Fluidic_motion",
        "Emitting",
        "Questioning",
        "Undergo_change",
        "Causation",
        "Quantity",
        "Ranked_expectation"
    ],
    "If you return a Flow < List <T> >, the flow emits a List <T> that contains all rows from the query result.": [
        "Fluidic_motion",
        "Fluidic_motion",
        "Emitting",
        "Quantity",
        "Questioning",
        "Causation",
        "Quarreling",
        "Inclusion",
        "Execution"
    ],
    "It will execute just like a sequence -- emitting one query result at a time and suspending until it is asked for the next one.": [
        "Execution",
        "Sequence",
        "Emitting",
        "Questioning",
        "Measure_duration",
        "Cardinal_numbers",
        "Causation",
        "Locative_relation",
        "Execution",
        "Activity_pause"
    ],
    "Cancellable -- When the scope that's collecting these flows is cancelled, Room cancels observing this query.": [
        "Fluidic_motion",
        "Building_subparts",
        "Questioning",
        "Compliance",
        "Gathering_up",
        "Scope",
        "Temporal_collocation"
    ],
    "plantService.customPlantSortOrder runs on a Retrofit thread ( it calls Call.enqueue )": [
        "Execution",
        "Fluidic_motion"
    ],
    "getPlantsFlow will run queries on a Room Executor": [
        "Building_subparts",
        "Questioning",
        "Execution"
    ],
    "applySort will run on the collecting dispatcher ( in this case Dispatchers.Main )": [
        "Gathering_up",
        "Reasoning",
        "Execution"
    ],
    "Launch a new coroutine on the defaultDispatcher ( in this case, Dispatchers.Default ) to run and collect the flow before the call to flowOn.": [
        "Shoot_projectiles",
        "Instance",
        "Gathering_up",
        "Fluidic_motion",
        "Age",
        "Execution",
        "Execution"
    ],
    "Introduces a buffer to send results from the new coroutine to later calls.": [
        "Causation",
        "Time_vector",
        "Causation",
        "Age",
        "Contacting"
    ],
    "Emit the values from that buffer into the Flow after flowOn.": [
        "Emitting",
        "Fluidic_motion"
    ],
    "In this case, that's asLiveData in the ViewModel.": [
        "Instance"
    ],
    "You probably looked at the zip operator that works with 2 Observables.": [
        "Clothing_parts",
        "Likelihood",
        "Being_employed",
        "Cardinal_numbers",
        "Scrutiny"
    ],
    "There is also the static method Observable.zip.": [
        "Execution",
        "Existence"
    ],
    "It has one form which should be useful for you:": [
        "Cardinal_numbers",
        "Being_obligated",
        "Inclusion"
    ],
    "You can check out the LINK": [
        "Capability",
        "Inspecting"
    ],
    "It sounds like you're looking for the LINK.": [
        "Sensation",
        "Scrutiny"
    ],
    "There are a few different ways of using it, so let's look at an example.": [
        "Instance",
        "Similarity",
        "Using",
        "Quantity",
        "Scrutiny",
        "Execution",
        "Grant_permission",
        "Existence"
    ],
    "Say we have a few simple observables of different types:": [
        "Quantity",
        "Similarity"
    ],
    "The simplest way to wait for them all is something like this:": [
        "Quantity",
        "Waiting",
        "Execution"
    ],
    "Note that in the zip function, the parameters have concrete types that correspond to the types of the observables being zipped.": [
        "Clothing_parts",
        "Terms_of_agreement",
        "Closure"
    ],
    "Zipping a list of observables is also possible, either directly:": [
        "Clothing_parts",
        "Likelihood"
    ],
    "... or by wrapping the list into an Observable < Observable < ?": [],
    ">>:": [],
    "However, in both of these cases, the zip function can only accept a single Object -LSB- -RSB- parameter since the types of the observables in the list are not known in advance as well as their number.": [
        "Concessive",
        "Instance",
        "Clothing_parts",
        "Sole_instance",
        "Sole_instance",
        "Progress",
        "Quantity",
        "Terms_of_agreement",
        "Quantity",
        "Capability",
        "Receiving",
        "Awareness"
    ],
    "This means that that the zip function would have to check the number of parameters and cast them accordingly.": [
        "Clothing_parts",
        "Terms_of_agreement",
        "Perception_experience",
        "Quantity",
        "Inspecting",
        "Being_obligated",
        "Evidence"
    ],
    "Regardless, all of the above examples will eventually print 1 Blah true": [
        "Instance",
        "Quantity",
        "Time_vector"
    ],
    "EDIT: When using Zip, make sure that the Observables being zipped all emit the same number of items.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Closure",
        "Quantity",
        "Emitting",
        "Entity",
        "Using",
        "Identicality",
        "Quantity",
        "Verification"
    ],
    "In the above examples all three observables emitted a single item.": [
        "Quantity",
        "Emitting",
        "Entity",
        "Instance",
        "Cardinal_numbers",
        "Sole_instance"
    ],
    "If we were to change them to something like this:": [
        "Undergo_change"
    ],
    "Then 1, Blah, True and 2, Hello, True would be the only items passed into the zip function -LRB- s -RRB-.": [
        "Cardinal_numbers",
        "Entity",
        "Clothing_parts",
        "Sole_instance",
        "Traversing",
        "Temporal_collocation"
    ],
    "The item 3would never be zipped since the other observables have completed.": [
        "Closure",
        "Entity",
        "Increment",
        "Frequency",
        "Activity_finish"
    ],
    "You can use flatMap in case you have dynamic tasks composition.": [
        "Instance",
        "Being_obligated",
        "Capability",
        "Using"
    ],
    "Something like this:": [],
    "Note: I do not really know your requirements for error handling.": [
        "Intentionally_act",
        "Being_necessary",
        "Awareness"
    ],
    "For example what to do if only one task fails.": [
        "Instance",
        "Sole_instance",
        "Being_obligated",
        "Cardinal_numbers",
        "Intentionally_act",
        "Success_or_failure"
    ],
    "I think you should verify this scenario.": [
        "Being_obligated",
        "Opinion",
        "Verification"
    ],
    "I'm writing some computation heave code in Kotlin with JavaRx Observables and RxKotlin.": [
        "Relational_quantity"
    ],
    "I want to observe a list of observables to be completed and in the meantime giving me an update with the progress and latest result.": [
        "Progress",
        "Causation",
        "Relative_time",
        "Activity_finish",
        "Giving",
        "Compliance",
        "Desiring"
    ],
    "At the end it returns the best calculation result.": [
        "Temporal_subregion",
        "Desirability",
        "Causation",
        "Execution"
    ],
    "An extra requirement was to run Observables in parallel for using all my cpu cores.": [
        "Similarity",
        "Quantity",
        "Emptying",
        "Being_necessary",
        "Using",
        "Execution"
    ],
    "I ended up with this solution:": [
        "Becoming"
    ],
    "With Kotlin": [],
    "It's important to set the type for the function's arguments or you will have compilation errors": [
        "Evidence",
        "Intentionally_create",
        "Importance"
    ],
    "The last argument type change with the number of argument: BiFunction for 2 Function3 for 3 Function4 for 4 ...": [
        "Relative_time",
        "Reasoning",
        "Cardinal_numbers",
        "Undergo_change",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Quantity"
    ],
    "Of the suggestions proposed, LINK actually combines observable results with each other, which may or may not be what is wanted, but was not asked in the question.": [
        "Increment",
        "Want_suspect",
        "Point_of_dispute",
        "Causation",
        "Likelihood",
        "Cause_to_amalgamate",
        "Execution"
    ],
    "In the question, all that was wanted was execution of each of the operations, either one-by-one or in parallel -LRB- which was not specified, but linked Bolts example was about parallel execution -RRB-.": [
        "Point_of_dispute",
        "Quantity",
        "Businesses",
        "Similarity",
        "Cognitive_connection",
        "Instance",
        "Relational_quantity",
        "Desiring",
        "Execution"
    ],
    "Also, zip -LRB- -RRB- will complete immediately when any of the observables complete, so it's in violation of the requirements.": [
        "Clothing_parts",
        "Completeness",
        "Temporal_collocation",
        "Being_necessary",
        "Quantity",
        "Compliance"
    ],
    "For parallel execution of Observables, flatMap -LRB- -RRB- LINK is fine, but LINK would be more straight-forward.": [
        "Increment",
        "Execution",
        "Desirability"
    ],
    "Note that merge will exit on error of any of the Observables, if you rather postpone the exit until all observables have finished, you should be looking at LINK.": [
        "Cause_to_amalgamate",
        "Quantity",
        "Being_obligated",
        "Becoming_aware",
        "Quantity",
        "Process_completed_state",
        "Change_event_time",
        "Scrutiny",
        "Departing"
    ],
    "For one-by-one, I think LINK should be used.": [
        "Being_obligated",
        "Opinion",
        "Using"
    ],
    "Its javadoc states like this:": [],
    "concat -LRB- java.lang.Iterable > sequences -RRB- Flattens an Iterable of Observables into one Observable, one after the other, without interleaving them": [
        "Sequence",
        "Reshaping",
        "Cardinal_numbers",
        "Increment"
    ],
    "which sounds like what you're after if you don't want parallel execution.": [
        "Sensation",
        "Execution",
        "Intentionally_act",
        "Desiring"
    ],
    "Also, if you're only interested in the completion of your task, not return values, you should probably look into LINK instead of LINK.": [
        "Sole_instance",
        "Being_obligated",
        "Likelihood",
        "Activity_finish",
        "Being_obligated",
        "Execution",
        "Scrutiny",
        "Desiring"
    ],
    "TLDR: for one-by-one execution of tasks and oncompletion event when they are completed, I think Completable.concat -LRB- -RRB- is best suited.": [
        "Being_obligated",
        "Event",
        "Suitability",
        "Desirability",
        "Activity_finish",
        "Awareness",
        "Execution",
        "Temporal_collocation"
    ],
    "For parallel execution, Completable.merge -LRB- -RRB- or Completable.mergeDelayError -LRB- -RRB- sounds like the solution.": [
        "Execution",
        "Sensation"
    ],
    "The former one will stop immediately on any error on any completable, the latter one will execute them all even if one of them has an error, and only then reports the error.": [
        "Cardinal_numbers",
        "Sole_instance",
        "Time_vector",
        "Quantity",
        "Inclusion",
        "Temporal_collocation",
        "Quantity",
        "Execution",
        "Preventing"
    ],
    "I had similar problem, I needed to fetch search items from rest call while also integrate saved suggestions from a RecentSearchProvider.AUTHORITY and combine them together to one unified list.": [
        "Predicament",
        "Scrutiny",
        "Entity",
        "Stimulus_focus",
        "Cause_to_amalgamate",
        "Collaboration",
        "Cause_to_amalgamate",
        "Being_obligated",
        "Similarity",
        "Execution",
        "Cardinal_numbers",
        "Bringing",
        "Required_event"
    ],
    "I was trying to use @MyDogTom solution, unfortunately there is no Observable.from in RxJava.": [
        "Quantity",
        "Existence",
        "Using",
        "Attempt"
    ],
    "After some research I got a solution that worked for me.": [
        "Relational_quantity",
        "Research",
        "Being_employed",
        "Execution"
    ],
    "I created an observable from the array of observables that contains lists of suggestions and results from the internet depending on the query.": [
        "Diversity",
        "Questioning",
        "Causation",
        "Inclusion",
        "Intentionally_create"
    ],
    "After that you just go over those tasks with flatMapIterable and run them using flatmap, place the results in array, which can be later fetched into a recycle view.": [
        "Being_obligated",
        "Diversity",
        "Execution",
        "Likelihood",
        "Time_vector",
        "Opinion",
        "Using",
        "Becoming",
        "Bringing",
        "Causation"
    ],
    "If you use Project Reactor, you can use Mono.when.": [
        "Project",
        "Locale_by_use",
        "Using",
        "Capability"
    ],
    "DZone > Java Zone > RxJava: Idiomatic Concurrency -- flatMap ( ) vs. parallel ( )": [
        "Locale",
        "Being_obligated"
    ],
    "RxJava: Idiomatic Concurrency -- flatMap ( ) vs. parallel ( )": [
        "Being_obligated"
    ],
    "When it comes to concurrent programming using the RxJava library, here's a breakdown of flatMap ( ) and parallel ( ) and some guidance as to which is the most helpful.": [
        "Temporal_collocation",
        "Frequency",
        "Buildings",
        "Locative_relation",
        "Waking_up",
        "Relational_quantity",
        "Using",
        "Assistance"
    ],
    "Sep. 15, 17 \u00b7 Java Zone": [
        "Locale",
        "Cardinal_numbers"
    ],
    "Simple, effective, and safe concurrency was one of the design principles of RxJava.": [
        "Origin",
        "Coming_up_with",
        "Being_at_risk",
        "Cardinal_numbers"
    ],
    "Yet, ironically, it's probably one of the most misunderstood aspects of this library.": [
        "Buildings",
        "Likelihood",
        "Distinctiveness",
        "Cardinal_numbers"
    ],
    "Let's take a simple example: Imagine we have a bunch of UUIDs, and for each one of them, we must perform a set of tasks.": [
        "Instance",
        "Being_obligated",
        "Execution",
        "Cardinal_numbers",
        "Being_obligated",
        "Execution",
        "Awareness",
        "Intentionally_act",
        "Have_as_requirement",
        "Grant_permission"
    ],
    "The first problem is to perform I/O-intensive operations per each UUID, for example loading an object from a database:": [
        "Predicament",
        "Businesses",
        "Instance",
        "Ordinal_numbers",
        "Intentionally_act"
    ],
    "First, I'm generating 100 random UUIDs just for the sake of testing.": [
        "Ordinal_numbers",
        "Operational_testing",
        "Frequency",
        "Cardinal_numbers",
        "Creating"
    ],
    "Then, for each UUID, I'd like to load a record using the following method:": [
        "Temporal_collocation",
        "Recording",
        "Execution",
        "Relative_time",
        "Using",
        "Experiencer_focus"
    ],
    "The implementation of slowLoadBy ( ) is irrelevant -- just keep in mind it's slow and blocking.": [
        "Eclipse",
        "Execute_plan",
        "Activity_ongoing",
        "Taking_time"
    ],
    "Using subscribe ( ) to invoke slowLoadBy ( ) has many disadvantages:": [
        "Quantity",
        "Possession",
        "Using"
    ],
    "subscribe ( ) is single-threaded by design and there is no way around it.": [
        "Coming_up_with",
        "Quantity",
        "Existence"
    ],
    "Each UUID is loaded sequentially.": [],
    "When you call subscribe ( ), you can not transform the Person object further.": [
        "Temporal_collocation",
        "People",
        "Increment",
        "Execution",
        "Capability",
        "Cause_change"
    ],
    "A more robust, and even more broken, approach is to map ( ) each UUID:": [
        "Being_operational",
        "Increment",
        "Execution"
    ],
    "This is very readable, but unfortunately broken.": [
        "Degree",
        "Compliance"
    ],
    "Operators, just like subscribers, are single-threaded.": [],
    "This means at any given time, only one UUID can be mapped -- no concurrency is allowed here as well.": [
        "Sole_instance",
        "Quantity",
        "Taking_time",
        "Locative_relation",
        "Measure_duration",
        "Giving",
        "Cardinal_numbers",
        "Quantity",
        "Likelihood",
        "Grant_permission",
        "Evidence"
    ],
    "To make matters worse, we are inheriting a thread/worker from upstream.": [
        "Desirability",
        "Causation"
    ],
    "If the upstream produces events using some dedicated scheduler, we will hijack threads from that scheduler.": [
        "Event",
        "Relational_quantity",
        "Piracy",
        "Natural_features",
        "Creating",
        "Using"
    ],
    "For example, many operators, like interval ( ), use the Schedulers.computation ( ) thread pool transparently.": [
        "Instance",
        "Frequency",
        "Natural_features",
        "Quantity",
        "Using"
    ],
    "We suddenly start to perform I/O-intensive operations on a pool that is totally not suitable for that.": [
        "Businesses",
        "Natural_features",
        "Degree",
        "Intentionally_act",
        "Suitability",
        "Activity_start"
    ],
    "Moreover, we slow down the whole pipeline with this one blocking, sequential step.": [
        "Ingestion",
        "Cardinal_numbers",
        "Eclipse",
        "Sequence",
        "Ranked_expectation",
        "Intentionally_act"
    ],
    "You might have heard about this subscribeOn ( ) operator and how it enables concurrency.": [
        "Locale_by_use",
        "Likelihood",
        "Perception_experience"
    ],
    "Indeed, but you have to be very careful when applying it.": [
        "Degree",
        "Being_obligated",
        "Temporal_collocation",
        "Using"
    ],
    "The following sample is ( again ) wrong:": [
        "Morality_evaluation",
        "Relative_time"
    ],
    "The code snippet above is still broken.": [
        "Part_piece",
        "Continued_state_of_affairs",
        "Compliance"
    ],
    "subscribeOn ( ) ( and observeOn ( ) for that matter ) barely switch execution to a different worker ( thread ) without introducing any concurrency.": [
        "Execution",
        "Natural_features",
        "Weapon",
        "Employing",
        "Similarity",
        "Quantity",
        "Change_tool",
        "Frequency"
    ],
    "The stream still sequentially processes all events, but on a different thread.": [
        "Quantity",
        "Event",
        "Quantity",
        "Similarity",
        "Continued_state_of_affairs",
        "Processing_materials"
    ],
    "In other words, rather than consuming events sequentially on a thread inherited from upstream, we now consume them sequentially on the io ( ) thread.": [
        "Simple_name",
        "Event",
        "Natural_features",
        "Increment",
        "Ingestion",
        "Temporal_collocation",
        "Ingestion"
    ],
    "So what about this mythical flatMap ( ) operator ?": [],
    "flatMap ( ) Operator to the Rescue The flatMap ( ) operator enables concurrency by splitting a stream of events into a stream of sub-streams.": [
        "Locale_by_use",
        "Event",
        "Quantity",
        "Separating"
    ],
    "But first, one more broken example:": [
        "Ordinal_numbers",
        "Cardinal_numbers",
        "Being_operational",
        "Instance",
        "Increment"
    ],
    "Oh gosh, this is still broken !": [
        "Being_operational",
        "Continued_state_of_affairs"
    ],
    "The flatMap ( ) operator logically does two things:": [
        "Cardinal_numbers",
        "Intentionally_act"
    ],
    "Applies the transformation ( id - > asyncLoadBy ( id ) ) on each upstream event.": [
        "Event",
        "Cause_change"
    ],
    "This produces Flowable < Flowable <Person> >.": [
        "People",
        "Manufacturing"
    ],
    "This makes sense -- for each upstream UUID, we get a Flowable <Person>, so we end up with a stream of streams of Person objects.": [
        "Sensation",
        "People",
        "Causation",
        "Quantity",
        "Quantity",
        "Execution",
        "Becoming"
    ],
    "Then, flatMap ( ) tries to subscribe to all of these inner sub-streams at once.": [
        "Temporal_collocation",
        "Frequency",
        "Part_inner_outer",
        "Quantity",
        "Attempt"
    ],
    "Whenever any of the sub-streams emit a Person event, it is transparently passed as an outcome of the outer Flowable.": [
        "Emitting",
        "People",
        "Event",
        "Part_inner_outer",
        "Quantity",
        "Traversing"
    ],
    "Technically, flatMap ( ) only creates and subscribes to the first 128 ( the default of the optional maxConcurrency parameter ) sub-streams.": [
        "Sole_instance",
        "Creating",
        "Ordinal_numbers",
        "Terms_of_agreement"
    ],
    "Also, when the last substream completes, the outer stream of Person completes as well.": [
        "Temporal_collocation",
        "People",
        "Relative_time",
        "Part_inner_outer",
        "Quantity",
        "Activity_finish"
    ],
    "Now, why on Earth is this broken ?": [
        "Temporal_collocation",
        "Reason",
        "Part_inner_outer",
        "Being_operational"
    ],
    "RxJava doesn't introduce any thread pool unless explicitly asked for.": [
        "Quantity",
        "Natural_features",
        "Intentionally_act",
        "Execution"
    ],
    "For example, this piece of code is still blocking:": [
        "Instance",
        "Eclipse",
        "Part_piece",
        "Continued_state_of_affairs"
    ],
    "Look at the output carefully, especially on the order of events and threads involved:": [
        "Perception_active",
        "Natural_features",
        "Natural_features",
        "Participation",
        "Event"
    ],
    "No concurrency whatsoever, no extra threads.": [
        "Quantity",
        "Quantity",
        "Natural_features"
    ],
    "Merely wrapping blocking code in a Flowable doesn't magically add concurrency.": [
        "Eclipse",
        "Being_obligated",
        "Intentionally_act"
    ],
    "You have to explicitly use ... subscribeOn ( ):": [
        "Being_obligated",
        "Using"
    ],
    "The output this time is more promising:": [
        "Measure_duration",
        "Omen",
        "Increment"
    ],
    "But we did use subscribeOn ( ) last time, so what's going on ?": [
        "Measure_duration",
        "Relative_time",
        "Using",
        "Intentionally_act",
        "Process_continue"
    ],
    "Well, subscribeOn ( ) on the outer stream level basically said that all events should be processed sequentially, within this stream, on a different thread.": [
        "Part_inner_outer",
        "Quantity",
        "Rank",
        "Event",
        "Quantity",
        "Being_obligated",
        "Similarity",
        "Processing_materials"
    ],
    "We didn't say that there should many sub-streams running concurrently.": [
        "Intentionally_act",
        "Quantity",
        "Execution",
        "Being_obligated",
        "Existence"
    ],
    "And because all sub-streams are blocking, when RxJava tries to subscribe to all of them, it effectively subscribes sequentially to one after another.": [
        "Eclipse",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Increment",
        "Quantity",
        "Attempt"
    ],
    "asyncLoadBy ( ) is not really async, thus it blocks when the flatMap ( ) operator tries to subscribe to it.": [
        "Temporal_collocation",
        "Measure_linear_extent",
        "Attempt"
    ],
    "Normally, you would put subscribeOn ( ) inside asyncLoadBy ( ) but for educational purposes, I'll place it directly in the main pipeline:": [
        "Education_teaching",
        "First_rank",
        "Causation"
    ],
    "Now it works like a charm !": [
        "Temporal_collocation",
        "Stimulus_focus",
        "Being_employed"
    ],
    "By default, RxJava will take first 128 upstream events ( UUIDs ), turn them into sub-streams, and subscribe to all of them.": [
        "Ordinal_numbers",
        "Event",
        "Quantity",
        "Becoming",
        "Have_as_requirement"
    ],
    "If sub-streams are asynchronous and highly parallelizable ( e.g. network calls ), we get 128 concurrent invocations of asyncLoadBy ( ).": [
        "Network",
        "Contacting",
        "Execution",
        "Frequency"
    ],
    "The concurrency level ( 128 ) is configurable via the maxConcurrency parameter:": [
        "Natural_features",
        "Terms_of_agreement",
        "Rank"
    ],
    "That was a lot of work, don't you think ?": [
        "Working_on",
        "Intentionally_act",
        "Quantity",
        "Opinion"
    ],
    "Shouldn't concurrency be even more declarative ?": [
        "Increment",
        "Desirable_event"
    ],
    "We no longer deal with Executors and futures, but still, it seems this approach is too error prone.": [
        "Possibilities",
        "Appearance",
        "Execution",
        "Temporal_collocation",
        "Sufficiency",
        "Likelihood",
        "Resolve_problem",
        "Continued_state_of_affairs"
    ],
    "Can't it be as simple as parallel ( ) in Java 8 streams ?": [
        "Quantity"
    ],
    "Enter ParallelFlowable Let's look again at our example and make it even more complex by adding filter ( ):": [
        "Instance",
        "Increment",
        "Grant_permission",
        "Scrutiny",
        "Execution"
    ],
    "Where hasLowRisk ( ) is a slow predicate:": [
        "Taking_time",
        "Locative_relation"
    ],
    "We already know that the idiomatic approach to this problem is using flatMap ( ) twice:": [
        "Predicament",
        "Event_instance",
        "Execution",
        "Time_vector",
        "Using",
        "Certainty"
    ],
    "asyncHasLowRisk ( ) is rather obscure -- it either returns a single-element stream when the predicate passes or an empty stream when it fails.": [
        "Obscurity",
        "Quantity",
        "Temporal_collocation",
        "Natural_features",
        "Fullness",
        "Successful_action",
        "Execution"
    ],
    "This is how you emulate filter ( ) using flatMap ( ).": [
        "Using"
    ],
    "Can we do better ?": [
        "Capability",
        "Desirability",
        "Intentionally_act"
    ],
    "Introduced in RxJava 2.0.5, there is a new operator called ... parallel ( ) !": [
        "Age",
        "Execution",
        "Existence"
    ],
    "It's quite surprising because an operator with the same name was removed before RxJava became 1.0 due to many misconceptions surrounding it, leading to it being misused.": [
        "Identicality",
        "Quantity",
        "Locative_relation",
        "Becoming",
        "Removing",
        "Stimulus_focus",
        "Causation"
    ],
    "parallel ( ) in 2.x seems to finally address the problem of idiomatic concurrency in a safe and declarative way.": [
        "Predicament",
        "Weapon",
        "Being_at_risk",
        "Time_vector",
        "Topic",
        "Appearance"
    ],
    "First, let's see some beautiful code !": [
        "Relational_quantity",
        "Aesthetics",
        "Grasp",
        "Grant_permission"
    ],
    "A block of code between parallel ( ) and sequential ( ) runs ... in parallel.": [
        "Sequence",
        "Execution",
        "Similarity",
        "Measure_linear_extent"
    ],
    "What do we have here ?": [
        "Locative_relation",
        "Intentionally_act"
    ],
    "First of all, the new parallel ( ) operator turns Flowable <UUID> into ParallelFlowable <UUID>, which has a much smaller API than Flowable.": [
        "Ordinal_numbers",
        "Quantity",
        "Similarity",
        "Relational_quantity",
        "Age",
        "Dimension",
        "Possession"
    ],
    "You'll see in a second why.": [
        "Ordinal_numbers",
        "Reason",
        "Grasp"
    ],
    "The optional int parameter ( 10 in our case ) defines concurrency, or ( as the documentation puts it ) how many concurrent `` rails'' are created.": [
        "Terms_of_agreement",
        "Cardinal_numbers",
        "Instance",
        "Locale_by_use",
        "Frequency",
        "Causation",
        "Quantity",
        "Intentionally_create",
        "Categorization"
    ],
    "So for us, we split single Flowable <Person> into 10 concurrent, independent rails ( think: threads ).": [
        "Sole_instance",
        "People",
        "Political_locales",
        "Awareness",
        "Natural_features",
        "Separating",
        "Cardinal_numbers"
    ],
    "Events from original stream of UUIDs are split ( modulo 10 ) into different rails -- sub-streams that are independent of each other.": [
        "Separating",
        "Cardinal_numbers",
        "Political_locales",
        "Increment",
        "Similarity",
        "Quantity",
        "Event"
    ],
    "Think of them as sending upstream events into 10 separate threads.": [
        "Awareness",
        "Natural_features",
        "Event",
        "Becoming_separated",
        "Causation",
        "Cardinal_numbers"
    ],
    "But first, we have to define where these threads come from -- using the handy runOn ( ) operator.": [
        "Ordinal_numbers",
        "Locative_relation",
        "Natural_features",
        "Being_obligated",
        "Execution",
        "Communicate_categorization",
        "Using"
    ],
    "This is so much better than parallel ( ) on Java 8 streams where you have no control over concurrency level.": [
        "Relational_quantity",
        "Natural_features",
        "Locative_relation",
        "Quantity",
        "Natural_features",
        "Rank",
        "Control",
        "Desirability"
    ],
    "At this point, we have a ParallelFlowable.": [
        "Locale"
    ],
    "When an event appears upstream ( UUID ), it is delegated to one of 10 `` rails'' -- concurrent, independent pipelines.": [
        "Cardinal_numbers",
        "Frequency",
        "Political_locales",
        "Event",
        "Coming_to_be",
        "Cardinal_numbers",
        "Temporal_collocation"
    ],
    "Pipeline provides a limited subset of operators that are safe to run concurrently, e.g. map ( ) and filter ( ), but also reduce ( ).": [
        "Cause_change_of_position_on_a_scale",
        "Locale_by_use",
        "Execution",
        "Risky_situation",
        "Supply"
    ],
    "There is no buffer ( ), take ( ), etc. as their semantics are unclear when invoked on many sub-streams at once.": [
        "Quantity",
        "Temporal_collocation",
        "Frequency",
        "Quantity",
        "Existence",
        "Obviousness",
        "Taking_time"
    ],
    "Our blocking slowLoadBy ( ), as well as hasLowRisk ( ), are still invoked sequentially, but only within a single `` rail''.": [
        "Eclipse",
        "Sole_instance",
        "Continued_state_of_affairs",
        "Sole_instance"
    ],
    "Because we now have 10 concurrent `` rails'', we effectively parallelized them without much effort.": [
        "Relational_quantity",
        "Temporal_collocation",
        "Frequency",
        "Cardinal_numbers",
        "Attempt"
    ],
    "When events reach the end of a sub-stream ( `` rail'' ), they encounter a sequential ( ) operator.": [
        "Temporal_collocation",
        "Event",
        "Sequence",
        "Becoming_aware",
        "Temporal_subregion",
        "Execution"
    ],
    "This operator turns ParallelFlowable back into Flowable.": [
        "Observable_body_parts"
    ],
    "As long as our mappers and filters are thread-safe, a parallel ( ) / sequential ( ) pair provides a very easy way of parallelizing streams.": [
        "Similarity",
        "Sequence",
        "Execution",
        "Quantity",
        "Degree",
        "Difficulty",
        "Desiring",
        "Supply"
    ],
    "One small caveat -- you will inevitably get messages reordered.": [
        "Cardinal_numbers",
        "Dimension",
        "Execution"
    ],
    "Sequential map ( ) and filter ( ) always preserve order ( like most operators ).": [
        "Sequence",
        "Frequency",
        "Preserving",
        "Relational_quantity"
    ],
    "But once you run them within a parallel ( ) block, the order is lost.": [
        "Measure_linear_extent",
        "Finish_competition",
        "Time_vector",
        "Execution"
    ],
    "This allows for greater concurrency, but you have to keep that in mind.": [
        "Weapon",
        "Activity_ongoing",
        "Being_obligated",
        "Grant_permission"
    ],
    "Should you use parallel ( ) rather than nested flatMap ( ) to parallelize your code ?": [
        "Being_obligated",
        "Using"
    ],
    "It's up to you, but parallel ( ) seems to be much easier to read and grasp.": [
        "Appearance",
        "Categorization",
        "Grasp",
        "Relational_quantity",
        "Being_up_to_it"
    ],
    "java, rxjava, concurrency, parallel, flatmap, tutorial": [
        "Origin"
    ],
    "Published at DZone with permission of Tomasz Nurkiewicz, DZone MVB.": [
        "Grant_permission"
    ],
    "Java: Coding Style or Bad Practice ?": [
        "Practice",
        "Desirability"
    ],
    "Top 10 Open Source Projects for SREs and DevOps": [
        "Source_of_getting",
        "Project",
        "Cardinal_numbers",
        "Part_orientational"
    ],
    "Multithreading Java and Interviews Part 3: Wait and Notify All": [
        "Part_whole"
    ],
    "how  to set Screenshot frame size": [
        "Intentionally_create"
    ],
    "You can try the following library: LINK Android Screenshot Library -LRB- ASL -RRB- enables to programmatically capture screenshots from Android devices without requirement of having root access privileges.": [
        "Relative_time",
        "Buildings",
        "Gizmo",
        "Having_or_lacking_access",
        "Buildings",
        "Possession",
        "Being_necessary",
        "Conquering",
        "Attempt",
        "Capability"
    ],
    "Instead, ASL utilizes a native service running in the background, started via the Android Debug Bridge -LRB- ADB -RRB- once per device boot.": [
        "Gizmo",
        "Public_services",
        "Indigenous_origin",
        "Emptying",
        "Clothing",
        "Time_vector",
        "Using",
        "Execution",
        "Activity_start"
    ],
    "You can try to do something like this,": [
        "Intentionally_affect",
        "Attempt",
        "Capability"
    ],
    "Getting a bitmap cache from a layout or a view by doing something like First you got ta setDrawingCacheEnabled to a layout -LRB- a linearlayout or relativelayout, or a view -RRB-": [
        "Opinion",
        "Intentionally_affect",
        "Getting",
        "Execution"
    ],
    "then": [],
    "Then you do whatever you want with the bitmap.": [
        "Temporal_collocation",
        "Desiring",
        "Intentionally_act"
    ],
    "Either turning it into an image file, or send the bitmap's uri to somewhere else.": [
        "Similarity",
        "Undergo_change",
        "Sending"
    ],
    "Here is the code that allowed my screenshot to be stored on an SD card and used later for whatever your needs are:": [
        "Locative_relation",
        "Needing",
        "Grant_permission",
        "Time_vector",
        "Storing",
        "Using"
    ],
    "First, you need to add a proper permission to save the file:": [
        "Ordinal_numbers",
        "Required_event",
        "Proper_reference",
        "Grant_permission"
    ],
    "And this is the code -LRB- running in an Activity -RRB-:": [
        "Intentionally_act",
        "Execution"
    ],
    "And this is how you can open the recently generated image:": [
        "Temporal_collocation",
        "Similarity",
        "Creating",
        "Capability",
        "Secrecy_status"
    ],
    "If you want to use this on fragment view then use:": [
        "Part_piece",
        "Temporal_collocation",
        "Opinion",
        "Using",
        "Desiring"
    ],
    "instead of": [],
    "on takeScreenshot -LRB- -RRB- function": [],
    "Note:": [],
    "This solution doesn't work if your dialog contains a surface view.": [
        "Discussion",
        "Part_inner_outer",
        "Intentionally_act",
        "Working_on",
        "Opinion",
        "Inclusion"
    ],
    "For details please check the answer to the following question:": [
        "Communication_response",
        "Point_of_dispute",
        "Relative_time",
        "Inspecting",
        "Emotion_directed"
    ],
    "Mualig answer is very good, but I had the same problem Ewoks describes, I'm not getting the background.": [
        "Predicament",
        "Communication_response",
        "Degree",
        "Being_obligated",
        "Identicality",
        "Desirability",
        "Getting"
    ],
    "So sometimes is good enough and sometimes I get black text over black background -LRB- depending on the theme -RRB-.": [
        "Frequency",
        "Topic",
        "Sufficiency",
        "Desirability",
        "Execution",
        "Color"
    ],
    "This solution is heavily based in Mualig code and the code I've found in Robotium.": [
        "Degree",
        "Coming_to_believe"
    ],
    "I'm discarding the use of drawing cache by calling directly to the draw method.": [
        "Cause_motion",
        "Execution",
        "Execution",
        "Create_physical_artwork",
        "Removing"
    ],
    "Before that I'll try to get the background drawable from current activity to draw it first.": [
        "Intentionally_act",
        "Ordinal_numbers",
        "Temporal_collocation",
        "Cause_motion",
        "Execution",
        "Attempt"
    ],
    "As a reference, one way to capture the screen -LRB- and not just your app activity -RRB- is to capture the framebuffer -LRB- device / dev/graphics/fb0 -RRB-.": [
        "Execution",
        "Intentionally_act",
        "Gizmo",
        "Cardinal_numbers",
        "Conquering"
    ],
    "To do this you must either have root privileges or your app must be an app with LINK -LRB- `` A permission that the system grants only if the requesting application is signed with the same certificate as the application that declared the permission'' -RRB- - which is very unlikely unless you compiled your own ROM.": [
        "Grant_permission",
        "System",
        "Sole_instance",
        "Using",
        "Documents",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Identicality",
        "Degree",
        "Possession",
        "Sign_agreement",
        "Likelihood"
    ],
    "Each framebuffer capture, from a couple of devices I have tested, contained exactly one screenshot.": [
        "Gizmo",
        "Cardinal_numbers",
        "Personal_relationship",
        "Operational_testing",
        "Frequency",
        "Inclusion"
    ],
    "People have reported it to contain more, I guess it depends on the frame/display size.": [
        "People",
        "Inclusion",
        "Increment",
        "Estimating"
    ],
    "I tried to read the framebuffer continuously but it seems to return for a fixed amount of bytes read.": [
        "Appearance",
        "Categorization",
        "Quantity",
        "Attempt",
        "Execution"
    ],
    "In my case that is -LRB- 3 410 432 -RRB- bytes, which is enough to store a display frame of 854 * 480 RGBA -LRB- 3 279 360 bytes -RRB-.": [
        "Instance",
        "Cardinal_numbers",
        "Storing",
        "Sufficiency"
    ],
    "Yes, the frame, in binary, outputted from fb0 is RGBA in my device.": [
        "Gizmo"
    ],
    "This will most likely depend from device to device.": [
        "Gizmo",
        "Likelihood"
    ],
    "This will be important for you to decode it = -RRB-": [
        "Importance"
    ],
    "In my device / dev/graphics/fb0 permissions are so that only root and users from group graphics can read the fb0.": [
        "Gizmo",
        "Grant_permission",
        "Execution",
        "Sole_instance",
        "Reading",
        "Capability"
    ],
    "graphics is a restricted group so you will probably only access fb0 with a rooted phone using su command.": [
        "Organization",
        "Sole_instance",
        "Contacting",
        "Execution",
        "Likelihood",
        "Using"
    ],
    "Android apps have the user id -LRB- uid -RRB- = app _ ## and group id -LRB- guid -RRB- = app _ ##.": [],
    "adb shell has uid = shell and guid = shell, which has much more permissions than an app.": [
        "Relational_quantity",
        "Grant_permission",
        "Weapon",
        "Increment",
        "Inclusion"
    ],
    "You can actually check those permissions at / system/permissions/platform.": [
        "Grant_permission",
        "Capability",
        "Inspecting"
    ],
    "xml": [],
    "This means you will be able to read fb0 in the adb shell without root but you will not read it within the app without root.": [
        "Weapon",
        "Categorization",
        "Capability",
        "Evidence"
    ],
    "Also, giving READ_FRAME_BUFFER and/or ACCESS_SURFACE_FLINGER permissions on AndroidManifest.xml will do nothing for a regular app because these will only work for ` signature' apps.": [
        "Grant_permission",
        "Sole_instance",
        "Distinctiveness",
        "Working_on",
        "Giving",
        "Intentionally_act"
    ],
    "Also check this LINK for more details.": [
        "Increment",
        "Inspecting"
    ],
    "Note: works only for rooted phone": [
        "Becoming_aware",
        "Sole_instance",
        "Being_employed",
        "Contacting"
    ],
    "Programmatically, you can run adb shell / system/bin/screencap - p / sdcard/img.png as below": [
        "Weapon",
        "Execution",
        "Capability"
    ],
    "then read img.png as Bitmap and use as your wish.": [
        "Temporal_collocation",
        "Reading",
        "Desiring"
    ],
    "Call this method, passing in the outer most ViewGroup that you want a screen shot of:": [
        "Execution",
        "Part_inner_outer",
        "Behind_the_scenes",
        "Execution",
        "Traversing",
        "Desiring"
    ],
    "My solution is:": [],
    "and": [],
    "Images are saved in the external storage folder.": [
        "Sensation",
        "Storing",
        "Containers"
    ],
    "ADD PERMISSION": [],
    "Add the permission in the manifest": [
        "Grant_permission"
    ],
    "For Supporting Marshmallow or above versions, please add the below code in the activity onCreate method": [
        "Cause_change_of_position_on_a_scale",
        "Intentionally_act",
        "Execution",
        "Taking_sides",
        "Emotion_directed"
    ],
    "I have created a simple library that takes a screenshot from a View and either gives you a Bitmap object or saves it directly to any path you want": [
        "Buildings",
        "Categorization",
        "Quantity",
        "Possession",
        "Taking_time",
        "Giving",
        "Intentionally_create"
    ],
    "No root permission or no big coding is required for this method.": [
        "Quantity",
        "Grant_permission",
        "Quantity",
        "Execution",
        "Size",
        "Needing"
    ],
    "On adb shell using below command you can take screen shot.": [
        "Weapon",
        "Execution",
        "Behind_the_scenes",
        "Capability",
        "Have_as_requirement",
        "Using"
    ],
    "This command does not required any root permission so same you can perform from java code of android application also.": [
        "Execution",
        "Needing",
        "Quantity",
        "Grant_permission",
        "Identicality",
        "Using",
        "Intentionally_act",
        "Intentionally_act",
        "Capability"
    ],
    "More about keyevent code in android see LINK": [
        "Grasp",
        "Increment"
    ],
    "Here we have used.": [],
    "KEYCODE_SYSRQ its value is 120 and used for System Request / Print Screen key.": [
        "System",
        "Execution",
        "Importance",
        "Using"
    ],
    "As CJBS said, The output picture will be saved in / sdcard/Pictures/Screenshots": [
        "Physical_artworks"
    ],
    "if you want to capture a view or layout like RelativeLayout or LinearLayout etc. just use the code:": [
        "Opinion",
        "Using",
        "Conquering",
        "Desiring"
    ],
    "now you can save this bitmap on device storage by:": [
        "Temporal_collocation",
        "Gizmo",
        "Storing",
        "Capability"
    ],
    "For those who want to capture a GLSurfaceView, the getDrawingCache or drawing to canvas method won't work.": [
        "Create_physical_artwork",
        "Execution",
        "Working_on",
        "Conquering",
        "Possession"
    ],
    "You have to read the content of the OpenGL framebuffer after the frame has been rendered.": [
        "Reading",
        "Being_obligated",
        "Causation"
    ],
    "There is a good answer LINK": [
        "Communication_response",
        "Relational_quantity",
        "Cognitive_connection",
        "Existence"
    ],
    "Based on the answer of @JustinMorris above and @NiravDangi here LINK we must take the background and foreground of a view and assemble them like this:": [
        "Communication_response",
        "Locative_relation",
        "Opinion",
        "Being_obligated",
        "Have_as_requirement",
        "Creating"
    ],
    "The quality parameter takes a constant of Bitmap.Config, typically either Bitmap.Config.RGB _ 565 or Bitmap.Config.ARGB _ 8888.": [
        "Terms_of_agreement",
        "Removing"
    ],
    "If you want to take screenshot from fragment than follow this:": [
        "Part_piece",
        "Relative_time",
        "Have_as_requirement",
        "Desiring"
    ],
    "Override onCreateView -LRB- -RRB-:": [],
    "Logic for taking screenshot:": [],
    "method shareScreenShotM -RRB- -LRB- -RRB-:": [],
    "method takeScreenShot -LRB- -RRB-:": [],
    "method savePic -LRB- -RRB-:": [],
    "For activity you can simply use View v1 = getWindow -LRB- -RRB-.": [
        "Intentionally_act",
        "Categorization",
        "Capability",
        "Using"
    ],
    "getDecorView -LRB- -RRB-.": [],
    "getRootView -LRB- -RRB- ; instead of mView": [],
    "Just extending taraloca's answer.": [],
    "You must add followings lines to make it work.": [
        "Working_on",
        "Being_obligated",
        "Execution"
    ],
    "I have made the image name static.": [
        "Similarity",
        "Causation"
    ],
    "Please ensure you use taraloca's timestamp variable incase you need dynamic image name.": [
        "Similarity",
        "Required_event",
        "Using"
    ],
    "And in the AndroidManifest.xml file following entries are must:": [
        "Execution",
        "Relative_time",
        "Being_obligated"
    ],
    "Short way is": [],
    "For system applications only !": [
        "Gizmo",
        "Sole_instance"
    ],
    "Note: System applications don't need to run `` su'' to execute this command.": [
        "Becoming_aware",
        "System",
        "Execution",
        "Execution",
        "Execution",
        "Intentionally_act",
        "Required_event"
    ],
    "The parameter view is the root layout object.": [
        "Terms_of_agreement",
        "Opinion"
    ],
    "Most of the answers for this question use the the Canvas drawing method or drawing cache method.": [
        "Communication_response",
        "Point_of_dispute",
        "Execution",
        "Create_physical_artwork",
        "Relational_quantity",
        "Using"
    ],
    "However, the LINK.": [],
    "Currently the recommended API for making screenshots is the LINK class available from API 24 -LRB- but the methods which accept Window parameter are available from API 26 == Android 8.0 Oreo -RRB-.": [
        "Temporal_collocation",
        "Connecting_architecture",
        "Terms_of_agreement",
        "Causation",
        "Cognitive_connection",
        "Receiving",
        "Execution"
    ],
    "Here is a sample Kotlin code for retrieving a Bitmap:": [
        "Locative_relation"
    ],
    "Take screenshot of a view in android.": [
        "Opinion",
        "Conquering"
    ],
    "For Full Page Scrolling Screenshot": [
        "Feeling",
        "Contacting"
    ],
    "If you want to capture a full View screenshot -LRB- Which contains a scrollview or so -RRB- then have a check at this library": [
        "Fullness",
        "Categorization",
        "Temporal_collocation",
        "Buildings",
        "Conquering",
        "Inclusion",
        "Desiring"
    ],
    "All you have to do is import the Gradel, and create an object of BigScreenshot": [
        "Quantity",
        "Intentionally_act",
        "Being_obligated",
        "Intentionally_create",
        "Importing"
    ],
    "BigScreenshot longScreenshot = new BigScreenshot -LRB- this, x, y -RRB- ;": [
        "Age"
    ],
    "A callback will be received with the bitmap of the Screenshots taken while automatically scrolling through the screen view group and at the end assembled together.": [
        "Organization",
        "Temporal_subregion",
        "Collaboration",
        "Opinion",
        "Building",
        "Event",
        "Receiving"
    ],
    "@Override public void getScreenshot -LRB- Bitmap bitmap -RRB- -LCB- -RCB-": [
        "Secrecy_status"
    ],
    "Which can be saved to the gallery or whatsoever usage is necessary their after": [
        "Locale_by_use",
        "Being_necessary",
        "Likelihood"
    ],
    "From Android 11 -LRB- API level 30 -RRB- you can take screen shot with the accessibility service:": [
        "Rank",
        "Cardinal_numbers",
        "Behind_the_scenes",
        "Public_services",
        "Capability",
        "Have_as_requirement"
    ],
    "LINK - Takes a screenshot of the specified display and returns it via an AccessibilityService.ScreenshotResult.": [
        "Conquering",
        "Execution"
    ],
    "No lock screen controls ever": [
        "Quantity",
        "Hair_configuration",
        "Prohibiting"
    ],
    "This developer's guide explains how dedicated devices can be locked to a single app or a set of apps.": [
        "Gizmo",
        "Sole_instance",
        "Likelihood",
        "Execution",
        "Inhibit_movement"
    ],
    "If you're an enterprise mobility management ( EMM ) developer or solutions integrator read this guide to add lock task mode to your solution.": [
        "Being_obligated",
        "Reading"
    ],
    "Android can run tasks in an immersive, kiosk-like fashion called lock task mode.": [
        "Being_obligated",
        "Being_obligated",
        "Execution",
        "Execution",
        "Building",
        "Capability"
    ],
    "You might use lock task mode if you're developing a kiosk application or a launcher to present a collection of apps.": [
        "Being_obligated",
        "Buildings",
        "Using",
        "Likelihood",
        "Execution",
        "Presence",
        "Using",
        "Cause_to_make_progress"
    ],
    "When the system runs in lock task mode, device users typically can't see notifications, access non-allowlisted apps, or return to the home screen ( unless the home screen is allowlisted ).": [
        "Temporal_collocation",
        "System",
        "Being_obligated",
        "Gizmo",
        "Telling",
        "Having_or_lacking_access",
        "Buildings",
        "Capability",
        "Execution",
        "Execution",
        "Grasp"
    ],
    "Only apps that have been allowlisted by a device policy controller ( DPC ) can run when the system is in lock task mode.": [
        "Gizmo",
        "Law",
        "Temporal_collocation",
        "System",
        "Being_obligated",
        "Sole_instance",
        "Execution",
        "Capability"
    ],
    "Apps are allowlisted because the person using the device can't always leave lock task mode.": [
        "People",
        "Gizmo",
        "Frequency",
        "Being_obligated",
        "Using",
        "Departing",
        "Capability"
    ],
    "System and privileged apps, however, can run in lock task mode without being allowlisted.": [
        "System",
        "Wealthiness",
        "Concessive",
        "Being_obligated",
        "Execution",
        "Capability"
    ],
    "How you combine the app allowlisted for lock task mode and the allowlisting DPC will depend on the problem you want to solve.": [
        "Being_obligated",
        "Predicament",
        "Possession",
        "Cause_to_amalgamate",
        "Resolve_problem"
    ],
    "The system can run in lock task mode in Android 5.0 or later.": [
        "System",
        "Being_obligated",
        "Time_vector",
        "Execution",
        "Capability"
    ],
    "Table 1 shows which versions of Android support allowlisting apps by user.": [
        "Taking_sides",
        "Evidence"
    ],
    "In Android 9.0 or later a DPC can start any app's activity into lock task mode.": [
        "Quantity",
        "Being_obligated",
        "Time_vector",
        "Intentionally_act",
        "Capability",
        "Activity_start"
    ],
    "In earlier versions, the app must already support starting its own activity in lock task mode.": [
        "Being_obligated",
        "Relative_time",
        "Being_obligated",
        "Intentionally_act",
        "Possession",
        "Time_vector",
        "Taking_sides",
        "Process_start"
    ],
    "A DPC must allowlist apps before they can be used in lock task mode.": [
        "Being_obligated",
        "Likelihood",
        "Being_obligated",
        "Using"
    ],
    "Call DevicePolicyManager.setLockTaskPackages ( ) to allowlist apps for lock task mode as shown in the following sample:": [
        "Being_obligated",
        "Relative_time",
        "Evidence",
        "Execution"
    ],
    "To find out the apps previously allowlisted for lock task mode, a DPC can call DevicePolicyManager.getLockTaskPackages ( ).": [
        "Being_obligated",
        "Execution",
        "Capability",
        "Time_vector",
        "Becoming_aware"
    ],
    "Other apps can call DevicePolicyManager.isLockTaskPermitted ( ) to confirm that an app package supports lock task mode.": [
        "Supporting",
        "Being_obligated",
        "Increment",
        "Execution",
        "Likelihood",
        "Verification",
        "Execution"
    ],
    "In Android 9.0 ( API level 28 ) or higher, you can start another app's activity in lock task mode.": [
        "Increment",
        "Being_obligated",
        "Rank",
        "Capability",
        "Intentionally_act",
        "Position_on_a_scale",
        "Activity_start"
    ],
    "If an activity is already running in the foreground or background, you need to relaunch the activity.": [
        "Intentionally_act",
        "Time_vector",
        "Required_event",
        "Execution"
    ],
    "Call ActivityOptions.setLockTaskEnabled ( ) and supply these options when starting the activity.": [
        "Possibilities",
        "Intentionally_act",
        "Process_start",
        "Temporal_collocation",
        "Supply",
        "Execution"
    ],
    "The following snippet shows one way you can do this:": [
        "Part_piece",
        "Relative_time",
        "Capability",
        "Intentionally_act",
        "Cardinal_numbers",
        "Evidence"
    ],
    "In Android versions before 9.0, an app starts its own activities in lock task mode by calling Activity.startLockTask ( ).": [
        "Being_obligated",
        "Execution",
        "Intentionally_act",
        "Possession",
        "Process_start"
    ],
    "To call this method, the activity must be running in the foreground ( see Activity-lifecycle concepts ) so we suggest calling in the onResume ( ) method of an Activity or Fragment.": [
        "Execution",
        "Intentionally_act",
        "Part_piece",
        "Execution",
        "Being_obligated",
        "Grasp",
        "Intentionally_act",
        "Execution",
        "Execution"
    ],
    "Here's how you can call startLockTask ( ):": [
        "Locative_relation",
        "Capability",
        "Execution"
    ],
    "Don't start lock task mode when the device is locked because the user might not be able to unlock the device.": [
        "Intentionally_act",
        "Being_obligated",
        "Temporal_collocation",
        "Gizmo",
        "Likelihood",
        "Activity_start",
        "Inhibit_movement",
        "Capability"
    ],
    "You can call KeyguardManager methods to find out if the device is locked and use an Activity lifecycle callback ( such as onResume ( ) that's called after unlocking ) to start lock task mode.": [
        "Gizmo",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Inhibit_movement",
        "Activity_start",
        "Becoming_aware",
        "Execution",
        "Using",
        "Execution",
        "Capability"
    ],
    "An app in lock task mode can start new activities as long as the activity doesn't start a new task -- except tasks that launch an allowlisted app.": [
        "Being_obligated",
        "Intentionally_act",
        "Being_obligated",
        "Age",
        "Shoot_projectiles",
        "Intentionally_act",
        "Capability",
        "Activity_start",
        "Desiring",
        "Intentionally_act"
    ],
    "To understand how tasks relate to activities, read the guide Understand Tasks and Back Stack.": [
        "Being_obligated",
        "Intentionally_act",
        "Being_obligated",
        "Taking_sides",
        "Categorization",
        "Grasp"
    ],
    "Alternatively, you can declare in your app manifest file how an activity should behave when the system is running in lock task mode.": [
        "Intentionally_act",
        "Temporal_collocation",
        "System",
        "Being_obligated",
        "Being_obligated",
        "Conduct",
        "Execution",
        "Capability"
    ],
    "To have the system automatically run your activity in lock task mode, set the android: lockTaskMode attribute to if_whitelisted as shown in the following example:": [
        "System",
        "Being_obligated",
        "Relative_time",
        "Instance",
        "Intentionally_act",
        "Execution",
        "Evidence",
        "Intentionally_create"
    ],
    "You can learn more about declaring options in the app manifest file, by reading the lockTaskMode reference.": [
        "Education_teaching",
        "Capability",
        "Reading",
        "Possibilities",
        "Increment"
    ],
    "A DPC can remotely stop lock task mode by removing the app package from the allowlist.": [
        "Being_obligated",
        "Execution",
        "Capability",
        "Preventing",
        "Removing"
    ],
    "Call DevicePolicyManager.setLockTaskPackages ( ), in Android 6.0 ( API level 23 ) or later, and omit the package name from the allowlist array.": [
        "Execution",
        "Diversity",
        "Rank",
        "Time_vector",
        "Execution"
    ],
    "When you update the allowlist, the app returns to the previous task in the stack.": [
        "Temporal_collocation",
        "Time_vector",
        "Being_obligated",
        "Execution"
    ],
    "If an activity previously called startLockTask ( ), then the activity can call Activity.stopLockTask ( ) to stop lock task mode.": [
        "Being_obligated",
        "Intentionally_act",
        "Execution",
        "Capability",
        "Preventing",
        "Execution",
        "Temporal_collocation",
        "Time_vector"
    ],
    "This method only works for the activity that started lock task mode.": [
        "Execution",
        "Being_obligated",
        "Sole_instance",
        "Being_employed",
        "Process_start",
        "Intentionally_act"
    ],
    "Your DPC might find it useful to know when an app ( running in the same user ) enters and exits lock task mode.": [
        "Temporal_collocation",
        "Path_shape",
        "Being_obligated",
        "Identicality",
        "Likelihood",
        "Locating",
        "Execution",
        "Execution",
        "Awareness"
    ],
    "To receive callbacks, override the following callback methods in your DPC's DeviceAdminReceiver subclass:": [
        "Relative_time",
        "Execution",
        "Receiving"
    ],
    "If you launch another app into lock task mode, you need to track the running status in your own app.": [
        "Being_obligated",
        "Increment",
        "Required_event",
        "Possession",
        "Shoot_projectiles"
    ],
    "To check if the current app is running in lock task mode, use the methods on ActivityManager as shown in the following example:": [
        "Being_obligated",
        "Execution",
        "Relative_time",
        "Instance",
        "Temporal_collocation",
        "Using",
        "Evidence",
        "Execution",
        "Inspecting"
    ],
    "When an app runs in lock task mode, the system user interface ( UI ) changes in the following ways:": [
        "Temporal_collocation",
        "Being_obligated",
        "Gizmo",
        "Execution",
        "Relative_time",
        "Undergo_change",
        "Execution"
    ],
    "In Android 9.0 or higher when lock task mode is enabled, your DPC can enable certain system UI features on the device -- useful to developers creating a custom launcher.": [
        "Position_on_a_scale",
        "Temporal_collocation",
        "Being_obligated",
        "System",
        "Gizmo",
        "Custom",
        "Likelihood",
        "Creating",
        "Experiencer_focus",
        "Capability"
    ],
    "Call DevicePolicyManager.setLockTaskFeatures ( ) as shown in the following snippet:": [
        "Relative_time",
        "Part_piece",
        "Execution",
        "Evidence"
    ],
    "The system disables any features you don't include in the flags argument.": [
        "System",
        "Quantity",
        "Intentionally_act",
        "Reasoning",
        "Render_nonfunctional",
        "Inclusion"
    ],
    "The enabled UI features persist between launches into lock task mode.": [
        "Being_obligated",
        "Process_continue",
        "Shoot_projectiles"
    ],
    "If the device is already in lock task mode, any changes you make to the lock task features show immediately.": [
        "Gizmo",
        "Being_obligated",
        "Reasoning",
        "Quantity",
        "Causation",
        "Time_vector",
        "Undergo_change"
    ],
    "Table 2 describes the UI features you can customize.": [
        "Cardinal_numbers",
        "Capability",
        "Experiencer_focus"
    ],
    "A DPC can call DevicePolicyManager.getLockTaskFeatures ( ) to get the list of features available on a device when lock task mode is enabled.": [
        "Gizmo",
        "Temporal_collocation",
        "Being_obligated",
        "Capability",
        "Execution",
        "Execution"
    ],
    "When a device exits lock task mode, the user interface returns to the state mandated by existing device policies.": [
        "Temporal_collocation",
        "Gizmo",
        "Being_obligated",
        "Political_locales",
        "Law",
        "Execution",
        "Existence",
        "Departing"
    ],
    "When an app runs in lock task mode, other apps and background services can create new windows that Android displays in front of the app in lock task mode.": [
        "Temporal_collocation",
        "Being_obligated",
        "Public_services",
        "Connecting_architecture",
        "Execution",
        "Increment",
        "Age",
        "Part_orientational",
        "Intentionally_create",
        "Capability"
    ],
    "Apps and services create these windows to show toasts, dialogs, and overlays to the person using the device.": [
        "Public_services",
        "Connecting_architecture",
        "Apply_heat",
        "Discussion",
        "People",
        "Gizmo",
        "Intentionally_create",
        "Using",
        "Reasoning"
    ],
    "Your DPC can prevent these by adding the DISALLOW_CREATE_WINDOWS user restriction.": [
        "Capability",
        "Preventing"
    ],
    "The following example shows how you might do this in the onLockTaskModeEntering ( ) callback:": [
        "Instance",
        "Relative_time",
        "Likelihood",
        "Intentionally_act",
        "Evidence"
    ],
    "Your DPC can remove the user restriction when the device exits lock task mode.": [
        "Temporal_collocation",
        "Gizmo",
        "Being_obligated",
        "Departing",
        "Capability",
        "Removing"
    ],
    "To learn more about dedicated devices, read the following documents:": [
        "Gizmo",
        "Documents",
        "Relative_time",
        "Increment",
        "Education_teaching",
        "Reading"
    ],
    "A single app package that combines a kiosk ( to present content ) and a mini DPC ( to allowlist itself for lock task mode ).": [
        "Buildings",
        "Being_obligated",
        "Sole_instance",
        "Execution",
        "Presence",
        "Cause_to_amalgamate"
    ],
    "A DPC that's part of an enterprise mobility management solution, launching the customer's mobile apps in lock task mode.": [
        "Being_obligated",
        "Bringing",
        "Activity_start",
        "Membership"
    ],
    "The status bar is blank with notifications and system information hidden.": [
        "Buildings",
        "Telling",
        "Gizmo",
        "Information",
        "Hiding_objects"
    ],
    "The Home and Overview buttons are hidden.": [
        "Buildings",
        "Clothing_parts",
        "Hiding_objects"
    ],
    "Other apps can't launch new activities.": [
        "Intentionally_act",
        "Increment",
        "Age",
        "Launch_process",
        "Capability"
    ],
    "The lock screen ( if set ) is disabled.": [
        "Hair_configuration",
        "Intentionally_create",
        "Render_nonfunctional"
    ],
    "Dedicated devices cookbook with further examples to restrict the dedicated devices and enhance the user experience.": [
        "Gizmo",
        "Expertise",
        "Instance",
        "Increment",
        "Grant_permission",
        "Cause_to_make_progress"
    ],
    "Dedicated devices overview is an overview of dedicated devices.": [
        "Gizmo"
    ],
    "Manage multiple users explains how to share devices between users.": [
        "Gizmo",
        "Quantity"
    ],
    "Have you checked RemoteControlClient ?": [
        "Inspecting"
    ],
    "it is used for the Android Music Remote control even if the App is in Lock mode.": [
        "Control",
        "Performing_arts",
        "Inhibit_movement",
        "Using"
    ],
    "-LRB- same like image you have attached -RRB-": [
        "Identicality",
        "Similarity",
        "Being_attached"
    ],
    "Please check LINK": [],
    "Just call below method while you receiver command action for Play, Pause, Next and previous of the Song track.": [
        "Execution",
        "Execution",
        "Performers_and_roles",
        "Change_event_time",
        "Time_vector",
        "Execution",
        "Intentionally_act",
        "Relative_time"
    ],
    "MediaButtonHelper Class": [],
    "Please also check this developer app given for how to integrate RemoteControlClient: LINK However UI for the RemoteControlClient defer as per the device you can not updates its UI to your own but you have control to show and display the component and control of the Music app.": [
        "Concessive",
        "Gizmo",
        "Reasoning",
        "Possession",
        "Inspecting",
        "Giving",
        "Ingredients",
        "Change_event_time",
        "Control",
        "Capability"
    ],
    "Above mentioned class is deprecated now.": [
        "Judgment_communication",
        "Temporal_collocation"
    ],
    "So please check with LINK for that and update accordingly.": [
        "Emotion_directed"
    ],
    "RemoteControlClient was what you were looking for, but now it's deprecated and has been replaced with MediaSession.": [
        "Scrutiny",
        "Judgment_communication",
        "Temporal_collocation",
        "Take_place_of"
    ],
    "The docs are here: LINK": [
        "Locative_relation"
    ],
    "Custom Annotations in Retrofit 2.0": [
        "Custom"
    ],
    "Interceptors are concepts that exist in OkHttp, Retrofit knows nothing about them.": [
        "Existence",
        "Awareness"
    ],
    "What you need to do is have two OkHttp clients, with their respective instances of Retrofit.": [
        "Required_event",
        "Cardinal_numbers",
        "Instance",
        "Intentionally_act"
    ],
    "Whether you need the authentication headers or not will decide which instance to inject.": [
        "Instance",
        "Required_event",
        "Deciding"
    ],
    "I have similar requirement, what I found is Annotation can be read in LINK, LINK and LINK.": [
        "Being_necessary",
        "Similarity",
        "Likelihood",
        "Reading",
        "Becoming_aware"
    ],
    "I also found two articles as examples for implementation on each way.": [
        "Instance",
        "Cardinal_numbers",
        "Execute_plan",
        "Locating"
    ],
    "We'll use the gson converter -LRB- GsonConverterFactory -RRB- provided by Retrofit and modify it slightly to include a listener in GsonResponseBodyConverter.class which handles the http response parsing.": [
        "Response",
        "Intentionally_act",
        "Supply",
        "Using",
        "Inclusion",
        "Cause_change"
    ],
    "In GsonCacheableConverter, it overrides responseBodyConverter -LRB- -RRB- to persist response tagged with @Cacheable.": [
        "Response",
        "Process_continue"
    ],
    "We read the annotation in the CallAdapter.Factory and when the request gets created in the CallAdapter, we will store some information for this kind of request within some map, to identify it later in some interceptor.": [
        "Temporal_collocation",
        "Execution",
        "Relational_quantity",
        "Verification",
        "Execution",
        "Time_vector",
        "Storing",
        "Information",
        "Categorization",
        "Intentionally_create"
    ],
    "It uses a custom CallAdapter to get annotation @Authenticated, and put data into a map, which later parsed in the Interceptor.": [
        "Custom",
        "Causation",
        "Time_vector",
        "Execution",
        "Using"
    ],
    "I think requestBodyConverter -LRB- -RRB- and CallAdapter are closer to your requirement.": [
        "Being_necessary",
        "Opinion"
    ],
    "While if you do not insist on custom annotations, the easiest way for now in my opinion is to add custom header to the api interface, then read and remove it in the interceptor.": [
        "Custom",
        "Categorization",
        "Intentionally_act",
        "Regard",
        "Cause_change_of_position_on_a_scale",
        "Temporal_collocation",
        "Removing",
        "Temporal_collocation",
        "Execution"
    ],
    "That is, adding @Headers -LRB- `` needauth: 1'' -RRB- to your services, and using chain.request -LRB- -RRB-.": [
        "Public_services",
        "Using"
    ],
    "header -LRB- `` needauth'' -RRB- to get the value.": [
        "Execution"
    ],
    "Example: LINK.": [],
    "Since the version of Retrofit 2.6.0, you can get the annotations in OkHttp Interceptor using the tag field like this:": [
        "Fields",
        "Capability",
        "Using",
        "Execution"
    ],
    "Then inside of the interceptor, you can verify if the request is annotated or no.": [
        "Temporal_collocation",
        "Execution",
        "Part_inner_outer",
        "Verification",
        "Capability"
    ],
    "Retrofit Changelog:": [],
    "New: @Tag parameter annotation for setting tags on the underlying OkHttp Request object.": [
        "Terms_of_agreement",
        "Age",
        "Execution"
    ],
    "These can be read in CallAdapters or OkHttp Interceptors for tracing, analytics, varying behavior, and more.": [
        "Conduct",
        "Increment",
        "Likelihood",
        "Similarity",
        "Reading"
    ],
    "Based on LINK.": [],
    "Did try to comment there but it looks too ugly because don't know how to make multiline.": [
        "Sufficiency",
        "Scrutiny",
        "Causation",
        "Locative_relation",
        "Attempt",
        "Aesthetics",
        "Intentionally_act",
        "Awareness"
    ],
    "I'm using as extension function:": [
        "Documents",
        "Using"
    ],
    "fun < T: Annotation > Request.getCustomAnnotation -LRB- annotationClass: Class <T> -RRB-: T ?": [],
    "= this.tag -LRB- Invocation:: class.java -RRB- ?": [],
    "method -LRB- -RRB- ?": [],
    "getAnnotation -LRB- annotationClass -RRB-": [],
    "And you can use then like that:": [
        "Temporal_collocation",
        "Capability",
        "Using"
    ],
    "request.getCustomAnnotation -LRB- YourAnnotation:: class.java -RRB-": [],
    "Android SQLite performance in complex queries": [
        "Performing_arts",
        "Questioning"
    ],
    "Saving data to a database is ideal for repeating or structured data, such as contact information.": [
        "Frequency",
        "Contacting",
        "Information"
    ],
    "This page assumes that you are familiar with SQL databases in general and helps you get started with SQLite databases on Android.": [
        "Contacting",
        "Execution",
        "Assistance",
        "Execution",
        "Adopt_selection",
        "Expertise",
        "Activity_start"
    ],
    "The APIs you'll need to use a database on Android are available in the android.database.sqlite package.": [
        "Execution",
        "Using",
        "Have_as_requirement"
    ],
    "Caution: Although these APIs are powerful, they are fairly low-level and require a great deal of time and effort to use:": [
        "Make_agreement_on_action",
        "Measure_duration",
        "Degree",
        "Desirability",
        "Attempt",
        "Have_as_requirement",
        "Using"
    ],
    "For these reasons, we highly recommended using the Room Persistence Library as an abstraction layer for accessing information in your app's SQLite databases.": [
        "Causation",
        "Building_subparts",
        "Buildings",
        "Information",
        "Process_continue",
        "Using"
    ],
    "One of the main principles of SQL databases is the schema: a formal declaration of how the database is organized.": [
        "First_rank",
        "Cardinal_numbers"
    ],
    "The schema is reflected in the SQL statements that you use to create your database.": [
        "Intentionally_create",
        "Cogitation",
        "Using"
    ],
    "You may find it helpful to create a companion class, known as a contract class, which explicitly specifies the layout of your schema in a systematic and self-documenting way.": [
        "Personal_relationship",
        "Documents",
        "Likelihood",
        "Assistance",
        "Locating",
        "Intentionally_create"
    ],
    "A contract class is a container for constants that define names for URIs, tables, and columns.": [
        "Documents",
        "Communicate_categorization",
        "Containers"
    ],
    "The contract class allows you to use the same constants across all the other classes in the same package.": [
        "Documents",
        "Quantity",
        "Execution",
        "Identicality",
        "Increment",
        "Grant_permission",
        "Using"
    ],
    "This lets you change a column name in one place and have it propagate throughout your code.": [
        "Locale",
        "Make_possible_to_do",
        "Cardinal_numbers",
        "Dispersal",
        "Undergo_change"
    ],
    "A good way to organize a contract class is to put definitions that are global to your whole database in the root level of the class.": [
        "Documents",
        "Communicate_categorization",
        "Political_locales",
        "Relational_quantity",
        "Ranked_expectation",
        "Rank",
        "Causation"
    ],
    "Then create an inner class for each table.": [
        "Temporal_collocation",
        "Part_inner_outer",
        "Intentionally_create"
    ],
    "Each inner class enumerates the corresponding table's columns.": [
        "Part_inner_outer"
    ],
    "Note: By implementing the BaseColumns interface, your inner class can inherit a primary key field called _ ID that some Android classes such as CursorAdapter expect it to have.": [
        "Fields",
        "Relational_quantity",
        "Part_inner_outer",
        "Importance",
        "Execute_plan",
        "First_rank",
        "Capability",
        "Becoming_aware",
        "Expectation",
        "Execution"
    ],
    "It's not required, but this can help your database work harmoniously with the Android framework.": [
        "Needing",
        "Working_on",
        "Assistance",
        "Capability"
    ],
    "For example, the following contract defines the table name and column names for a single table representing an RSS feed:": [
        "Instance",
        "Relative_time",
        "Documents",
        "Sole_instance",
        "Communicate_categorization",
        "Communicate_categorization"
    ],
    "Once you have defined how your database looks, you should implement methods that create and maintain the database and tables.": [
        "Execution",
        "Frequency",
        "Gizmo",
        "Scrutiny",
        "Being_obligated",
        "Creating",
        "Communicate_categorization"
    ],
    "Here are some typical statements that create and delete a table:": [
        "Locative_relation",
        "Relational_quantity",
        "Creating"
    ],
    "Just like files that you save on the device's internal storage, Android stores your database in your app's private folder.": [
        "Gizmo",
        "Storing",
        "Containers",
        "Storing"
    ],
    "Your data is secure, because by default this area is not accessible to other apps or the user.": [
        "Locale",
        "Increment",
        "Having_or_lacking_access",
        "Getting"
    ],
    "The SQLiteOpenHelper class contains a useful set of APIs for managing your database.": [
        "Execution",
        "Operating_a_system",
        "Inclusion"
    ],
    "When you use this class to obtain references to your database, the system performs the potentially long-running operations of creating and updating the database only when needed and not during app startup.": [
        "Temporal_collocation",
        "System",
        "Temporal_collocation",
        "Intentionally_act",
        "Sole_instance",
        "Getting",
        "Intentionally_create",
        "Being_necessary",
        "Using",
        "Businesses"
    ],
    "All you need to do is call getWritableDatabase ( ) or getReadableDatabase ( ).": [
        "Quantity",
        "Required_event",
        "Intentionally_act",
        "Execution"
    ],
    "Note: Because they can be long-running, be sure that you call getWritableDatabase ( ) or getReadableDatabase ( ) in a background thread.": [
        "Capability",
        "Execution",
        "Likelihood"
    ],
    "See Threading on Android for more information.": [
        "Information",
        "Perception_experience",
        "Increment"
    ],
    "To use SQLiteOpenHelper, create a subclass that overrides the onCreate ( ) and onUpgrade ( ) callback methods.": [
        "Execution",
        "Using",
        "Intentionally_create"
    ],
    "You may also want to implement the onDowngrade ( ) or onOpen ( ) methods, but they are not required.": [
        "Gizmo",
        "Execution",
        "Likelihood",
        "Being_necessary",
        "Desiring"
    ],
    "For example, here's an implementation of SQLiteOpenHelper that uses some of the commands shown above:": [
        "Instance",
        "Locative_relation",
        "Relational_quantity",
        "Execution",
        "Evidence",
        "Execute_plan",
        "Using"
    ],
    "To access your database, instantiate your subclass of SQLiteOpenHelper:": [],
    "Insert data into the database by passing a ContentValues object to the insert ( ) method:": [
        "Execution",
        "Traversing"
    ],
    "The first argument for insert ( ) is simply the table name.": [
        "Ordinal_numbers",
        "Reasoning"
    ],
    "The second argument tells the framework what to do in the event that the ContentValues is empty ( i.e., you did not put any values ).": [
        "Measure_duration",
        "Fullness",
        "Quantity",
        "Intentionally_act",
        "Causation",
        "Intentionally_act",
        "Event",
        "Reasoning"
    ],
    "If you specify the name of a column, the framework inserts a row and sets the value of that column to null.": [
        "Quarreling"
    ],
    "If you specify null, like in this code sample, the framework does not insert a row when there are no values.": [
        "Being_in_effect",
        "Similarity",
        "Quarreling",
        "Temporal_collocation",
        "Quantity",
        "Intentionally_act",
        "Existence"
    ],
    "The insert ( ) methods returns the ID for the newly created row, or it will return -1 if there was an error inserting the data.": [
        "Execution",
        "Quarreling",
        "Intentionally_create",
        "Execution",
        "Existence",
        "Temporal_collocation",
        "Execution"
    ],
    "This can happen if you have a conflict with pre-existing data in the database.": [
        "Event",
        "Hostile_encounter",
        "Capability"
    ],
    "To read from a database, use the query ( ) method, passing it your selection criteria and desired columns.": [
        "Questioning",
        "Execution",
        "Natural_features",
        "Choosing",
        "Desiring",
        "Reading",
        "Using"
    ],
    "The method combines elements of insert ( ) and update ( ), except the column list defines the data you want to fetch ( the `` projection'' ), rather than the data to insert.": [
        "Execution",
        "Cause_to_amalgamate",
        "Ingredients",
        "Communicate_categorization",
        "Desiring",
        "Bringing"
    ],
    "The results of the query are returned to you in a Cursor object.": [
        "Questioning",
        "Causation",
        "Execution"
    ],
    "The third and fourth arguments ( selection and selectionArgs ) are combined to create a WHERE clause.": [
        "Part_whole",
        "Ordinal_numbers",
        "Reasoning",
        "Cause_to_amalgamate",
        "Law",
        "Intentionally_create"
    ],
    "Because the arguments are provided separately from the selection query, they are escaped before being combined.": [
        "Reasoning",
        "Questioning",
        "Cause_to_amalgamate",
        "Supply",
        "Departing"
    ],
    "This makes your selection statements immune to SQL injection.": [
        "Choosing",
        "Causation"
    ],
    "For more detail about all arguments, see the query ( ) reference.": [
        "Evidence",
        "Questioning",
        "Quantity",
        "Grasp",
        "Increment"
    ],
    "To look at a row in the cursor, use one of the Cursor move methods, which you must always call before you begin reading values.": [
        "Intentionally_act",
        "Process_start",
        "Reading",
        "Frequency",
        "Being_obligated",
        "Quarreling",
        "Scrutiny",
        "Execution",
        "Execution",
        "Cardinal_numbers",
        "Using"
    ],
    "Since the cursor starts at position -1, calling moveToNext ( ) places the `` read position'' on the first entry in the results and returns whether or not the cursor is already past the last entry in the result set.": [
        "Execution",
        "Causation",
        "Relative_time",
        "Execution",
        "Process_start",
        "Time_vector",
        "Causation",
        "Execution",
        "Ordinal_numbers",
        "Categorization",
        "Execution"
    ],
    "For each row, you can read a column's value by calling one of the Cursor get methods, such as getString ( ) or getLong ( ).": [
        "Quarreling",
        "Execution",
        "Reading",
        "Capability",
        "Cardinal_numbers",
        "Execution",
        "Execution"
    ],
    "For each of the get methods, you must pass the index position of the column you desire, which you can get by calling getColumnIndex ( ) or getColumnIndexOrThrow ( ).": [
        "Execution",
        "Execution",
        "Desiring",
        "Execution",
        "Being_obligated",
        "Capability",
        "Process_end"
    ],
    "When finished iterating through results, call close ( ) on the cursor to release its resources.": [
        "Causation",
        "Releasing",
        "Process_completed_state",
        "Temporal_collocation"
    ],
    "For example, the following shows how to get all the item IDs stored in a cursor and add them to a list:": [
        "Instance",
        "Relative_time",
        "Quantity",
        "Entity",
        "Cause_change_of_position_on_a_scale",
        "Storing",
        "Execution",
        "Evidence"
    ],
    "To delete rows from a table, you need to provide selection criteria that identify the rows to the delete ( ) method.": [
        "Choosing",
        "Quarreling",
        "Execution",
        "Categorization",
        "Supply",
        "Required_event"
    ],
    "The mechanism works the same as the selection arguments to the query ( ) method.": [
        "Identicality",
        "Choosing",
        "Questioning",
        "Execution",
        "Execution",
        "Being_employed",
        "Evidence"
    ],
    "It divides the selection specification into a selection clause and selection arguments.": [
        "Separating",
        "Law",
        "Choosing",
        "Evidence"
    ],
    "The clause defines the columns to look at, and also allows you to combine column tests.": [
        "Law",
        "Operational_testing",
        "Grant_permission",
        "Communicate_categorization",
        "Scrutiny",
        "Cause_to_amalgamate"
    ],
    "The arguments are values to test against that are bound into the clause.": [
        "Law",
        "Evidence",
        "Operational_testing",
        "Attaching"
    ],
    "Because the result isn't handled the same as a regular SQL statement, it is immune to SQL injection.": [
        "Causation",
        "Identicality",
        "Intentionally_act"
    ],
    "The return value for the delete ( ) method indicates the number of rows that were deleted from the database.": [
        "Execution",
        "Execution",
        "Quarreling",
        "Quantity",
        "Evidence"
    ],
    "When you need to modify a subset of your database values, use the update ( ) method.": [
        "Temporal_collocation",
        "Being_obligated",
        "Execution",
        "Required_event",
        "Cause_change",
        "Using"
    ],
    "Updating the table combines the ContentValues syntax of insert ( ) with the WHERE syntax of delete ( ).": [
        "Cause_to_amalgamate"
    ],
    "The return value of the update ( ) method is the number of rows affected in the database.": [
        "Execution",
        "Execution",
        "Quarreling",
        "Objective_influence",
        "Quantity"
    ],
    "Since getWritableDatabase ( ) and getReadableDatabase ( ) are expensive to call when the database is closed, you should leave your database connection open for as long as you possibly need to access it.": [
        "Temporal_collocation",
        "Social_connection",
        "Likelihood",
        "Departing",
        "Being_obligated",
        "Body_movement",
        "Secrecy_status",
        "Required_event",
        "Expensiveness",
        "Execution",
        "Dimension"
    ],
    "Typically, it is optimal to close the database in the onDestroy ( ) of the calling Activity.": [
        "Intentionally_act",
        "Execution",
        "Social_connection"
    ],
    "The Android SDK includes a sqlite3 shell tool that allows you to browse table contents, run SQL commands, and perform other useful functions on SQLite databases.": [
        "Weapon",
        "Execution",
        "Gizmo",
        "Execution",
        "Increment",
        "Grant_permission",
        "Intentionally_act",
        "Inclusion"
    ],
    "For more information, see how to how to issue shell commands.": [
        "Information",
        "Weapon",
        "Execution",
        "Increment",
        "Creating",
        "Grasp"
    ],
    "There is no compile-time verification of raw SQL queries.": [
        "Quantity",
        "Questioning",
        "Degree_of_processing",
        "Verification",
        "Existence"
    ],
    "As your data graph changes, you need to update the affected SQL queries manually.": [
        "Questioning",
        "Undergo_change",
        "Required_event"
    ],
    "This process can be time consuming and error prone.": [
        "Execution",
        "Ingestion",
        "Likelihood",
        "Measure_duration",
        "Capability"
    ],
    "You need to use lots of boilerplate code to convert between SQL queries and data objects.": [
        "Questioning",
        "Quantity",
        "Cause_change",
        "Using",
        "Required_event"
    ],
    "I would add these:": [],
    "Using of rawQuery -LRB- -RRB- instead of building using ContentValues will fasten up in certain cases.": [
        "Closure",
        "Locative_relation",
        "Instance",
        "Using",
        "Likelihood",
        "Using",
        "Building"
    ],
    "off course it is a little tedious to write raw query.": [
        "Questioning",
        "Quantity",
        "Degree_of_processing",
        "Stimulus_focus"
    ],
    "If you have a lot of string / text type data, consider creating Virtual tables using full text search -LRB- FTS3 -RRB-, which can run faster query.": [
        "Fullness",
        "Scrutiny",
        "Questioning",
        "Intentionally_create",
        "Execution",
        "Capability",
        "Quantity",
        "Categorization",
        "Using"
    ],
    "you can search in google for the exact speed improvements.": [
        "Accuracy",
        "Intoxicants",
        "Capability",
        "Scrutiny"
    ],
    "Pin down exactly which queries you need to optimize.": [
        "Ingestion",
        "Frequency",
        "Required_event",
        "Questioning"
    ],
    "Grab a copy of a typical database and use the REPL to time queries.": [
        "Measure_duration",
        "Questioning",
        "Using",
        "Duplication"
    ],
    "Use this to benchmark any gains as you optimize.": [
        "Using",
        "Quantity",
        "Cause_to_make_progress"
    ],
    "Use ANALYZE to allow SQLite's query planner to work more efficiently.": [
        "Questioning",
        "Increment",
        "Working_on",
        "Grant_permission"
    ],
    "For SELECTs and UPDATEs, indexes can things up, but only if the indexes you create can actually be used by the queries that you need speeding up.": [
        "Locative_relation",
        "Sole_instance",
        "Questioning",
        "Required_event",
        "Likelihood",
        "Intoxicants",
        "Creating",
        "Using"
    ],
    "Use EXPLAIN QUERY PLAN on your queries to see which index would be used or if the query requires a full table scan.": [
        "Questioning",
        "Questioning",
        "Questioning",
        "Fullness",
        "Scrutiny",
        "Needing",
        "Project",
        "Using",
        "Grasp"
    ],
    "For large tables, a full table scan is bad and you probably want an index.": [
        "Fullness",
        "Scrutiny",
        "Dimension",
        "Likelihood",
        "Desirability",
        "Desiring"
    ],
    "Only one index will be used on any given query.": [
        "Sole_instance",
        "Questioning",
        "Cardinal_numbers",
        "Giving",
        "Quantity",
        "Using"
    ],
    "If you have multiple predicates, then the index that will be used is the one that is expected to reduce the result set the most -LRB- based on ANALYZE -RRB-.": [
        "Clothing",
        "Cause_change_of_position_on_a_scale",
        "Causation",
        "Relational_quantity",
        "Quantity",
        "Expectation",
        "Using",
        "Temporal_collocation",
        "Intentionally_create"
    ],
    "You can have indexes that contain multiple columns -LRB- to assist queries with multiple predicates -RRB-.": [
        "Questioning",
        "Quantity",
        "Capability",
        "Inclusion",
        "Assistance"
    ],
    "If you have indexes with multiple columns, they are usable only if the predicates fit the index from left to right with no gaps -LRB- but unused columns at the end are fine -RRB-.": [
        "Direction",
        "Part_orientational",
        "Quantity",
        "Natural_features",
        "Temporal_subregion",
        "Quantity",
        "Sole_instance",
        "Suitability",
        "Desirability"
    ],
    "If you use an ordering predicate -LRB- <, < =, > etc -RRB- then that needs to be in the last used column of the index.": [
        "Execution",
        "Relative_time",
        "Required_event",
        "Using",
        "Temporal_collocation"
    ],
    "Using both WHERE predicates and ORDER BY both require an index and SQLite can only use one, so that can be a point where performance suffers.": [
        "Quantity",
        "Sole_instance",
        "Cardinal_numbers",
        "Performing_arts",
        "Locative_relation",
        "Catastrophe",
        "Have_as_requirement",
        "Locale",
        "Locative_relation",
        "Using",
        "Capability",
        "Using"
    ],
    "The more indexes you have, the slower your INSERTs will be, so you will have to work out the best trade-off for your situation.": [
        "Increment",
        "Desirability",
        "Being_obligated",
        "Working_on"
    ],
    "If you have more complex queries that can't make use of any indexes that you might create, you can de-normalize your schema, structuring your data in such a way that the queries are simpler and can be answered using indexes.": [
        "Increment",
        "Questioning",
        "Quantity",
        "Likelihood",
        "Using",
        "Communication_response",
        "Intentionally_create",
        "Likelihood",
        "Causation",
        "Capability"
    ],
    "If you are doing a large number of INSERTs, try dropping indexes and recreating them at the end.": [
        "Attempt",
        "Change_position_on_a_scale",
        "Temporal_subregion",
        "Dimension",
        "Quantity",
        "Intentionally_act"
    ],
    "You will need to benchmark this.": [
        "Required_event"
    ],
    "SQLite LINK using savepoints, but I'm not sure that you'll gain anything there performance-wise.": [
        "Make_cognitive_connection",
        "Locative_relation",
        "Using",
        "Getting",
        "Likelihood"
    ],
    "You can LINK.": [],
    "If you can recover from database corruption yourself, then this might work for you.": [
        "Recovery",
        "Likelihood",
        "Working_on",
        "Capability",
        "Temporal_collocation"
    ],
    "You could perhaps only do this when you're doing intensive operations that you can recover from manually.": [
        "Sole_instance",
        "Temporal_collocation",
        "Businesses",
        "Recovery",
        "Capability",
        "Capability",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "I'm not sure how much of this you can get to from an Android application.": [
        "Using",
        "Likelihood",
        "Relational_quantity",
        "Required_event",
        "Capability"
    ],
    "There is a LINK for optimizing SQLite in general in the SQLite documentation.": [
        "Execution",
        "Existence"
    ],
    "Here's a bit of code to get EXPLAIN QUERY PLAN results into Android logcat from a running Android app.": [
        "Locative_relation",
        "Questioning",
        "Quantity",
        "Project",
        "Execution",
        "Causation",
        "Execution"
    ],
    "I'm starting with an SQLiteOpenHelper dbHelper and an SQLiteQueryBuilder qb.": [
        "Process_start"
    ],
    "I dropped this into my ContentProvider.query -LRB- -RRB- and now I can see exactly how all the queries are getting performed.": [
        "Quantity",
        "Questioning",
        "Change_position_on_a_scale",
        "Temporal_collocation",
        "Frequency",
        "Execution",
        "Intentionally_act",
        "Capability",
        "Grasp"
    ],
    "-LRB- In my case it looks like the problem is too many queries rather than poor use of indexing ; but maybe this will help someone else ... -RRB-": [
        "Instance",
        "Predicament",
        "Sufficiency",
        "Questioning",
        "Wealthiness",
        "Quantity",
        "Assistance",
        "Scrutiny"
    ],
    "A minor point to add to Robie's otherwise comprehensive answer: the VFS in SQLite -LRB- which is mostly concerned with locking -RRB- can be swapped out for alternatives.": [
        "Communication_response",
        "Likelihood",
        "Exchange",
        "Locative_relation",
        "Execution",
        "Emotion_directed",
        "Adducing"
    ],
    "You may find one of the alternatives like unix-excl or unix-none to be faster but heed the warnings on the LINK !": [
        "Cardinal_numbers",
        "Execution",
        "Likelihood",
        "Locating"
    ],
    "LINK -LRB- of table structures -RRB- is also worth considering -LRB- if you haven't already -RRB- simply because it tends to provide the smallest representation of the data in the database ; this is a trade-off, less I/O for more CPU, and one that is usually worthwhile in medium-scale enterprise databases -LRB- the sort I'm most familiar with -RRB-, but I'm afraid I've no idea whether the trade-off works well on small-scale platforms like Android.": [
        "Make_cognitive_connection",
        "Buildings",
        "Cardinal_numbers",
        "Quantity",
        "Being_employed",
        "Deserving",
        "Likelihood",
        "Increment",
        "Cogitation",
        "Expertise",
        "Communicate_categorization",
        "Supply",
        "Awareness",
        "Time_vector"
    ],
    "Application icon doesn&#39;t show up in Android action bar": [
        "Using",
        "Reasoning",
        "Locative_relation",
        "Intentionally_act",
        "Buildings"
    ],
    "You are using the AppCompat version 21 + and it is normal.": [
        "Mental_property",
        "Using"
    ],
    "The Action Bar follows the material design guidelines and uses a LINK.": [
        "Intentionally_act",
        "Relative_time",
        "Substance",
        "Coming_up_with",
        "Buildings",
        "Using"
    ],
    "As you can read LINK:": [
        "Reading",
        "Capability"
    ],
    "The use of application icon plus title as a standard layout is discouraged on API 21 devices and newer.": [
        "Using",
        "Accoutrements",
        "Gizmo",
        "Attempt_suasion"
    ],
    "If you would like an application icon -LRB- but I discourage it -RRB-, you can use the method setLogo -LRB- -RRB-.": [
        "Using",
        "Execution",
        "Experiencer_obj",
        "Capability",
        "Experiencer_focus",
        "Using"
    ],
    "Attribute logo is only used in API level 11 and higher -LRB- current min is 8 -RRB-, I was also confused about this question, maybe google just don't want the icon to show on material design, when the minimum sdk is set to 14 or higher and under 21, it uses holo theme, it has an icon, but appcompat style is more like material design I think, maybe google just forget to modify the holo theme": [
        "Rank",
        "Point_of_dispute",
        "Ingredients",
        "Temporal_collocation",
        "Extreme_value",
        "Cardinal_numbers",
        "Hair_configuration",
        "Remembering_information",
        "Cause_change",
        "Topic",
        "Temporal_collocation",
        "Coming_up_with",
        "Sole_instance",
        "Using",
        "Inclusion",
        "Increment",
        "Using",
        "Intentionally_create",
        "Position_on_a_scale",
        "Experiencer_obj",
        "Awareness",
        "Intentionally_act",
        "Reasoning",
        "Desiring"
    ],
    "Make sure you have the icon set in the manifest.xml file, in the application tag as:": [
        "Using",
        "Intentionally_create",
        "Verification"
    ],
    "Then in the onCreate method insert the following lines:": [
        "Temporal_collocation",
        "Execution",
        "Relative_time"
    ],
    "This issue comes when you use support library revised 21.": [
        "Point_of_dispute",
        "Temporal_collocation",
        "Buildings",
        "Execution",
        "Taking_sides",
        "Using"
    ],
    "Use:": [],
    "It worked for me or you can use toolbar.": [
        "Capability",
        "Working_on",
        "Using"
    ],
    "A Toolbar is a generalization of action bars for use within application layouts.": [
        "Intentionally_act",
        "Buildings",
        "Using"
    ],
    "In modern Android UIs developers should lean more on a visually distinct color scheme for toolbars than on their application icon.": [
        "Similarity",
        "Using",
        "Temporal_collocation",
        "Stimulus_focus",
        "Being_obligated",
        "Increment"
    ],
    "IN Style.xml": [],
    "In activity add this and try": [
        "Intentionally_act",
        "Attempt"
    ],
    "This is a common `` problem''.": [],
    "Before you pull your hairs out make sure you are using:": [
        "Observable_body_parts",
        "Locative_relation",
        "Using",
        "Manipulation",
        "Verification"
    ],
    "and not:": [],
    "and then:": [],
    "instead of:": [],
    "actionBar = getActionBar -LRB- -RRB- ;": [],
    "And finally:": [],
    "The ActionBar can consist of:": [
        "Capability"
    ],
    "An application icon An `` upward'' navigation to logical parent An application or activity-specific title Primary action icons for an activity Consistent navigation ( including navigation drawer )": [
        "Using",
        "Kinship",
        "Accoutrements",
        "Intentionally_act",
        "Intentionally_act",
        "Containers",
        "First_rank",
        "Inclusion"
    ],
    "Important to note is that prior to 3.0, there was no ActionBar.": [
        "Becoming_aware",
        "Quantity",
        "Existence",
        "Time_vector"
    ],
    "In 2013, Google announced a support library that provides much better compatibility for older versions and support for tabbed interfaces.": [
        "Buildings",
        "Compatibility",
        "Age",
        "Taking_sides",
        "Desirability",
        "Relational_quantity",
        "Supply"
    ],
    "Since most of the examples below depend on this support library, make sure to include the AppCompat library.": [
        "Instance",
        "Taking_sides",
        "Buildings",
        "Relational_quantity",
        "Verification",
        "Inclusion"
    ],
    "ActionBar Basics Every application unless otherwise specified has an ActionBar by default.": [
        "Frequency",
        "Using"
    ],
    "The ActionBar by default now has just the title for the current activity.": [
        "Observable_body_parts",
        "Intentionally_act",
        "Temporal_collocation",
        "Temporal_collocation",
        "Inclusion"
    ],
    "Changing the ActionBar Title The ActionBar title displayed at the top of the screen is governed by the AndroidManifest.xml file within the activity nodes.": [
        "Accoutrements",
        "Observable_body_parts",
        "Intentionally_act",
        "Part_orientational",
        "Undergo_change",
        "Execution"
    ],
    "In the example below, the activity `` FirstActivity'' will have an ActionBar with the string value of the resource identified by @string / activity_name.": [
        "Instance",
        "Intentionally_act",
        "Verification"
    ],
    "If the value of that resource is `` Foo,'' the string displayed in the ActionBar for this activity will be `` Foo.''": [
        "Intentionally_act"
    ],
    "Note that the application node can supply a android: label that acts as the default for activities and components with no other specified label.": [
        "Using",
        "Intentionally_act",
        "Quantity",
        "Labeling",
        "Intentionally_act",
        "Increment",
        "Capability",
        "Ingredients",
        "Supply"
    ],
    "Change the android: label or android: icon to modify the ActionBar title or icon for a given activity or for the application as a whole.": [
        "Observable_body_parts",
        "Intentionally_act",
        "Labeling",
        "Giving",
        "Using",
        "Cause_change",
        "Undergo_change"
    ],
    "In any Java activity, you can also call getSupportActionBar ( ) to retrieve a reference to the ActionBar and modify or access any properties of the ActionBar at runtime:": [
        "Intentionally_act",
        "Cause_change",
        "Quantity",
        "Possession",
        "Execution",
        "Capability"
    ],
    "You can also change many other properties of the ActionBar not covered here.": [
        "Quantity",
        "Locative_relation",
        "Increment",
        "Topic",
        "Possession",
        "Undergo_change",
        "Capability"
    ],
    "See the Extended ActionBar Guide for more details.": [
        "Change_event_time",
        "Increment",
        "Grasp"
    ],
    "Displaying ActionBar Icon In the new Android 5.0 material design guidelines, the style guidelines have changed to discourage the use of the icon in the ActionBar.": [
        "Substance",
        "Coming_up_with",
        "Hair_configuration",
        "Age",
        "Undergo_change",
        "Attempt_suasion"
    ],
    "Although the icon can be added back with:": [
        "Observable_body_parts",
        "Likelihood"
    ],
    "The above code results in:": [
        "Causation"
    ],
    "You can read more about this on the material design guidelines which state: `` The use of application icon plus title as a standard layout is discouraged on API 21 devices and newer.''": [
        "Substance",
        "Coming_up_with",
        "Using",
        "Accoutrements",
        "Gizmo",
        "Reading",
        "Capability",
        "Increment",
        "Attempt_suasion"
    ],
    "Adding Action Items When you want to add primary actions to the ActionBar, you add the items to the activity context menu and if properly specified, they will automatically appear at the top right as icons in the ActionBar.": [
        "Intentionally_act",
        "Entity",
        "Temporal_collocation",
        "Intentionally_act",
        "Entity",
        "Intentionally_act",
        "Part_orientational",
        "First_rank",
        "Part_orientational",
        "Coming_to_be",
        "Desiring"
    ],
    "An activity populates the ActionBar from within the onCreateOptionsMenu ( ) method:": [
        "Intentionally_act",
        "Execution",
        "Adorning"
    ],
    "Entries in the action bar are typically called actions.": [
        "Execution",
        "Intentionally_act",
        "Intentionally_act",
        "Buildings",
        "Execution"
    ],
    "Use this method to inflate a menu resource that defines all the action items within a res/menu/menu_main.xml file, for example:": [
        "Execution",
        "Quantity",
        "Intentionally_act",
        "Entity",
        "Instance",
        "Categorization",
        "Cause_expansion",
        "Using"
    ],
    "You also should note that the xmlns: app namespace must be defined in order to leverage the showAsAction option.": [
        "Being_obligated",
        "Possibilities",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "The reason is that a compatibility library is used to support the showAsAction = `` ifRoom'' option.": [
        "Compatibility",
        "Buildings",
        "Possibilities",
        "Taking_sides",
        "Using",
        "Causation"
    ],
    "This option is needed to show the item directly in the action bar as an icon.": [
        "Entity",
        "Intentionally_act",
        "Buildings",
        "Possibilities",
        "Reasoning",
        "Required_event"
    ],
    "If there's not enough room for the item in the action bar, it will appear in the action overflow.": [
        "Building_subparts",
        "Entity",
        "Intentionally_act",
        "Buildings",
        "Sufficiency",
        "Coming_to_be",
        "Existence"
    ],
    "If withText is specified as well ( as in the second item ), the text will be displayed with the icon.": [
        "Measure_duration",
        "Entity"
    ],
    "The above code results in two action icons being displayed:": [
        "Causation",
        "Intentionally_act",
        "Cardinal_numbers"
    ],
    "Note: The above code refers to the @drawable / ic_compose and @drawable / ic_profile resources which would have to exist for this to compile.": [
        "Being_obligated",
        "Existence"
    ],
    "To generate ActionBar icons, be sure to use the Asset Studio in Android Studio.": [
        "Building_subparts",
        "Cause_to_start",
        "Using",
        "Likelihood"
    ],
    "To create a new Android icon set, right click on a res/drawable folder and invoke New - > Image Asset.": [
        "Containers",
        "Similarity",
        "Morality_evaluation",
        "Execution",
        "Age",
        "Sounds",
        "Age",
        "Intentionally_create"
    ],
    "Handling ActionBar Clicks There are two ways to handle the click for an ActionBar item.": [
        "Impact",
        "Entity",
        "Sounds",
        "Execution",
        "Resolve_problem",
        "Cardinal_numbers",
        "Existence"
    ],
    "The first approach is you can use the android: onClick handler in the menu XML, similar to handling button clicks:": [
        "Execution",
        "Clothing_parts",
        "Sounds",
        "Ordinal_numbers",
        "Similarity",
        "Capability",
        "Using",
        "Intentionally_act"
    ],
    "and then define the method onComposeAction in the parent activity before attempting to run the application or an exception will be thrown for the missing method:": [
        "Temporal_collocation",
        "Execution",
        "Kinship",
        "Using",
        "Intentionally_act",
        "Communicate_categorization",
        "Attempt",
        "Cause_motion",
        "Execution"
    ],
    "The second approach is to use the onOptionsItemSelected ( ) method.": [
        "Measure_duration",
        "Execution",
        "Execution",
        "Using"
    ],
    "Using the MenuItem passed to this method, you can identify the action by calling getItemId ( ).": [
        "Execution",
        "Intentionally_act",
        "Execution",
        "Using",
        "Verification",
        "Traversing",
        "Capability"
    ],
    "This returns the unique ID provided by the item tag's id attribute so you can perform the appropriate action:": [
        "Entity",
        "Intentionally_act",
        "Execution",
        "Idiosyncrasy",
        "Capability",
        "Supply",
        "Intentionally_act"
    ],
    "and then you can handle all the action buttons in this single method.": [
        "Temporal_collocation",
        "Quantity",
        "Intentionally_act",
        "Clothing_parts",
        "Execution",
        "Sole_instance",
        "Capability",
        "Resolve_problem"
    ],
    "Understanding ToolBar ToolBar was introduced in Android Lollipop, API 21 release and is the spiritual successor of the ActionBar.": [
        "Grasp",
        "Releasing"
    ],
    "It's a ViewGroup that can be placed anywhere in your layout.": [
        "Likelihood"
    ],
    "ToolBar's appearance can be more easily customized than the ActionBar.": [
        "Increment",
        "Likelihood"
    ],
    "ToolBar works well with apps targeted to API 21 and above.": [
        "Being_employed"
    ],
    "However, Android has updated the AppCompat support libraries so the ToolBar can be used on lower Android OS devices as well.": [
        "Gizmo",
        "Likelihood",
        "Using",
        "Buildings",
        "Taking_sides",
        "Concessive"
    ],
    "In AppCompat, ToolBar is implemented in the android.support.v7.widget.Toolbar class.": [
        "Execute_plan"
    ],
    "Refer to the ToolBar Guide for more information.": [
        "Information",
        "Increment"
    ],
    "Overview The ActionBar, now known as the App Bar, is a consistent navigation element that is standard throughout modern Android applications.": [
        "Temporal_collocation",
        "Compatibility",
        "Ingredients",
        "Buildings",
        "Temporal_collocation"
    ],
    "Why settings.xml layout is overlapping the ActionBar/Toolbar?": [
        "Reason"
    ],
    "Use android: fitsSystemWindows = `` true'' in the root view of your layout -LRB- LinearLayout in your case -RRB-.": [
        "Instance",
        "Opinion"
    ],
    "And android: fitsSystemWindows is an": [],
    "internal attribute to adjust view layout based on system windows such as the status bar.": [
        "Adjusting",
        "Opinion",
        "Gizmo",
        "Connecting_architecture",
        "Buildings"
    ],
    "If true, adjusts the padding of this view to leave space for the system windows.": [
        "Adjusting",
        "Opinion",
        "Gizmo",
        "Connecting_architecture",
        "Departing"
    ],
    "Will only take effect if this view is in a non-embedded activity.": [
        "Sole_instance",
        "Opinion",
        "Intentionally_act",
        "Objective_influence",
        "Have_as_requirement"
    ],
    "Must be a boolean value, either `` true'' or `` false''.": [],
    "This may also be a reference to a resource -LRB- in the form'' @ -LSB- package: -RSB- type: name'' -RRB- or theme attribute -LRB- in the form'' ?": [
        "Topic",
        "Likelihood",
        "Execution"
    ],
    "-LSB- package :] -LSB- type: -RSB- name'' -RRB- containing a value of this type.": [
        "Execution",
        "Inclusion"
    ],
    "This corresponds to the global attribute resource symbol fitsSystemWindows.": [
        "Political_locales"
    ],
    "For me, the problem was that I copied something from an example and used": [
        "Predicament",
        "Instance",
        "Duplication",
        "Using"
    ],
    "just removing this fixed my problem.": [
        "Removing",
        "Predicament",
        "Resolve_problem"
    ],
    "Just set this to v21/styles.xml file": [
        "Intentionally_create"
    ],
    "and be sure": [],
    "I removed all lines mentioned below from / res/values-v21/styles.xml and now it is working fine.": [
        "Temporal_collocation",
        "Desirability",
        "Quantity",
        "Working_on",
        "Removing"
    ],
    "None of the answers worked for me, but this is what finally worked after i set android: fitSystemWindows on the root view -LRB- I set these in styles v21 -RRB-:": [
        "Communication_response",
        "Hair_configuration",
        "Time_vector",
        "Opinion",
        "Working_on",
        "Intentionally_create"
    ],
    "Make sure you don't have the following line as AS puts it by default:": [
        "Intentionally_act",
        "Relative_time",
        "Causation"
    ],
    "None of the answers worked for me, but this is what finally worked after I set:": [
        "Communication_response",
        "Time_vector",
        "Intentionally_create",
        "Working_on"
    ],
    "In parent activity layout file it's not suggested at many places but it's work for me and saves my day": [
        "Kinship",
        "Locale",
        "Intentionally_act",
        "Quantity",
        "Calendric_unit"
    ],
    "According google docs, we should not use fitsSystemWindows attribute in app theme, it is intended to use in layout files.": [
        "Being_obligated",
        "Topic",
        "Attributed_information",
        "Using"
    ],
    "Using in themes can causes problem in toast messages.": [
        "Topic",
        "Apply_heat",
        "Predicament",
        "Capability",
        "Causation",
        "Using"
    ],
    "Check Issue LINK & example of problem caused LINK": [
        "Point_of_dispute",
        "Cognitive_connection",
        "Predicament",
        "Instance",
        "Causation"
    ],
    "Example of using correct way and which works fine with windowTranslucentStatus as well.": [
        "Instance",
        "Desirability",
        "Suitability",
        "Being_employed",
        "Using"
    ],
    "Remove below lines from style or style -LRB- 21 -RRB-": [
        "Removing",
        "Hair_configuration"
    ],
    "Android Adventures - Menus - The Toolbar": [],
    "Page 2 of 4 The Toolbar If you start a new basic Activity project called MenuSample then you will discover that it automatically creates a main_menu resource file and the code needed to display it as a tool bar.": [
        "Contacting",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Being_necessary",
        "Intentionally_act",
        "Project",
        "Gizmo",
        "Buildings",
        "Process_start",
        "Temporal_collocation",
        "Execution",
        "Required_event",
        "Age",
        "Creating",
        "Becoming_aware"
    ],
    "Previously it would have added an App Bar but Google recommends that we change to using the Toolbar widget.": [
        "Buildings",
        "Time_vector",
        "Undergo_change",
        "Using"
    ],
    "The basic Activity template uses the support library to make it possible in earlier versions of Android.": [
        "Being_necessary",
        "Intentionally_act",
        "Taking_sides",
        "Buildings",
        "Relative_time",
        "Likelihood",
        "Execution",
        "Using"
    ],
    "In this case the Activity has to derive from the AppCompatActivity class: public class MainActivity extends AppCompatActivity -LCB- and we need the imports: import android.support.v7.app.AppCompatActivity ; import android.support.v7.widget.Toolbar ; The Toolbar is defined in activity_main.xml as a custom widget: < android.support.design.widget.AppBarLayout android: layout_width = `` match_parent'' android: layout_height = `` wrap_content'' android: theme ='' @style / AppTheme.AppBarOverlay'' > < android.support.v7.widget.Toolbar android: id ='' @ + id/toolbar'' android: layout_width = `` match_parent'' android: layout_height ='' ?": [
        "Instance",
        "Intentionally_act",
        "Import_export",
        "Custom",
        "Hair_configuration",
        "Secrecy_status",
        "Required_event",
        "Being_obligated",
        "Expansion",
        "Topic",
        "Communicate_categorization",
        "Importing"
    ],
    "attr/actionBarSize'' android: background ='' ?": [],
    "attr/colorPrimary'' app: popupTheme ='' @style / AppTheme.PopupOverlay'' style ='' @style / AppTheme'' / > </android.support.design.widget.AppBarLayout> <include\u00a0layout=\"@layout/content_main\"\u00a0/> ... Notice that the Toolbar's style is set to AppTheme.": [
        "Hair_configuration",
        "Becoming_aware",
        "Intentionally_create",
        "Inclusion"
    ],
    "This is important as the style selected changes the way the Toolbar is displayed and can stop it from displaying altogether.": [
        "Hair_configuration",
        "Importance",
        "Choosing",
        "Undergo_change",
        "Capability",
        "Preventing"
    ],
    "Also notice the tag <include\u00a0layout=\"@layout/content_main\"\u00a0/> This loads the layout that you design in content_main.xml.": [
        "Quantity",
        "Becoming_aware",
        "Coming_up_with",
        "Inclusion"
    ],
    "That is, as explained in earlier chapters the layout files are split into two parts - activity_main.xml which defines the layout that should be common to all Android apps and content_main.xml which is used for the layout specific to your app.": [
        "Part_ordered_segments",
        "Part_whole",
        "Quantity",
        "Cardinal_numbers",
        "Being_obligated",
        "Categorization",
        "Separating",
        "Using",
        "Relative_time"
    ],
    "The two files are automatically merged together when activity_main.xml is loaded.": [
        "Collaboration",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Cause_to_amalgamate"
    ],
    "When the Activity loads onCreate runs and inflates the layout in activity_main.xml and the included content_main.xml.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Quantity",
        "Self_motion",
        "Inclusion",
        "Cause_expansion"
    ],
    "This is enough for the toolbar to display but for it to be used as a toolbar by the system we need to add: Toolbar toolbar = ( Toolbar ) findViewById ( R.id.toolbar ) ; setSupportActionBar ( toolbar ) ; All of this code is generated for you automatically and you will find it in the MainActivity.java file in onCreate: @Overrideprotected void onCreate ( Bundle savedInstanceState ) -LCB- super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity _ main ) ; Toolbar toolbar = ( Toolbar ) findViewById ( R.id.toolbar ) ; setSupportActionBar ( toolbar ) ; Now if you run the app you will see the familiar Hello world message and the default toolbar:": [
        "Gizmo",
        "Emptying",
        "Temporal_collocation",
        "Expertise",
        "Political_locales",
        "Required_event",
        "First_rank",
        "Sufficiency",
        "Quantity",
        "Becoming_aware",
        "Execution",
        "Creating",
        "Grasp",
        "Using"
    ],
    "In fact it is so familiar you may not even have realized that it is a menu.": [
        "Likelihood",
        "Expertise",
        "Coming_to_believe"
    ],
    "The toolbar has the name of the app to the left and a three dot icon to the right.": [
        "People_along_political_spectrum",
        "Part_orientational",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "If you select the three dot icon the Settings menu item appears:": [
        "Cardinal_numbers",
        "Entity",
        "Coming_to_be",
        "Choosing"
    ],
    "If you take a look at the menu_main.xml file you can see the definition of this menu: < menu xmlns: android = `` http://schemas.android.com/apk/res/android\"\u00a0xmlns:app=\"http://schemas.android.com/apk/res-auto\"\u00a0xmlns:tools=\"http://schemas.android.com/tools\"\u00a0tools:context=\u00a0 `` com.example.mikejames.myapplication.MainActivity'' > < item android: id ='' @ + id/action _ settings'' android: orderInCategory = `` 100'' android: title = `` Settings'' app: showAsAction = `` never'' / > </menu> You can see that this defines a single menu with a single item with the title `` Settings''.": [
        "Entity",
        "Observable_body_parts",
        "Sole_instance",
        "Communicate_categorization",
        "Scrutiny",
        "Have_as_requirement",
        "Categorization",
        "Capability",
        "Grasp"
    ],
    "There are some new attributes being used in the item tag.": [
        "Relational_quantity",
        "Entity",
        "Age",
        "Using",
        "Existence"
    ],
    "The showAsAction attribute is important for the way the action bar works.": [
        "Execution",
        "Buildings",
        "Intentionally_act",
        "Importance"
    ],
    "By default the system places menu items into the overflow area that is only revealed when the user selects the three dot icon or more generally the action overflow icon.": [
        "System",
        "Entity",
        "Locale",
        "Sole_instance",
        "Temporal_collocation",
        "Intentionally_act",
        "Cardinal_numbers",
        "Increment",
        "Choosing",
        "Evidence"
    ],
    "However for items that you would like to give the user a more direct access to you can set the showAsAction attribute.": [
        "Having_or_lacking_access",
        "Increment",
        "Aiming",
        "Intentionally_create",
        "Giving",
        "Capability",
        "Experiencer_focus",
        "Entity",
        "Concessive"
    ],
    "This can be set to any of the following:": [
        "Likelihood",
        "Quantity",
        "Intentionally_create"
    ],
    "ifRoom - show if there is room never - never show in the visible area withText - show with text always - always show even if it means overlapping other items collapseActionView - show a collapsed view of the item.": [
        "Building_subparts",
        "Locale",
        "Entity",
        "Opinion",
        "Entity",
        "Frequency",
        "Obviousness",
        "Increment",
        "Frequency",
        "Existence",
        "Linguistic_meaning",
        "Reasoning"
    ],
    "As you can see the Settings item in the default action bar is set to never show.": [
        "Entity",
        "Buildings",
        "Reasoning",
        "Intentionally_act",
        "Capability",
        "Grasp",
        "Frequency",
        "Intentionally_create"
    ],
    "The showAsAction attribute works with the orderInCategory attribute to determine the order that items are shown.": [
        "Entity",
        "Evidence",
        "Being_employed",
        "Coming_to_believe"
    ],
    "To see this in action let's add another item.": [
        "Intentionally_act",
        "Entity",
        "Grasp",
        "Increment",
        "Grant_permission"
    ],
    "Add to the end of the menu_main.xml file before the final </menu> tag: < item android: id ='' @ + id/action _ send'' android: title = `` Send'' app: showAsAction = `` ifRoom'' / > Now if you run the app you will see:": [
        "Entity",
        "Observable_body_parts",
        "Temporal_collocation",
        "Ordinal_numbers",
        "Execution",
        "Temporal_subregion",
        "Grasp"
    ],
    "This works and the new item will be displayed as long as there is room - if there isn't it will appear when the user selects the three dots icon.": [
        "Building_subparts",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Age",
        "Entity",
        "Existence",
        "Choosing",
        "Coming_to_be",
        "Desiring"
    ],
    "It is usual to show toolbar items as icons so change the item tag to read: < item android: id ='' @ + id/action _ send'' android: title = `` Send'' app: showAsAction = `` ifRoom'' android: icon ='' @android: drawable/ic _ menu_send'' / > where we are using one of the many supplied icons.": [
        "Entity",
        "Entity",
        "Observable_body_parts",
        "Locative_relation",
        "Quantity",
        "Supply",
        "Cardinal_numbers",
        "Using",
        "Categorization",
        "Undergo_change",
        "Reasoning"
    ],
    "You can carry on adding menu items to the action bar and generally customizing how they display given different screen widths - the general idea is the same for all menus.": [
        "Entity",
        "Intentionally_act",
        "Buildings",
        "Similarity",
        "Execution",
        "Quantity",
        "Giving",
        "Identicality",
        "Dimension",
        "Activity_ongoing",
        "Capability"
    ],
    "Creating The Toolbar So far we have just looked at the menu_main.xml file and the XML specification of the action bar menu.": [
        "Intentionally_act",
        "Buildings",
        "Creating",
        "Continued_state_of_affairs",
        "Scrutiny"
    ],
    "There is also some code generated to actually create the menu displayed in the Toolbar.": [
        "Relational_quantity",
        "Creating",
        "Intentionally_create",
        "Existence"
    ],
    "The Activity will fire a CreateOptionsMenu event when it is ready to display the toolbar recall the toolbar used to be called the actionbar and before that the Options Menu.": [
        "Intentionally_act",
        "Temporal_collocation",
        "Possibilities",
        "Event",
        "Execution",
        "Shoot_projectiles",
        "Activity_ready_state",
        "Using",
        "Memory"
    ],
    "All the onCreateOptionsMenu event handler has to do is inflate the XML file that defines the menu: @Overridepublic boolean onCreateOptionsMenu ( Menu menu ) -LCB- getMenuInflater ( ).": [
        "Quantity",
        "Event",
        "Cause_expansion",
        "Required_event",
        "Categorization",
        "Intentionally_act"
    ],
    "inflate ( R.menu.menu _ main, menu ) ; return true ; -RCB- The onCreateOptionsMenu is called once when the Activity starts.": [
        "Temporal_collocation",
        "Intentionally_act",
        "First_rank",
        "Execution",
        "Process_start",
        "Execution",
        "Cause_expansion",
        "Frequency"
    ],
    "Before Android 3 it was called each time the menu was displayed on the screen but later the actionbar/toolbar is always on display.": [
        "Cardinal_numbers",
        "Time_vector",
        "Frequency",
        "Measure_duration",
        "Execution"
    ],
    "How to change the toolbar is discussed later.": [
        "Topic",
        "Undergo_change",
        "Time_vector"
    ],
    "All the event handler has to do is use the appropriate inflater object to create the menu from the resource file.": [
        "Quantity",
        "Event",
        "Intentionally_create",
        "Required_event",
        "Using",
        "Intentionally_act"
    ],
    "The new View hierarchy of menu and item objects is added to the menu object passed to the event handler.": [
        "Entity",
        "Event",
        "Categorization",
        "Age",
        "Traversing"
    ],
    "This is important because it means that your new menu items are added to any that are already there.": [
        "Quantity",
        "Time_vector",
        "Locative_relation",
        "Importance",
        "Age",
        "Entity",
        "Linguistic_meaning"
    ],
    "This allows other Activitys and Fragments to add items to a common toolbar.": [
        "Intentionally_act",
        "Part_piece",
        "Cause_change_of_position_on_a_scale",
        "Increment",
        "Entity",
        "Grant_permission"
    ],
    "Where's My Action Bar ?": [
        "Locative_relation",
        "Buildings",
        "Intentionally_act"
    ],
    "If you try any of this out then there is a chance that you will do everything correct and yet your action bar will not show.": [
        "Temporal_collocation",
        "Buildings",
        "Reasoning",
        "Intentionally_act",
        "Quantity",
        "Intentionally_act",
        "Attempt",
        "Likelihood",
        "Existence"
    ],
    "There are only two common reasons for this.": [
        "Sole_instance",
        "Cardinal_numbers",
        "Causation",
        "Existence"
    ],
    "The first is that you are targeting and using an early version of Android which doesn't support the action bar.": [
        "Ordinal_numbers",
        "Temporal_collocation",
        "Intentionally_act",
        "Buildings",
        "Intentionally_act",
        "Using",
        "Taking_sides"
    ],
    "This is unlikely especially if you are using the support library.": [
        "Buildings",
        "Likelihood",
        "Taking_sides",
        "Using"
    ],
    "The second, and this is much more common, is that you are using a theme that doesn't support the action bar or doesn't support the type of action bar you are using.": [
        "Measure_duration",
        "Relational_quantity",
        "Intentionally_act",
        "Buildings",
        "Increment",
        "Intentionally_act",
        "Using",
        "Taking_sides",
        "Topic"
    ],
    "For Android 5 or later or the support library select one of the AppCompat themes if you want to make use of the new features introduced with Android 5.": [
        "Taking_sides",
        "Buildings",
        "Topic",
        "Age",
        "Cardinal_numbers",
        "Causation",
        "Possession",
        "Time_vector"
    ],
    "However if you select a new theme in the designer then it isn't automatically passed on to the app when you run it.": [
        "Natural_features",
        "Temporal_collocation",
        "Age",
        "Topic",
        "Execution",
        "Choosing",
        "Temporal_collocation",
        "Concessive"
    ],
    "To change the overall theme for the app you have to edit the styles.xml file in the res/values folder.": [
        "Clothing",
        "Topic",
        "Containers",
        "Undergo_change",
        "Being_obligated"
    ],
    "Change the parent = to the theme you want to use - e.g..": [
        "Kinship",
        "Topic",
        "Cause_change",
        "Possession",
        "Using"
    ],
    "<style\u00a0name=\"AppTheme\"\u00a0parent=\"Theme.AppCompat.Light\"> </style> As always Android Studio generates the correct xml for the styles that work with the Toolbar.": [
        "Hair_configuration",
        "Frequency",
        "Building_subparts",
        "Hair_configuration",
        "Working_on",
        "Suitability",
        "Creating"
    ],
    "Last Updated ( Tuesday, 14 March 2017 )": [
        "Calendric_unit",
        "Relative_time",
        "Calendric_unit",
        "Cardinal_numbers"
    ],
    "How to check programmatically whether app is running in debug mode or not?": [
        "Inspecting",
        "Execution"
    ],
    "Try the following:": [],
    "Kotlin:": [],
    "It is taken from bundells post from LINK": [
        "Sending",
        "Conquering"
    ],
    "The simplest, and best long-term solution, is to use BuildConfig.DEBUG.": [
        "Using",
        "Desirability"
    ],
    "This is a boolean value that will be true for a debug build, false otherwise:": [
        "Emptying",
        "Artificiality",
        "Building"
    ],
    "There have been reports that this value is not 100 % reliable from Eclipse-based builds, though I personally have not encountered a problem, so I can not say how much of an issue it really is.": [
        "Building",
        "Predicament",
        "Point_of_dispute",
        "Cardinal_numbers",
        "Trust",
        "Existence",
        "Becoming_aware",
        "Relational_quantity",
        "Capability"
    ],
    "If you are using Android Studio, or if you are using Gradle from the command line, you can add your own stuff to BuildConfig or otherwise tweak the debug and release build types to help distinguish these situations at runtime.": [
        "Building_subparts",
        "Execution",
        "Emptying",
        "Differentiation",
        "Capability",
        "Possession",
        "Using",
        "Building",
        "Assistance",
        "Releasing",
        "Manipulation"
    ],
    "The solution from Illegal Argument is based on the value of the android: debuggable flag in the manifest.": [
        "Legality",
        "Reasoning"
    ],
    "If that is how you wish to distinguish a `` debug'' build from a `` release'' build, then by definition, that's the best solution.": [
        "Temporal_collocation",
        "Communicate_categorization",
        "Desirability",
        "Differentiation",
        "Building",
        "Desiring"
    ],
    "However, bear in mind that going forward, the debuggable flag is really an independent concept from what Gradle/Android Studio consider a `` debug'' build to be.": [
        "Concessive",
        "Change_direction",
        "Motion",
        "Political_locales",
        "Building_subparts",
        "Categorization",
        "Building",
        "Sending"
    ],
    "Any build type can elect to set the debuggable flag to whatever value that makes sense for that developer and for that build type.": [
        "Quantity",
        "Change_of_leadership",
        "Sensation",
        "Causation",
        "Intentionally_create",
        "Capability",
        "Building"
    ],
    "Due to the mixed comments about BuildConfig.DEBUG, I used the following to disable crashlytics -LRB- and analytics -RRB- in debug mode:": [
        "Render_nonfunctional",
        "Emptying",
        "Using",
        "Relative_time"
    ],
    "update / app/build.": [],
    "gradle": [],
    "then, in your code you detect the ENABLE_CRASHLYTICS flag as follows:": [
        "Temporal_collocation",
        "Relative_time",
        "Becoming_aware"
    ],
    "use the same concept in your app and rename ENABLE_CRASHLYTICS to anything you want.": [
        "Identicality",
        "Possession",
        "Using"
    ],
    "I like this approach because I can see the flag in the configuration and I can control the flag.": [
        "Execution",
        "Capability",
        "Control",
        "Experiencer_focus",
        "Perception_experience"
    ],
    "Yes, you will have no problems using:": [
        "Quantity",
        "Predicament",
        "Using"
    ],
    "Unless you are importing the wrong BuildConfig class.": [
        "Morality_evaluation",
        "Importing"
    ],
    "Make sure you are referencing your project's BuildConfig class, not from any of your dependency libraries.": [
        "Project",
        "Reliance",
        "Buildings",
        "Quantity",
        "Verification"
    ],
    "Alternatively, you could differentiate using BuildConfig.BUILD _ TYPE ;": [
        "Differentiation",
        "Capability",
        "Using"
    ],
    "If you're running debug build BuildConfig.BUILD _ TYPE.equals -LRB- `` debug'' -RRB- ; returns true.": [
        "Execution",
        "Building",
        "Execution",
        "Emptying"
    ],
    "And for release build BuildConfig.BUILD _ TYPE.equals -LRB- `` release'' -RRB- ; returns true.": [
        "Releasing",
        "Building",
        "Execution"
    ],
    "I am using this solution in case to find out that my app is running on debug version.": [
        "Instance",
        "Execution",
        "Becoming_aware",
        "Using"
    ],
    "Make sure that you are importing the correct BuildConfig class And yes, you will have no problems using:": [
        "Quantity",
        "Predicament",
        "Suitability",
        "Using",
        "Importing"
    ],
    "Build.IS _ DEBUGGABLE could be all right.": [
        "Quantity",
        "Correctness",
        "Capability"
    ],
    "It comes from `` ro.debuggable''": [
        "Execution"
    ],
    "Document how to check if profile/release/debug mode in dart \u00b7 Issue # 11392 \u00b7 flutter/flutter \u00b7 GitHub": [
        "Documents",
        "Self_motion",
        "Point_of_dispute",
        "Inspecting"
    ],
    "Document how to check if profile/release/debug mode in dart": [
        "Documents",
        "Inspecting"
    ],
    "Please add the option to check what mode ( slow, profile or release ) the Flutter app is running in.": [
        "Releasing",
        "Taking_time",
        "Execution",
        "Inspecting",
        "Possibilities"
    ],
    "Scenario: I want to append the mode to some analytics we collect ( so it has to be exposed to the Dart layer ).": [
        "Relational_quantity",
        "Attaching",
        "Required_event",
        "Reveal_secret",
        "Gathering_up",
        "Possession"
    ],
    "If you're in release mode, const bool.fromEnvironment ( `` dart.vm.product'' ) will be true.": [
        "Releasing"
    ],
    "If you're in profile mode, neither of the above will happen.": [
        "Event"
    ],
    "But we should document that somewhere, or configure a variable accordingly or something.": [
        "Recording",
        "Being_obligated"
    ],
    "5: Make Hixie proud milestone": [],
    "There is a profile ( ) method in progress here: https://github.com/flutter/flutter/pull/10966/files#diff-fa691172dd6cfc02a53caddd6ead6320": [
        "Execution",
        "Progress",
        "Locative_relation",
        "Existence"
    ],
    "A variable / getter sounds reasonable, thanks !": [
        "Sensation",
        "Mental_property",
        "Judgment_direct_address"
    ],
    "Check Flutter mode from Dart code": [],
    "@rock3r won't happen short term as there is a simple workaround.": [
        "Simple_name",
        "Locative_relation",
        "Duration_attribute",
        "Event"
    ],
    "@zoechi looks like there's a hack, yes, but it doesn't really seem great to me that there is no `` is debug'' or `` mode = release/debug/profile'' accessible to users.": [
        "Appearance",
        "Quantity",
        "Scrutiny",
        "Intentionally_act",
        "Having_or_lacking_access",
        "Desirability",
        "Existence",
        "Existence"
    ],
    "I'm talking about an actual public API for this rather than some obscure and undocumented hack that relies on side effects.": [
        "Relational_quantity",
        "Reliance",
        "Objective_influence",
        "Actually_occurring_entity",
        "Taking_sides",
        "Obscurity"
    ],
    "Seems very odd to me that a user friendly framework like flutter has nothing for this very simple and common scenario.": [
        "Social_interaction_evaluation",
        "Degree",
        "Inclusion",
        "Stimulus_focus"
    ],
    "I'd even be happy if the API internally used those hacks, as long as it's presented externally as a public API.": [
        "Secrecy_status",
        "Presence",
        "Using",
        "Desiring",
        "Emotion_directed"
    ],
    "I got that, but the workaround is easy enough and if you are working with Flutter since a while you might have noticed that a few other features that probably provide value to more developers are also missing ;-) So first things first.": [
        "Sufficiency",
        "Being_employed",
        "Success_or_failure",
        "Execution",
        "Likelihood",
        "Increment",
        "Increment",
        "Ordinal_numbers",
        "Measure_duration",
        "Quantity",
        "Difficulty",
        "Likelihood",
        "Supply",
        "Becoming_aware"
    ],
    "Sure, I understand priorities are different.": [
        "Similarity",
        "Grasp"
    ],
    "Could think about doing a PR for that if you want though, it's such an easy win.": [
        "Difficulty",
        "Intentionally_act",
        "Concessive",
        "Desiring",
        "Finish_competition",
        "Opinion"
    ],
    "Just point out where you'd like the API to live ; )": [
        "Locative_relation",
        "Adducing",
        "Locative_relation",
        "Residence",
        "Experiencer_focus"
    ],
    "@rock3r would be a good PR, quite surprised this is not already in there ( explicitly ).": [
        "Time_vector",
        "Relational_quantity",
        "Experiencer_obj",
        "Existence"
    ],
    "For me it makes sense to have this under the flutter package ( https://github.com/flutter/flutter/tree/master/packages/flutter/lib ), but let's wait for @Hixie to confirm this.": [
        "Sensation",
        "Causation",
        "Execution",
        "Verification",
        "Waiting",
        "Grant_permission"
    ],
    "Meanwhile, quickest way to get this into the repo might be by updating the docs: )": [
        "Execution",
        "Execution",
        "Likelihood"
    ],
    "- I believe the problem with exposing these as getters is that they didn't tree shake properly": [
        "Predicament",
        "Experiencer_obj",
        "Intentionally_act",
        "Reveal_secret",
        "Certainty"
    ],
    "If we would provide such getters Dart's tree shaker would not be able to remove the unused code in release mode and you'll end up with larger than necessary binaries.": [
        "Releasing",
        "Dimension",
        "Being_necessary",
        "Removing",
        "Becoming",
        "Capability",
        "Supply"
    ],
    "The only way that works reliably has been posted above in # 11392 ( comment ).": [
        "Execution",
        "Sole_instance",
        "Being_employed",
        "Sending"
    ],
    "We use that method extensively within the framework as well.": [
        "Execution",
        "Using"
    ],
    "The debug workaround @Hixie provided doesn't seem to work anymore as written.": [
        "Emptying",
        "Supply",
        "Intentionally_act",
        "Appearance",
        "Working_on"
    ],
    "To get it to work, I had to `` call'' the anonymous function as well.": [
        "Getting",
        "Working_on",
        "Being_obligated"
    ],
    "/ cc @gspencergoog, who just added affordances for some of this in # 27502.": [
        "Relational_quantity"
    ],
    "Yes, I just added kReleaseMode as a more discoverable public constant ( in `` package: flutter/framework.": [
        "Execution",
        "Secrecy_status",
        "Increment"
    ],
    "dart'' ).": [],
    "It proved too difficult to implement the equivalents ( as const values, at least ) for kDebugMode and kProfileMode in all contexts, so I didn't do that.": [
        "Gizmo",
        "Quantity",
        "Intentionally_act",
        "Intentionally_act",
        "Difficulty",
        "Sufficiency",
        "Reasoning",
        "Relational_quantity"
    ],
    "They could easily be implemented as getters or functions, but they wouldn't be usable in const contexts.": [
        "Execute_plan",
        "Capability"
    ],
    "The good news is that usually only kReleaseMode needs to be const for most use cases ( e.g. to allow dead code removal, which is mainly only needed in release mode ).": [
        "Sole_instance",
        "Relational_quantity",
        "Instance",
        "Dead_or_alive",
        "Releasing",
        "Desirability",
        "Required_event",
        "Required_event",
        "Grant_permission",
        "Removing"
    ],
    "I put this code and it can be accessed globally.": [
        "Likelihood",
        "Causation"
    ],
    "@mono0926 That will tell you the buildMode but I don't believe it will lead to any dead code being removed from the app": [
        "Intentionally_act",
        "Dead_or_alive",
        "Quantity",
        "Telling",
        "Removing",
        "Causation",
        "Certainty"
    ],
    "I noticed that kDebugMode and kProfileMode were added at # 31696.": [
        "Becoming_aware"
    ],
    "So, this issue could be closed.": [
        "Point_of_dispute",
        "Capability",
        "Body_movement"
    ],
    "This thread has been automatically locked since there has not been any recent activity after it was closed.": [
        "Natural_features",
        "Quantity",
        "Relative_time",
        "Intentionally_act",
        "Body_movement",
        "Inhibit_movement",
        "Existence"
    ],
    "If you are still experiencing a similar issue, please open a new bug, including the output of flutter doctor - v and a minimal reproduction of the issue.": [
        "Temporal_pattern",
        "Point_of_dispute",
        "Similarity",
        "Age",
        "Medical_professionals",
        "Continued_state_of_affairs",
        "Expertise",
        "Emotion_directed",
        "Inclusion"
    ],
    "Wait for 2 async REST calls to result in success or error": [
        "Stimulus_focus",
        "Success_or_failure",
        "Cardinal_numbers",
        "Execution",
        "Causation"
    ],
    "All Android apps use a main thread to handle UI operations.": [
        "Quantity",
        "Natural_features",
        "Businesses",
        "First_rank",
        "Resolve_problem",
        "Using"
    ],
    "Calling long-running operations from this main thread can lead to freezes and unresponsiveness.": [
        "Businesses",
        "Change_of_phase",
        "First_rank",
        "Execution",
        "Capability",
        "Causation"
    ],
    "For example, if your app makes a network request from the main thread, your app's UI is frozen until it receives the network response.": [
        "Instance",
        "Network",
        "Response",
        "First_rank",
        "Receiving",
        "Execution",
        "Causation",
        "Activity_pause"
    ],
    "You can create additional background threads to handle long-running operations while the main thread continues to handle UI updates.": [
        "Natural_features",
        "Businesses",
        "Natural_features",
        "Increment",
        "First_rank",
        "Capability",
        "Intentionally_create",
        "Activity_ongoing",
        "Resolve_problem"
    ],
    "This guide shows both Kotlin and Java Programming Language developers how to use a thread pool to set up and use multiple threads in an Android app.": [
        "Quantity",
        "Natural_features",
        "Natural_features",
        "Quantity",
        "Intentionally_create",
        "Using",
        "Evidence"
    ],
    "This guide also shows you how to define code to run on a thread and how to communicate between one of these threads and the main thread.": [
        "Natural_features",
        "Natural_features",
        "First_rank",
        "Execution",
        "Cardinal_numbers",
        "Communicate_categorization",
        "Communication",
        "Evidence"
    ],
    "Based on the Guide to app architecture, the examples in this topic make a network request and return the result to the main thread, where the app then might display that result on the screen.": [
        "Topic",
        "Network",
        "Causation",
        "Natural_features",
        "Locative_relation",
        "Execution",
        "First_rank",
        "Temporal_collocation",
        "Instance",
        "Likelihood",
        "Causation",
        "Execution"
    ],
    "Specifically, the ViewModel calls the repository layer on the main thread to trigger the network request.": [
        "Network",
        "First_rank",
        "Execution",
        "Execution"
    ],
    "The repository layer is in charge of moving the execution of the network request off the main thread and posting the result back to the main thread using a callback.": [
        "Building_subparts",
        "Network",
        "Causation",
        "Observable_body_parts",
        "Natural_features",
        "Execution",
        "First_rank",
        "Sending",
        "Using",
        "Execution",
        "Motion",
        "Execution"
    ],
    "To move the execution of the network request off the main thread, we need to create other threads in our app.": [
        "Network",
        "Natural_features",
        "Execution",
        "First_rank",
        "Increment",
        "Execution",
        "Intentionally_create",
        "Motion",
        "Required_event"
    ],
    "A thread pool is a managed collection of threads that runs tasks in parallel from a queue.": [
        "Natural_features",
        "Natural_features",
        "Being_obligated",
        "Operating_a_system",
        "Execution",
        "Similarity",
        "Execution"
    ],
    "New tasks are executed on existing threads as those threads become idle.": [
        "Being_obligated",
        "Natural_features",
        "Age",
        "Existence",
        "Becoming",
        "Execution"
    ],
    "To send a task to a thread pool, use the ExecutorService interface.": [
        "Being_obligated",
        "Natural_features",
        "Causation",
        "Using"
    ],
    "Note that ExecutorService has nothing to do with Services, the Android application component.": [
        "Public_services",
        "Using",
        "Ingredients",
        "Intentionally_act",
        "Possession"
    ],
    "Creating threads is expensive, so you should create a thread pool only once as your app initializes.": [
        "Natural_features",
        "Natural_features",
        "Creating",
        "Being_obligated",
        "Expensiveness",
        "Frequency",
        "Intentionally_create",
        "Sole_instance"
    ],
    "Be sure to save the instance of the ExecutorService either in your Application class or in a dependency injection container.": [
        "Instance",
        "Using",
        "Reliance",
        "Containers",
        "Likelihood"
    ],
    "The following example creates a thread pool of four threads that we can use to run background tasks.": [
        "Instance",
        "Natural_features",
        "Natural_features",
        "Being_obligated",
        "Relative_time",
        "Cardinal_numbers",
        "Capability",
        "Execution",
        "Using",
        "Creating"
    ],
    "There are other ways you can configure a thread pool depending on expected workload.": [
        "Execution",
        "Natural_features",
        "Increment",
        "Expectation",
        "Capability",
        "Existence"
    ],
    "See Configuring a thread pool for more information.": [
        "Natural_features",
        "Information",
        "Increment",
        "Perception_experience"
    ],
    "Making a network request on the main thread causes the thread to wait, or block, until it receives a response.": [
        "Network",
        "Natural_features",
        "Waiting",
        "Measure_linear_extent",
        "Response",
        "First_rank",
        "Receiving",
        "Execution",
        "Causation",
        "Causation"
    ],
    "Since the thread is blocked, the OS can't call onDraw ( ), and your app freezes, potentially leading to an Application Not Responding ( ANR ) dialog.": [
        "Natural_features",
        "Eclipse",
        "Using",
        "Discussion",
        "Activity_pause",
        "Causation",
        "Response",
        "Execution",
        "Capability"
    ],
    "Instead, let's run this operation on a background thread.": [
        "Using",
        "Execution",
        "Grant_permission"
    ],
    "First, let's take a look at our Repository class and see how it's making the network request:": [
        "Scrutiny",
        "Network",
        "Execution",
        "Grant_permission",
        "Have_as_requirement",
        "Causation",
        "Grasp"
    ],
    "makeLoginRequest ( ) is synchronous and blocks the calling thread.": [
        "Eclipse",
        "Natural_features",
        "Execution"
    ],
    "To model the response of the network request, we have our own Result class.": [
        "Network",
        "Execution",
        "Causation",
        "Possession",
        "Response"
    ],
    "The ViewModel triggers the network request when the user taps, for example, on a button:": [
        "Network",
        "Temporal_collocation",
        "Instance",
        "Clothing_parts",
        "Attaching",
        "Execution"
    ],
    "With the previous code, LoginViewModel is blocking the main thread when making the network request.": [
        "Time_vector",
        "Eclipse",
        "Natural_features",
        "Network",
        "First_rank",
        "Execution",
        "Causation",
        "Temporal_collocation"
    ],
    "We can use the thread pool that we've instantiated to move the execution to a background thread.": [
        "Natural_features",
        "Execution",
        "Natural_features",
        "Capability",
        "Using",
        "Motion"
    ],
    "First, following the principles of dependency injection, LoginRepository takes an instance of Executor as opposed to ExecutorService because it's executing code and not managing threads:": [
        "Ordinal_numbers",
        "Reliance",
        "Instance",
        "Execution",
        "Natural_features",
        "Operating_a_system",
        "Relative_time",
        "Removing",
        "Taking_sides"
    ],
    "The Executor's execute ( ) method takes a Runnable.": [
        "Execution",
        "Execution",
        "Removing"
    ],
    "A Runnable is a Single Abstract Method ( SAM ) interface with a run ( ) method that is executed in a thread when invoked.": [
        "Sole_instance",
        "Execution",
        "Operating_a_system",
        "Execution",
        "Execution",
        "Temporal_collocation"
    ],
    "Let's create another function called makeLoginRequest ( ) that moves the execution to the background thread and ignores the response for now:": [
        "Natural_features",
        "Response",
        "Temporal_collocation",
        "Increment",
        "Execution",
        "Execution",
        "Motion",
        "Cause_to_start"
    ],
    "Inside the execute ( ) method, we create a new Runnable with the block of code we want to execute in the background thread -- in our case, the synchronous network request method.": [
        "Execution",
        "Execution",
        "Instance",
        "Network",
        "Age",
        "Execution",
        "Measure_linear_extent",
        "Desiring",
        "Intentionally_create"
    ],
    "Internally, the ExecutorService manages the Runnable and executes it in an available thread.": [
        "Execution",
        "Operating_a_system"
    ],
    "Any thread in your app can run in parallel to other threads, including the main thread, so you should ensure that your code is thread-safe.": [
        "Natural_features",
        "Natural_features",
        "Quantity",
        "Increment",
        "First_rank",
        "Being_obligated",
        "Execution",
        "Capability",
        "Inclusion"
    ],
    "Notice that in our example that we avoid writing to variables shared between threads, passing immutable data instead.": [
        "Instance",
        "Natural_features",
        "Text_creation",
        "Avoiding",
        "Process_end",
        "Becoming_aware"
    ],
    "This is a good practice, because each thread works with its own instance of data, and we avoid the complexity of synchronization.": [
        "Practice",
        "Natural_features",
        "Relational_quantity",
        "Being_employed",
        "Possession",
        "Instance",
        "Preventing"
    ],
    "If you need to share state between threads, you must be careful to manage access from threads using synchronization mechanisms such as locks.": [
        "Political_locales",
        "Having_or_lacking_access",
        "Natural_features",
        "Hair_configuration",
        "Being_obligated",
        "Execution",
        "Using",
        "Have_as_requirement",
        "Operating_a_system"
    ],
    "This is outside of the scope of this guide.": [
        "Scope",
        "Part_inner_outer"
    ],
    "In general you should avoid sharing mutable state between threads whenever possible.": [
        "Execution",
        "Political_locales",
        "Natural_features",
        "Likelihood",
        "Being_obligated",
        "Preventing"
    ],
    "In the previous step, we ignored the network request response.": [
        "Time_vector",
        "Intentionally_act",
        "Network",
        "Response",
        "Execution"
    ],
    "To display the result on the screen, LoginViewModel needs to know about it.": [
        "Causation",
        "Required_event",
        "Awareness"
    ],
    "We can do that by using callbacks.": [
        "Capability",
        "Using",
        "Intentionally_act"
    ],
    "The function makeLoginRequest ( ) should take a callback as a parameter so that it can return a value asynchronously.": [
        "Terms_of_agreement",
        "Capability",
        "Being_obligated",
        "Have_as_requirement",
        "Execution"
    ],
    "The callback with the result is called whenever the network request completes or a failure occurs.": [
        "Causation",
        "Network",
        "Success_or_failure",
        "Execution",
        "Event",
        "Execution",
        "Activity_finish"
    ],
    "In Kotlin, we can use a higher-order function.": [
        "Capability",
        "Using"
    ],
    "However, in Java, we have to create a new callback interface to have the same functionality:": [
        "Concessive",
        "Identicality",
        "Age",
        "Intentionally_create",
        "Being_obligated"
    ],
    "The ViewModel needs to implement the callback now.": [
        "Gizmo",
        "Temporal_collocation",
        "Required_event"
    ],
    "It can perform different logic depending on the result:": [
        "Causation",
        "Similarity",
        "Capability",
        "Intentionally_act"
    ],
    "In this example, the callback is executed in the calling thread, which is a background thread.": [
        "Instance",
        "Natural_features",
        "Execution",
        "Execution"
    ],
    "This means that you can not modify or communicate directly with the UI layer until you switch back to the main thread.": [
        "Observable_body_parts",
        "Natural_features",
        "Change_tool",
        "First_rank",
        "Cause_change",
        "Communication",
        "Capability",
        "Evidence"
    ],
    "You can use a Handler to enqueue an action to be performed on a different thread.": [
        "Similarity",
        "Capability",
        "Intentionally_act",
        "Intentionally_act",
        "Using"
    ],
    "To specify the thread on which to run the action, construct the Handler using a Looper for the thread.": [
        "Natural_features",
        "Intentionally_act",
        "Building",
        "Using",
        "Execution"
    ],
    "A Looper is an object that runs the message loop for an associated thread.": [
        "Cognitive_connection",
        "Execution"
    ],
    "Once you've created a Handler, you can then use the post ( Runnable ) method to run a block of code in the corresponding thread.": [
        "Sending",
        "Frequency",
        "Temporal_collocation",
        "Measure_linear_extent",
        "Capability",
        "Creating",
        "Using",
        "Execution",
        "Execution"
    ],
    "Looper includes a helper function, getMainLooper ( ), which retrieves the Looper of the main thread.": [
        "First_rank",
        "Inclusion"
    ],
    "You can run code in the main thread by using this Looper to create a Handler.": [
        "First_rank",
        "Intentionally_create",
        "Execution",
        "Using",
        "Capability"
    ],
    "As this is something you might do quite often, you can also save an instance of the Handler in the same place you saved the ExecutorService:": [
        "Instance",
        "Locale",
        "Likelihood",
        "Identicality",
        "Frequency",
        "Intentionally_act",
        "Capability"
    ],
    "It's a good practice to inject the handler to the Repository, as it gives you more flexibility.": [
        "Building_subparts",
        "Relational_quantity",
        "Increment",
        "Giving",
        "Practice"
    ],
    "For example, in the future you might want to pass in a different Handler to schedule tasks on a separate thread.": [
        "Instance",
        "Possibilities",
        "Process_end",
        "Likelihood",
        "Similarity",
        "Becoming_separated",
        "Being_obligated",
        "Desiring"
    ],
    "If you're always communicating back to the same thread, you can pass the Handler into the Repository constructor, as shown in the following example.": [
        "Observable_body_parts",
        "Natural_features",
        "Relative_time",
        "Instance",
        "Identicality",
        "Frequency",
        "Process_end",
        "Evidence",
        "Communication",
        "Capability"
    ],
    "Alternatively, if you want more flexibility, you can pass in a Handler to each function:": [
        "Increment",
        "Possession",
        "Process_end",
        "Capability"
    ],
    "In this example, the callback passed into the Repository's makeLoginRequest call is executed on the main thread.": [
        "Instance",
        "Building_subparts",
        "First_rank",
        "Execution",
        "Execution",
        "Traversing"
    ],
    "That means you can directly modify the UI from the callback or use LiveData.setValue ( ) to communicate with the UI.": [
        "Capability",
        "Communication",
        "Cause_change",
        "Evidence"
    ],
    "You can create a thread pool using one of the Executor helper functions with predefined settings, as shown in the previous example code.": [
        "Natural_features",
        "Time_vector",
        "Instance",
        "Evidence",
        "Cardinal_numbers",
        "Using",
        "Capability",
        "Intentionally_create"
    ],
    "Alternatively, if you want to customize the details of the thread pool, you can create an instance using ThreadPoolExecutor directly.": [
        "Natural_features",
        "Instance",
        "Using",
        "Intentionally_create",
        "Possession",
        "Capability"
    ],
    "You can configure the following details:": [
        "Relative_time",
        "Capability"
    ],
    "Here's an example that specifies thread pool size based on the total number of processor cores, a keep alive time of one second, and an input queue.": [
        "Locative_relation",
        "Instance",
        "Natural_features",
        "Dead_or_alive",
        "Completeness",
        "Emptying",
        "Ordinal_numbers",
        "Cardinal_numbers",
        "Quantity",
        "Measure_duration",
        "Activity_ongoing"
    ],
    "It's important to understand the basics of threading and its underlying mechanisms.": [
        "Execution",
        "Grasp",
        "Importance"
    ],
    "There are, however, many popular libraries that offer higher-level abstractions over these concepts and ready-to-use utilities for passing data between threads.": [
        "Concessive",
        "Buildings",
        "Natural_features",
        "Desirability",
        "Traversing",
        "Quantity",
        "Offering",
        "Existence"
    ],
    "These libraries include Guava and RxJava for the Java Programming Language users and coroutines, which we recommend for Kotlin users.": [
        "Buildings",
        "Inclusion"
    ],
    "In practice, you should pick the one that works best for your app and your development team, though the rules of threading remain the same.": [
        "Practice",
        "Cardinal_numbers",
        "Execution",
        "Identicality",
        "Being_employed",
        "Event",
        "Being_obligated",
        "Desirability",
        "Execution",
        "Existence",
        "Choosing"
    ],
    "For more information about processes and threads in Android, see Process and threads overview.": [
        "Processing_materials",
        "Natural_features",
        "Execution",
        "Grasp",
        "Information",
        "Increment"
    ],
    "Initial and maximum pool size.": [
        "Version_sequence",
        "Extreme_value",
        "Natural_features"
    ],
    "Keep alive time and time unit.": [
        "Dead_or_alive",
        "Measure_duration"
    ],
    "Keep alive time is the maximum duration that a thread can remain idle before it shuts down.": [
        "Dead_or_alive",
        "Extreme_value",
        "Natural_features",
        "Ingestion",
        "Measure_duration",
        "Body_movement",
        "Existence",
        "Capability"
    ],
    "An input queue that holds Runnable tasks.": [
        "Being_obligated",
        "Containing"
    ],
    "This queue must implement the BlockingQueue interface.": [
        "Gizmo",
        "Being_obligated"
    ],
    "To match the requirements of your app, you can choose from the available queue implementations.": [
        "Execute_plan",
        "Being_necessary",
        "Evaluative_comparison",
        "Capability",
        "Choosing"
    ],
    "To learn more, see the class overview for ThreadPoolExecutor.": [
        "Increment",
        "Education_teaching",
        "Grasp"
    ],
    "First and foremost - don't ever get into such a situation.": [
        "First_rank",
        "Intentionally_act",
        "Execution"
    ],
    "Redesign your RPC services such that every user flow/screen requires at most a single RPC call to work.": [
        "Frequency",
        "Relational_quantity",
        "Working_on",
        "Public_services",
        "Sole_instance",
        "Execution",
        "Have_as_requirement"
    ],
    "In this case, you are making three calls to the server, and its just a waste of bandwidth.": [
        "Instance",
        "Cardinal_numbers",
        "Causation",
        "Contacting"
    ],
    "The latency will just kill your app.": [
        "Killing"
    ],
    "If you can't and really need a hack, use a LINK to periodically poll if all data has downloaded.": [
        "Quantity",
        "Using",
        "Required_event",
        "Capability"
    ],
    "The code you pasted above assumes login -LRB- -RRB- method will be the last to finish - which is wrong.": [
        "Adopt_selection",
        "Execution",
        "Morality_evaluation",
        "Being_attached",
        "Activity_finish",
        "Relative_time"
    ],
    "Its may be the first to finish, and then your app will be in an indeterminate state - which is very difficult to debug.": [
        "Ordinal_numbers",
        "Emptying",
        "Likelihood",
        "Political_locales",
        "Degree",
        "Difficulty",
        "Activity_finish",
        "Temporal_collocation"
    ],
    "Like @Epsen says, Future is probably what you want.": [
        "Temporal_collocation",
        "Likelihood",
        "Desiring"
    ],
    "Unfortunately, I don't believe Futures are GWT-compatible.": [
        "Possibilities",
        "Intentionally_act",
        "Certainty"
    ],
    "The LINK project claims to bring this functionality to GWT, though I've never tried it.": [
        "Project",
        "Cognitive_connection",
        "Causation",
        "Frequency",
        "Attempt"
    ],
    "It may be worth a look.": [
        "Scrutiny",
        "Likelihood",
        "Deserving"
    ],
    "Best case scenario, as sri said, is to redesign your app to only call the backend once at a time.": [
        "Reasoning",
        "Sole_instance",
        "Measure_duration",
        "Frequency",
        "Execution"
    ],
    "This avoids this kind of scenario, and preserves bandwidth and latency time.": [
        "Avoiding",
        "Preserving",
        "Measure_duration"
    ],
    "In a web app, this is your most precious resource.": [],
    "Having said that the GWT RPC model doesn't really help you to organize things in this manner.": [
        "Vehicle",
        "Conduct",
        "Intentionally_act",
        "Assistance"
    ],
    "I've run into this problem myself.": [
        "Predicament",
        "Execution"
    ],
    "My solution was to implement a timer.": [
        "Gizmo"
    ],
    "The timer will poll your results every X seconds, and when all your expected results are retrieved, your execution flow can continue.": [
        "Frequency",
        "Temporal_collocation",
        "Quantity",
        "Execution",
        "Causation",
        "Expectation",
        "Fluidic_motion",
        "Activity_ongoing",
        "Capability"
    ],
    "PollTimer extends Timer -LCB- public PollTimer -LRB- -RRB- -LCB- / / I've set to poll every half second, but this can be whatever you'd like.": [
        "Part_whole",
        "Expansion",
        "Secrecy_status",
        "Frequency",
        "Experiencer_focus",
        "Capability",
        "Intentionally_create"
    ],
    "/ / Ideally it will be client side only, so you should be able to make it / / more frequent -LRB- within reason -RRB- without worrying too much about performance scheduleRepeating -LRB- 500 -RRB- ; -RCB- public void run -LCB- / / check to see if all your callbacks have been completed if -LRB- notFinished -RRB- return ;": [
        "Causation",
        "Relational_quantity",
        "Performing_arts",
        "Cardinal_numbers",
        "Emptying",
        "Execution",
        "Sole_instance",
        "Increment",
        "Sufficiency",
        "Frequency",
        "Operating_a_system",
        "Secrecy_status",
        "Quantity",
        "Taking_sides",
        "Being_obligated",
        "Stimulus_focus",
        "Activity_finish",
        "Execution",
        "Grasp",
        "Capability"
    ],
    "-RCB-": [],
    "Make your calls to your RPC, then instantiate a new PollTimer object.": [
        "Causation",
        "Age",
        "Contacting",
        "Temporal_collocation"
    ],
    "That should do the trick.": [
        "Being_obligated",
        "Successful_action"
    ],
    "The stuff in java.util.concurrent is not supported by GWT Emulation.": [
        "Taking_sides"
    ],
    "Wont help you in this case.": [
        "Instance",
        "Assistance"
    ],
    "For all intents and purposes, all of the code you do on the client side is single threaded.": [
        "Quantity",
        "Intentionally_act",
        "Sole_instance",
        "Taking_sides"
    ],
    "Try to get into that mind set.": [
        "Execution",
        "Execution",
        "Attempt"
    ],
    "Just tossing up some ideas:": [
        "Cause_motion",
        "Locative_relation",
        "Relational_quantity"
    ],
    "The callbacks fire some GwtEvent using the HandlerManager.": [
        "Relational_quantity",
        "Using"
    ],
    "The class containing the ready methods is registered with the HandlerManager as an EventHandler for the events fired by the callback methods, and holds the state -LRB- bookAPIAvailable, searchAPIAvailable, appLoaded -RRB-.": [
        "Execution",
        "Political_locales",
        "Activity_ready_state",
        "Shoot_projectiles",
        "Inclusion",
        "Event",
        "Becoming_aware",
        "Containing"
    ],
    "When a event arrives that specific state is changed, and we check if all the states are as desired.": [
        "Temporal_collocation",
        "Event",
        "Political_locales",
        "Quantity",
        "Inspecting",
        "Execution",
        "Desiring",
        "Undergo_change"
    ],
    "For an example using the GWTEvent, HandlerManager and EventHandler, see LINK": [
        "Instance",
        "Using",
        "Perception_experience"
    ],
    "Ideally, you want to do as other posters have stated and do as much as you can in a single async call.": [
        "Physical_artworks",
        "Increment",
        "Sole_instance",
        "Execution",
        "Relational_quantity",
        "Capability",
        "Intentionally_act",
        "Desiring"
    ],
    "Sometimes you have to do a bunch of separate calls.": [
        "Contacting",
        "Becoming_separated",
        "Execution",
        "Intentionally_act",
        "Being_obligated",
        "Frequency"
    ],
    "Here's how:": [],
    "You want to chain the async calls.": [
        "Contacting",
        "Being_attached",
        "Desiring"
    ],
    "When the last async completes -LRB- login -RRB-, all the items are loaded.": [
        "Temporal_collocation",
        "Completeness",
        "Quantity",
        "Entity",
        "Relative_time"
    ],
    "Cheers,": [],
    "-- Russ": [],
    "I wrote two classes that solve this problem on my project.": [
        "Predicament",
        "Project",
        "Cardinal_numbers",
        "Resolve_problem"
    ],
    "Basically, each individual callback registers with a parent.": [
        "People",
        "Kinship"
    ],
    "The parent waits for each child callback to complete, then fires off it's own handleSuccess -LRB- -RRB-.": [
        "Kinship",
        "Waiting",
        "Kinship",
        "Possession",
        "Shoot_projectiles",
        "Activity_finish",
        "Temporal_collocation"
    ],
    "The client code looks like this:": [
        "Scrutiny"
    ],
    "I wrote a post explaining it here: LINK.": [
        "Sending",
        "Locative_relation"
    ],
    "The implementation for these two classes is linked from that post -LRB- sorry, can't give links here because I'm a newbie user - not enough karma to include more than one link ! -RRB-": [
        "Sending",
        "Contrition",
        "Make_cognitive_connection",
        "Locative_relation",
        "Increment",
        "Cardinal_numbers",
        "Sufficiency",
        "Cardinal_numbers",
        "Execute_plan",
        "Cognitive_connection",
        "Inclusion",
        "Giving",
        "Capability"
    ],
    "I've struggled with this myself, and I've used several methods - the ` chain' one just gets ugly -LRB- but can be improved if you create classes instead of inline classes for each method -RRB-.": [
        "Execution",
        "Cardinal_numbers",
        "Execution",
        "Quantity",
        "Aesthetics",
        "Execution",
        "Using",
        "Likelihood",
        "Hostile_encounter",
        "Intentionally_create",
        "Cause_to_make_progress"
    ],
    "A variant of your own version works well for me:": [
        "Being_employed",
        "Possession",
        "Similarity"
    ],
    "All I did was create a counter for the number of calls I'm going to do, then each async result calls ready -LRB- -RRB- -LRB- be sure to do this on the failure methods too, unless you're going to do something different -RRB-": [
        "Quantity",
        "Communication_response",
        "Contacting",
        "Success_or_failure",
        "Intentionally_act",
        "Causation",
        "Execution",
        "Similarity",
        "Intentionally_act",
        "Motion",
        "Sufficiency",
        "Intentionally_affect",
        "Intentionally_create",
        "Quantity",
        "Likelihood",
        "Temporal_collocation",
        "Activity_ready_state"
    ],
    "In the ready method, I decrement the counter and see if there are still outstanding calls.": [
        "Execution",
        "Communication_response",
        "Activity_ready_state",
        "Continued_state_of_affairs",
        "Contacting",
        "Existence",
        "Perception_experience"
    ],
    "It's still ugly, but it lets you add calls as needed.": [
        "Cause_change_of_position_on_a_scale",
        "Contacting",
        "Required_event",
        "Continued_state_of_affairs",
        "Aesthetics",
        "Grant_permission"
    ],
    "I did something similar to @Sasquatch, but instead making use of a `` CallbackCounter'' object:": [
        "Intentionally_affect",
        "Similarity",
        "Manufacturing"
    ],
    "Then in my callback I just call:": [
        "Temporal_collocation",
        "Execution"
    ],
    "Java 8 was released in 2014, and introduced a raft of new language features such as Lambdas and the Streams API.": [
        "Quantity",
        "Age",
        "Quantity",
        "Releasing"
    ],
    "A lot has happened since 2014 - Java is now at version 15, but industry surveys consistently report 8 as the most widely-used version, with very few developers using 7 or lower.": [
        "Temporal_collocation",
        "Cardinal_numbers",
        "Fields",
        "Quantity",
        "Scrutiny",
        "Degree",
        "Quantity",
        "Using",
        "Event"
    ],
    "In October this year, the Twilio Java Helper Library was updated to use Java 8 features in release 8.0.0.": [
        "Calendric_unit",
        "Buildings",
        "Releasing",
        "Calendric_unit",
        "Using"
    ],
    "This new major version reflects the fact that the library no longer supports Java 7.": [
        "Buildings",
        "Importance",
        "Cogitation",
        "Temporal_collocation",
        "Age",
        "Supporting"
    ],
    "One Java 8 API which sometimes gets overlooked is the CompletionStage API, usually accessed through the CompletableFuture class.": [
        "Frequency",
        "Execution",
        "Cardinal_numbers"
    ],
    "The CompletionStage API lets programmers define pipelines of asynchronous operations for data, and handles the asynchronous behaviour for you.": [
        "Businesses",
        "Resolve_problem",
        "Communicate_categorization",
        "Grant_permission"
    ],
    "You define what you want to happen, and Java takes care of when it can happen.": [
        "Temporal_collocation",
        "Possession",
        "Taking_time",
        "Capability",
        "Event",
        "Communicate_categorization"
    ],
    "In this post I'll show how you can use CompletableFutures with the new Twilio Helper Library ; in fact, the same principles can be applied to deal with any asynchronous code.": [
        "Sending",
        "Buildings",
        "Make_agreement_on_action",
        "Age",
        "Identicality",
        "Quantity",
        "Using",
        "Likelihood",
        "Using",
        "Reasoning"
    ],
    "Java 11's HttpClient has async methods that return CompletableFuture instances, for example.": [
        "Execution",
        "Instance",
        "Instance",
        "Execution",
        "Inclusion"
    ],
    "Synchronous and Asynchronous code If you're calling the Twilio API to send an SMS, your code might look like this:": [
        "Likelihood",
        "Scrutiny",
        "Sending",
        "Execution"
    ],
    "-LSB- full code on GitHub -RSB- This code will call the Twilio API, enqueue the SMS, and return a Message object which encapsulates details of the response, including the Message's SID which can be used later to look up what happened to the message.": [
        "Fullness",
        "Response",
        "Likelihood",
        "Time_vector",
        "Event",
        "Scrutiny",
        "Using",
        "Inclusion",
        "Execution",
        "Execution"
    ],
    "There's a lot going on behind the scenes there, including a request and response whizzing over the Internet - on my computer this call takes about a second to complete, and this code will wait until the Message is available before continuing.": [
        "Sensation",
        "Locative_relation",
        "Execution",
        "Response",
        "Execution",
        "Ordinal_numbers",
        "Quantity",
        "Removing",
        "Existence",
        "Process_continue",
        "Activity_finish",
        "Waiting",
        "Process_continue",
        "Inclusion"
    ],
    "This is a synchronous ( or `` blocking'' ) call.": [
        "Execution"
    ],
    "There might be other things that your code could be doing while the API request is in progress, so how about if we made the call asynchronous ?": [
        "Intentionally_act",
        "Progress",
        "Likelihood",
        "Increment",
        "Execution",
        "Execution",
        "Relational_quantity",
        "Causation",
        "Existence",
        "Capability"
    ],
    "That would mean our code can continue to do other things and we can get hold of the Message later on when we need it.": [
        "Temporal_collocation",
        "Increment",
        "Required_event",
        "Time_vector",
        "Containing",
        "Execution",
        "Intentionally_act",
        "Activity_ongoing",
        "Capability",
        "Causation"
    ],
    "createAsync ( ) will do just that.": [
        "Intentionally_act"
    ],
    "createAsync ( ) method returns a Future.": [
        "Execution",
        "Temporal_collocation",
        "Execution"
    ],
    "Similar to promises in other languages, Futures are objects that will contain a result when it's ready.": [
        "Commitment",
        "Possibilities",
        "Causation",
        "Temporal_collocation",
        "Increment",
        "Activity_ready_state",
        "Inclusion",
        "Similarity"
    ],
    "The work is being done in a background thread, and when you need the result you can call a method on the Furture to get the result.": [
        "Being_employed",
        "Temporal_collocation",
        "Required_event",
        "Intentionally_act",
        "Execution",
        "Execution",
        "Execution",
        "Capability",
        "Causation"
    ],
    "When you call that method you might still have to wait, but your code has had a chance to do other things in the meantime.": [
        "Temporal_collocation",
        "Execution",
        "Waiting",
        "Likelihood",
        "Increment",
        "Continued_state_of_affairs",
        "Being_obligated",
        "Being_obligated",
        "Likelihood",
        "Execution",
        "Intentionally_act"
    ],
    "From version 8.0.0 of the Twilio Helper Library, the type of future returned is now a CompletableFuture which has a.": [
        "Possibilities",
        "Buildings",
        "Execution",
        "Inclusion",
        "Temporal_collocation"
    ],
    "join ( ) method for getting its result.": [
        "Becoming_a_member",
        "Execution",
        "Causation",
        "Execution"
    ],
    "So your code might look like this:": [
        "Likelihood",
        "Scrutiny"
    ],
    "-LSB- full code on GitHub -RSB-": [],
    "So far, so good - but what makes the CompletionStage API special is that you can build up pipelines of code where each stage will be executed when it is ready, without you having to code the nuts and bolts of the asynchronous behaviour yourself.": [
        "Locative_relation",
        "Execution",
        "Temporal_collocation",
        "Food",
        "Locative_relation",
        "Activity_ready_state",
        "Causation",
        "Desirability",
        "Building",
        "Being_obligated",
        "Continued_state_of_affairs",
        "Capability"
    ],
    "This is similar to how you can use callbacks in other languages, but more flexible as we will see.": [
        "Increment",
        "Similarity",
        "Using",
        "Grasp",
        "Increment",
        "Capability"
    ],
    "Examples OK, that description might have seemed a little complex.": [
        "Instance",
        "Communicate_categorization",
        "Quantity",
        "System",
        "Likelihood",
        "Appearance"
    ],
    "Here are a few examples which should help clarify: Chaining computation sequentially If you want to run some code after the API call has completed, use.": [
        "Locative_relation",
        "Attaching",
        "Instance",
        "Being_obligated",
        "Relational_quantity",
        "Execution",
        "Quantity",
        "Activity_finish",
        "Execution",
        "Possession",
        "Assistance"
    ],
    "thenApply ( ) method takes a lambda or a method reference which transforms the value and returns another CompletionStage so you can chain more things if you need.": [
        "Execution",
        "Being_attached",
        "Increment",
        "Increment",
        "Required_event",
        "Capability",
        "Cause_change",
        "Execution",
        "Removing"
    ],
    "When you want the final result, again you can call.": [
        "Temporal_collocation",
        "Execution",
        "Causation",
        "Ordinal_numbers",
        "Capability",
        "Possession"
    ],
    "-LSB- full code on GitHub -RSB- Parallel execution Extending the previous example, imagine you need to make several API requests - they don't depend on each other so it doesn't matter what order the requests happen in, but you do need to know when they are all complete for some final bookkeeping ( writing what has happened into a database, for example ).": [
        "Fullness",
        "Similarity",
        "Execution",
        "Increment",
        "Temporal_collocation",
        "Quantity",
        "Relational_quantity",
        "Instance",
        "Time_vector",
        "Required_event",
        "Quantity",
        "Execution",
        "Intentionally_act",
        "Ordinal_numbers",
        "Text_creation",
        "Event",
        "Event",
        "Process_completed_state",
        "Expansion",
        "Awareness",
        "Causation",
        "Awareness",
        "Intentionally_act"
    ],
    "You can schedule code to run after multiple CompletionStages have finished using CompletableFuture.allOf ( ).": [
        "Quantity",
        "Capability",
        "Using",
        "Process_completed_state",
        "Execution"
    ],
    "The lambda you pass to.": [
        "Process_end"
    ],
    "allOf ( ) takes no arguments ; to get the results of each stage, use.": [
        "Quantity",
        "Evidence",
        "Causation",
        "Removing",
        "Execution"
    ],
    "join ( ) in the lambda's body:": [
        "Becoming_a_member",
        "Execution"
    ],
    "-LSB- full code on GitHub -RSB- Handling Errors in CompletionStages If any exceptions are thrown in your asynchronous code, the CompletionStage API will catch them and let you handle them in a few different ways.": [
        "Fullness",
        "Quantity",
        "Hunting_success_or_failure",
        "Execution",
        "Similarity",
        "Resolve_problem",
        "Cause_motion",
        "Quantity",
        "Grant_permission"
    ],
    "If you do not handle them at all, then your call to.": [
        "Quantity",
        "Temporal_collocation",
        "Execution",
        "Resolve_problem",
        "Intentionally_act"
    ],
    "join ( ) could throw a CompletionException which has the original exception as its cause.": [
        "Becoming_a_member",
        "Causation",
        "Inclusion",
        "Cause_motion",
        "Capability"
    ],
    "A better way to recover might be to use the.": [
        "Recovery",
        "Desirability",
        "Execution",
        "Likelihood",
        "Using"
    ],
    "handle ( ) method - you provide a lambda which takes two arguments, a result and an exception.": [
        "Execution",
        "Evidence",
        "Causation",
        "Cardinal_numbers",
        "Taking_time",
        "Supply",
        "Resolve_problem"
    ],
    "If the exception is non-null you can handle it here.": [
        "Locative_relation",
        "Resolve_problem",
        "Capability"
    ],
    "handle ( ) returns a CompletableFuture so you can continue chaining or.": [
        "Resolve_problem",
        "Attaching",
        "Execution",
        "Capability",
        "Activity_ongoing"
    ],
    "join ( ) to get the result:": [
        "Becoming_a_member",
        "Causation",
        "Execution"
    ],
    "-LSB- full code on GitHub -RSB- The full CompletionStage API These small examples just scratch the surface of the CompletionStage API": [
        "Fullness",
        "Instance",
        "Dimension",
        "Part_inner_outer"
    ],
    "There are dozens of methods for chaining and combining asynchronous actions in different ways.": [
        "Accoutrements",
        "Cause_to_amalgamate",
        "Intentionally_act",
        "Execution",
        "Similarity",
        "Execution",
        "Existence"
    ],
    "For more examples of what you can do with CompletableFutures, I recommend you check out the official documentation or this handy list of 20 examples.": [
        "Execution",
        "Instance",
        "Cardinal_numbers",
        "Capability",
        "Intentionally_act",
        "Increment",
        "Inspecting"
    ],
    "Summary Java 8's CompletionStage API gives us Java developers powerful tools for defining complex asynchronous processes, and is just one of the many additions to the newest Twilio Java Helper Library.": [
        "Buildings",
        "Execution",
        "Quantity",
        "Communicate_categorization",
        "Gizmo",
        "Communication_response",
        "Giving",
        "Cardinal_numbers"
    ],
    "If you're using Twilio and Java I'd encourage you to update to the latest Helper library.": [
        "Relative_time",
        "Buildings",
        "Using",
        "Attempt_suasion"
    ],
    "If you're building with Twilio and Java let me know about it.": [
        "Awareness",
        "Building",
        "Grant_permission"
    ],
    "I can't wait to see what you build.": [
        "Building",
        "Waiting",
        "Grasp",
        "Capability"
    ],
    "Quick Actions don't get displayed on Android 7.0": [
        "Intentionally_act",
        "Intentionally_act",
        "Execution"
    ],
    "Notifications provide short, timely information about events in your app while it's not in use.": [
        "Telling",
        "Duration_attribute",
        "Event",
        "Supply",
        "Information"
    ],
    "This page teaches you how to create a notification with various features for Android 4.0 ( API level 14 ) and higher.": [
        "Contacting",
        "Telling",
        "Position_on_a_scale",
        "Education_teaching",
        "Diversity",
        "Rank",
        "Cardinal_numbers",
        "Intentionally_create"
    ],
    "For an introduction to how notifications appear on Android, see the Notifications Overview.": [
        "Telling",
        "Telling",
        "Coming_to_be",
        "Grasp"
    ],
    "For sample code that uses notifications, see the Android Notifications Sample.": [
        "Telling",
        "Telling",
        "Using",
        "Grasp"
    ],
    "Notice that the code on this page uses the NotificationCompat APIs from the Android support library.": [
        "Contacting",
        "Taking_sides",
        "Buildings",
        "Using",
        "Becoming_aware"
    ],
    "These APIs allow you to add features available only on newer versions of Android while still providing compatibility back to Android 4.0 ( API level 14 ).": [
        "Compatibility",
        "Observable_body_parts",
        "Rank",
        "Cardinal_numbers",
        "Supply",
        "Grant_permission",
        "Sole_instance",
        "Continued_state_of_affairs"
    ],
    "However, some new features such as the inline reply action result in a no-op on older versions.": [
        "Concessive",
        "Relational_quantity",
        "Communication_response",
        "Intentionally_act",
        "Age",
        "Causation",
        "Age"
    ],
    "Although most projects created with Android Studio include the necessary dependencies to use NotificationCompat, you should verify that your module-level build.gradle file includes the following dependency:": [
        "Project",
        "Building_subparts",
        "Relative_time",
        "Reliance",
        "Being_necessary",
        "Using",
        "Creating",
        "Being_obligated",
        "Reliance",
        "Relational_quantity",
        "Inclusion",
        "Inclusion",
        "Verification"
    ],
    "A notification in its most basic and compact form ( also known as collapsed form ) displays an icon, a title, and a small amount of content text.": [
        "Telling",
        "Relational_quantity",
        "Being_necessary",
        "Observable_body_parts",
        "Dimension",
        "Quantity"
    ],
    "In this section, you'll learn how to create a notification that the user can click on to launch an activity in your app.": [
        "Part_whole",
        "Education_teaching",
        "Shoot_projectiles",
        "Sounds",
        "Intentionally_act",
        "Intentionally_create",
        "Capability",
        "Telling"
    ],
    "A notification with a title and text": [
        "Telling",
        "Observable_body_parts"
    ],
    "For more details about each part of a notification, read about the notification anatomy.": [
        "Telling",
        "Part_whole",
        "Increment",
        "Reading"
    ],
    "To get started, you need to set the notification's content and channel using a NotificationCompat.Builder object.": [
        "Activity_start",
        "Telling",
        "Natural_features",
        "Execution",
        "Required_event",
        "Using",
        "Intentionally_create"
    ],
    "The following example shows how to create a notification with the following:": [
        "Telling",
        "Instance",
        "Relative_time",
        "Intentionally_create",
        "Evidence"
    ],
    "Notice that the NotificationCompat.Builder constructor requires that you provide a channel ID.": [
        "Natural_features",
        "Becoming_aware",
        "Supply",
        "Have_as_requirement"
    ],
    "This is required for compatibility with Android 8.0 ( API level 26 ) and higher, but is ignored by older versions.": [
        "Needing",
        "Compatibility",
        "Rank",
        "Age",
        "Position_on_a_scale"
    ],
    "By default, the notification's text content is truncated to fit one line.": [
        "Telling",
        "Cardinal_numbers",
        "Suitability"
    ],
    "If you want your notification to be longer, you can enable an expandable notification by adding a style template with setStyle ( ).": [
        "Duration_attribute",
        "Hair_configuration",
        "Capability",
        "Possession",
        "Telling"
    ],
    "For example, the following code creates a larger text area:": [
        "Instance",
        "Locale",
        "Relative_time",
        "Dimension",
        "Creating"
    ],
    "For more information about other large notification styles, including how to add an image and media playback controls, see Create a Notification with Expandable Detail.": [
        "Telling",
        "Hair_configuration",
        "Similarity",
        "Telling",
        "Increment",
        "Dimension",
        "Prohibiting",
        "Increment",
        "Cause_to_start",
        "Grasp",
        "Inclusion",
        "Information"
    ],
    "Before you can deliver the notification on Android 8.0 and higher, you must register your app's notification channel with the system by passing an instance of NotificationChannel to createNotificationChannel ( ).": [
        "Telling",
        "Position_on_a_scale",
        "Gizmo",
        "Instance",
        "Capability",
        "Being_obligated",
        "Natural_features",
        "Delivery",
        "Traversing",
        "Recording"
    ],
    "So the following code is blocked by a condition on the SDK_INT version:": [
        "Eclipse",
        "Relative_time",
        "State_of_entity"
    ],
    "Because you must create the notification channel before posting any notifications on Android 8.0 and higher, you should execute this code as soon as your app starts.": [
        "Telling",
        "Natural_features",
        "Telling",
        "Position_on_a_scale",
        "Execution",
        "Being_obligated",
        "Quantity",
        "Sending",
        "Being_obligated",
        "Process_start",
        "Intentionally_create"
    ],
    "It's safe to call this repeatedly because creating an existing notification channel performs no operation.": [
        "Telling",
        "Natural_features",
        "Using",
        "Existence",
        "Quantity",
        "Risky_situation",
        "Intentionally_act",
        "Execution",
        "Intentionally_create"
    ],
    "Notice that the NotificationChannel constructor requires an importance, using one of the constants from the NotificationManager class.": [
        "Importance",
        "Have_as_requirement",
        "Becoming_aware",
        "Cardinal_numbers",
        "Using"
    ],
    "This parameter determines how to interrupt the user for any notification that belongs to this channel -- though you must also set the priority with setPriority ( ) to support Android 7.1 and lower ( as shown above ).": [
        "Terms_of_agreement",
        "Telling",
        "Natural_features",
        "Quantity",
        "Being_obligated",
        "Evidence",
        "Coming_to_believe",
        "Interrupt_process",
        "Intentionally_create",
        "Possession",
        "Taking_sides"
    ],
    "Although you must set the notification importance/priority as shown here, the system does not guarantee the alert behavior you'll get.": [
        "Telling",
        "Locative_relation",
        "System",
        "Attention",
        "Being_obligated",
        "Evidence",
        "Intentionally_act",
        "Intentionally_create",
        "Execution",
        "Likelihood",
        "Conduct"
    ],
    "In some cases the system might change the importance level based other factors, and the user can always redefine what the importance level is for a given channel.": [
        "Instance",
        "System",
        "Natural_features",
        "Relational_quantity",
        "Increment",
        "Giving",
        "Likelihood",
        "Importance",
        "Rank",
        "Undergo_change",
        "Frequency",
        "Communicate_categorization",
        "Capability"
    ],
    "For more information about what the different levels mean, read about notification importance levels.": [
        "Reading",
        "Telling",
        "Rank",
        "Similarity",
        "Importance",
        "Causation",
        "Information",
        "Increment"
    ],
    "Every notification should respond to a tap, usually to open an activity in your app that corresponds to the notification.": [
        "Frequency",
        "Telling",
        "Attaching",
        "Intentionally_act",
        "Secrecy_status",
        "Being_obligated",
        "Response"
    ],
    "To do so, you must specify a content intent defined with a PendingIntent object and pass it to setContentIntent ( ).": [
        "Intentionally_act",
        "Being_obligated",
        "Process_end",
        "Categorization"
    ],
    "The following snippet shows how to create a basic intent to open an activity when the user taps the notification:": [
        "Intentionally_act",
        "Temporal_collocation",
        "Telling",
        "Part_piece",
        "Relative_time",
        "Secrecy_status",
        "Attaching",
        "Being_necessary",
        "Intentionally_create",
        "Evidence"
    ],
    "Notice this code calls setAutoCancel ( ), which automatically removes the notification when the user taps it.": [
        "Telling",
        "Temporal_collocation",
        "Becoming_aware",
        "Attaching",
        "Removing",
        "Execution"
    ],
    "The setFlags ( ) method shown above helps preserve the user's expected navigation experience after they open your app via the notification.": [
        "Execution",
        "Telling",
        "Evidence",
        "Expertise",
        "Expectation",
        "Secrecy_status",
        "Preserving",
        "Assistance"
    ],
    "But whether you want to use that depends on what type of activity you're starting, which may be one of the following:": [
        "Intentionally_act",
        "Using",
        "Likelihood",
        "Cardinal_numbers",
        "Desiring",
        "Process_start"
    ],
    "For more about the different ways to configure your notification's intent, read Start an Activity from a Notification.": [
        "Increment",
        "Temporal_subregion",
        "Intentionally_act",
        "Telling",
        "Execution",
        "Similarity",
        "Telling",
        "Categorization"
    ],
    "To make the notification appear, call NotificationManagerCompat.notify ( ), passing it a unique ID for the notification and the result of NotificationCompat.Builder.build ( ).": [
        "Telling",
        "Causation",
        "Idiosyncrasy",
        "Causation",
        "Coming_to_be",
        "Traversing"
    ],
    "Remember to save the notification ID that you pass to NotificationManagerCompat.notify ( ) because you'll need it later if you want to update or remove the notification.": [
        "Telling",
        "Process_end",
        "Required_event",
        "Removing",
        "Time_vector",
        "Possession",
        "Memory"
    ],
    "A notification can offer up to three action buttons that allow the user to respond quickly, such as snooze a reminder or even reply to a text message.": [
        "Telling",
        "Intentionally_act",
        "Clothing_parts",
        "Sleep",
        "Evoking",
        "Being_up_to_it",
        "Cardinal_numbers",
        "Speed",
        "Offering",
        "Capability",
        "Communication_response",
        "Grant_permission",
        "Response"
    ],
    "But these action buttons should not duplicate the action performed when the user taps the notification.": [
        "Intentionally_act",
        "Clothing_parts",
        "Duplication",
        "Temporal_collocation",
        "Being_obligated",
        "Telling",
        "Attaching",
        "Intentionally_act"
    ],
    "A notification with one action button": [
        "Telling",
        "Intentionally_act",
        "Clothing_parts",
        "Cardinal_numbers"
    ],
    "To add an action button, pass a PendingIntent to the addAction ( ) method.": [
        "Intentionally_act",
        "Clothing_parts",
        "Process_end",
        "Execution"
    ],
    "This is just like setting up the notification's default tap action, except instead of launching an activity, you can do a variety of other things such as start a BroadcastReceiver that performs a job in the background so the action does not interrupt the app that's already open.": [
        "Telling",
        "Intentionally_act",
        "Intentionally_act",
        "Temporal_subregion",
        "Attaching",
        "Increment",
        "Time_vector",
        "Shoot_projectiles",
        "Intentionally_act",
        "Being_obligated",
        "Interrupt_process",
        "Intentionally_create",
        "Intentionally_act",
        "Secrecy_status",
        "Intentionally_act",
        "Capability"
    ],
    "For example, the following code shows how to send a broadcast to a specific receiver:": [
        "Instance",
        "Relative_time",
        "Causation",
        "Evidence"
    ],
    "For more information about building a BroadcastReceiver to run background work, see the Broadcasts guide.": [
        "Working_on",
        "Grasp",
        "Execution",
        "Building",
        "Information",
        "Increment"
    ],
    "If you're instead trying to build a notification with media playback buttons ( such as to pause and skip tracks ), see how to create a notification with media controls.": [
        "Telling",
        "Clothing_parts",
        "Self_motion",
        "Prohibiting",
        "Intentionally_create",
        "Building",
        "Grasp",
        "Attempt"
    ],
    "The direct reply action, introduced in Android 7.0 ( API level 24 ), allows users to enter text directly into the notification, which is delivered to your app without opening an activity.": [
        "Communication_response",
        "Intentionally_act",
        "Telling",
        "Body_movement",
        "Intentionally_act",
        "Rank",
        "Grant_permission",
        "Aiming",
        "Delivery",
        "Execution"
    ],
    "For example, you can use a direct reply action to let users reply to text messages or update task lists from within the notification.": [
        "Instance",
        "Communication_response",
        "Intentionally_act",
        "Being_obligated",
        "Telling",
        "Capability",
        "Aiming",
        "Grant_permission",
        "Using"
    ],
    "Tapping the `` Reply'' button opens the text input": [
        "Attaching",
        "Clothing_parts",
        "Body_movement"
    ],
    "The direct reply action appears as an additional button in the notification that opens a text input.": [
        "Communication_response",
        "Clothing_parts",
        "Telling",
        "Increment",
        "Aiming",
        "Intentionally_act",
        "Coming_to_be",
        "Body_movement"
    ],
    "When the user finishes typing, the system attaches the text response to the intent you had specified for the notification action and sends the intent to your app.": [
        "Temporal_collocation",
        "System",
        "Telling",
        "Intentionally_act",
        "Causation",
        "Activity_finish",
        "Attaching",
        "Response"
    ],
    "To create a notification action that supports direct reply:": [
        "Telling",
        "Communication_response",
        "Aiming",
        "Intentionally_create",
        "Supporting",
        "Intentionally_act"
    ],
    "Caution: If you re-use a PendingIntent, a user may reply to a different conversation than the one they thought they did.": [
        "Chatting",
        "Similarity",
        "Cardinal_numbers",
        "Likelihood",
        "Awareness",
        "Intentionally_act",
        "Communication_response"
    ],
    "You must either provide a request code that is different for each conversation or provide an intent that doesn't return true when you call equals ( ) on the reply intent of any other conversation.": [
        "Execution",
        "Chatting",
        "Intentionally_act",
        "Temporal_collocation",
        "Evaluative_comparison",
        "Communication_response",
        "Being_obligated",
        "Increment",
        "Quantity",
        "Similarity",
        "Execution",
        "Supply",
        "Execution"
    ],
    "The conversation ID is frequently passed as part of the intent's extras bundle, but is ignored when you call equals ( ).": [
        "Chatting",
        "Temporal_collocation",
        "Execution",
        "Frequency",
        "Traversing",
        "Part_whole"
    ],
    "The system prompts the user to input a response when they trigger the notification action, as shown in figure 3.": [
        "System",
        "Response",
        "Temporal_collocation",
        "Telling",
        "Intentionally_act",
        "Cardinal_numbers",
        "Evidence",
        "Cause_to_start"
    ],
    "To receive user input from the notification's reply UI, call RemoteInput.getResultsFromIntent ( ), passing it the Intent received by your BroadcastReceiver:": [
        "Telling",
        "Communication_response",
        "Execution",
        "Receiving",
        "Traversing",
        "Receiving"
    ],
    "After you've processed the text, you must update the notification by calling NotificationManagerCompat.notify ( ) with the same ID and tag ( if used ).": [
        "Telling",
        "Execution",
        "Identicality",
        "Being_obligated",
        "Processing_materials",
        "Using"
    ],
    "This is necessary to hide direct reply UI and confirm to the user that their reply was received and processed correctly.": [
        "Eclipse",
        "Aiming",
        "Communication_response",
        "Processing_materials",
        "Receiving",
        "Being_necessary",
        "Verification"
    ],
    "When working with this new notification, use the context that's passed to the receiver's onReceive ( ) method.": [
        "Temporal_collocation",
        "Working_on",
        "Telling",
        "Natural_features",
        "Execution",
        "Age",
        "Using"
    ],
    "You should also append the reply to the bottom of the notification by calling setRemoteInputHistory ( ).": [
        "Communication_response",
        "Telling",
        "Being_obligated",
        "Execution",
        "Part_orientational",
        "Attaching"
    ],
    "However, if you're building a messaging app, you should create a messaging-style notification and append the new message to the conversation.": [
        "Telling",
        "Chatting",
        "Age",
        "Being_obligated",
        "Building",
        "Intentionally_create",
        "Attaching",
        "Concessive"
    ],
    "For more advice for notifications from a messaging apps, see best practices for messaging apps.": [
        "Telling",
        "Perception_experience",
        "Businesses",
        "Increment"
    ],
    "Notifications can include an animated progress indicator that shows users the status of an ongoing operation.": [
        "Telling",
        "Progress",
        "Using",
        "Process_continue",
        "Evidence",
        "Inclusion",
        "Capability"
    ],
    "The progress bar during and after the operation.": [
        "Progress",
        "Buildings",
        "Using"
    ],
    "If you can estimate how much of the operation is complete at any time, use the `` determinate'' form of the indicator ( as shown in figure 4 ) by calling setProgress ( max, progress, false ).": [
        "Using",
        "Measure_duration",
        "Evidence",
        "Progress",
        "Quantity",
        "Execution",
        "Relational_quantity",
        "Artificiality",
        "Process_completed_state",
        "Estimating",
        "Using",
        "Capability"
    ],
    "The first parameter is what the `` complete'' value is ( such as 100 ) ; the second is how much is currently complete, and the last indicates this is a determinate progress bar.": [
        "Cardinal_numbers",
        "Measure_duration",
        "Progress",
        "Buildings",
        "Terms_of_agreement",
        "Ordinal_numbers",
        "Relational_quantity",
        "Process_completed_state",
        "Relative_time",
        "Evidence",
        "Temporal_collocation"
    ],
    "As your operation proceeds, continuously call setProgress ( max, progress, false ) with an updated value for progress and re-issue the notification.": [
        "Businesses",
        "Progress",
        "Artificiality",
        "Telling"
    ],
    "At the end of the operation, progress should equal max.": [
        "Using",
        "Being_obligated",
        "Temporal_subregion",
        "Progress",
        "Evaluative_comparison"
    ],
    "You can either leave the progress bar showing when the operation is done, or remove it.": [
        "Progress",
        "Buildings",
        "Temporal_collocation",
        "Using",
        "Removing",
        "Capability",
        "Intentionally_act",
        "Departing"
    ],
    "In either case, remember to update the notification text to show that the operation is complete.": [
        "Instance",
        "Telling",
        "Using",
        "Process_completed_state",
        "Reasoning",
        "Memory"
    ],
    "To remove the progress bar, call setProgress ( 0, 0, false ).": [
        "Progress",
        "Buildings",
        "Execution",
        "Artificiality",
        "Removing"
    ],
    "To display an indeterminate progress bar ( a bar that does not indicate percentage complete ), call setProgress ( 0, 0, true ).": [
        "Progress",
        "Buildings",
        "Sign",
        "Process_completed_state",
        "Intentionally_act"
    ],
    "The result is an indicator that has the same style as the progress bar above, except the progress bar is a continuous animation that does not indicate completion.": [
        "Causation",
        "Hair_configuration",
        "Progress",
        "Buildings",
        "Intentionally_act",
        "Sign",
        "Activity_finish",
        "Identicality",
        "Inclusion"
    ],
    "The progress animation runs until you call setProgress ( 0, 0, false ) and then update the notification to remove the activity indicator.": [
        "Progress",
        "Artificiality",
        "Telling",
        "Intentionally_act",
        "Execution",
        "Removing",
        "Temporal_collocation",
        "Execution"
    ],
    "Remember to change the notification text to indicate that the operation is complete.": [
        "Telling",
        "Sign",
        "Using",
        "Undergo_change",
        "Process_completed_state",
        "Memory"
    ],
    "Android uses some pre-defined system-wide categories to determine whether to disturb the user with a given notification when the user has enabled Do Not Disturb mode.": [
        "Relational_quantity",
        "Telling",
        "Temporal_collocation",
        "Giving",
        "Stimulus_focus",
        "Intentionally_act",
        "Using",
        "Stimulus_focus"
    ],
    "If your notification falls into one of the pre-defined notification categories defined in NotificationCompat -- such as CATEGORY_ALARM, CATEGORY_REMINDER, CATEGORY_EVENT, or CATEGORY_CALL -- you should declare it as such by passing the appropriate category to setCategory ( ).": [
        "Cardinal_numbers",
        "Telling",
        "Change_position_on_a_scale",
        "Being_obligated",
        "Categorization",
        "Traversing"
    ],
    "This information about your notification category is used by the system to make decisions about displaying your notification when the device is in Do Not Disturb mode.": [
        "Gizmo",
        "Temporal_collocation",
        "Gizmo",
        "Telling",
        "Stimulus_focus",
        "Information",
        "Deciding",
        "Causation",
        "Using"
    ],
    "However, you are not required to set a system-wide category and should only do so if your notifications match one of the categories defined by in NotificationCompat.": [
        "Concessive",
        "Sole_instance",
        "Evaluative_comparison",
        "Cardinal_numbers",
        "Intentionally_act",
        "Telling",
        "Intentionally_create",
        "Needing",
        "Categorization",
        "Being_obligated"
    ],
    "Your app might need to display an urgent, time-sensitive message, such as an incoming phone call or a ringing alarm.": [
        "Contacting",
        "Cause_to_make_noise",
        "Noise_makers",
        "Likelihood",
        "Required_event",
        "Execution"
    ],
    "In these situations, you can associate a full-screen intent with your notification.": [
        "Telling",
        "Capability",
        "Cognitive_connection"
    ],
    "When the notification is invoked, users see one of the following, depending on the device's lock status:": [
        "Temporal_collocation",
        "Telling",
        "Gizmo",
        "Hair_configuration",
        "Cardinal_numbers",
        "Grasp"
    ],
    "The following code snippet demonstrates how to associate your notification with a full-screen intent:": [
        "Relative_time",
        "Collaboration",
        "Part_piece",
        "Telling",
        "Evidence"
    ],
    "To control the level of detail visible in the notification from the lock screen, call setVisibility ( ) and specify one of the following values:": [
        "Telling",
        "Hair_configuration",
        "Execution",
        "Relative_time",
        "Rank",
        "Obviousness",
        "Cardinal_numbers",
        "Control"
    ],
    "When VISIBILITY_PRIVATE is set, you can also provide an alternate version of the notification content which hides certain details.": [
        "Temporal_collocation",
        "Telling",
        "Eclipse",
        "Intentionally_create",
        "Likelihood",
        "Capability",
        "Supply"
    ],
    "For example, an SMS app might display a notification that shows You have 3 new text messages, but hides the message contents and senders.": [
        "Instance",
        "Telling",
        "Eclipse",
        "Age",
        "Likelihood",
        "Cardinal_numbers",
        "Evidence"
    ],
    "To provide this alternative notification, first create the alternative notification with NotificationCompat.Builder as usual.": [
        "Ordinal_numbers",
        "Telling",
        "Execution",
        "Supply",
        "Intentionally_create"
    ],
    "Then attach the alternative notification to the normal notification with setPublicVersion ( ).": [
        "Temporal_collocation",
        "Telling",
        "Execution",
        "Mental_property",
        "Being_attached"
    ],
    "However, the user always has final control over whether their notifications are visible on the lock screen and can even control that based on your app's notification channels.": [
        "Concessive",
        "Hair_configuration",
        "Telling",
        "Natural_features",
        "Ordinal_numbers",
        "Telling",
        "Frequency",
        "Obviousness",
        "Control",
        "Capability",
        "Inclusion"
    ],
    "To update this notification after you've issued it, call NotificationManagerCompat.notify ( ) again, passing it a notification with the same ID you used previously.": [
        "Telling",
        "Identicality",
        "Process_end",
        "Time_vector",
        "Creating",
        "Using"
    ],
    "If the previous notification has been dismissed, a new notification is created instead.": [
        "Telling",
        "Time_vector",
        "Age",
        "Intentionally_create"
    ],
    "You can optionally call setOnlyAlertOnce ( ) so your notification interupts the user ( with sound, vibration, or visual clues ) only the first time the notification appears and not for later updates.": [
        "Sensation",
        "Sole_instance",
        "Time_vector",
        "Telling",
        "Ordinal_numbers",
        "Execution",
        "Coming_to_be",
        "Measure_duration",
        "Evidence",
        "Capability"
    ],
    "Notifications remain visible until one of the following happens:": [
        "Telling",
        "Relative_time",
        "Obviousness",
        "Event",
        "Cardinal_numbers",
        "Existence"
    ],
    "Use the best practices listed here as a quick reference of what to keep in mind when creating notifications for your messaging and chat apps.": [
        "Businesses",
        "Locative_relation",
        "Telling",
        "Chatting",
        "Speed",
        "Using",
        "Creating",
        "Temporal_collocation",
        "Activity_ongoing"
    ],
    "Starting in Android 7.0 ( API level 24 ), Android provides a notification style template specifically for messaging content.": [
        "Activity_start",
        "Telling",
        "Hair_configuration",
        "Rank",
        "Supply"
    ],
    "Using the NotificationCompat.MessagingStyle class, you can change several of the labels displayed on the notification, including the conversation title, additional messages, and the content view for the notification.": [
        "Labeling",
        "Telling",
        "Chatting",
        "Observable_body_parts",
        "Increment",
        "Undergo_change",
        "Capability",
        "Using",
        "Quantity",
        "Categorization",
        "Inclusion"
    ],
    "The following code snippet demonstrates how to customize a notification's style using the MessagingStyle class.": [
        "Relative_time",
        "Telling",
        "Part_piece",
        "Hair_configuration",
        "Using",
        "Evidence"
    ],
    "Starting in Android 8.0 ( API level 26 ), notifications that use the NotificationCompat.MessagingStyle class display more content in their collapsed form.": [
        "Process_start",
        "Rank",
        "Telling",
        "Using",
        "Increment"
    ],
    "You can also use the addHistoricMessage ( ) method to provide context to a conversation by adding historic messages to messaging-related notifications.": [
        "Chatting",
        "Telling",
        "Historic_event",
        "Capability",
        "Using",
        "Supply",
        "Execution"
    ],
    "Direct Reply allows a user to reply inline to a message.": [
        "Communication_response",
        "Communication_response",
        "Grant_permission"
    ],
    "A small icon, set by setSmallIcon ( ).": [
        "Dimension",
        "Intentionally_create"
    ],
    "This is the only user-visible content that's required.": [
        "Being_necessary",
        "Sole_instance"
    ],
    "A title, set by setContentTitle ( ).": [
        "Accoutrements",
        "Intentionally_create"
    ],
    "The body text, set by setContentText ( ).": [
        "Execution",
        "Intentionally_create"
    ],
    "The notification priority, set by setPriority ( ).": [
        "Telling",
        "Intentionally_create"
    ],
    "The priority determines how intrusive the notification should be on Android 7.1 and lower.": [
        "Telling",
        "Being_obligated",
        "Coming_to_believe"
    ],
    "( For Android 8.0 and higher, you must instead set the channel importance -- shown in the next section. )": [
        "Position_on_a_scale",
        "Natural_features",
        "Importance",
        "Being_obligated",
        "Evidence",
        "Locative_relation",
        "Intentionally_create"
    ],
    "An activity that exists exclusively for responses to the notification.": [
        "Telling",
        "Intentionally_act",
        "Response",
        "Existence"
    ],
    "There's no reason the user would navigate to this activity during normal app use, so the activity starts a new task instead of being added to your app's existing task and back stack.": [
        "Quantity",
        "Causation",
        "Intentionally_act",
        "Mental_property",
        "Being_obligated",
        "Observable_body_parts",
        "Age",
        "Existence",
        "Process_start",
        "Existence"
    ],
    "This is the type of intent created in the sample above.": [
        "Intentionally_create"
    ],
    "An activity that exists in your app's regular app flow.": [
        "Fluidic_motion",
        "Intentionally_act",
        "Existence"
    ],
    "In this case, starting the activity should create a back stack so that the user's expectations for the Back and Up buttons is preserved.": [
        "Instance",
        "Process_start",
        "Intentionally_act",
        "Part_orientational",
        "Clothing_parts",
        "Preserving",
        "Part_orientational",
        "Intentionally_create",
        "Expectation",
        "Being_obligated"
    ],
    "Create an instance of RemoteInput.Builder that you can add to your notification action.": [
        "Instance",
        "Cause_change_of_position_on_a_scale",
        "Telling",
        "Intentionally_act",
        "Capability",
        "Cause_to_start"
    ],
    "This class's constructor accepts a string that the system uses as the key for the text input.": [
        "System",
        "Importance",
        "Receiving",
        "Using"
    ],
    "Later, your handheld app uses that key to retrieve the text of the input.": [
        "Time_vector",
        "Importance",
        "Using"
    ],
    "Create a PendingIntent for the reply action.": [
        "Communication_response",
        "Intentionally_act",
        "Cause_to_start"
    ],
    "Kotlin Java Caution: If you re-use a PendingIntent, a user may reply to a different conversation than the one they thought they did.": [
        "Chatting",
        "Similarity",
        "Cardinal_numbers",
        "Likelihood",
        "Awareness",
        "Intentionally_act",
        "Communication_response"
    ],
    "Attach the RemoteInput object to an action using addRemoteInput ( ).": [
        "Intentionally_act",
        "Using",
        "Being_attached"
    ],
    "Apply the action to a notification and issue the notification.": [
        "Intentionally_act",
        "Telling",
        "Creating"
    ],
    "If the user's device is locked, a full-screen activity appears, covering the lockscreen.": [
        "Gizmo",
        "Intentionally_act",
        "Coming_to_be",
        "Inhibit_movement",
        "Topic"
    ],
    "If the user's device is unlocked, the notification appears in an expanded form that includes options for handling or dismissing the notification.": [
        "Gizmo",
        "Telling",
        "Possibilities",
        "Intentionally_act",
        "Coming_to_be",
        "Inclusion"
    ],
    "VISIBILITY_PUBLIC shows the notification's full content.": [
        "Telling",
        "Fullness",
        "Evidence"
    ],
    "VISIBILITY_SECRET doesn't show any part of this notification on the lock screen.": [
        "Telling",
        "Hair_configuration",
        "Intentionally_act",
        "Quantity",
        "Part_whole",
        "Reasoning"
    ],
    "VISIBILITY_PRIVATE shows basic information, such as the notification's icon and the content title, but hides the notification's full content.": [
        "Information",
        "Telling",
        "Eclipse",
        "Fullness",
        "Being_necessary",
        "Accoutrements",
        "Evidence"
    ],
    "The user dismisses the notification.": [
        "Telling"
    ],
    "The user clicks the notification, and you called setAutoCancel ( ) when you created the notification.": [
        "Temporal_collocation",
        "Impact",
        "Execution",
        "Intentionally_create",
        "Telling"
    ],
    "You call cancel ( ) for a specific notification ID.": [
        "Telling",
        "Execution"
    ],
    "This method also deletes ongoing notifications.": [
        "Execution",
        "Process_continue",
        "Telling"
    ],
    "You call cancelAll ( ), which removes all of the notifications you previously issued.": [
        "Telling",
        "Time_vector",
        "Execution",
        "Creating",
        "Quantity",
        "Removing"
    ],
    "If you set a timeout when creating a notification using setTimeoutAfter ( ), the system cancels the notification after the specified duration elapses.": [
        "Telling",
        "System",
        "Intentionally_create",
        "Using",
        "Intentionally_create",
        "Temporal_collocation"
    ],
    "If required, you can cancel a notification before the specified timeout duration elapses.": [
        "Being_necessary",
        "Telling",
        "Capability"
    ],
    "Call MessagingStyle.setConversationTitle ( ) to set a title for group chats with more than two people.": [
        "Observable_body_parts",
        "Execution",
        "Chatting",
        "People",
        "Increment",
        "Cardinal_numbers",
        "Intentionally_create",
        "Execution"
    ],
    "A good conversation title might be the name of the group chat or, if it doesn't have a specific name, a list of the participants in the conversation.": [
        "Execution",
        "Chatting",
        "Relational_quantity",
        "Accoutrements",
        "Chatting",
        "Intentionally_act",
        "Participation",
        "Likelihood"
    ],
    "Without this, the message may be mistaken as belonging to a one-to-one conversation with the sender of the most recent message in the conversation.": [
        "Chatting",
        "Relative_time",
        "Likelihood",
        "Possession"
    ],
    "Use the MessagingStyle.setData ( ) method to include media messages such as images.": [
        "Execution",
        "Sensation",
        "Inclusion",
        "Using"
    ],
    "MIME types, of the pattern image / * are currently supported.": [
        "Pattern",
        "Taking_sides",
        "Similarity",
        "Temporal_collocation"
    ],
    "After a user replies with the inline reply action, use MessagingStyle.addMessage ( ) to update the MessagingStyle notification and do not retract or cancel the notification.": [
        "Communication_response",
        "Intentionally_act",
        "Intentionally_act",
        "Telling",
        "Communication_response"
    ],
    "Not cancelling the notification allows a user to send multiple replies from the notification.": [
        "Telling",
        "Communication_response",
        "Quantity",
        "Grant_permission",
        "Causation"
    ],
    "To make the inline reply action compatible with Wear OS, call Action.WearableExtender.setHintDisplayInlineAction ( true ).": [
        "Communication_response",
        "Compatibility",
        "Execution",
        "Intentionally_act",
        "Causation",
        "Wearing"
    ],
    "Use the addHistoricMessage ( ) method to provide context to a direct reply conversation by adding historic messages to the notification.": [
        "Aiming",
        "Communication_response",
        "Chatting",
        "Telling",
        "Historic_event",
        "Using",
        "Supply",
        "Execution"
    ],
    "To enable Smart Reply, call setAllowGeneratedResponses ( true ) on the reply action.": [
        "Communication_response",
        "Execution",
        "Communication_response",
        "Intentionally_act"
    ],
    "This causes Smart Reply responses to be available to users when the notification is bridged to a Wear OS device.": [
        "Communication_response",
        "Response",
        "Temporal_collocation",
        "Telling",
        "Gizmo",
        "Causation"
    ],
    "Smart Reply responses are generated by an entirely on-watch machine learning model using the context provided by the NotificationCompat.MessagingStyle notification, and no data is uploaded to the Internet to generate the responses.": [
        "Communication_response",
        "Gizmo",
        "Coming_to_believe",
        "Vehicle",
        "Telling",
        "Quantity",
        "Response",
        "Cause_to_start",
        "Creating",
        "Supply",
        "Using"
    ],
    "Assign notification metadata to tell the system how to handle your app notifications when the device is in Do Not Disturb mode.": [
        "Telling",
        "System",
        "Temporal_collocation",
        "Gizmo",
        "Telling",
        "Stimulus_focus",
        "Telling",
        "Resolve_problem"
    ],
    "For example, use the addPerson ( ) or setCategory ( Notification.CATEGORY _ MESSAGE ) method to override the Do Not Disturb mode.": [
        "Instance",
        "Intentionally_act",
        "Stimulus_focus",
        "Using",
        "Execution"
    ],
    "Interesting Question.": [],
    "Android uses this pattern in their Contacts-App.": [
        "Pattern",
        "Using"
    ],
    "You can get the source using git:": [
        "Source_of_getting",
        "Using",
        "Capability",
        "Execution"
    ],
    "I did this and quickly grepped it, but I didn't get a conclusive result.": [
        "Causation",
        "Intentionally_act",
        "Speed",
        "Getting"
    ],
    "I think that's done in `` Contacts/src/com/android/contacts/ui/QuickContactWindow.java'', but I am not completely sure.": [
        "Intentionally_act",
        "Likelihood",
        "Opinion"
    ],
    "I you google for LINK, there are a lot of images that show exactly the kind of menu that you want, so it seems likely that it is indeed called QuickContact in that context.": [
        "Sensation",
        "Quantity",
        "Appearance",
        "Reasoning",
        "Frequency",
        "Possession",
        "Likelihood",
        "Execution",
        "Existence"
    ],
    "Looking at the LINK, I don't see any inherited classes that you could use to do this for something other than contacts.": [
        "Quantity",
        "Contacting",
        "Intentionally_act",
        "Increment",
        "Perception_active",
        "Grasp",
        "Capability",
        "Using"
    ],
    "So, a few starting points, but no solution from me ; - -RRB-": [
        "Process_start",
        "Locale",
        "Quantity",
        "Quantity"
    ],
    "Till the official Twitter app is open sourced by Google, you may want to take a look at this implementation: LINK": [
        "Sounds",
        "Execute_plan",
        "Execution",
        "Likelihood",
        "Secrecy_status",
        "Scrutiny",
        "Have_as_requirement",
        "Desiring"
    ],
    "Really easy to use and works great.": [
        "Being_employed",
        "Desirability",
        "Difficulty",
        "Using"
    ],
    "This open source project has the same look and feel for the quick actions popup as the twitter app:": [
        "Sensation",
        "Intentionally_act",
        "Sounds",
        "Source_of_getting",
        "Secrecy_status",
        "Identicality",
        "Speed",
        "Project",
        "Scrutiny",
        "Inclusion"
    ],
    "It helps to download the whole project because you need a number of drawables, images, and other resources from that project.": [
        "Sensation",
        "Project",
        "Ranked_expectation",
        "Required_event",
        "Increment",
        "Quantity",
        "Assistance"
    ],
    "The main demo class is called WHSListActivity.java.": [
        "First_rank",
        "Execution"
    ],
    "The other classes you need is QuickActionWindow.java, and QuickActionItem.java.": [
        "Increment",
        "Have_as_requirement"
    ],
    "After that, it's really easy and works great.": [
        "Being_employed",
        "Difficulty",
        "Desirability"
    ],
    "I use it for my apps.": [
        "Using"
    ],
    "how can i get the value of text view in recyclerview item?": [
        "Entity",
        "Opinion",
        "Capability",
        "Execution"
    ],
    "If you think about the apps you commonly use on your phone, almost every single app has at least one list.": [
        "Relational_quantity",
        "Frequency",
        "Contacting",
        "Sole_instance",
        "Relational_quantity",
        "Cardinal_numbers",
        "Opinion",
        "Using",
        "Inclusion"
    ],
    "The call history screen, the contacts app, and your favorite social media app all display a list of data.": [
        "History",
        "Contacting",
        "Social_event",
        "Quantity"
    ],
    "As shown in the screenshot below, some of these apps display a simple list of words or phrases, where others display more complex items such as cards that include text and images.": [
        "Simple_name",
        "Encoding",
        "Locative_relation",
        "Increment",
        "Entity",
        "Sensation",
        "Increment",
        "Relational_quantity",
        "Evidence",
        "Inclusion"
    ],
    "No matter what the content is, displaying a list of data is one of the most common UI tasks in Android.": [
        "Quantity",
        "Cardinal_numbers",
        "Being_obligated"
    ],
    "To help you build apps with lists, Android provides the RecyclerView.": [
        "Building",
        "Supply",
        "Assistance"
    ],
    "RecyclerView is designed to be very efficient, even with large lists, by reusing, or recycling, the views that have scrolled off the screen.": [
        "Locative_relation",
        "Degree",
        "Dimension",
        "Categorization",
        "Coming_up_with"
    ],
    "When a list item is scrolled off the screen, RecyclerView reuses that view for the next list item about to be displayed.": [
        "Temporal_collocation",
        "Relational_quantity",
        "Entity",
        "Locative_relation",
        "Opinion"
    ],
    "That means, the item is filled with new content that scrolls onto the screen.": [
        "Entity",
        "Age",
        "Abounding_with",
        "Evidence"
    ],
    "This RecyclerView behavior saves a lot of processing time and helps lists scroll more smoothly.": [
        "Measure_duration",
        "Conduct",
        "Processing_materials",
        "Increment",
        "Quantity",
        "Assistance"
    ],
    "In the sequence shown below, you can see that one view has been filled with data, ABC.": [
        "Sequence",
        "Opinion",
        "Cardinal_numbers",
        "Capability",
        "Evidence",
        "Abounding_with",
        "Grasp"
    ],
    "After that view scrolls off the screen, RecyclerView reuses the view for new data, XYZ.": [
        "Categorization",
        "Age"
    ],
    "In this codelab, you will build the Affirmations app.": [
        "Building"
    ],
    "Affirmations is a simple app that displays ten positive affirmations as text in a scrolling list.": [
        "Certainty"
    ],
    "Then, in the follow-up codelab, you will take it a step further, add an inspiring image to each affirmation, and polish the app UI.": [
        "Temporal_collocation",
        "Increment",
        "Similarity",
        "Intentionally_act",
        "Subjective_influence",
        "Have_as_requirement"
    ],
    "Before creating a new project, make sure that you are on Android Studio 4.1 or higher.": [
        "Project",
        "Building_subparts",
        "Position_on_a_scale",
        "Age",
        "Intentionally_create",
        "Verification"
    ],
    "The next step in creating the Affirmations app is to add resources.": [
        "Locative_relation",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_create",
        "Intentionally_act"
    ],
    "You will add the following to your project.": [
        "Project",
        "Relative_time"
    ],
    "Note: In most production Android projects, you would retrieve the affirmations data from a database or from a server.": [
        "Becoming_aware",
        "Relational_quantity",
        "Manufacturing",
        "Project"
    ],
    "Networking and databases are beyond the scope of this codelab, so you will use a list of affirmations strings defined inside the app.": [
        "Scope",
        "Communicate_categorization",
        "Using"
    ],
    "The strings.xml file should look like this when you're done.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Being_obligated",
        "Scrutiny"
    ],
    "Now that you have added string resources, you can reference them in your code as R.string.affirmation1 or R.string.affirmation2.": [
        "Capability",
        "Temporal_collocation"
    ],
    "Organizing your code logically helps you and other developers understand, maintain, and extend it.": [
        "Assistance",
        "Increment",
        "Expansion",
        "Awareness",
        "Activity_ongoing"
    ],
    "In the same way that you can organize paperwork into files and folders, you can organize your code into files and packages.": [
        "Containers",
        "Execution",
        "Identicality",
        "Capability"
    ],
    "There are two ways in which you can make use of packages.": [
        "Execution",
        "Capability",
        "Causation",
        "Execution",
        "Cardinal_numbers",
        "Existence"
    ],
    "In the Affirmations app, in addition to importing Android and Kotlin classes, you will also organize your app into several packages.": [
        "Execution",
        "Quantity",
        "Importing",
        "Communication_response"
    ],
    "Even when you don't have a lot of classes for your app, it is a good practice to use packages to group classes by functionality.": [
        "Temporal_collocation",
        "Execution",
        "Execution",
        "Intentionally_act",
        "Relational_quantity",
        "Quantity",
        "Using",
        "Practice"
    ],
    "A package name can be anything, as long as it is globally unique ; no other published package anywhere can have the same name.": [
        "Execution",
        "Quantity",
        "Identicality",
        "Increment",
        "Idiosyncrasy",
        "Desiring",
        "Capability"
    ],
    "Because there are a very large number of packages, and coming up with random unique names is hard, programmers use conventions to make it easier to create and understand package names.": [
        "Execution",
        "Locative_relation",
        "Frequency",
        "Execution",
        "Degree",
        "Dimension",
        "Idiosyncrasy",
        "Grasp",
        "Quantity",
        "Intentionally_create",
        "Existence",
        "Difficulty",
        "Execution",
        "Custom",
        "Using",
        "Execution"
    ],
    "Here are some examples of predefined package names and their contents:": [
        "Locative_relation",
        "Instance",
        "Relational_quantity",
        "Execution"
    ],
    "Note: While the names of packages ( and their arrangement in the Android Project window of Android Studio as a hierarchy of folders ) appear as a hierarchy, there is no actual hierarchy in the executable code.": [
        "Execution",
        "Project",
        "Connecting_architecture",
        "Building_subparts",
        "Containers",
        "Quantity",
        "Arranging",
        "Actually_occurring_entity",
        "Coming_to_be",
        "Existence"
    ],
    "Just like the numbering system of a library categorizes and organizes books, they are still all on the same shelf, and you can take out any of them.": [
        "Gizmo",
        "Buildings",
        "Natural_features",
        "Identicality",
        "Continued_state_of_affairs",
        "Quantity",
        "Locative_relation",
        "Have_as_requirement",
        "Capability",
        "Categorization"
    ],
    "In this task, you'll create a class called Affirmation.": [
        "Being_obligated",
        "Execution",
        "Intentionally_create"
    ],
    "An object instance of Affirmation represents one affirmation and contains the resource ID of the string with the affirmation.": [
        "Cardinal_numbers",
        "Instance",
        "Communicate_categorization",
        "Inclusion"
    ],
    "When you create an instance of Affirmation, you need to pass in the resource ID for the affirmation string.": [
        "Temporal_collocation",
        "Instance",
        "Intentionally_create",
        "Process_end",
        "Required_event"
    ],
    "The resource ID is an integer.": [],
    "Data displayed in your app may come from different sources ( e.g. within your app project or from an external source that requires connecting to the internet to download data ).": [
        "Project",
        "Source_of_getting",
        "Similarity",
        "Source_of_getting",
        "Have_as_requirement",
        "Attaching",
        "Likelihood",
        "Execution"
    ],
    "As a result, data may not be in the exact format that you need.": [
        "Causation",
        "Likelihood",
        "Correctness",
        "Required_event"
    ],
    "The rest of the app should not concern itself with where the data originates from or in what format it is originally.": [
        "Stimulus_focus",
        "Origin",
        "Being_obligated",
        "Locative_relation",
        "Emotion_directed"
    ],
    "You can and should hide away this data preparation in a separate Datasource class that prepares the data for the app.": [
        "Eclipse",
        "Becoming_separated",
        "Cooking_creation",
        "Being_obligated",
        "Capability",
        "Activity_prepare"
    ],
    "Since preparing data is a separate concern, put the Datasource class in a separate data package.": [
        "Emotion_directed",
        "Activity_prepare",
        "Becoming_separated",
        "Execution",
        "Causation"
    ],
    "The loadAffirmations ( ) function needs to return a list of Affirmations.": [
        "Required_event",
        "Execution"
    ],
    "You do this by creating a list and populating it with an Affirmation instance for each resource string.": [
        "Instance",
        "Intentionally_create",
        "Residence",
        "Intentionally_act"
    ],
    "To verify that you can create a list of affirmations, you can call loadAffirmations ( ) and display the size of the returned list of affirmations in the TextView that comes with your Empty Activity app template.": [
        "Emptying",
        "Execution",
        "Intentionally_act",
        "Capability",
        "Intentionally_create",
        "Execution",
        "Verification",
        "Execution"
    ],
    "In this task, you will set up a RecyclerView to display the list of Affirmations.": [
        "Being_obligated",
        "Intentionally_create"
    ],
    "There are a number of pieces involved in creating and using a RecyclerView.": [
        "Part_piece",
        "Using",
        "Intentionally_create",
        "Participation",
        "Quantity",
        "Existence"
    ],
    "You can think of them as a division of labor.": [
        "Organization",
        "Capability",
        "Opinion"
    ],
    "The diagram below shows an overview, and you will learn more about each piece as you implement it.": [
        "Change_position_on_a_scale",
        "Increment",
        "Gizmo",
        "Education_teaching",
        "Evidence",
        "Part_piece"
    ],
    "The Affirmations app consists of a single activity named MainActivity, and its layout file is called activity_main.xml.": [
        "Sole_instance",
        "Execution",
        "Intentionally_act"
    ],
    "First, you need to add the RecyclerView to the layout of the MainActivity.": [
        "Ordinal_numbers",
        "Required_event"
    ],
    "The current layout uses ConstraintLayout.": [
        "Temporal_collocation",
        "Using"
    ],
    "ConstraintLayout is ideal and flexible when you want to position multiple child views in a layout.": [
        "Temporal_collocation",
        "Kinship",
        "Quantity",
        "Categorization",
        "Desiring"
    ],
    "Since your layout only has a single child view, RecyclerView, you can switch to a simpler ViewGroup called FrameLayout that should be used for holding a single child view.": [
        "Sole_instance",
        "Opinion",
        "Kinship",
        "Sole_instance",
        "Being_obligated",
        "Change_tool",
        "Containing",
        "Possession",
        "Using",
        "Execution",
        "Capability"
    ],
    "RecyclerView supports displaying items in different ways, such as a linear list or a grid.": [
        "Entity",
        "Execution",
        "Similarity",
        "Evidence"
    ],
    "Arranging the items is handled by a LayoutManager.": [
        "Entity",
        "Arranging",
        "Resolve_problem"
    ],
    "The Android framework provides layout managers for basic item layouts.": [
        "Being_necessary",
        "Entity",
        "People_by_vocation",
        "Supply"
    ],
    "The Affirmations app displays items as a vertical list, so you can use the LinearLayoutManager.": [
        "Entity",
        "Capability",
        "Using"
    ],
    "To be able to scroll through a vertical list of items that is longer than the screen, you need to add a vertical scrollbar.": [
        "Entity",
        "Duration_attribute",
        "Required_event",
        "Capability"
    ],
    "The final XML layout should look like the following:": [
        "Ordinal_numbers",
        "Being_obligated",
        "Scrutiny"
    ],
    "The project should compile and run without any issues.": [
        "Project",
        "Quantity",
        "Being_obligated",
        "Execution"
    ],
    "However, only a white background is displayed in your app because you are missing a crucial piece of code.": [
        "Concessive",
        "Sole_instance",
        "Color",
        "Importance",
        "Success_or_failure",
        "Part_piece"
    ],
    "Right now, you have the source of data and the RecyclerView added to your layout, but the RecyclerView has no information on how to display the Affirmation objects.": [
        "Correctness",
        "Temporal_collocation",
        "Quantity",
        "Source_of_getting",
        "Information",
        "Inclusion"
    ],
    "Your app needs a way to take the data from Datasource, and format it so that each Affirmation can be displayed as an item in the RecyclerView.": [
        "Entity",
        "Required_event",
        "Likelihood",
        "Have_as_requirement"
    ],
    "Adapter is a design pattern that adapts the data into something that can be used by RecyclerView.": [
        "Coming_up_with",
        "Pattern",
        "Likelihood",
        "Using"
    ],
    "In this case, you need an adapter that takes an Affirmation instance from the list returned by loadAffirmations ( ), and turns it into a list item view, so that it can be displayed in the RecyclerView.": [
        "Instance",
        "Instance",
        "Entity",
        "Required_event",
        "Opinion",
        "Likelihood",
        "Execution",
        "Taking_time",
        "Cause_change"
    ],
    "When you run the app, RecyclerView uses the adapter to figure out how to display your data on screen.": [
        "Temporal_collocation",
        "Execution",
        "Opinion",
        "Locative_relation",
        "Using"
    ],
    "RecyclerView asks the adapter to create a new list item view for the first data item in your list.": [
        "Entity",
        "Opinion",
        "Age",
        "Ordinal_numbers",
        "Intentionally_create",
        "Execution"
    ],
    "Once it has the view, it asks the adapter to provide the data to draw the item.": [
        "Opinion",
        "Entity",
        "Frequency",
        "Cause_motion",
        "Inclusion",
        "Supply",
        "Execution"
    ],
    "This process repeats until the RecyclerView doesn't need any more views to fill the screen.": [
        "Execution",
        "Quantity",
        "Increment",
        "Frequency",
        "Intentionally_act",
        "Filling",
        "Required_event",
        "Categorization"
    ],
    "If only 3 list item views fit on the screen at once, the RecyclerView only asks the adapter to prepare those 3 list item views ( instead of all 10 list item views ).": [
        "Sole_instance",
        "Entity",
        "Cardinal_numbers",
        "Quantity",
        "Cardinal_numbers",
        "Categorization",
        "Suitability",
        "Activity_prepare",
        "Time_vector",
        "Execution"
    ],
    "In this step, you'll build an adapter which will adapt an Affirmation object instance so that it can be displayed in the RecyclerView.": [
        "Intentionally_act",
        "Instance",
        "Likelihood",
        "Building"
    ],
    "An adapter has multiple parts, and you'll be writing quite a bit of code that's more complex than what you've done in this course so far.": [
        "Part_whole",
        "Quantity",
        "Inclusion",
        "Quantity",
        "Continued_state_of_affairs",
        "Text_creation",
        "Intentionally_act",
        "Increment"
    ],
    "It's okay if you don't fully understand the details at first.": [
        "Degree",
        "Ordinal_numbers",
        "Intentionally_act",
        "Awareness"
    ],
    "Once you have completed this whole app with a RecyclerView, you'll be able to better understand how all the parts fit together.": [
        "Quantity",
        "Part_whole",
        "Frequency",
        "Ranked_expectation",
        "Desirability",
        "Suitability",
        "Collaboration",
        "Activity_finish",
        "Grasp",
        "Capability"
    ],
    "You'll also be able to reuse this code as a base for future apps that you create with a RecyclerView.": [
        "Locale_by_use",
        "Temporal_collocation",
        "Intentionally_create",
        "Capability"
    ],
    "Each item in the RecyclerView has its own layout, which you define in a separate layout file.": [
        "Entity",
        "Becoming_separated",
        "Communicate_categorization",
        "Possession",
        "Inclusion"
    ],
    "Since you are only going to display a string, you can use a TextView for your item layout.": [
        "Sole_instance",
        "Entity",
        "Capability",
        "Motion",
        "Using"
    ],
    "Notice that you don't need a ViewGroup around your layout, because this list item layout will later be inflated and added as a child to the parent RecyclerView.": [
        "Becoming_aware",
        "Entity",
        "Kinship",
        "Intentionally_act",
        "Required_event",
        "Kinship",
        "Time_vector",
        "Cause_expansion"
    ],
    "Alternatively, you could have used File > New > Layout Resource File, with File name list_item.xml and TextView as the Root element.": [
        "Ingredients",
        "Using",
        "Age",
        "Capability"
    ],
    "Then update the generated code to match the code above.": [
        "Temporal_collocation",
        "Evaluative_comparison",
        "Creating"
    ],
    "You need to add a parameter to the constructor of ItemAdapter, so that you can pass the list of affirmations into the adapter.": [
        "Capability",
        "Terms_of_agreement",
        "Process_end",
        "Required_event"
    ],
    "The ItemAdapter needs information on how to resolve the string resources.": [
        "Required_event",
        "Resolve_problem",
        "Information"
    ],
    "This, and other information about the app, is stored in a Context object instance that you can pass into an ItemAdapter instance.": [
        "Instance",
        "Increment",
        "Capability",
        "Information",
        "Process_end",
        "Storing"
    ],
    "RecyclerView doesn't interact directly with item views, but deals with ViewHolders instead.": [
        "Entity",
        "Intentionally_act",
        "Categorization",
        "Make_agreement_on_action"
    ],
    "A ViewHolder represents a single list item view in RecyclerView, and can be reused when possible.": [
        "Entity",
        "Opinion",
        "Temporal_collocation",
        "Sole_instance",
        "Communicate_categorization",
        "Likelihood",
        "Likelihood"
    ],
    "A ViewHolder instance holds references to the individual views within a list item layout ( hence the name `` view holder'' ).": [
        "Instance",
        "People",
        "Entity",
        "Opinion",
        "Categorization",
        "Time_vector",
        "Containing"
    ],
    "This makes it easier to update the list item view with new data.": [
        "Entity",
        "Opinion",
        "Age",
        "Execution"
    ],
    "View holders also add information that RecyclerView uses to efficiently move views around the screen.": [
        "Categorization",
        "Information",
        "Categorization",
        "Motion",
        "Using"
    ],
    "You will see an error because you need to implement some abstract methods from RecyclerView.Adapter.": [
        "Gizmo",
        "Execution",
        "Required_event",
        "Relational_quantity",
        "Grasp"
    ],
    "This creates stubs with the correct parameters for the three methods as shown below.": [
        "Execution",
        "Terms_of_agreement",
        "Suitability",
        "Cardinal_numbers",
        "Creating",
        "Evidence"
    ],
    "You should see no more errors.": [
        "Quantity",
        "Increment",
        "Being_obligated",
        "Grasp"
    ],
    "Next you need to implement those methods so that they do the correct things for your app.": [
        "Gizmo",
        "Execution",
        "Required_event",
        "Suitability",
        "Intentionally_act"
    ],
    "The getItemCount ( ) method needs to return the size of your dataset.": [
        "Execution",
        "Execution",
        "Required_event"
    ],
    "Your app's data is in the dataset property that you are passing into the ItemAdapter constructor, and you can get its size with size.": [
        "Capability",
        "Execution",
        "Traversing",
        "Possession"
    ],
    "It's a more concise way of writing this:": [
        "Increment",
        "Text_creation",
        "Execution"
    ],
    "The onCreateViewHolder ( ) method is called by the layout manager to create new view holders for the RecyclerView ( when there are no existing view holders that can be reused ).": [
        "Execution",
        "People_by_vocation",
        "Temporal_collocation",
        "Quantity",
        "Categorization",
        "Existence",
        "Execution",
        "Age",
        "Likelihood",
        "Existence",
        "Intentionally_create"
    ],
    "Remember that a view holder represents a single list item view.": [
        "Opinion",
        "Communicate_categorization",
        "Entity",
        "Sole_instance",
        "Memory"
    ],
    "The onCreateViewHolder ( ) method takes two parameters and returns a new ViewHolder.": [
        "Execution",
        "Terms_of_agreement",
        "Cardinal_numbers",
        "Age",
        "Execution",
        "Removing"
    ],
    "Now adapterLayout holds a reference to the list item view ( from which we can later find": [
        "Entity",
        "Opinion",
        "Time_vector",
        "Capability",
        "Coming_to_believe",
        "Containing",
        "Temporal_collocation"
    ],
    "child views like the TextView ).": [
        "Kinship",
        "Categorization"
    ],
    "Here is the code for onCreateViewHolder ( ) so far.": [
        "Locative_relation",
        "Continued_state_of_affairs"
    ],
    "The last method you need to override is onBindViewHolder ( ).": [
        "Relative_time",
        "Execution",
        "Required_event"
    ],
    "This method is called by the layout manager in order to replace the contents of a list item view.": [
        "Execution",
        "Entity",
        "People_by_vocation",
        "Opinion",
        "Execution",
        "Replacing"
    ],
    "The onBindViewHolder ( ) method has two parameters, an ItemViewHolder previously created by the onCreateViewHolder ( ) method, and an int that represents the current item position in the list.": [
        "Execution",
        "Terms_of_agreement",
        "Entity",
        "Temporal_collocation",
        "Time_vector",
        "Communicate_categorization",
        "Intentionally_create",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "In this method, you will find the right Affirmation object from the data set based on position.": [
        "Execution",
        "Morality_evaluation",
        "Intentionally_create",
        "Locating"
    ],
    "Finally, you need to update all the views referenced by the view holder to reflect the correct data for this item.": [
        "Quantity",
        "Categorization",
        "Opinion",
        "Entity",
        "Time_vector",
        "Suitability",
        "Cogitation",
        "Required_event"
    ],
    "In this case, there is only one view: the TextView within ItemViewHolder.": [
        "Instance",
        "Opinion",
        "Sole_instance",
        "Cardinal_numbers",
        "Existence"
    ],
    "Set the text of the TextView to display the Affirmation string for this item.": [
        "Entity"
    ],
    "In the Android framework, you can call getString ( ) with a string resource ID, and it will return the string value associated with it.": [
        "Capability",
        "Cognitive_connection",
        "Execution",
        "Execution"
    ],
    "getString ( ) is a method in the Resources class, and you can get an instance of the Resources class through the context.": [
        "Execution",
        "Instance",
        "Capability",
        "Execution"
    ],
    "That means you can call context.resources.getString ( ) and pass in a string resource ID.": [
        "Natural_features",
        "Execution",
        "Capability",
        "Evidence"
    ],
    "The resulting string can be set as the text of the textView in the holder ItemViewHolder.": [
        "Causation",
        "Likelihood",
        "Intentionally_create"
    ],
    "In short, this line of code updates the view holder to show the affirmation string.": [
        "Dimension",
        "Opinion",
        "Reasoning"
    ],
    "The completed onBindViewHolder ( ) method should look like this.": [
        "Execution",
        "Activity_finish",
        "Being_obligated",
        "Scrutiny"
    ],
    "Here is the finished adapter code.": [
        "Locative_relation",
        "Process_completed_state"
    ],
    "Now that you've implemented the ItemAdapter, you need to tell the RecyclerView to use this adapter.": [
        "Temporal_collocation",
        "Using",
        "Telling",
        "Required_event",
        "Execute_plan"
    ],
    "To finish, you need to use your Datasource and ItemAdapter classes to create and display items in the RecyclerView.": [
        "Entity",
        "Intentionally_create",
        "Required_event",
        "Using",
        "Activity_finish"
    ],
    "You do this in MainActivity.": [
        "Intentionally_act"
    ],
    "You've just created an app that displays a list of data with RecyclerView and a custom adapter.": [
        "Custom",
        "Intentionally_create"
    ],
    "Take some time to look over the code you created, and understand how the different pieces work together.": [
        "Measure_duration",
        "Similarity",
        "Working_on",
        "Relational_quantity",
        "Intentionally_create",
        "Part_piece",
        "Conquering",
        "Scrutiny",
        "Collaboration",
        "Grasp"
    ],
    "This app has all the required pieces to display your affirmations, but it's not quite ready for production.": [
        "Quantity",
        "Manufacturing",
        "Inclusion",
        "Part_piece",
        "Being_necessary",
        "Activity_ready_state"
    ],
    "The UI could use some improvement.": [
        "Relational_quantity",
        "Capability",
        "Using"
    ],
    "In the next codelab, you'll improve your code, learn how to add images to the app, and polish the UI.": [
        "Education_teaching",
        "Sensation",
        "Locative_relation",
        "Cause_to_make_progress"
    ],
    "The solution code for this codelab is in the project and module shown below.": [
        "Project",
        "Evidence"
    ],
    "Note that some of the Kotlin files are in different packages, as indicated by the package statement at the start of the file.": [
        "Execution",
        "Execution",
        "Similarity",
        "Temporal_subregion",
        "Relational_quantity",
        "Evidence"
    ],
    "src/main/res / layout/activty _ main.xml": [],
    "src/main/res / layout/list _ item.xml": [],
    "Create a project from a template in Android Studio.": [
        "Project",
        "Building_subparts"
    ],
    "Add string resources to an app.": [],
    "Define a layout in XML.": [
        "Communicate_categorization"
    ],
    "Understand classes and inheritance in Kotlin ( including abstract classes ).": [
        "Inclusion"
    ],
    "Inherit from an existing class and override its methods.": [
        "Existence",
        "Execution"
    ],
    "Use the documentation on developer.android.com for classes provided by the Android framework.": [
        "Using",
        "Supply"
    ],
    "How to use a RecyclerView to display a list of data.": [
        "Using"
    ],
    "How to organize your code into packages": [
        "Execution"
    ],
    "How to use adapters with RecyclerView to customize how an individual list item looks.": [
        "People",
        "Entity",
        "Scrutiny",
        "Using"
    ],
    "An app that displays a list of affirmation strings using a RecyclerView.": [
        "Using"
    ],
    "A computer with Android Studio version 4.1 or higher installed.": [
        "Installing",
        "Building_subparts",
        "Position_on_a_scale"
    ],
    "Start a new Kotlin project in Android Studio using the Empty Activity template.": [
        "Temporal_subregion",
        "Project",
        "Building_subparts",
        "Emptying",
        "Age",
        "Intentionally_act",
        "Using"
    ],
    "Enter Affirmations as the app Name, com.example.affirmations as the Package name, and choose API Level 19 as the Minimum SDK.": [
        "Execution",
        "Rank",
        "Extreme_value",
        "Choosing"
    ],
    "Click Finish to create the project.": [
        "Sounds",
        "Project",
        "Intentionally_create"
    ],
    "String resources to display as affirmations in the app.": [],
    "A source of data to provide a list of affirmations to your app.": [
        "Source_of_getting",
        "Supply"
    ],
    "In the Project window, open app > res > values > strings.xml.": [
        "Project",
        "Connecting_architecture",
        "Secrecy_status"
    ],
    "This file currently has a single resource which is the name of the app.": [
        "Sole_instance",
        "Temporal_collocation",
        "Inclusion"
    ],
    "In strings.xml, add the following affirmations as individual string resources.": [
        "Relative_time",
        "People"
    ],
    "Name them affirmation1, affirmation2, and so on.": [
        "Appointing"
    ],
    "In Android Studio, in the Project window ( Android ), take a look at your new project files under app > java for the Affirmations app.": [
        "Building_subparts",
        "Project",
        "Connecting_architecture",
        "Scrutiny",
        "Project",
        "Age",
        "Have_as_requirement",
        "Submitting_documents"
    ],
    "They should look similar to the screenshot below, which shows three packages, one for your code ( com.example.affirmations ), and two for test files ( com.example.affirmations ( androidTest ) and com.example.affirmations ( test ) ).": [
        "Similarity",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Operational_testing",
        "Execution",
        "Cardinal_numbers",
        "Scrutiny",
        "Being_obligated",
        "Evidence"
    ],
    "Notice that the name of the package consists of several words separated by a period.": [
        "Execution",
        "Simple_name",
        "Becoming_separated",
        "Frequency",
        "Quantity",
        "Becoming_aware"
    ],
    "Create different packages for different parts of your code.": [
        "Execution",
        "Similarity",
        "Part_whole"
    ],
    "For example, developers will often separate the classes that work with data and the classes that build the UI into different packages.": [
        "Instance",
        "Execution",
        "Similarity",
        "Frequency",
        "Building",
        "Working_on",
        "Differentiation"
    ],
    "Use code from other packages in your code.": [
        "Execution",
        "Increment"
    ],
    "In order to use the classes from other packages, you need to define them in your build system's dependencies.": [
        "Execution",
        "Gizmo",
        "Reliance",
        "Increment",
        "Building",
        "Communicate_categorization",
        "Required_event",
        "Using"
    ],
    "It's also a standard practice to import them in your code so you can use their shortened names ( eg, TextView ) instead of their fully-qualified names ( eg, android.widget.TextView ).": [
        "Importing",
        "Capability",
        "Using",
        "Practice"
    ],
    "For example, you have already used import statements for classes such as sqrt ( import kotlin.math.sqrt ) and View ( import android.view.View ).": [
        "Instance",
        "Importing",
        "Categorization",
        "Time_vector",
        "Using"
    ],
    "The package name is usually structured from general to specific, with each part of the name in lowercase letters and separated by a period.": [
        "Execution",
        "Execution",
        "Becoming_separated",
        "Frequency",
        "Part_whole"
    ],
    "Important: The period is just part of the name.": [
        "Frequency",
        "Part_whole"
    ],
    "It does not indicate a hierarchy in code or mandate a folder structure !": [
        "Containers",
        "Intentionally_act",
        "Buildings",
        "Evidence"
    ],
    "Because internet domains are globally unique, it is a convention to use a domain, usually yours or the domain of your business, as the first part of the name.": [
        "Businesses",
        "Ordinal_numbers",
        "Part_whole",
        "Idiosyncrasy",
        "Using",
        "Be_in_agreement_on_action"
    ],
    "You can choose the names of packages to indicate what's inside the package, and how packages are related to each other.": [
        "Execution",
        "Execution",
        "Increment",
        "Cognitive_connection",
        "Choosing",
        "Evidence",
        "Capability"
    ],
    "For code examples like this one, com.example followed by the name of the app is commonly used.": [
        "Cardinal_numbers",
        "Instance",
        "Relative_time",
        "Using"
    ],
    "kotlin.math - Mathematical functions and constants.": [],
    "android.widget - Views, such as TextView.": [
        "Perception_active"
    ],
    "In Android Studio, in the Project pane, right-click app > java > com.example.affirmations and select New > Package.": [
        "Building_subparts",
        "Project",
        "Age",
        "Execution"
    ],
    "In the New Package popup, notice the suggested package name prefix.": [
        "Execution",
        "Age",
        "Execution",
        "Becoming_aware"
    ],
    "The suggested first part of the package name is the name of the package you right-clicked.": [
        "Ordinal_numbers",
        "Execution",
        "Membership"
    ],
    "While package names do not create a hierarchy of packages, reusing parts of the name is used to indicate a relationship and organization of the content !": [
        "Execution",
        "Execution",
        "Organization",
        "Intentionally_act",
        "Part_whole",
        "Intentionally_create",
        "Cognitive_connection",
        "Evidence",
        "Using"
    ],
    "In the popup, append model to the end of the suggested package name.": [
        "Vehicle",
        "Execution",
        "Temporal_subregion",
        "Attaching"
    ],
    "Developers often use model as the package name for classes that model ( or represent ) the data.": [
        "Gizmo",
        "Execution",
        "Frequency",
        "Communicate_categorization",
        "Using"
    ],
    "This creates a new package under the com.example.affirmations ( root ) package.": [
        "Execution",
        "Age",
        "Creating"
    ],
    "This new package will contain any data-related classes defined in your app.": [
        "Quantity",
        "Execution",
        "Age",
        "Categorization",
        "Inclusion"
    ],
    "Right-click on the com.example.affirmations.model package and select New > Kotlin File/Class.": [
        "Execution",
        "Age"
    ],
    "In the popup, select Class and enter Affirmation as the name of the class.": [
        "Execution"
    ],
    "This creates a new file called Affirmation.kt in the model package.": [
        "Gizmo",
        "Age",
        "Execution",
        "Execution",
        "Creating"
    ],
    "Make Affirmation a data class by adding the data keyword before the class definition.": [
        "Manufacturing",
        "Communicate_categorization"
    ],
    "This leaves you with an error, because data classes must have at least one property defined.": [
        "Possession",
        "Cardinal_numbers",
        "Categorization",
        "Departing",
        "Being_obligated",
        "Relational_quantity"
    ],
    "Add a val integer parameter stringResourceId to the constructor of the Affirmation class.": [
        "Terms_of_agreement"
    ],
    "This gets rid of your error.": [
        "Execution"
    ],
    "In Android Studio, in the Project window, right-click app > java > com.example.affirmations and select New > Package.": [
        "Building_subparts",
        "Project",
        "Connecting_architecture",
        "Age",
        "Execution"
    ],
    "Enter data as the last part of the package name.": [
        "Execution",
        "Relative_time",
        "Part_whole"
    ],
    "Right click on the data package and select new Kotlin File/Class.": [
        "Execution",
        "Age",
        "Choosing",
        "Sounds",
        "Part_orientational"
    ],
    "Enter Datasource as the class name.": [],
    "Inside the Datasource class, create a function called loadAffirmations ( ).": [
        "Execution",
        "Intentionally_create"
    ],
    "Declare List <Affirmation> as the return type of the method loadAffirmations ( ).": [
        "Execution",
        "Execution"
    ],
    "In the body of loadAffirmations ( ), add a return statement.": [
        "Execution",
        "Execution"
    ],
    "After the return keyword, call listOf < > ( ) to create a List.": [
        "Execution",
        "Execution",
        "Intentionally_create"
    ],
    "Inside the angle brackets < >, specify the type of the list items as Affirmation.": [
        "Entity"
    ],
    "Inside the parentheses, create an Affirmation, passing in R.string.affirmation1 as the resource ID as shown below.": [
        "Evidence",
        "Intentionally_create",
        "Traversing"
    ],
    "Add the remaining Affirmation objects to the list of all affirmations, separated by commas.": [
        "Becoming_separated",
        "Quantity",
        "State_continue"
    ],
    "The finished code should look like the following.": [
        "Process_completed_state",
        "Being_obligated",
        "Scrutiny"
    ],
    "In layouts/activity_main.xml, give the TextView that comes with your template an id of textview.": [
        "Execution",
        "Giving"
    ],
    "In MainActivity in the onCreate ( ) method after the existing code, get a reference to textview.": [
        "Execution",
        "Existence",
        "Execution"
    ],
    "Then add code to create and display the size of the affirmations list.": [
        "Temporal_collocation",
        "Intentionally_create"
    ],
    "Create a Datasource, call loadAffirmations ( ), get the size of the returned list, convert it to a string, and assign it as the text of textView.": [
        "Cause_to_start",
        "Execution",
        "Cause_change",
        "Execution",
        "Execution"
    ],
    "The screen should look as shown below.": [
        "Evidence",
        "Scrutiny",
        "Being_obligated"
    ],
    "Delete the code you just added in MainActivity.": [],
    "item - One data item of the list to display.": [
        "Entity",
        "Cardinal_numbers"
    ],
    "Represents one Affirmation object in your app.": [
        "Cardinal_numbers"
    ],
    "Adapter - Takes data and prepares it for RecyclerView to display.": [
        "Cooking_creation",
        "Conquering"
    ],
    "ViewHolders - A pool of views for RecyclerView to use and reuse to display affirmations.": [
        "Natural_features",
        "Categorization",
        "Using"
    ],
    "RecyclerView - Views on screen": [
        "Perception_active"
    ],
    "Open activity_main.xml ( app > res > layout > activity_main.xml )": [],
    "If you are not already using it, switch to Split view.": [
        "Separating",
        "Opinion",
        "Change_tool",
        "Time_vector",
        "Using"
    ],
    "In the XML, replace ConstraintLayout with FrameLayout.": [
        "Take_place_of"
    ],
    "The completed layout should look as shown below.": [
        "Evidence",
        "Activity_finish",
        "Scrutiny",
        "Being_obligated"
    ],
    "In the Palette, select Containers, and find the RecyclerView.": [
        "Containers",
        "Coming_to_believe"
    ],
    "Drag a RecyclerView into the layout.": [
        "Cause_motion"
    ],
    "If it appears, read the Add Project Dependency popup and click OK.": [
        "Project",
        "Reliance",
        "Sounds",
        "Coming_to_be",
        "Reading"
    ],
    "( If the popup doesn't appear, no action is needed. )": [
        "Quantity",
        "Intentionally_act",
        "Intentionally_act",
        "Coming_to_be"
    ],
    "Wait for Android Studio to finish and the RecyclerView to appear in your layout.": [
        "Building_subparts",
        "Coming_to_be",
        "Activity_finish"
    ],
    "If necessary, change the layout_width and layout_height attributes of the RecyclerView to match_parent so that the RecyclerView can fill the whole screen.": [
        "Being_necessary",
        "Undergo_change",
        "Ranked_expectation",
        "Capability",
        "Filling"
    ],
    "Set the resource ID of the RecyclerView to recycler_view.": [],
    "Switch back to Code view.": [
        "Observable_body_parts",
        "Opinion"
    ],
    "In the XML code, inside the RecyclerView element, add LinearLayoutManager as the layout manager attribute of the RecyclerView, as shown below.": [
        "Ingredients",
        "People_by_vocation",
        "Evidence"
    ],
    "Inside RecyclerView, add an android: scrollbars attribute set to vertical.": [
        "Cause_change_of_position_on_a_scale",
        "Intentionally_create"
    ],
    "In res > layout, create a new empty File called list_item.xml.": [
        "Fullness",
        "Self_motion",
        "Age",
        "Execution",
        "Intentionally_create"
    ],
    "Open list_item.xml in Code view.": [
        "Opinion"
    ],
    "Add a TextView with id item_title.": [],
    "Add wrap_content for the layout_width and layout_height, as shown in the code below.": [
        "Evidence"
    ],
    "In Android Studio in the Project pane, right-click app > java > com.example.affirmations and select New > Package.": [
        "Building_subparts",
        "Project",
        "Age",
        "Execution"
    ],
    "Enter adapter as the last part of the package name.": [
        "Execution",
        "Relative_time",
        "Part_whole"
    ],
    "Right-click on the adapter package and select New > Kotlin File/Class.": [
        "Execution",
        "Age"
    ],
    "Enter ItemAdapter as the class name, finish, and the ItemAdapter.kt file opens.": [
        "Body_movement"
    ],
    "Add a parameter to the ItemAdapter constructor that is a val called dataset of type List <Affirmation>.": [
        "Execution",
        "Terms_of_agreement"
    ],
    "Since the dataset will be only used within this class, make it private.": [
        "Sole_instance",
        "Using",
        "Execution"
    ],
    "Add a parameter to the ItemAdapter constructor that is a val called context of type Context.": [
        "Execution",
        "Terms_of_agreement"
    ],
    "Position it as the first parameter in the constructor.": [
        "Terms_of_agreement",
        "Ordinal_numbers"
    ],
    "Inside the ItemAdapter class, before the closing curly brace for ItemAdapter, create an ItemViewHolder class.": [
        "Change_resistance",
        "Intentionally_create"
    ],
    "Defining a class inside another class is called creating a nested class.": [
        "Increment",
        "Communicate_categorization",
        "Intentionally_create",
        "Execution"
    ],
    "Since ItemViewHolder is only used by ItemAdapter, creating it inside ItemAdapter shows this relationship.": [
        "Sole_instance",
        "Intentionally_create",
        "Reasoning",
        "Cognitive_connection",
        "Using"
    ],
    "This is not mandatory, but it helps other developers understand the structure of your program.": [
        "Being_obligatory",
        "Project",
        "Increment",
        "Buildings",
        "Awareness",
        "Assistance"
    ],
    "Add a private val view of type View as a parameter to the ItemViewHolder class constructor.": [
        "Opinion",
        "Terms_of_agreement",
        "Categorization"
    ],
    "Make ItemViewHolder a subclass of RecyclerView.": [
        "Manufacturing"
    ],
    "ViewHolder and pass the view parameter into the superclass constructor.": [
        "Process_end",
        "Opinion",
        "Terms_of_agreement"
    ],
    "Inside ItemViewHolder, define a val property textView that is of type TextView.": [
        "Locative_relation",
        "Possession",
        "Communicate_categorization"
    ],
    "Assign it the view with the ID item_title that you defined in list_item.xml.": [
        "Opinion",
        "Communicate_categorization"
    ],
    "Add the code to extend your ItemAdapter from the abstract class RecyclerView.Adapter.": [
        "Expansion"
    ],
    "Specify ItemAdapter.ItemViewHolder as the view holder type in angle brackets.": [
        "Opinion",
        "Text_creation"
    ],
    "Put your cursor on ItemAdapter and press Command + I ( Control + I on Windows ).": [
        "Cause_motion",
        "Execution",
        "Control",
        "Connecting_architecture",
        "Causation"
    ],
    "This shows you the list of methods you need to implement: getItemCount ( ), onCreateViewHolder ( ), and onBindViewHolder ( ).": [
        "Execution",
        "Gizmo",
        "Evidence",
        "Have_as_requirement"
    ],
    "Select all three functions using Shift + click and click OK.": [
        "Quantity",
        "Change_position_on_a_scale",
        "Sounds",
        "Cardinal_numbers",
        "Choosing",
        "Using"
    ],
    "Replace getItemCount ( ) with this:": [],
    "A parent parameter, which is the view group that the new list item view will be attached to as a child.": [
        "Kinship",
        "Terms_of_agreement",
        "Opinion",
        "Execution",
        "Entity",
        "Kinship",
        "Age",
        "Being_attached"
    ],
    "The parent is the RecyclerView.": [
        "Kinship"
    ],
    "A viewType parameter which becomes important when there are multiple item view types in the same RecyclerView.": [
        "Terms_of_agreement",
        "Temporal_collocation",
        "Entity",
        "Becoming",
        "Quantity",
        "Categorization",
        "Text_creation",
        "Identicality",
        "Importance",
        "Existence"
    ],
    "If you have different list item layouts displayed within the RecyclerView, there are different item view types.": [
        "Entity",
        "Similarity",
        "Categorization",
        "Existence"
    ],
    "You can only recycle views with the same item view type.": [
        "Sole_instance",
        "Categorization",
        "Entity",
        "Identicality",
        "Opinion",
        "Capability"
    ],
    "In your case, there is only one list item layout and one item view type, so you don't have to worry about this parameter.": [
        "Instance",
        "Entity",
        "Terms_of_agreement",
        "Sole_instance",
        "Cardinal_numbers",
        "Opinion",
        "Intentionally_act",
        "Being_obligated",
        "Emotion_active",
        "Existence"
    ],
    "In the onCreateViewHolder ( ) method, obtain an instance of LayoutInflater from the provided context ( context of the parent ).": [
        "Execution",
        "Getting",
        "Instance",
        "Kinship",
        "Supply"
    ],
    "The layout inflater knows how to inflate an XML layout into a hierarchy of view objects.": [
        "Categorization",
        "Cause_expansion",
        "Awareness"
    ],
    "Once you have a LayoutInflater object instance, add a period followed by another method call to inflate the actual list item view.": [
        "Instance",
        "Frequency",
        "Execution",
        "Entity",
        "Opinion",
        "Time_vector",
        "Increment",
        "Actually_occurring_entity",
        "Cause_expansion",
        "Execution",
        "Relative_time"
    ],
    "Pass in the XML layout resource ID R.layout.list _ item and the parent view group.": [
        "Natural_features",
        "Kinship",
        "Execution",
        "Entity",
        "Opinion"
    ],
    "The third boolean argument is attachToRoot.": [
        "Ordinal_numbers",
        "Reasoning"
    ],
    "This argument needs to be false, because RecyclerView adds this item to the view hierarchy for you when it's time.": [
        "Reasoning",
        "Entity",
        "Opinion",
        "Temporal_collocation",
        "Required_event",
        "Measure_duration",
        "Artificiality"
    ],
    "In onCreateViewHolder ( ), return a new ItemViewHolder instance where the root view is adapterLayout.": [
        "Instance",
        "Opinion",
        "Age",
        "Execution",
        "Locative_relation"
    ],
    "Inside onBindViewHolder ( ), create a val item and get the item at the given position in the dataset.": [
        "Entity",
        "Giving",
        "Intentionally_create",
        "Execution"
    ],
    "With an Affirmation object instance, you can find the corresponding string resource ID by calling item.stringResourceId.": [
        "Instance",
        "Execution",
        "Capability",
        "Locating"
    ],
    "However, this is an integer and you need to find the mapping to the actual string value.": [
        "Concessive",
        "Actually_occurring_entity",
        "Becoming_aware",
        "Required_event"
    ],
    "In MainActivity, go to the onCreate ( ) method.": [
        "Execution",
        "Becoming"
    ],
    "Insert the new code described in the following steps after the call to setContentView ( R.layout.activity _ main ).": [
        "Intentionally_act",
        "Age",
        "Relative_time",
        "First_rank",
        "Execution"
    ],
    "Create an instance of Datasource, and call the loadAffirmations ( ) method on it.": [
        "Instance",
        "Cause_to_start",
        "Execution",
        "Execution"
    ],
    "Store the returned list of affirmations in a val named myDataset.": [
        "Storing",
        "Execution"
    ],
    "Create a variable called recyclerView and use findViewById ( ) to find a reference to the RecyclerView within the layout.": [
        "Locating",
        "Execution",
        "Cause_to_start"
    ],
    "To tell the recyclerView to use the ItemAdapter class you created, create a new ItemAdapter instance.": [
        "Instance",
        "Creating",
        "Age",
        "Using",
        "Intentionally_create"
    ],
    "ItemAdapter expects two parameters: the context ( this ) of this activity, and the affirmations in myDataset.": [
        "Intentionally_act",
        "Expectation",
        "Terms_of_agreement",
        "Cardinal_numbers"
    ],
    "Assign the ItemAdapter object to the adapter property of the recyclerView.": [
        "Possession"
    ],
    "Since the layout size of your RecyclerView is fixed in the activity layout, you can set the setHasFixedSize parameter of the RecyclerView to true.": [
        "Intentionally_act",
        "Capability",
        "Terms_of_agreement",
        "Resolve_problem",
        "Intentionally_create"
    ],
    "This setting is only needed to improve performance.": [
        "Sole_instance",
        "Performing_arts",
        "Required_event",
        "Cause_to_make_progress"
    ],
    "Use this setting if you know that changes in content do not change the layout size of the RecyclerView.": [
        "Using",
        "Undergo_change",
        "Intentionally_act",
        "Cause_change",
        "Awareness"
    ],
    "When you are done, the code for MainActivity should be similar to the following.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Similarity",
        "Being_obligated"
    ],
    "You should see a list of affirmation strings displayed on screen.": [
        "Being_obligated",
        "Grasp"
    ],
    "RecyclerView widget helps you display a list of data.": [
        "Assistance"
    ],
    "RecyclerView uses the adapter pattern to adapt and display the data.": [
        "Pattern",
        "Using"
    ],
    "ViewHolder creates and holds the views for RecyclerView.": [
        "Creating",
        "Categorization",
        "Containing"
    ],
    "RecyclerView comes with built in LayoutManagers.": [
        "Execution",
        "Building"
    ],
    "RecyclerView delegates how items are laid out to LayoutManagers.": [
        "Entity",
        "Locative_relation"
    ],
    "Create a new class for the adapter, for example, ItemAdapter.": [
        "Instance",
        "Age",
        "Cause_to_start"
    ],
    "Create a custom ViewHolder class that represents a single list item view.": [
        "Custom",
        "Entity",
        "Opinion",
        "Sole_instance",
        "Communicate_categorization",
        "Cause_to_start"
    ],
    "Modify the ItemAdapter class to extend from the RecyclerView.Adapter class with the custom ViewHolder class.": [
        "Custom",
        "Expansion",
        "Cause_change"
    ],
    "Implement these methods within the adapter: getItemsCount ( ), onCreateViewHolder ( ), and onBindViewHolder ( ).": [
        "Gizmo",
        "Execution"
    ],
    "Create a list with RecyclerView": [
        "Cause_to_start"
    ],
    "Enhance your UI with MaterialCardView and images": [
        "Sensation"
    ],
    "To do this there are two ways: -": [
        "Execution",
        "Intentionally_act",
        "Cardinal_numbers",
        "Existence"
    ],
    "1 -RRB- Add save Button in each row of RecyclerView on this Button click -LRB- onClick -RRB-": [
        "Closure",
        "Sounds",
        "Quarreling"
    ],
    "2 -RRB- Add onTextChangedListener to EditText": [],
    "Then in your MainActivity.java retrive data from sharedpreferences or database": [
        "Temporal_collocation"
    ],
    "You don't need to use so many lists, just create a class that will contain all the data of single item, there is no need for buttons, use just text change listener instead.": [
        "Quantity",
        "Entity",
        "Quantity",
        "Needing",
        "Clothing_parts",
        "Intentionally_act",
        "Quantity",
        "Sole_instance",
        "Undergo_change",
        "Existence",
        "Inclusion",
        "Creating",
        "Using"
    ],
    "sample code": [],
    "I had a similar problem.My Recyclerview contained one Textview, two EditTexts and one remove Button to remove the item from the Recyclerview.": [
        "Closure",
        "Entity",
        "Being_obligated",
        "Similarity",
        "Cardinal_numbers",
        "Removing",
        "Cardinal_numbers",
        "Inclusion"
    ],
    "I am getting the data from both the Edittexts, from a model class using a button from my activity.": [
        "Quantity",
        "Gizmo",
        "Clothing_parts",
        "Intentionally_act",
        "Using",
        "Execution"
    ],
    "Everything works well I just want to know what all optimizations I can make.": [
        "Quantity",
        "Being_employed",
        "Capability",
        "Causation",
        "Awareness",
        "Desiring"
    ],
    "Please give your suggestions in a detailed manner.": [
        "Conduct",
        "Giving"
    ],
    "My Model Class:": [],
    "Above class holds the three Strings one is the titile and the two hold the edittext data.": [
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Containing",
        "Containing"
    ],
    "My Adapter code:": [],
    "In the adapter I am using two arraylists rtyArray and qtyArray to hold the position of the Edittext data in the model class.": [
        "Gizmo",
        "Cardinal_numbers",
        "Containing",
        "Using"
    ],
    "The above two functions return the positions of the Edittextdata": [
        "Cardinal_numbers",
        "Execution"
    ],
    "My Activity:": [],
    "In my case both the position holding arrays are always equal in size.": [
        "Instance",
        "Diversity",
        "Evaluative_comparison",
        "Containing",
        "Frequency"
    ],
    "It is supposed to be the successor of ListView and GridView.": [
        "Required_event"
    ],
    "One of the reasons is that RecyclerView has a more extensible framework, especially since it provides the ability to implement both horizontal and vertical layouts.": [
        "Causation",
        "Gizmo",
        "Quantity",
        "Increment",
        "Cardinal_numbers",
        "Inclusion",
        "Capability",
        "Supply"
    ],
    "Use the RecyclerView widget when you have data collections whose elements change at runtime based on user action or network events.": [
        "Temporal_collocation",
        "Execution",
        "Network",
        "Ingredients",
        "Intentionally_act",
        "Event",
        "Undergo_change",
        "Using"
    ],
    "If you want to use a RecyclerView, you will need to work with the following:": [
        "Using",
        "Required_event",
        "Possession",
        "Working_on"
    ],
    "RecyclerView.Adapter - To handle the data collection and bind it to the view": [
        "Opinion",
        "Execution",
        "Resolve_problem",
        "Predicament"
    ],
    "LayoutManager - Helps in positioning the items": [
        "Entity",
        "Assistance"
    ],
    "ItemAnimator - Helps with animating the items for common operations such as Addition or Removal of item": [
        "Entity",
        "Businesses",
        "Entity",
        "Removing",
        "Communication_response",
        "Assistance"
    ],
    "Furthermore, it provides animation support for RecyclerView items whenever they are added or removed, which had been extremely difficult to do with ListView.": [
        "Entity",
        "Intentionally_act",
        "Difficulty",
        "Taking_sides",
        "Supply",
        "Removing"
    ],
    "RecyclerView also begins to enforce the ViewHolder pattern too, which was already a recommended practice but now deeply integrated with this new framework.": [
        "Time_vector",
        "Temporal_collocation",
        "Pattern",
        "Sufficiency",
        "Age",
        "Practice",
        "Enforcing",
        "Activity_start"
    ],
    "For more details, see this detailed overview.": [
        "Increment",
        "Grasp"
    ],
    "Compared to ListView RecyclerView differs from its predecessor ListView primarily because of the following features:": [
        "Relative_time",
        "Evaluative_comparison",
        "Similarity",
        "Causation"
    ],
    "Required ViewHolder in Adapters - ListView adapters do not require the use of the ViewHolder pattern to improve performance.": [
        "Pattern",
        "Performing_arts",
        "Being_necessary",
        "Intentionally_act",
        "Cause_to_make_progress",
        "Have_as_requirement"
    ],
    "In contrast, implementing an adapter for RecyclerView requires the use of the ViewHolder pattern for which it uses RecyclerView.Viewholder.": [
        "Gizmo",
        "Pattern",
        "Using",
        "Have_as_requirement"
    ],
    "Customizable Item Layouts - ListView can only layout items in a vertical linear arrangement and this can not be customized.": [
        "Entity",
        "Arranging",
        "Likelihood",
        "Entity",
        "Sole_instance"
    ],
    "In contrast, the RecyclerView has a RecyclerView.LayoutManager that allows any item layouts including horizontal lists or staggered grids.": [
        "Entity",
        "Self_motion",
        "Quantity",
        "Inclusion",
        "Grant_permission",
        "Inclusion"
    ],
    "Easy Item Animations - ListView contains no special provisions through which one can animate the addition or deletion of items.": [
        "Entity",
        "Quantity",
        "Communication_response",
        "Entity",
        "Capability",
        "Terms_of_agreement",
        "Inclusion"
    ],
    "In contrast, the RecyclerView has the RecyclerView.ItemAnimator class for handling item animations.": [
        "Entity",
        "Intentionally_act",
        "Inclusion"
    ],
    "Manual Data Source - ListView had adapters for different sources such as ArrayAdapter and CursorAdapter for arrays and database results respectively.": [
        "Diversity",
        "Source_of_getting",
        "Source_of_getting",
        "Similarity",
        "Causation",
        "Being_obligated"
    ],
    "In contrast, the RecyclerView.Adapter requires a custom implementation to supply the data to the adapter.": [
        "Custom",
        "Have_as_requirement",
        "Execute_plan",
        "Supply"
    ],
    "Manual Item Decoration - ListView has the android: divider property for easy dividers between items in the list.": [
        "Entity",
        "Entity",
        "Difficulty",
        "Possession",
        "Inclusion"
    ],
    "In contrast, RecyclerView requires the use of a RecyclerView.ItemDecoration object to setup much more manual divider decorations.": [
        "Relational_quantity",
        "Increment",
        "Have_as_requirement"
    ],
    "Manual Click Detection - ListView has a AdapterView.OnItemClickListener interface for binding to the click events for individual items in the list.": [
        "Sounds",
        "Sounds",
        "People",
        "Entity",
        "Event",
        "Inclusion",
        "Attaching"
    ],
    "In contrast, RecyclerView only has support for RecyclerView.OnItemTouchListener which manages individual touch events but has no built-in click handling.": [
        "People",
        "Quantity",
        "Quantity",
        "Sounds",
        "Sole_instance",
        "Event",
        "Operating_a_system",
        "Taking_sides",
        "Inclusion"
    ],
    "LayoutManagers A RecyclerView needs to have a layout manager and an adapter to be instantiated.": [
        "People_by_vocation",
        "Required_event"
    ],
    "A layout manager positions item views inside a RecyclerView and determines when to reuse item views that are no longer visible to the user.": [
        "Temporal_collocation",
        "Entity",
        "People_by_vocation",
        "Temporal_collocation",
        "Obviousness",
        "Categorization",
        "Coming_to_believe"
    ],
    "RecyclerView provides these built-in layout managers:": [
        "People_by_vocation",
        "Supply"
    ],
    "LinearLayoutManager shows items in a vertical or horizontal scrolling list.": [
        "Entity",
        "Evidence"
    ],
    "GridLayoutManager shows items in a grid.": [
        "Entity",
        "Evidence"
    ],
    "StaggeredGridLayoutManager shows items in a staggered grid.": [
        "Self_motion",
        "Entity",
        "Evidence"
    ],
    "To create a custom layout manager, extend the RecyclerView.LayoutManager class.": [
        "People_by_vocation",
        "Expansion",
        "Intentionally_create"
    ],
    "Here is Dave Smith's talk on the custom layout manager": [
        "Locative_relation",
        "Custom",
        "People_by_vocation"
    ],
    "Notes: In the recent version of the Support Library, if you don't explicitly set the LayoutManager, the RecyclerView will not show !": [
        "Relative_time",
        "Taking_sides",
        "Buildings",
        "Intentionally_act",
        "Reasoning",
        "Intentionally_create"
    ],
    "There is a Logcat error though E/RecyclerView: No layout manager attached ; skipping layout": [
        "Self_motion",
        "People_by_vocation",
        "Being_attached",
        "Existence"
    ],
    "RecyclerView.Adapter RecyclerView includes a new kind of adapter.": [
        "Age",
        "Inclusion"
    ],
    "It's a similar approach to the ones you already used, but with some peculiarities, such as a required ViewHolder.": [
        "Clothing",
        "Idiosyncrasy",
        "Execution",
        "Similarity",
        "Time_vector",
        "Relational_quantity",
        "Being_necessary",
        "Using"
    ],
    "You will have to override two main methods: one to inflate the view and its view holder, and another one to bind data to the view.": [
        "Cardinal_numbers",
        "Increment",
        "Opinion",
        "First_rank",
        "Inchoative_attaching",
        "Cardinal_numbers",
        "Cause_expansion",
        "Execution",
        "Being_obligated"
    ],
    "The good thing about this is that the first method is called only when we really need to create a new view.": [
        "Execution",
        "Sole_instance",
        "Temporal_collocation",
        "Opinion",
        "Desirability",
        "Ordinal_numbers",
        "Age",
        "Required_event",
        "Intentionally_create",
        "Execution"
    ],
    "No need to check if it's being recycled.": [
        "Quantity",
        "Inspecting",
        "Have_as_requirement"
    ],
    "ItemAnimator RecyclerView.ItemAnimator will animate ViewGroup modifications such as add/delete/select that are notified to the adapter.": [
        "Telling",
        "Cause_change"
    ],
    "DefaultItemAnimator can be used for basic default animations and works quite well.": [
        "Being_necessary",
        "Likelihood",
        "Being_employed",
        "Using"
    ],
    "See the section of this guide for more information.": [
        "Information",
        "Increment",
        "Part_whole",
        "Grasp"
    ],
    "Using the RecyclerView Using a RecyclerView has the following key steps:": [
        "Relative_time",
        "Intentionally_act",
        "Importance",
        "Using",
        "Inclusion"
    ],
    "Add RecyclerView AndroidX library to the Gradle build file Define a model class to use as the data source Add a RecyclerView to your activity to display the items Create a custom row layout XML file to visualize the item Create a RecyclerView.Adapter and ViewHolder to render the item Bind the adapter to the data source to populate the RecyclerView": [
        "Buildings",
        "Gizmo",
        "Residence",
        "Quarreling",
        "Causation",
        "Entity",
        "Self_motion",
        "Custom",
        "Entity",
        "Cause_to_start",
        "Intentionally_act",
        "Source_of_getting",
        "Using",
        "Building"
    ],
    "The steps are explained in more detail below.": [
        "Intentionally_act",
        "Increment"
    ],
    "Installation Make sure the RecyclerView AndroidX library is listed as a dependency in your app/build.": [
        "Installing",
        "Buildings",
        "Reliance"
    ],
    "Click on `` Sync Project with Gradle files'' to let your IDE download the appropriate resources.": [
        "Project",
        "Sounds",
        "Grant_permission"
    ],
    "Defining a Model Every RecyclerView is backed by a source for data.": [
        "Vehicle",
        "Frequency",
        "Source_of_getting",
        "Taking_sides",
        "Communicate_categorization"
    ],
    "In this case, we will define a Contact class which represents the data model being displayed by the RecyclerView:": [
        "Instance",
        "Contacting",
        "Vehicle",
        "Communicate_categorization",
        "Communicate_categorization"
    ],
    "Create the RecyclerView within Layout Inside the desired activity layout XML file in res/layout/activity_users.xml, let's add the RecyclerView from the support library:": [
        "Desiring",
        "Intentionally_act",
        "Taking_sides",
        "Buildings",
        "Cause_change_of_position_on_a_scale",
        "Cause_to_start",
        "Grant_permission"
    ],
    "In the layout, preview we can see the RecyclerView within the activity:": [
        "Intentionally_act",
        "Capability",
        "Grasp"
    ],
    "Now the RecyclerView is embedded within our activity layout file.": [
        "Temporal_collocation",
        "Intentionally_act"
    ],
    "Next, we can define the layout for each item within our list.": [
        "Entity",
        "Capability",
        "Communicate_categorization"
    ],
    "Creating the Custom Row Layout Before we create the adapter, let's define the XML layout file that will be used for each row within the list.": [
        "Custom",
        "Operate_vehicle",
        "Quarreling",
        "Intentionally_create",
        "Creating",
        "Communicate_categorization",
        "Grant_permission",
        "Using"
    ],
    "This item layout for now should contain a horizontal linear layout with a textview for the name and a button to message the person:": [
        "Entity",
        "Closure",
        "People",
        "Temporal_collocation",
        "Being_obligated",
        "Inclusion"
    ],
    "This layout file can be created in res/layout/item_contact.xml and will be rendered for each item row.": [
        "Entity",
        "Quarreling",
        "Likelihood",
        "Causation",
        "Intentionally_create"
    ],
    "Note that you should be using wrap_content for the layout_height.": [
        "Being_obligated",
        "Using"
    ],
    "See this link for more context.": [
        "Increment",
        "Grasp"
    ],
    "With the custom item layout complete, let's create the adapter to populate the data into the recycler view.": [
        "Custom",
        "Entity",
        "Opinion",
        "Process_completed_state",
        "Residence",
        "Intentionally_create",
        "Grant_permission"
    ],
    "Here we need to create the adapter which will actually populate the data into the RecyclerView.": [
        "Locative_relation",
        "Required_event",
        "Residence",
        "Intentionally_create"
    ],
    "The adapter's role is to convert an object at a position into a list row item to be inserted.": [
        "Performers_and_roles",
        "Quarreling",
        "Entity",
        "Cause_change"
    ],
    "However, with a RecyclerView the adapter requires the existence of a `` ViewHolder'' object which describes and provides access to all the views within each item row.": [
        "Concessive",
        "Having_or_lacking_access",
        "Quantity",
        "Entity",
        "Quarreling",
        "Existence",
        "Categorization",
        "Supply",
        "Have_as_requirement"
    ],
    "We can create the basic empty adapter and holder together in ContactsAdapter.java as follows:": [
        "Being_necessary",
        "Fullness",
        "Collaboration",
        "Relative_time",
        "Capability",
        "Intentionally_create"
    ],
    "Now that we've defined the basic adapter and ViewHolder, we need to begin filling in our adapter.": [
        "Being_necessary",
        "Required_event",
        "Process_start",
        "Filling",
        "Communicate_categorization",
        "Temporal_collocation"
    ],
    "First, let's store a member variable for the list of contacts and pass the list in through our constructor:": [
        "Membership",
        "Contacting",
        "Grant_permission",
        "Process_end",
        "Storing"
    ],
    "Every adapter has three primary methods: onCreateViewHolder to inflate the item layout and create the holder, onBindViewHolder to set the view attributes based on the data and getItemCount to determine the number of items.": [
        "Frequency",
        "Entity",
        "Opinion",
        "Entity",
        "First_rank",
        "Cardinal_numbers",
        "Intentionally_create",
        "Quantity",
        "Execution",
        "Cause_expansion",
        "Intentionally_create",
        "Inclusion"
    ],
    "We need to implement all three to finish the adapter:": [
        "Gizmo",
        "Quantity",
        "Cardinal_numbers",
        "Required_event",
        "Activity_finish"
    ],
    "With the adapter completed, all that is remaining is to bind the data from the adapter into the RecyclerView.": [
        "Quantity",
        "Activity_finish",
        "State_continue",
        "Inchoative_attaching"
    ],
    "Binding the Adapter to the RecyclerView In our activity, we will populate a set of sample users which should be displayed in the RecyclerView.": [
        "Intentionally_act",
        "Being_obligated",
        "Attaching",
        "Execution",
        "Adorning"
    ],
    "Finally, compile and run the app and you should see something like the screenshot below.": [
        "Time_vector",
        "Execution",
        "Grasp",
        "Being_obligated"
    ],
    "If you create enough items and scroll through the list, the views will be recycled and far smoother by default than the ListView widget:": [
        "Entity",
        "Categorization",
        "People_along_political_spectrum",
        "Sufficiency",
        "Intentionally_create"
    ],
    "Notifying the Adapter Unlike ListView, there is no way to add or remove items directly through the RecyclerView adapter.": [
        "Entity",
        "Quantity",
        "Removing",
        "Existence",
        "Telling"
    ],
    "You need to make changes to the data source directly and notify the adapter of any changes.": [
        "Undergo_change",
        "Source_of_getting",
        "Quantity",
        "Telling",
        "Causation",
        "Required_event"
    ],
    "Also, whenever adding or removing elements, always make changes to the existing list.": [
        "Ingredients",
        "Removing",
        "Existence",
        "Frequency",
        "Undergo_change",
        "Causation"
    ],
    "For instance, reinitializing the list of Contacts such as the following will not affect the adapter, since it has a memory reference to the old list:": [
        "Instance",
        "Remembering_experience",
        "Age",
        "Contacting",
        "Possession",
        "Objective_influence"
    ],
    "Instead, you need to act directly on the existing reference:": [
        "Required_event",
        "Existence",
        "Intentionally_act"
    ],
    "There are many methods available to use when notifying the adapter of different changes:": [
        "Execution",
        "Undergo_change",
        "Quantity",
        "Similarity",
        "Temporal_collocation",
        "Using",
        "Telling",
        "Existence"
    ],
    "notifyItemChanged ( int pos ) Notify that item at the position has changed.": [
        "Entity",
        "Telling",
        "Undergo_change"
    ],
    "notifyItemInserted ( int pos ) Notify that item reflected at the position has been newly inserted.": [
        "Entity",
        "Temporal_collocation",
        "Telling",
        "Cogitation"
    ],
    "notifyItemRemoved ( int pos ) Notify that items previously located at the position have been removed from the data set.": [
        "Execution",
        "Being_located",
        "Time_vector",
        "Entity",
        "Removing",
        "Telling"
    ],
    "notifyDataSetChanged ( ) Notify that the dataset has changed.": [
        "Undergo_change",
        "Telling"
    ],
    "Use only as last resort.": [
        "Relative_time",
        "Sole_instance"
    ],
    "We can use these from the activity or fragment:": [
        "Part_piece",
        "Capability",
        "Using",
        "Intentionally_act"
    ],
    "Every time we want to add or remove items from the RecyclerView, we will need to explicitly inform the adapter of the event.": [
        "Frequency",
        "Entity",
        "Required_event",
        "Event",
        "Telling",
        "Removing",
        "Possession",
        "Measure_duration"
    ],
    "Unlike the ListView adapter, a RecyclerView adapter should not rely on notifyDataSetChanged ( ) since the more granular actions should be used.": [
        "Increment",
        "Intentionally_act",
        "Being_obligated",
        "Using",
        "Reliance"
    ],
    "See the API documentation for more details.": [
        "Increment",
        "Grasp"
    ],
    "Also, if you are intending to update an existing list, make sure to get the current count of items before making any changes.": [
        "Entity",
        "Undergo_change",
        "Existence",
        "Temporal_collocation",
        "Quantity",
        "Categorization",
        "Causation",
        "Execution",
        "Verification"
    ],
    "For instance, a getItemCount ( ) on the adapter should be called to record the first index that will be changed.": [
        "Instance",
        "Ordinal_numbers",
        "Being_obligated",
        "Recording",
        "Cause_change",
        "Execution"
    ],
    "Diffing Larger Changes Often times there are cases when changes to your list are more complex ( i.e. sorting an existing list ) and it can not be easily determined whether each row changed.": [
        "Timespan",
        "Instance",
        "Temporal_collocation",
        "Operate_vehicle",
        "Increment",
        "Differentiation",
        "Existence",
        "Likelihood",
        "Undergo_change",
        "Locative_relation",
        "Frequency",
        "Undergo_change",
        "Undergo_change"
    ],
    "In this cases, you would normally have to call notifyDataSetChanged ( ) on the entire adapter to update the entire screen, which eliminates the ability to perform animation sequences to showcase what changed.": [
        "Instance",
        "Sequence",
        "Ranked_expectation",
        "Undergo_change",
        "Intentionally_act",
        "Removing",
        "Capability",
        "Execution",
        "Being_obligated"
    ],
    "Using with ListAdapter The ListAdapter class simplifies detecting whether an item was inserted, updated, or deleted.": [
        "Entity",
        "Perception_experience",
        "Using"
    ],
    "You can find more details in this blog post.": [
        "Increment",
        "Capability",
        "Sending",
        "Locating"
    ],
    "Note the blog post refers to Support Library v23 that was replaced with AndroidX library.": [
        "Sending",
        "Buildings",
        "Becoming_aware",
        "Take_place_of",
        "Taking_sides"
    ],
    "Use this Migration guide to ensure compatibility with the rest of the examples.": [
        "Compatibility",
        "Stimulus_focus",
        "Instance",
        "Using"
    ],
    "First, change your adapter to inherit from a RecyclerView.Adapter to a ListAdapter.": [
        "Ordinal_numbers",
        "Undergo_change"
    ],
    "Note that a ListAdapter requires an extra generic parameter, which is the type of data managed by this adapter.": [
        "Terms_of_agreement",
        "Success_or_failure",
        "Have_as_requirement"
    ],
    "We also need to declare an item callback:": [
        "Entity",
        "Required_event"
    ],
    "You may notice an error that says `` There is no default constructor available in androidx.recyclerview.widget.ListAdapter''.": [
        "Quantity",
        "Likelihood",
        "Existence",
        "Becoming_aware"
    ],
    "The reason is that you will declare an empty constructor and your adapter will also need to invoke this callback method:": [
        "Causation",
        "Fullness",
        "Execution",
        "Required_event"
    ],
    "Instead of overriding the getItemsCount ( ), remove it since the size of the list will be managed by the ListAdapter class:": [
        "Success_or_failure",
        "Removing"
    ],
    "We will also add a helper function to add more contacts.": [
        "Contacting",
        "Increment",
        "Cause_change_of_position_on_a_scale"
    ],
    "Anytime we wish to add more contacts, will use this method instead.": [
        "Execution",
        "Contacting",
        "Increment",
        "Desiring",
        "Using"
    ],
    "A submitList ( ) function provided by the ListAdapter will trigger the comparison.": [
        "Supply"
    ],
    "Finally, we need to modify the onBindViewHolder to use the getItem ( ) method instead.": [
        "Execution",
        "Required_event",
        "Time_vector",
        "Using",
        "Cause_change"
    ],
    "Using with DiffUtil The ListAdapter is built on top of the DiffUtil class but requires less boilerplate code.": [
        "Using",
        "Part_orientational",
        "Building",
        "Needing"
    ],
    "You can see below what the steps are needed to in order to accomplish the same goal.": [
        "Accomplishment",
        "Intentionally_act",
        "Identicality",
        "Being_necessary",
        "Grasp",
        "Capability"
    ],
    "You do not need to follow the steps below if you already using ListAdapter.": [
        "Relative_time",
        "Intentionally_act",
        "Intentionally_act",
        "Time_vector",
        "Using",
        "Required_event"
    ],
    "The DiffUtil class, which was added in the v24 .2.0 of the support library, helps compute the difference between the old and new list.": [
        "Taking_sides",
        "Buildings",
        "Age",
        "Age",
        "Similarity",
        "Assistance"
    ],
    "This class uses the same algorithm used for computing line changes in source code ( the diff utility program ), so it usually fairly fast.": [
        "Source_of_getting",
        "Project",
        "Identicality",
        "Degree",
        "Speed",
        "Undergo_change",
        "Using",
        "Using"
    ],
    "It is recommended however for larger lists that you execute this computation in a background thread.": [
        "Concessive",
        "Execution",
        "Dimension"
    ],
    "To use the DiffUtil class, you need to first implement a class that implements the DiffUtil.Callback that accepts the old and new list:": [
        "Ordinal_numbers",
        "Gizmo",
        "Gizmo",
        "Age",
        "Required_event",
        "Age",
        "Using",
        "Receiving"
    ],
    "Next, you would implement a swapItems ( ) method on your adapter to perform the diff and then invoke dispatchUpdates ( ) to notify the adapter whether the element was inserted, removed, moved, or changed:": [
        "Gizmo",
        "Execution",
        "Ingredients",
        "Intentionally_act",
        "Removing",
        "Telling",
        "Motion",
        "Temporal_collocation",
        "Undergo_change"
    ],
    "For a working example, see this sample code.": [
        "Being_employed",
        "Instance",
        "Grasp"
    ],
    "Scrolling to New Items If we are inserting elements to the front of the list and wish to maintain the position at the top, we can set the scroll position to the 1st element:": [
        "Entity",
        "Ingredients",
        "Part_orientational",
        "Ingredients",
        "Age",
        "Front_for",
        "Capability",
        "Intentionally_create",
        "Desiring",
        "Activity_ongoing"
    ],
    "If we are adding items to the end and wish to scroll to the bottom as items are added, we can notify the adapter that an additional element has been added and can call smoothScrollToPosition ( ) on the RecyclerView:": [
        "Entity",
        "Temporal_subregion",
        "Part_orientational",
        "Ingredients",
        "Increment",
        "Execution",
        "Desiring",
        "Telling",
        "Capability"
    ],
    "Implementing Endless Scrolling To implement fetching more data and appending to the end of the list as the user scrolls towards the bottom, use the addOnScrollListener ( ) from the RecyclerView and add an onLoadMore method leveraging the EndlessScrollViewScrollListener document in the guide.": [
        "Gizmo",
        "Part_orientational",
        "Execution",
        "Documents",
        "Increment",
        "Bringing",
        "Temporal_subregion",
        "Attaching",
        "Gizmo",
        "Using"
    ],
    "Configuring the RecyclerView The RecyclerView is quite flexible and customizable.": [],
    "Several of the options available are shown below.": [
        "Possibilities",
        "Evidence",
        "Quantity"
    ],
    "Performance We can also enable optimizations if the items are static and will not change for significantly smoother scrolling:": [
        "Performing_arts",
        "Entity",
        "Undergo_change",
        "Capability"
    ],
    "Layouts The positioning of the items is configured using the layout manager.": [
        "Entity",
        "People_by_vocation",
        "Using"
    ],
    "By default, we can choose between LinearLayoutManager, GridLayoutManager, and StaggeredGridLayoutManager.": [
        "Capability",
        "Choosing"
    ],
    "Linear displays items either vertically or horizontally:": [
        "Entity"
    ],
    "Displaying items in a grid or staggered grid works similarly:": [
        "Entity",
        "Self_motion",
        "Being_employed"
    ],
    "For example, a staggered grid might look like:": [
        "Instance",
        "Self_motion",
        "Likelihood",
        "Scrutiny"
    ],
    "We can build our own custom layout managers as outlined there.": [
        "Custom",
        "Summarizing",
        "Locative_relation",
        "Capability",
        "People_by_vocation",
        "Possession",
        "Building"
    ],
    "Decorations We can decorate the items using various decorators attached to the recyclerview such as the DividerItemDecoration:": [
        "Entity",
        "Diversity",
        "Using",
        "Abounding_with",
        "Being_attached",
        "Capability"
    ],
    "This decorator displays dividers between each item within the list as illustrated below:": [
        "Entity",
        "Evidence"
    ],
    "Grid Spacing Decorations Decorators can also be used for adding consistent spacing around items displayed in a grid layout or staggered grid.": [
        "Compatibility",
        "Entity",
        "Self_motion",
        "Likelihood",
        "Using"
    ],
    "Copy over this SpacesItemDecoration.java decorator into your project and apply to a RecyclerView using the addItemDecoration method.": [
        "Project",
        "Execution",
        "Using",
        "Duplication",
        "Using"
    ],
    "Refer to this staggered grid tutorial for a more detailed outline.": [
        "Self_motion",
        "Increment"
    ],
    "Animators RecyclerView supports custom animations for items as they enter, move, or get deleted using ItemAnimator.": [
        "Custom",
        "Entity",
        "Intentionally_act",
        "Using",
        "Execution",
        "Execution",
        "Taking_sides"
    ],
    "The default animation effects is defined by DefaultItemAnimator, and the complex implementation ( see source code ) shows that the logic necessary to ensure that animation effects are performed in a specific sequence ( remove, move, and add ).": [
        "Execute_plan",
        "Source_of_getting",
        "Sequence",
        "Motion",
        "Cause_change_of_position_on_a_scale",
        "Objective_influence",
        "Reference_text",
        "Being_necessary",
        "Intentionally_act",
        "Removing",
        "Communicate_categorization",
        "Evidence"
    ],
    "Currently, the fastest way to implement animations with RecyclerView is to use third-party libraries.": [
        "Gizmo",
        "Buildings",
        "Temporal_collocation",
        "Using"
    ],
    "The third-party recyclerview-animators library contains a lot of animations that you can use without needing to build your own.": [
        "Buildings",
        "Capability",
        "Building",
        "Quantity",
        "Possession",
        "Needing",
        "Using",
        "Inclusion"
    ],
    "Next, we can use any of the defined animators to change the behavior of our RecyclerView:": [
        "Categorization",
        "Capability",
        "Quantity",
        "Undergo_change",
        "Conduct",
        "Using"
    ],
    "For example, here's scrolling through a list after customizing the animation:": [
        "Instance",
        "Locative_relation"
    ],
    "For a further look into defining custom item animators, check out this custom RecyclerView item animation post.": [
        "Scrutiny",
        "Entity",
        "Custom",
        "Sending",
        "Increment",
        "Communicate_categorization"
    ],
    "New ItemAnimator interface There is also a new interface for the ItemAnimator interface.": [
        "Age",
        "Age",
        "Existence"
    ],
    "The old interface has now been deprecated to SimpleItemAnimator.": [
        "Age",
        "Temporal_collocation",
        "Judgment_communication"
    ],
    "This library adds a ItemHolderInfo class, which appears to be similar to the MoveInfo class defined by DefaultItemAnimator but used more generically to pass state information between animation transition states.": [
        "Buildings",
        "Political_locales",
        "Information",
        "Undergo_change",
        "Political_locales",
        "Increment",
        "Coming_to_be",
        "Process_end",
        "Using",
        "Categorization",
        "Similarity"
    ],
    "It is likely that the next version of DefaultItemAnimator will be simplified to use this new class and revised interface.": [
        "Locative_relation",
        "Age",
        "Likelihood",
        "Using"
    ],
    "Heterogeneous Views See this guide if you want to inflate multiple types of rows inside a single RecyclerView:": [
        "Locale_by_use",
        "Categorization",
        "Sole_instance",
        "Grasp",
        "Quarreling",
        "Quantity",
        "Cause_expansion",
        "Possession"
    ],
    "This is useful for feeds which contain various different types of items within a single list.": [
        "Diversity",
        "Similarity",
        "Entity",
        "Sole_instance",
        "Inclusion"
    ],
    "Handling Touch Events RecyclerView allows us to handle touch events with:": [
        "Quantity",
        "Quantity",
        "Event",
        "Event",
        "Resolve_problem",
        "Grant_permission"
    ],
    "Snap to Center Effect In certain cases, we might want a horizontal RecyclerView that allows the user to scroll through a list of items.": [
        "Cause_to_fragment",
        "Locale_by_use",
        "Objective_influence",
        "Instance",
        "Entity",
        "Likelihood",
        "Likelihood",
        "Grant_permission",
        "Desiring"
    ],
    "As the user scrolls, we might want items to `` snap to center'' as they are revealed.": [
        "Entity",
        "Evidence",
        "Likelihood",
        "Desiring",
        "Cause_to_fragment"
    ],
    "Such as in this example:": [
        "Instance"
    ],
    "LinearSnapHelper To achieve this snapping to center effect as the user scrolls we can use the built-in LinearSnapHelper as follows:": [
        "Locale_by_use",
        "Objective_influence",
        "Relative_time",
        "Capability",
        "Using",
        "Accomplishment"
    ],
    "For more sophisticated snapping behavior, read more about customizing these helpers and review related sample code here.": [
        "Reading",
        "Increment",
        "Conduct",
        "Stage_of_progress",
        "Cognitive_connection",
        "Locative_relation"
    ],
    "SnappyRecyclerView For a more manual approach, we can create a custom extension to RecyclerView called SnappyRecyclerView which will snap items to center as the user scrolls:": [
        "Custom",
        "Cause_to_fragment",
        "Entity",
        "Locale_by_use",
        "Increment",
        "Execution",
        "Capability",
        "Execution",
        "Make_agreement_on_action",
        "Intentionally_create"
    ],
    "Copy over the code from SnappyRecyclerView.java to your project.": [
        "Duplication",
        "Project"
    ],
    "Configure your new SnappyRecyclerView with a horizontal LinearLayoutManager:": [
        "Age"
    ],
    "Attach your adapter to the RecyclerView to populate the data into the horizontal list as normal.": [
        "Medical_conditions",
        "Residence",
        "Being_attached"
    ],
    "You can access the currently `` snapped'' item position with snappyRecyclerView.getFirstVisibleItemPosition ( ).": [
        "Temporal_collocation",
        "Entity",
        "Capability"
    ],
    "That's all, you should be set for a snap-to-center horizontal scrolling list !": [
        "Quantity",
        "Being_obligated",
        "Intentionally_create"
    ],
    "Attaching Click Handlers to Items If you'd like to perform an action whenever a user clicks on any item in your RecyclerView, you'll need to perform that action within a handler.": [
        "Sounds",
        "Entity",
        "Intentionally_act",
        "Entity",
        "Quantity",
        "Intentionally_act",
        "Required_event",
        "Sounds",
        "Attaching",
        "Experiencer_focus"
    ],
    "Below are three ways you can attach a handler to listen to clicks on a RecyclerView.": [
        "Perception_active",
        "Cardinal_numbers",
        "Capability",
        "Sounds",
        "Attaching",
        "Execution"
    ],
    "Note that this can be used to recognize clicks on items, but not for recognizing clicks on individual buttons or other elements within your items ... Attaching Click Listeners with Decorators The easiest solution for handling a click on an item in a RecyclerView is to add a decorator class such as this clever ItemClickSupport decorator and then implement the following code in your Activity or Fragment code:": [
        "Sounds",
        "Entity",
        "People",
        "Clothing_parts",
        "Ingredients",
        "Sounds",
        "Sounds",
        "Entity",
        "Cause_change_of_position_on_a_scale",
        "Gizmo",
        "Relative_time",
        "Intentionally_act",
        "Part_piece",
        "Likelihood",
        "Increment",
        "Attaching",
        "Intentionally_act",
        "Becoming_aware",
        "Becoming_aware",
        "Using",
        "Temporal_collocation"
    ],
    "This technique was originally outlined in this article.": [
        "Execution",
        "Summarizing"
    ],
    "Under the covers, this is wrapping the interface pattern described in detail below.": [
        "Filling",
        "Pattern",
        "Communicate_categorization"
    ],
    "So, if you apply this code above, you do not need the Simple Click Handler within ViewHolder described below.": [
        "Sounds",
        "Intentionally_act",
        "Using",
        "Required_event",
        "Communicate_categorization"
    ],
    "Simple Click Handler within ViewHolder Another solution for setting up item click handlers within a RecyclerView is to add code to your Adapter instead ... Unlike ListView which has the setOnItemClickListener method, RecyclerView does not have special provisions for attaching click handlers to items.": [
        "Sounds",
        "Entity",
        "Sounds",
        "Cause_change_of_position_on_a_scale",
        "Execution",
        "Terms_of_agreement",
        "Entity",
        "Increment",
        "Possession",
        "Attaching",
        "Intentionally_act",
        "Intentionally_create"
    ],
    "So, to achieve a similar effect manually ( instead of using the decorator utility above ), we can attach click events within the ViewHolder inside our adapter:": [
        "Sounds",
        "Objective_influence",
        "Similarity",
        "Event",
        "Capability",
        "Using",
        "Being_attached",
        "Accomplishment"
    ],
    "If we want the item to show a `` selected'' effect when pressed, we can set the android: background of the root layout for the row to ?": [
        "Entity",
        "Temporal_collocation",
        "Attempt_suasion",
        "Quarreling",
        "Objective_influence",
        "Capability",
        "Reasoning",
        "Intentionally_create",
        "Possession"
    ],
    "This creates the following effect:": [
        "Objective_influence",
        "Relative_time",
        "Creating"
    ],
    "Attaching Click Handlers using Listeners In certain cases, you'd want to setup click handlers for views within the RecyclerView but define the click logic within the containing Activity or Fragment ( i.e bubble up events from the adapter ).": [
        "Sounds",
        "Instance",
        "Sounds",
        "Intentionally_act",
        "Part_piece",
        "Event",
        "Using",
        "Likelihood",
        "Inclusion",
        "Attaching",
        "Categorization",
        "Communicate_categorization",
        "Desiring"
    ],
    "To achieve this, create a custom listener within the adapter and then fire the events upwards to an interface implementation defined within the parent:": [
        "Custom",
        "Event",
        "Kinship",
        "Accomplishment",
        "Execute_plan",
        "Intentionally_create",
        "Categorization",
        "Temporal_collocation",
        "Shoot_projectiles"
    ],
    "Then we can attach a click handler to the adapter with:": [
        "Sounds",
        "Temporal_collocation",
        "Being_attached",
        "Capability"
    ],
    "See this detailed stackoverflow post which describes how to setup item-level click handlers when using RecyclerView.": [
        "Sounds",
        "Using",
        "Temporal_collocation",
        "Grasp"
    ],
    "Implementing Pull to Refresh The SwipeRefreshLayout should be used to refresh the contents of a RecyclerView via a vertical swipe gesture.": [
        "Gesture",
        "Manipulation",
        "Experiencer_obj",
        "Being_obligated",
        "Experiencer_obj",
        "Using"
    ],
    "See our detailed RecyclerView with SwipeRefreshLayout guide for a step-by-step tutorial on implementing pull to refresh.": [
        "Manipulation",
        "Experiencer_obj",
        "Grasp",
        "Execute_plan"
    ],
    "Swipe Detection RecyclerView has an OnFlingListener method that can be used to implement custom fling behavior.": [
        "Gizmo",
        "Custom",
        "Conduct",
        "Inclusion",
        "Likelihood",
        "Using",
        "Execution"
    ],
    "Download this RecyclerViewSwipeListener and you can handle custom swipe detection by adding this class to your RecyclerView:": [
        "Custom",
        "Capability",
        "Resolve_problem"
    ],
    "Using Uncover library If your use RecyclerView to implement ` infinite scrolling' over output of the web service, or some other resource that requires slow background calls with multiple items at once, it may be reasonable to try the Uncover library from Maven central:": [
        "Buildings",
        "Gizmo",
        "Network",
        "Public_services",
        "Relational_quantity",
        "Contacting",
        "Entity",
        "Mental_property",
        "Expertise",
        "Increment",
        "Quantity",
        "Likelihood",
        "Using",
        "Locative_relation",
        "Taking_time",
        "Attempt",
        "Time_vector",
        "Have_as_requirement"
    ],
    "This library requires you to implement the primary data fetcher, mediating between fast single item UI-thread calls on model and slow chunked calls on the background on your fetcher:": [
        "Buildings",
        "Gizmo",
        "Speed",
        "Entity",
        "Vehicle",
        "Sole_instance",
        "First_rank",
        "Taking_time",
        "Contacting",
        "Have_as_requirement"
    ],
    "The model.install glues model, view and adapter into working implementation.": [
        "Attaching",
        "Opinion",
        "Being_employed",
        "Execute_plan",
        "Gizmo"
    ],
    "When the user swipes forward quickly, the library skips unneeded fetches of data between the new and old position, last requested data are fetched first, and any pending requests are dropped from the queue if they data are no longer visible.": [
        "Temporal_collocation",
        "Buildings",
        "Execution",
        "Age",
        "Execution",
        "Temporal_collocation",
        "Speed",
        "Quantity",
        "Age",
        "Bringing",
        "Obviousness",
        "Ordinal_numbers",
        "Bringing",
        "Self_motion",
        "Relative_time",
        "Sending",
        "Change_position_on_a_scale"
    ],
    "https://developer.android.com/reference/androidx/recyclerview/widget/RecyclerView.html http://www.grokkingandroid.com/first-glance-androids-recyclerview/ http://www.grokkingandroid.com/statelistdrawables-for-recyclerview-selection/ http://www.bignerdranch.com/blog/recyclerview-part-1-fundamentals-for-listview-experts/ https://developer.android.com/training/material/lists-cards.html http://antonioleiva.com/recyclerview/ https://code.tutsplus.com/tutorials/getting-started-with-recyclerview-and-cardview-on-android--cms-23465 https://code.tutsplus.com/tutorials/introduction-to-the-new-lollipop-activity-transitions--cms-23711": [],
    "Overviews The RecyclerView is a ViewGroup that renders any adapter-based view in a similar way.": [
        "Quantity",
        "Similarity",
        "Categorization"
    ],
    "keyUp called when key is still pressed": [
        "Temporal_collocation",
        "Importance",
        "Continued_state_of_affairs",
        "Execution",
        "Attempt_suasion"
    ],
    "When the user gives focus to an editable text view such as an EditText element and the user has a hardware keyboard attached, all input is handled by the system.": [
        "Temporal_collocation",
        "Opinion",
        "Ingredients",
        "Gizmo",
        "Being_attached",
        "Quantity",
        "Place_weight_on",
        "Inclusion",
        "Intentionally_act",
        "Giving"
    ],
    "If, however, you'd like to intercept or directly handle the keyboard input yourself, you can do so by implementing callback methods from the KeyEvent.Callback interface, such as onKeyDown ( ) and onKeyMultiple ( ).": [
        "Concessive",
        "Intercepting",
        "Execution",
        "Capability",
        "Resolve_problem",
        "Intentionally_act",
        "Execute_plan",
        "Experiencer_focus"
    ],
    "Both the Activity and View class implement the KeyEvent.Callback interface, so you should generally override the callback methods in your extension of these classes as appropriate.": [
        "Intentionally_act",
        "Categorization",
        "Gizmo",
        "Documents",
        "Execution",
        "Being_obligated"
    ],
    "Note: When handling keyboard events with the KeyEvent class and related APIs, you should expect that such keyboard events come only from a hardware keyboard.": [
        "Becoming_aware",
        "Temporal_collocation",
        "Event",
        "Cognitive_connection",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Sole_instance",
        "Expectation"
    ],
    "You should never rely on receiving key events for any key on a soft input method ( an on-screen keyboard ).": [
        "Event",
        "Execution",
        "Being_obligated",
        "Importance",
        "Quantity",
        "Frequency",
        "Reliance",
        "Receiving"
    ],
    "To handle an individual key press, implement onKeyDown ( ) or onKeyUp ( ) as appropriate.": [
        "People",
        "Cause_motion",
        "Gizmo",
        "Importance",
        "Resolve_problem"
    ],
    "Usually, you should use onKeyUp ( ) if you want to be sure that you receive only one event.": [
        "Sole_instance",
        "Cardinal_numbers",
        "Being_obligated",
        "Event",
        "Using",
        "Receiving",
        "Likelihood",
        "Desiring"
    ],
    "If the user presses and holds the button, then onKeyDown ( ) is called multiple times.": [
        "Containing",
        "Clothing_parts",
        "Timespan",
        "Cause_motion",
        "Quantity",
        "Execution",
        "Temporal_collocation"
    ],
    "For example, this implementation responds to some keyboard keys to control a game:": [
        "Instance",
        "Execute_plan",
        "Relational_quantity",
        "Natural_features",
        "Control",
        "Response"
    ],
    "To respond to modifier key events such as when a key is combined with Shift or Control, you can query the KeyEvent that's passed to the callback method.": [
        "Temporal_collocation",
        "Cause_to_amalgamate",
        "Change_position_on_a_scale",
        "Natural_features",
        "Execution",
        "Event",
        "Importance",
        "Control",
        "Capability",
        "Questioning",
        "Response"
    ],
    "Several methods provide information about modifier keys such as getModifiers ( ) and getMetaState ( ).": [
        "Execution",
        "Information",
        "Natural_features",
        "Quantity",
        "Supply"
    ],
    "However, the simplest solution is to check whether the exact modifier key you care about is being pressed with methods such as isShiftPressed ( ) and isCtrlPressed ( ).": [
        "Concessive",
        "Attempt_suasion",
        "Execution",
        "Correctness",
        "Importance",
        "Relational_quantity",
        "Inspecting"
    ],
    "For example, here's the onKeyUp ( ) implementation again, with some extra handling for when the Shift key is held down with one of the keys:": [
        "Instance",
        "Locative_relation",
        "Execute_plan",
        "Relational_quantity",
        "Temporal_collocation",
        "Change_position_on_a_scale",
        "Importance",
        "Ingestion",
        "Natural_features",
        "Cardinal_numbers",
        "Containing"
    ],
    "Support for GoogleApiClient and new FusedLocationProviderApi": [
        "Taking_sides",
        "Age"
    ],
    "Using the Google Play services location APIs, your app can request the last known location of the user's device.": [
        "Performers_and_roles",
        "Public_services",
        "Locale",
        "Gizmo",
        "Relative_time",
        "Awareness",
        "Using",
        "Execution",
        "Capability"
    ],
    "In most cases, you are interested in the user's current location, which is usually equivalent to the last known location of the device.": [
        "Instance",
        "Gizmo",
        "Relational_quantity",
        "Temporal_collocation",
        "Relative_time",
        "Awareness",
        "Locale",
        "Desiring"
    ],
    "Specifically, use the fused location provider to retrieve the device's last known location.": [
        "Locale",
        "Gizmo",
        "Awareness",
        "Being_attached",
        "Relative_time",
        "Using"
    ],
    "The fused location provider is one of the location APIs in Google Play services.": [
        "Being_attached",
        "Locale",
        "Performers_and_roles",
        "Public_services",
        "Cardinal_numbers"
    ],
    "It manages the underlying location technology and provides a simple API so that you can specify requirements at a high level, like high accuracy or low power.": [
        "Locale",
        "Being_necessary",
        "Execution",
        "Gizmo",
        "Rank",
        "Position_on_a_scale",
        "Trust",
        "Position_on_a_scale",
        "Supply",
        "Capability",
        "Operating_a_system"
    ],
    "It also optimizes the device's use of battery power.": [
        "Gizmo",
        "Offenses",
        "Execution"
    ],
    "Note: When your app is running in the background, access to location should be critical to the core functionality of the app and is accompanied with proper disclosure to users.": [
        "Temporal_collocation",
        "Having_or_lacking_access",
        "Locale",
        "Gizmo",
        "Reveal_secret",
        "Proper_reference",
        "Being_obligated",
        "Cotheme",
        "Execution",
        "Judgment_communication"
    ],
    "This lesson shows you how to make a single request for the location of a device using the getLastLocation ( ) method in the fused location provider.": [
        "Gizmo",
        "Execution",
        "Being_attached",
        "Locale",
        "Sole_instance",
        "Using",
        "Execution",
        "Causation",
        "Evidence"
    ],
    "To access the fused location provider, your app's development project must include Google Play services.": [
        "Locale",
        "Performers_and_roles",
        "Rite",
        "Project",
        "Being_attached",
        "Event",
        "Being_obligated",
        "Inclusion"
    ],
    "Download and install the Google Play services component via the SDK Manager and add the library to your project.": [
        "Performers_and_roles",
        "Public_services",
        "People_by_vocation",
        "Buildings",
        "Project",
        "Ingredients",
        "Installing"
    ],
    "For details, see the guide to Setting Up Google Play Services.": [
        "Performers_and_roles",
        "Public_services",
        "Intentionally_create",
        "Grasp"
    ],
    "Apps whose features use location services must request location permissions, depending on the use cases of those features.": [
        "Locale",
        "Public_services",
        "Grant_permission",
        "Instance",
        "Using",
        "Being_obligated",
        "Execution"
    ],
    "In your activity's onCreate ( ) method, create an instance of the Fused Location Provider Client as the following code snippet shows.": [
        "Execution",
        "Instance",
        "Being_attached",
        "Locale",
        "Relative_time",
        "Intentionally_act",
        "Part_piece",
        "Evidence",
        "Intentionally_create"
    ],
    "Once you have created the Location Services client you can get the last known location of a user's device.": [
        "Locale",
        "Public_services",
        "Gizmo",
        "Frequency",
        "Relative_time",
        "Locale",
        "Awareness",
        "Capability",
        "Intentionally_create",
        "Execution"
    ],
    "When your app is connected to these you can use the fused location provider's getLastLocation ( ) method to retrieve the device location.": [
        "Being_attached",
        "Locale",
        "Gizmo",
        "Temporal_collocation",
        "Capability",
        "Cognitive_connection",
        "Execution",
        "Using"
    ],
    "The precision of the location returned by this call is determined by the permission setting you put in your app manifest, as described in the guide on how to request location permissions.": [
        "Locale",
        "Execution",
        "Grant_permission",
        "Grant_permission",
        "Execution",
        "Causation",
        "Execution",
        "Communicate_categorization",
        "Taking_time"
    ],
    "To request the last known location, call the getLastLocation ( ) method.": [
        "Execution",
        "Locale",
        "Execution",
        "Relative_time",
        "Awareness",
        "Execution"
    ],
    "The following code snippet illustrates the request and a simple handling of the response:": [
        "Relative_time",
        "Execution",
        "Response",
        "Part_piece",
        "Evidence"
    ],
    "The getLastLocation ( ) method returns a Task that you can use to get a Location object with the latitude and longitude coordinates of a geographic location.": [
        "Execution",
        "Being_obligated",
        "Locale",
        "Locale",
        "Execution",
        "Using",
        "Capability",
        "Execution"
    ],
    "The location object may be null in the following situations:": [
        "Locale",
        "Relative_time",
        "Likelihood",
        "Being_in_effect"
    ],
    "You might expect the Location object that's contained in the most recent call to getLastLocation ( ) to be the most accurate.": [
        "Locale",
        "Correctness",
        "Likelihood",
        "Relative_time",
        "Execution",
        "Expectation",
        "Inclusion"
    ],
    "However, because the accuracy of a location varies, the most recent value isn't necessarily the best.": [
        "Concessive",
        "Trust",
        "Locale",
        "Cause_change",
        "Relative_time",
        "Desirability"
    ],
    "You should include logic for choosing which location to show based on several criteria.": [
        "Locale",
        "Reasoning",
        "Being_obligated",
        "Quantity",
        "Choosing",
        "Inclusion"
    ],
    "The set of criteria also varies, depending on the use cases of your app and results from field testing.": [
        "Fields",
        "Operational_testing",
        "Cause_change",
        "Causation",
        "Instance"
    ],
    "To validate the accuracy of a location that's returned from getLastLocation ( ), complete steps that include the following:": [
        "Trust",
        "Locale",
        "Intentionally_act",
        "Completeness",
        "Execution",
        "Inclusion"
    ],
    "Location is turned off in the device settings.": [
        "Locale",
        "Locative_relation",
        "Gizmo",
        "Becoming"
    ],
    "The result could be null even if the last location was previously retrieved because disabling location also clears the cache.": [
        "Causation",
        "Render_nonfunctional",
        "Locale",
        "Emptying",
        "Relative_time",
        "Being_in_effect",
        "Capability",
        "Time_vector"
    ],
    "The device never recorded its location, which could be the case of a new device or a device that has been restored to factory settings.": [
        "Gizmo",
        "Locale",
        "Locale_by_use",
        "Age",
        "Frequency",
        "Rejuvenation",
        "Reasoning",
        "Capability",
        "Recording"
    ],
    "Google Play services on the device has restarted, and there is no active Fused Location Provider client that has requested location after the services restarted.": [
        "Performers_and_roles",
        "Gizmo",
        "Quantity",
        "Being_active",
        "Locale",
        "Locale",
        "Public_services",
        "Activity_resume",
        "Being_attached",
        "Execution",
        "Existence"
    ],
    "To avoid this situation you can create a new client and request location updates yourself.": [
        "Execution",
        "Locale",
        "Age",
        "Capability",
        "Intentionally_create",
        "Preventing"
    ],
    "For more information, see Receiving Location Updates.": [
        "Information",
        "Locale",
        "Increment",
        "Perception_experience",
        "Receiving"
    ],
    "Check whether the location retrieved is significantly newer than the previously fetched location.": [
        "Locale",
        "Bringing",
        "Time_vector"
    ],
    "Check whether the accuracy claimed by the location is better or worse than that of the previous estimate.": [
        "Locale",
        "Time_vector",
        "Estimated_value",
        "Trust",
        "Desirability",
        "Desirability"
    ],
    "Check the provider that's associated with the new location.": [
        "Locale",
        "Age",
        "Cognitive_connection",
        "Inspecting"
    ],
    "Decide whether you trust this provider more than the one used in your app's cached location.": [
        "Cardinal_numbers",
        "Locale",
        "Trust",
        "Using",
        "Increment"
    ],
    "This is happening because FusedLocationProviderApi deprecated in a recent version of google play services.": [
        "Performers_and_roles",
        "Public_services",
        "Relative_time",
        "Event",
        "Judgment_communication"
    ],
    "You can check it LINK.": [
        "Capability",
        "Inspecting"
    ],
    "The official guide now suggests using LINK.": [
        "Execution",
        "Temporal_collocation",
        "Using"
    ],
    "You can find the detailed guide LINK.": [
        "Capability",
        "Locating"
    ],
    "for e.g inside onCreate -LRB- -RRB- or onViewCreated -LRB- -RRB- create a FusedLocationProviderClient instance": [
        "Instance",
        "Intentionally_create"
    ],
    "Kotlin": [],
    "and for requesting the last known location all you have to do is call": [
        "Execution",
        "Locale",
        "Quantity",
        "Awareness",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Relative_time"
    ],
    "Java": [],
    "Simple, Isn't it ?": [],
    "Yesterday Google updated its official developer page with LINK that says": [
        "Calendric_unit",
        "Execution",
        "Contacting"
    ],
    "Please continue using the FusedLocationProviderApi class and don't migrate to the FusedLocationProviderClient class until Google Play services version 12.0.0 is available, which is expected to ship in early 2018.": [
        "Intentionally_act",
        "Performers_and_roles",
        "Public_services",
        "Vehicle",
        "Temporal_subregion",
        "Expectation",
        "Using",
        "Activity_ongoing"
    ],
    "Using the FusedLocationProviderClient before version 12.0.0 causes the client app to crash when Google Play services is updated on the device.": [
        "Impact",
        "Temporal_collocation",
        "Performers_and_roles",
        "Public_services",
        "Gizmo",
        "Using",
        "Causation"
    ],
    "We apologize for any inconvenience this may have caused.": [
        "Quantity",
        "Likelihood",
        "Causation"
    ],
    "LINK So I think we should continue using the deprecated LocationServices.FusedLocationApi until Google resolves the issue.": [
        "Point_of_dispute",
        "Being_obligated",
        "Judgment_communication",
        "Process_continue",
        "Resolve_problem",
        "Using",
        "Opinion"
    ],
    "The warning is gone now.": [
        "Temporal_collocation",
        "Motion"
    ],
    "LINK says: LINK I think Play Services won't crash when it updates itself in the background.": [
        "Performers_and_roles",
        "Rite",
        "Temporal_collocation",
        "Impact",
        "Awareness"
    ],
    "So we can use new FusedLocationProviderClient now.": [
        "Age",
        "Capability",
        "Using",
        "Temporal_collocation"
    ],
    "Yes, it's deprecated !": [],
    "Here are some points you'll need while using new LINK.": [
        "Locative_relation",
        "Relational_quantity",
        "Age",
        "Using",
        "Locale",
        "Have_as_requirement"
    ],
    "And our fragment_location.": [],
    "problem is with your import statement": [
        "Predicament",
        "Importing"
    ],
    "remove this": [],
    "add": [],
    "Please make your Activity implement LocationListener from Google Services, not from Android OS, this worked for me.": [
        "Gizmo",
        "Public_services",
        "Intentionally_act",
        "Being_employed",
        "Causation",
        "Emotion_directed"
    ],
    "use getFusedLocationProviderClient instead LocationServices.FusedLocationApi.": [],
    "java": [],
    "Use this method": [],
    "Yes, it has been deprecated.": [
        "Judgment_communication"
    ],
    "FusedLocationProviderClient is easier than FusedLocationProviderApi, because FusedLocationProviderApiusually requires GoogleApiClient too, which we need to connect to Google Play Service manually.": [
        "Performers_and_roles",
        "Public_services",
        "Sufficiency",
        "Required_event",
        "Have_as_requirement",
        "Cognitive_connection"
    ],
    "If you previously used GoogleApiClient, now GoogleApiClientis no longer needed -LRB- LINK -RRB-.": [
        "Temporal_collocation",
        "Quantity",
        "Duration_attribute",
        "Time_vector",
        "Required_event",
        "Using"
    ],
    "To get last location, can use this function:": [
        "Locale",
        "Relative_time",
        "Execution",
        "Using",
        "Capability"
    ],
    "Knowing your user's location is useful information in many applications we develop and use today.": [
        "Locale",
        "Using",
        "Temporal_collocation",
        "Quantity",
        "Cause_to_make_progress",
        "Awareness",
        "Using",
        "Information"
    ],
    "There are a lot of popular location-based applications out there that are making our lives easier, as well as changing the way that we use these services.": [
        "Public_services",
        "Desirability",
        "Causation",
        "Using",
        "Quantity",
        "Execution",
        "Cause_change",
        "Existence",
        "Existence"
    ],
    "An example is the wildly popular application Foursquare, where users who frequent to an establishment and `` check in'' often win discounts.": [
        "Instance",
        "Using",
        "Locative_relation",
        "Desirability",
        "Intentionally_create",
        "Frequency",
        "Frequency",
        "Getting"
    ],
    "Uber, which helps you get a ride from your mobile phone at a lower rate than a normal taxi.": [
        "Bringing",
        "Contacting",
        "Frequency",
        "Vehicle",
        "Mental_property",
        "Operate_vehicle",
        "Execution",
        "Assistance"
    ],
    "The list is large and still growing.": [
        "Change_position_on_a_scale",
        "Dimension",
        "Continued_state_of_affairs"
    ],
    "In this article, we are going to build a simple Android application to determine the user's latitude and longitude using Android's Google Location Services API.": [
        "Locale",
        "Public_services",
        "Using",
        "Building",
        "Using",
        "Motion"
    ],
    "When developing Android applications, there are a couple of ways to get the user's location.": [
        "Locale",
        "Cause_to_make_progress",
        "Temporal_collocation",
        "Execution",
        "Personal_relationship",
        "Execution",
        "Existence"
    ],
    "Package `` android.location'' The package `` android.location'' has been available since Android was first introduced, and it gives us access to location services.": [
        "Execution",
        "Execution",
        "Ordinal_numbers",
        "Having_or_lacking_access",
        "Locale",
        "Public_services",
        "Giving"
    ],
    "These services allow applications to obtain periodic updates of the device's geographical location.": [
        "Gizmo",
        "Locale",
        "Public_services",
        "Grant_permission",
        "Frequency",
        "Getting"
    ],
    "The package provides two means of acquiring location data:": [
        "Execution",
        "Execution",
        "Locale",
        "Cardinal_numbers",
        "Getting",
        "Supply"
    ],
    "LocationManager.GPS _ PROVIDER: Determines location using satellites.": [
        "Locale",
        "Using"
    ],
    "Depending on the conditions, this provider may take a while to return a location fix.": [
        "State_of_entity",
        "Locale",
        "Predicament",
        "Likelihood",
        "Have_as_requirement",
        "Execution",
        "Measure_duration"
    ],
    "LocationManager.NETWORK _ PROVIDER: Determines location based on availability of nearby cell towers and WiFi access points.": [
        "Locale",
        "Building_subparts",
        "Having_or_lacking_access",
        "Locale",
        "Buildings"
    ],
    "This is faster than GPS_PROVIDER.": [],
    "When you are looking for user location you have to play with these providers and their availability.": [
        "Temporal_collocation",
        "Locale",
        "Performers_and_roles",
        "Scrutiny",
        "Being_obligated"
    ],
    "Ideally you obtain the first location using NETWORK_PROVIDER, which might not be as accurate, but is much faster.": [
        "Locale",
        "Correctness",
        "Ordinal_numbers",
        "Likelihood",
        "Relational_quantity",
        "Getting",
        "Using"
    ],
    "You might then make an attempt to increase accuracy by listening for a better location fix using the GPS_PROVIDER.": [
        "Trust",
        "Locale",
        "Predicament",
        "Likelihood",
        "Change_position_on_a_scale",
        "Desirability",
        "Temporal_collocation",
        "Using",
        "Perception_active",
        "Attempt",
        "Causation"
    ],
    "The APIs provided by this package are fairly low-level, and require the developer of the application to handle the finer details of determining when to request location data and schedule calls to the API in an optimized way.": [
        "Execution",
        "Temporal_collocation",
        "Locale",
        "Degree",
        "Desirability",
        "Contacting",
        "Supply",
        "Execution",
        "Coming_to_believe",
        "Resolve_problem",
        "Using",
        "Have_as_requirement"
    ],
    "To improve developer experience with location based system services and ease the process of developing location-aware applications, Google introduced a new way of requesting a user's location using Google Play Services.": [
        "Expertise",
        "Locale",
        "Gizmo",
        "Public_services",
        "Cure",
        "Execution",
        "Performers_and_roles",
        "Public_services",
        "Age",
        "Cause_to_make_progress",
        "Using",
        "Execution",
        "Cause_to_make_progress"
    ],
    "It offers a simpler API with higher accuracy, low-power geofencing, and much more.": [
        "Trust",
        "Relational_quantity",
        "Increment",
        "Position_on_a_scale",
        "Offering"
    ],
    "Google Location Services API Google Location Services API, also known as FusedLocationProviderApi, is Google's recommended way of getting a user's location.": [
        "Locale",
        "Public_services",
        "Locale",
        "Execution",
        "Execution"
    ],
    "It provides the best accuracy based on our needs.": [
        "Trust",
        "Desirability",
        "Needing",
        "Supply"
    ],
    "Some of the advantages of using this API over the previous one are:": [
        "Relational_quantity",
        "Time_vector",
        "Cardinal_numbers",
        "Using"
    ],
    "Simplicity: Unlike the previous API, you no longer have to deal with multiple providers.": [
        "Time_vector",
        "Make_agreement_on_action",
        "Temporal_collocation",
        "Quantity",
        "Being_obligated"
    ],
    "Instead, you specify high-level needs, such as `` high accuracy'' or `` low power'', and it will take a suitable approach.": [
        "Execution",
        "Have_as_requirement",
        "Position_on_a_scale",
        "Position_on_a_scale",
        "Suitability",
        "Have_as_requirement"
    ],
    "Availability: Gives your app immediate access to the best, most recent known location.": [
        "Having_or_lacking_access",
        "Desirability",
        "Relative_time",
        "Locale",
        "Awareness",
        "Giving"
    ],
    "Usually this information is readily available, you just have to ask for it.": [
        "Information",
        "Being_obligated",
        "Execution"
    ],
    "Power-efficiency: Minimizes your application's usage of power.": [
        "Execution",
        "Using"
    ],
    "Versatility: Meets a wide range of needs, from foreground uses - needing highly accurate location data, to background uses - requiring only periodic location updates with negligible power impact.": [
        "Come_together",
        "Needing",
        "Sole_instance",
        "Execution",
        "Objective_influence",
        "Range",
        "Dimension",
        "Correctness",
        "Locale",
        "Imposing_obligation",
        "Required_event",
        "Frequency"
    ],
    "Let us build a location-based Android application using this API.": [
        "Using",
        "Building",
        "Using",
        "Grant_permission"
    ],
    "For this, we will use Google's suggested IDE for Android application development - Android Studio.": [
        "Using",
        "Building_subparts",
        "Event",
        "Using"
    ],
    "Getting started with Android Studio is pretty straight forward.": [
        "Building_subparts",
        "Sending",
        "Activity_start",
        "Getting"
    ],
    "Their website describes the procedure involving the installation and configuration of Android Studio in great detail, including how to bootstrap your first Android application for development.": [
        "Execution",
        "Building_subparts",
        "Ordinal_numbers",
        "Desirability",
        "Using",
        "Event",
        "Installing",
        "Inclusion",
        "Participation"
    ],
    "Android Studio should make things super-easy for us.": [
        "Building_subparts",
        "Being_obligated",
        "Causation"
    ],
    "However, we will need to begin by configuring the build script and adding Google Play Services as a dependency for this application.": [
        "Concessive",
        "Performers_and_roles",
        "Public_services",
        "Reliance",
        "Using",
        "Required_event",
        "Building",
        "Process_start"
    ],
    "This can be done by modifying the `` build.gradle'' file as follows:": [
        "Cause_change",
        "Relative_time",
        "Likelihood",
        "Intentionally_act"
    ],
    "At the time I am writing this article, the latest version of Google Play Services available is 6.5.87.": [
        "Performers_and_roles",
        "Public_services",
        "Relative_time",
        "Temporal_collocation"
    ],
    "Make sure you always check for the latest version available before you start.": [
        "Frequency",
        "Relative_time",
        "Activity_start",
        "Inspecting"
    ],
    "In case newer versions comes out later down the road and you decide to update it for your own projects, test all location related features against all versions of Android you are supporting.": [
        "Instance",
        "Locative_relation",
        "Project",
        "Quantity",
        "Locale",
        "Execution",
        "Time_vector",
        "Deciding",
        "Possession",
        "Taking_sides",
        "Time_vector",
        "Cognitive_connection",
        "Operational_testing"
    ],
    "At this point, we should be able to start doing the actual work for our application.": [
        "Locale",
        "Working_on",
        "Using",
        "Actually_occurring_entity",
        "Being_obligated",
        "Intentionally_act",
        "Activity_start",
        "Capability"
    ],
    "Requesting Permission, Configuring AndroidManifest.xml Androids have specific security features that would prevent any arbitrary application from requesting a precise user location.": [
        "Grant_permission",
        "Being_at_risk",
        "Quantity",
        "Using",
        "Accuracy",
        "Locale",
        "Execution",
        "Execution",
        "Preventing"
    ],
    "To solve this, we need to edit `` AndroidManifest.xml'' and add the permission we require for this application:": [
        "Grant_permission",
        "Using",
        "Resolve_problem",
        "Required_event",
        "Have_as_requirement",
        "Cause_change_of_position_on_a_scale"
    ],
    "While we are at it, we should also define the version of Google Play Services we are using for this application:": [
        "Performers_and_roles",
        "Public_services",
        "Using",
        "Being_obligated",
        "Using",
        "Communicate_categorization"
    ],
    "Checking for Google Play Services Availability Before accessing features provided by Google Play Services, we must check if the device has Google Play Services installed, and that the version is the one we intend to use ( 6.5.87 ).": [
        "Performers_and_roles",
        "Gizmo",
        "Public_services",
        "Cardinal_numbers",
        "Being_obligated",
        "Installing",
        "Using",
        "Inspecting",
        "Supply",
        "Inspecting"
    ],
    "This method will check for Google Play Services, and in case the device doesn't have it installed ( it's rare, but I've seen such cases ), it will open a dialog with the corresponding error and invite the user to install/update Google Play Services from the Google Play Store.": [
        "Execution",
        "Performers_and_roles",
        "Instance",
        "Gizmo",
        "Discussion",
        "Rite",
        "Instance",
        "Storing",
        "Intentionally_act",
        "Frequency",
        "Grasp",
        "Secrecy_status",
        "Installing",
        "Inspecting",
        "Execution"
    ],
    "After the user completes the resolution provided by `` GooglePlayServicesUtil.getErrorDialog ( )'', a callback method `` onActivityResult ( )'' is fired, so we have to implement some logic to handle that call:": [
        "Completeness",
        "Shoot_projectiles",
        "Gizmo",
        "Execution",
        "Execution",
        "Relational_quantity",
        "Supply",
        "Resolve_problem",
        "Being_obligated"
    ],
    "Accessing Google APIs To access Google APIs, we just need to perform one more step: create an instance of GoogleApiClient.": [
        "Instance",
        "Required_event",
        "Increment",
        "Cardinal_numbers",
        "Intentionally_act",
        "Intentionally_act",
        "Intentionally_create"
    ],
    "The Google API Client provides a common entry point to all the Google Play services, and manages the network connection between the user's device and each Google service.": [
        "Execution",
        "Locale",
        "Quantity",
        "Performers_and_roles",
        "Network",
        "Gizmo",
        "Public_services",
        "Public_services",
        "Social_connection",
        "Supply",
        "Operating_a_system"
    ],
    "Our first step here is to initiate the connection.": [
        "Social_connection",
        "Ordinal_numbers",
        "Locative_relation",
        "Activity_start",
        "Intentionally_act"
    ],
    "I usually call this code from `` onCreate'' method of the activity:": [
        "Execution",
        "Intentionally_act",
        "Execution"
    ],
    "By chaining a series of method calls, we are specifying the callback interface implementation and the Location Service API that we want to use.": [
        "Accoutrements",
        "Execution",
        "Execute_plan",
        "Locale",
        "Public_services",
        "Contacting",
        "Possession",
        "Sequence",
        "Using"
    ],
    "The interface implementation, in this case `` this'', will receive response to the asynchronous `` connect ( )'' method when the connection to Google Play Services succeed, fail, or become suspended.": [
        "Execute_plan",
        "Instance",
        "Execution",
        "Temporal_collocation",
        "Performers_and_roles",
        "Public_services",
        "Activity_pause",
        "Receiving",
        "Social_connection",
        "Successful_action",
        "Success_or_failure",
        "Becoming",
        "Response"
    ],
    "After adding this code, our `` MainActivity'' should look like this:": [
        "Being_obligated",
        "Scrutiny"
    ],
    "Then in our `` onStart'' method we call the `` connect'' method and wait for `` onConnected'' callback method be invoked:": [
        "Temporal_collocation",
        "Execution",
        "Execution",
        "Waiting"
    ],
    "The `` onConnected'' method will look like this:": [
        "Execution",
        "Scrutiny"
    ],
    "This callback is fired when Google Play Services is connected, which means by then we should have the last known location.": [
        "Temporal_collocation",
        "Performers_and_roles",
        "Public_services",
        "Locale",
        "Temporal_collocation",
        "Awareness",
        "Being_obligated",
        "Shoot_projectiles",
        "Cognitive_connection",
        "Relative_time",
        "Evidence"
    ],
    "However, this location can be null ( it's rare but not impossible ).": [
        "Concessive",
        "Locale",
        "Frequency",
        "Being_in_effect",
        "Capability",
        "Likelihood"
    ],
    "In that case, what I recommend is to listen for location updates which will be covered next.": [
        "Instance",
        "Perception_active",
        "Locale",
        "Topic"
    ],
    "Listening for Location Updates After you invoke `` getLastLocation'', you might want to request periodic updates from the Fused Location Provider.": [
        "Perception_active",
        "Locale",
        "Being_attached",
        "Likelihood",
        "Frequency",
        "Execution",
        "Desiring"
    ],
    "Depending on your application, this period could be short or long.": [
        "Using",
        "Frequency",
        "Dimension",
        "Capability",
        "Dimension"
    ],
    "For instance, if you are building an application that tracks a user's location while he drives, you will need to listen for updates on short intervals.": [
        "Instance",
        "Using",
        "Locale",
        "Frequency",
        "Self_motion",
        "Dimension",
        "Required_event",
        "Building",
        "Perception_active"
    ],
    "On the other hand, if your application is about sharing user location with his friend, you maybe just need to request the location once in a while.": [
        "Observable_body_parts",
        "Using",
        "Locale",
        "Increment",
        "Personal_relationship",
        "Measure_duration",
        "Relational_quantity",
        "Required_event",
        "Frequency",
        "Execution"
    ],
    "Creating a request is pretty easy - you can call this method inside the `` onCreate'' method:": [
        "Execution",
        "Execution",
        "Intentionally_create",
        "Capability",
        "Difficulty",
        "Execution"
    ],
    "We instantiate a new LocationRequest object.": [
        "Age"
    ],
    "Set the interval to 20 seconds ( 20000 milliseconds ).": [
        "Frequency",
        "Cardinal_numbers"
    ],
    "Furthermore, we set a throttled update rate to 5 seconds.": [
        "Frequency",
        "Intentionally_create"
    ],
    "This tells the API to provide updates every 20 seconds ( preferably ), but if there is a change available within a 5 second period, it should provide that too.": [
        "Frequency",
        "Undergo_change",
        "Frequency",
        "Cardinal_numbers",
        "Measure_duration",
        "Being_obligated",
        "Sufficiency",
        "Supply",
        "Existence"
    ],
    "Finally, we set the priority to `` PRIORITY_HIGH_ACCURACY'', among the other available priority options: PRIORITY_BALANCED_POWER_ACCURACY, PRIORITY_LOW_POWER, PRIORITY_NO_POWER.": [
        "Possibilities",
        "Time_vector",
        "Intentionally_create",
        "Increment"
    ],
    "Once you have built the request, you are ready to start listening on location updates after `` onConnected ( )'' method has been fired:": [
        "Locale",
        "Execution",
        "Frequency",
        "Perception_active",
        "Shoot_projectiles",
        "Execution",
        "Building",
        "Activity_start",
        "Activity_ready_state"
    ],
    "All that remains now is to implement the callback method to satisfy the LocationListener interface:": [
        "Quantity",
        "Gizmo",
        "Temporal_collocation",
        "State_continue",
        "Execution",
        "Experiencer_obj"
    ],
    "Stop Listening for Updates It is important to explicitly stop listening for updates when you don't need them anymore, or if the user leaves your application.": [
        "Preventing",
        "Perception_active",
        "Temporal_collocation",
        "Using",
        "Perception_active",
        "Importance",
        "Departing",
        "Preventing",
        "Have_as_requirement",
        "Intentionally_act"
    ],
    "The following method should be invoked from within `` onPause'' callback:": [
        "Execution",
        "Relative_time",
        "Being_obligated"
    ],
    "... and disconnecting Google API:": [],
    "Wrapping Up As you can see, the fundamental ideas behind implementing location aware applications in Android is very simple.": [
        "Weapon",
        "Gizmo",
        "Locale",
        "Awareness",
        "Degree",
        "Capability",
        "Filling",
        "Grasp"
    ],
    "Moreover, with the available APIs that are both simple to use and easy to understand, it should be a no-brainer to build basic location-based applications for Android.": [
        "Quantity",
        "Being_necessary",
        "Difficulty",
        "Building",
        "Being_obligated",
        "Grasp",
        "Using"
    ],
    "The small sample application we have built here is meant to demonstrate exactly that.": [
        "Locative_relation",
        "Evidence",
        "Reasoning",
        "Dimension",
        "Building",
        "Frequency",
        "Using"
    ],
    "You can find the complete source code for this on GitHub.": [
        "Source_of_getting",
        "Process_completed_state",
        "Capability",
        "Locating"
    ],
    "Please note that to keep things simple, the application is not handling the `` onConnectionFailed'' callback method.": [
        "Using",
        "Execution",
        "Activity_ongoing",
        "Resolve_problem"
    ],
    "Hopefully this tutorial will help you get started with using the Google Location Services API.": [
        "Locale",
        "Public_services",
        "Assistance",
        "Using",
        "Execution",
        "Activity_start"
    ],
    "TagsAndroidLocationGPSGeolocationView full profile Danny GonzalezFreelance Software EngineerAbout the authorDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.": [
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Feeling",
        "People_by_vocation",
        "Calendric_unit",
        "Intentionally_act",
        "Expertise"
    ],
    "He is passionate about the tech world and the cutting edge, and he's also interested in SEM and digital marketing.Hire DannyCommentsMahbubur RahmanIt crashes just after few moments of application launched every time.": [
        "Political_locales",
        "Using",
        "Frequency",
        "Measure_duration",
        "Self_motion",
        "Quantity",
        "Shoot_projectiles",
        "Motion_noise",
        "Desiring"
    ],
    "I can see the toast once after launch.Nikita BaroniaDoes it run in background for updating locations?Bryan MillsIn the parent activity dudeBryan Millsshouldn't you initialize the GoogleApiClient in onActivityResult as well ?": [
        "Apply_heat",
        "Locale",
        "Kinship",
        "Intentionally_act",
        "Capability",
        "Time_vector",
        "Execution",
        "Grasp"
    ],
    "I feel like you'd be getting a null-pointer in the case that the user didn't have a valid google play services package installed, or am i missing a concept here?Jessica TurnerGreat Article Danny.": [
        "Instance",
        "Being_in_effect",
        "Performers_and_roles",
        "Public_services",
        "Installing",
        "Execution",
        "Desiring",
        "Intentionally_act",
        "Locative_relation",
        "Execution",
        "Success_or_failure"
    ],
    "Thanks, Jessica ( www.becomeceleb.com?profile ) DerekI recommend buying a book or borrowing one from a library, which is will most likely be too old by now.": [
        "Judgment_direct_address",
        "Cardinal_numbers",
        "Buildings",
        "Sufficiency",
        "Temporal_collocation",
        "Age",
        "Commerce_buy",
        "Likelihood"
    ],
    "The book that I borrowed was published in 2012.": [
        "Part_ordered_segments"
    ],
    "If you have some money, you can buy a course online.Roberto RobsonI'm facing the same problem here.": [
        "Money",
        "Predicament",
        "Locative_relation",
        "Relational_quantity",
        "Identicality",
        "Part_orientational",
        "Commerce_buy",
        "Capability"
    ],
    "It is almost impossible to find A GOOD EXAMPLE of how create a service that must run in background and receive location updates.": [
        "Relational_quantity",
        "Instance",
        "Rite",
        "Locale",
        "Being_obligated",
        "Relational_quantity",
        "Intentionally_create",
        "Receiving",
        "Execution",
        "Likelihood",
        "Coming_to_believe"
    ],
    "Also, all example on developer.android.com are terrible, any one of them really works.Olaoye OluwapelumiThanks, really helpful.": [
        "Instance",
        "Quantity",
        "Quantity",
        "Cardinal_numbers",
        "Assistance",
        "Desirability"
    ],
    "Solved my location awareness application problem.DerekI know, right.": [
        "Locale",
        "Awareness",
        "Using",
        "Correctness",
        "Resolve_problem",
        "Certainty"
    ],
    "I can't find anything on the internet that actually works.": [
        "Being_employed",
        "Locating",
        "Capability"
    ],
    "Not even developer.android.com guides, YouTube videos, etc.Cristian Bellwhen was this written ?": [],
    "for which SDK level it is ?": [
        "Rank"
    ],
    "right now - April 2016 like 1/2 of the functions here are already deprecared,: ) Manawar AliThanks for nice tutorial.": [
        "Correctness",
        "Calendric_unit",
        "Locative_relation",
        "Temporal_collocation",
        "Stimulus_focus",
        "Cardinal_numbers",
        "Time_vector"
    ],
    "Described in a simple and straight way.Yusuf MuftiI want to create a service that handle update location from some activities, I have problem related code below, that I could not put paramter mContext in addConnectionCallbacks ( )": [
        "Ordinal_numbers",
        "Rite",
        "Locale",
        "Intentionally_act",
        "Predicament",
        "Relational_quantity",
        "Intentionally_create",
        "Cognitive_connection",
        "Resolve_problem",
        "Causation",
        "Possession",
        "Capability",
        "Communicate_categorization"
    ],
    "Toptal handpicks top Android developers to suit your needs.Top 3 % WhyClientsEnterpriseCommunityBlogAbout UsFollow us onLog InGo to Your Profile": [
        "Clothing",
        "Cardinal_numbers",
        "Occupy_rank"
    ],
    "Mobile8 minute readAndroid Developer's Guide to the Google Location Services APIDanny GonzalezDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.SHARE": [
        "Measure_duration",
        "Locale",
        "Public_services",
        "People_by_vocation",
        "Expertise",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Calendric_unit",
        "Intentionally_act"
    ],
    "Mobile8 minute readAndroid Developer's Guide to the Google Location Services API": [
        "Measure_duration",
        "Locale",
        "Public_services"
    ],
    "Danny GonzalezDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.SHARE": [
        "People_by_vocation",
        "Expertise",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Calendric_unit",
        "Intentionally_act"
    ],
    "Danny GonzalezDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.": [
        "People_by_vocation",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Calendric_unit",
        "Intentionally_act",
        "Expertise"
    ],
    "Danny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.": [
        "People_by_vocation",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Calendric_unit",
        "Intentionally_act",
        "Expertise"
    ],
    "Could you help me ?": [
        "Assistance"
    ],
    "ThanksDaniel Gomez RicoInside a fragment where should I call every method?Vignesh Rhi can you post something related to setting API provided by google play serviceIllahi Buxgreat job i love itHumberto MorenoIs not the same!Humberto Morenogreat job !": [
        "Part_piece",
        "Execution",
        "Performers_and_roles",
        "Being_obligated",
        "Identicality",
        "Frequency",
        "Locative_relation",
        "Being_obligated",
        "Execution",
        "Supply",
        "Capability",
        "Experiencer_focus",
        "Cognitive_connection",
        "Sending"
    ],
    "Thanks for this article.palugomoNice info ... i really like it, and its not a crime to use a example from internet abbiya.": [
        "Part_orientational",
        "Committing_crime",
        "Instance",
        "Judgment_direct_address",
        "Using"
    ],
    "Have a nice day.Please enable JavaScript to view the comments powered by Disqus.comments powered by DisqusWorld-class articles, delivered weekly.Get great contentSubscription implies consent to our privacy policyThank you!Check out your inbox to confirm your invite.Trending ArticlesEngineeringIcon ChevronBack-endBuilding a Node.js / TypeScript REST API, Part 2: Models, Middleware, and ServicesEngineeringIcon ChevronWeb Front-endCreating Live Dashboards With Airtable and ReactEngineeringIcon ChevronBack-endThe Definitive Guide to DateTime ManipulationEngineeringIcon ChevronProject ManagementEnhanced Git Flow ExplainedSee our related talentAndroidMobileJavaHire the authorView full profile Danny GonzalezFreelance Software EngineerRead NextEngineeringIcon ChevronEngineering ManagementPeople, Product, and Technology: A Beginner's Guide to Engineering Management": [
        "Commitment",
        "Inspecting",
        "Part_whole",
        "Vehicle",
        "Fluidic_motion",
        "Feeling",
        "Gizmo",
        "Artifact",
        "Stimulus_focus",
        "Desirability",
        "Stimulus_focus",
        "Cardinal_numbers",
        "Categorization",
        "Possession",
        "Activity_start",
        "Evidence",
        "Locative_relation",
        "Verification",
        "Cognitive_connection",
        "Delivery"
    ],
    "View full profile Danny GonzalezFreelance Software EngineerAbout the authorDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.": [
        "Feeling",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Categorization",
        "People_by_vocation",
        "Calendric_unit",
        "Intentionally_act",
        "Expertise"
    ],
    "He is passionate about the tech world and the cutting edge, and he's also interested in SEM and digital marketing.Hire Danny": [
        "Political_locales",
        "Self_motion",
        "Desiring"
    ],
    "View full profile Danny GonzalezFreelance Software Engineer": [
        "Feeling",
        "People_by_vocation",
        "Categorization"
    ],
    "About the authorDanny is a full-stack software engineer with 7 + years of experience doing project management and building web and mobile applications.": [
        "People_by_vocation",
        "Project",
        "Buildings",
        "Network",
        "Bringing",
        "Calendric_unit",
        "Intentionally_act",
        "Expertise"
    ],
    "CommentsMahbubur RahmanIt crashes just after few moments of application launched every time.": [
        "Using",
        "Frequency",
        "Measure_duration",
        "Quantity",
        "Impact",
        "Shoot_projectiles"
    ],
    "Have a nice day.Please enable JavaScript to view the comments powered by Disqus.comments powered by Disqus": [
        "Stimulus_focus",
        "Categorization",
        "Possession"
    ],
    "Mahbubur RahmanIt crashes just after few moments of application launched every time.": [
        "Using",
        "Frequency",
        "Measure_duration",
        "Quantity",
        "Impact",
        "Shoot_projectiles"
    ],
    "I can see the toast once after launch.": [
        "Apply_heat",
        "Shoot_projectiles",
        "Capability",
        "Time_vector",
        "Grasp"
    ],
    "It crashes just after few moments of application launched every time.": [
        "Using",
        "Frequency",
        "Measure_duration",
        "Impact",
        "Quantity",
        "Shoot_projectiles"
    ],
    "Nikita BaroniaDoes it run in background for updating locations ?": [
        "Locale",
        "Execution"
    ],
    "Does it run in background for updating locations ?": [
        "Locale",
        "Intentionally_act",
        "Execution"
    ],
    "Bryan MillsIn the parent activity dude": [
        "Kinship",
        "People",
        "Intentionally_act"
    ],
    "In the parent activity dude": [
        "Kinship",
        "People",
        "Intentionally_act"
    ],
    "Android Location Fused Provider Last modified on June 19th, 2017 by Joe.": [
        "Locale",
        "Calendric_unit",
        "Relative_time",
        "Cause_to_amalgamate",
        "Cause_change"
    ],
    "This Android tutorial is to explain what a fused location provider is and how to use it to get the location using a sample Android application.": [
        "Being_attached",
        "Locale",
        "Using",
        "Execution",
        "Using",
        "Using"
    ],
    "We need not explicitly choose either GPS or Network location Provider, as the `` Fused Location Provider'' automatically chooses the underlying technology and gives the best location as per the need.": [
        "Network",
        "Locale",
        "Being_attached",
        "Locale",
        "Gizmo",
        "Needing",
        "Desirability",
        "Choosing",
        "Giving",
        "Choosing"
    ],
    "In this tutorial we will be using the FusedLocationProviderApi which is the latest API and the best among the available possibilities to get location in Android.": [
        "Relative_time",
        "Locale",
        "Desirability",
        "Using",
        "Likelihood",
        "Execution"
    ],
    "If for some reason you wish to use the old APIs then refer the earlier written tutorial to get current location in Android.": [
        "Causation",
        "Age",
        "Temporal_collocation",
        "Relative_time",
        "Locale",
        "Relational_quantity",
        "Temporal_collocation",
        "Using",
        "Desiring",
        "Execution"
    ],
    "It provides simple and easy to use APIs.": [
        "Using",
        "Supply",
        "Difficulty"
    ],
    "Provides high accuracy over other options.": [
        "Supply",
        "Possibilities",
        "Position_on_a_scale",
        "Increment",
        "Trust"
    ],
    "Utilizes low power by choosing the most efficient way to access the location.": [
        "Locale",
        "Position_on_a_scale",
        "Execution",
        "Execution",
        "Choosing"
    ],
    "Three Use Cases for location access With respect to fused location provider, we can broadly classify the API usage in three use cases.": [
        "Locale",
        "Being_attached",
        "Instance",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Judgment",
        "Having_or_lacking_access",
        "Categorization",
        "Containers",
        "Capability"
    ],
    "getLastLocation ( GoogleApiClient ) this API should be used when there is no need for continuous access to location from an application.": [
        "Temporal_collocation",
        "Quantity",
        "Having_or_lacking_access",
        "Locale",
        "Using",
        "Being_obligated",
        "Using",
        "Needing",
        "Existence"
    ],
    "Like one shot access or get user location based on some action.": [
        "Behind_the_scenes",
        "Having_or_lacking_access",
        "Locale",
        "Intentionally_act",
        "Cardinal_numbers",
        "Relational_quantity",
        "Execution"
    ],
    "This is the simplified way to get the device location and also may not provide high accuracy.": [
        "Gizmo",
        "Locale",
        "Trust",
        "Position_on_a_scale",
        "Execution",
        "Likelihood",
        "Execution",
        "Supply"
    ],
    "requestLocationUpdates ( GoogleApiClient, LocationRequest, LocationListener ) this API should be used when there a need for continuous location updates and the location is accessed when the application is active in foreground.": [
        "Temporal_collocation",
        "Needing",
        "Locale",
        "Using",
        "Being_obligated",
        "Being_active",
        "Existence",
        "Using"
    ],
    "requestLocationUpdates ( GoogleApiClient, LocationRequest, PendingIntent ) this API is used to receive location updates in the background even when the application is not active.": [
        "Locale",
        "Temporal_collocation",
        "Using",
        "Being_active",
        "Receiving",
        "Using"
    ],
    "So the difference is PendingIntent.": [
        "Similarity"
    ],
    "Example Android Application to Get Location Download Following is an example Android application that shows how to get the current user location.": [
        "Instance",
        "Using",
        "Locale",
        "Instance",
        "Using",
        "Locale",
        "Temporal_collocation",
        "Relative_time",
        "Getting",
        "Execution",
        "Evidence"
    ],
    "This also continuously updates the location on the move.": [
        "Intentionally_act",
        "Locale"
    ],
    "Prerequisite Google Play Services is required.": [
        "Performers_and_roles",
        "Public_services",
        "Needing"
    ],
    "If you are using Android Studio and Gradle, you should have the following dependencies added in build.gradle file": [
        "Building_subparts",
        "Relative_time",
        "Reliance",
        "Being_obligated",
        "Using"
    ],
    "Note: As of now ( 14 March 2015 ), Fused location provider API is not working in all the Android Nexus virtual device emulators.": [
        "Temporal_collocation",
        "Calendric_unit",
        "Locale",
        "Quantity",
        "Gizmo",
        "Cardinal_numbers",
        "Being_attached",
        "Being_employed"
    ],
    "Its a widely reported defect.": [
        "Quitting_a_place"
    ],
    "You can use any other AVD to test in the emulator like WVGA AVDs.": [
        "Quantity",
        "Increment",
        "Capability",
        "Operational_testing",
        "Using"
    ],
    "I used `` 4 WVGA API 21'' virtual device in emulator to test it.": [
        "Gizmo",
        "Cardinal_numbers",
        "Operational_testing",
        "Using"
    ],
    "It is also working on a real device and I tested it in Panasonic P81.": [
        "Gizmo",
        "Existence",
        "Operational_testing",
        "Working_on"
    ],
    "AndroidManifest.xml Remember to give access permissions as shown below.": [
        "Having_or_lacking_access",
        "Evidence",
        "Grant_permission",
        "Giving",
        "Memory"
    ],
    "You need not give permission for GPS, Network providers.": [
        "Giving",
        "Grant_permission",
        "Network"
    ],
    "I have seen Android location access tutorial examples giving all the available permission in the world.": [
        "Locale",
        "Having_or_lacking_access",
        "Giving",
        "Quantity",
        "Grant_permission",
        "Political_locales",
        "Grasp"
    ],
    "Just on android.permission.ACCESS _ FINE_LOCATION is enough.": [
        "Sufficiency"
    ],
    "ACCESS_COARSE_LOCATION permission is for approximate location access using cell towers and Wi-Fi.": [
        "Locale",
        "Having_or_lacking_access",
        "Building_subparts",
        "Grant_permission",
        "Buildings",
        "Using"
    ],
    "ACCESS_FINE_LOCATION is for precise location access using GPS or cell towers and Wi-Fi.": [
        "Accuracy",
        "Locale",
        "Having_or_lacking_access",
        "Building_subparts",
        "Buildings",
        "Using"
    ],
    "Choose the one that is appropriate for you and do not give both.": [
        "Quantity",
        "Cardinal_numbers",
        "Choosing",
        "Intentionally_act",
        "Giving"
    ],
    "Battery power is used accordingly.": [
        "Offenses",
        "Execution",
        "Using"
    ],
    "GoogleApiClient FusedLocationProviderApi requires the GoogleApiClient instance to get the Location and it can be obtained as below.": [
        "Instance",
        "Locale",
        "Likelihood",
        "Have_as_requirement",
        "Getting",
        "Execution"
    ],
    "Instantiating the GoogleApiClient should be done in onCreate of the application Activity.": [
        "Using",
        "Intentionally_act",
        "Being_obligated",
        "Intentionally_act"
    ],
    "googleApiClient.connect ( ) should be done in onStart and disconnect ( ) in onStop.": [
        "Intentionally_act",
        "Being_obligated"
    ],
    "When the GoogleApiClient is connected successfully, onConnected ( Bundle ) callback will be called.": [
        "Temporal_collocation",
        "Cognitive_connection",
        "Execution"
    ],
    "Location Interface Implementations for Callbacks The following interfaces should be implemented to get the location update.": [
        "Locale",
        "Relative_time",
        "Locale",
        "Execute_plan",
        "Execution",
        "Being_obligated",
        "Execute_plan"
    ],
    "LocationListener provides call back for location change through onLocationChanged.": [
        "Observable_body_parts",
        "Locale",
        "Undergo_change",
        "Execution",
        "Supply"
    ],
    "Continuous Location Access Activity Following is the complete class which accesses the Fused Location Provider to get the location continuously in the Android example application.": [
        "Locale",
        "Having_or_lacking_access",
        "Intentionally_act",
        "Locale",
        "Instance",
        "Using",
        "Process_completed_state",
        "Being_attached",
        "Relative_time",
        "Execution"
    ],
    "Test Run the Location Application via Android Emulator In Eclipse, Open DDMS perspective ( Window - > Open Perspective )": [
        "Operational_testing",
        "Locale",
        "Using",
        "Eclipse",
        "Connecting_architecture"
    ],
    "Select your emulator device Select the tab named emulator control In ` Location Controls' panel, ` Manual' tab, give the Longitude and Latitude as input and ` Send'.": [
        "Gizmo",
        "Locale",
        "Control",
        "Control",
        "Sending",
        "Giving",
        "Choosing"
    ],
    "In Android Studio, open Android Device Monitor The below screen shot will help,": [
        "Building_subparts",
        "Gizmo",
        "Behind_the_scenes",
        "Secrecy_status",
        "Assistance"
    ],
    "Get Current Location in Android Find Places Nearby in Google Maps using Google Places API -- Android App Android Get Address with Street Name, City for Location with Geocoding": [
        "Coming_to_believe",
        "Locale",
        "Speak_on_topic",
        "Political_locales",
        "Locale",
        "Temporal_collocation",
        "Execution",
        "Using"
    ],
    "Comments on `` Android Location Fused Provider''": [
        "Locale",
        "Cause_to_amalgamate"
    ],
    "Android Show Current Location on Map using Google Maps API says:": [
        "Reasoning",
        "Temporal_collocation",
        "Using",
        "Locale"
    ],
    "-LSB- ... -RSB- This tutorial is to learn how to show the current location on map in an Android application using Google Maps API.": [
        "Using",
        "Temporal_collocation",
        "Locale",
        "Education_teaching",
        "Reasoning",
        "Using"
    ],
    "Previously we have seen tutorials to get the current location using the different location providers.": [
        "Similarity",
        "Locale",
        "Time_vector",
        "Temporal_collocation",
        "Execution",
        "Using",
        "Grasp"
    ],
    "If you are looking to just get the latitude and longitude of a location, the refer get current location using Android Fused location provider tutorial.": [
        "Locale",
        "Temporal_collocation",
        "Scrutiny",
        "Being_attached",
        "Using",
        "Execution"
    ],
    "I couldn't find a specific example of grabbing the fused provider anywhere until getting here.": [
        "Instance",
        "Locative_relation",
        "Being_attached",
        "Execution",
        "Capability",
        "Manipulation",
        "Locating"
    ],
    "This tutorial is great !": [
        "Desirability"
    ],
    "Is there another way to get the location as soon as see the activity on my screen in oppose to clicking a button ?": [
        "Execution",
        "Locale",
        "Intentionally_act",
        "Make_noise",
        "Clothing_parts",
        "Increment",
        "Execution",
        "Existence",
        "Taking_sides",
        "Grasp"
    ],
    "I've tried placing the request for location in onCreate, onStart and onResume, but that only works in onResume after I really resume from standby.": [
        "Locale",
        "Sole_instance",
        "Being_employed",
        "Activity_resume",
        "Execution",
        "Attempt"
    ],
    "Thanks you, this tutorial is so great.": [
        "Judgment_direct_address",
        "Desirability"
    ],
    "Have a nice day !": [
        "Calendric_unit",
        "Stimulus_focus"
    ],
    "Last modified on June 19th, 2017 by Joe.": [
        "Relative_time",
        "Calendric_unit",
        "Cause_change"
    ],
    "How would I setup pooling so that I can send the onChanged ( ) location from the FusedLocationService back to the View without having to click on the button ?": [
        "Locale",
        "Observable_body_parts",
        "Categorization",
        "Clothing_parts",
        "Being_obligated",
        "Sounds",
        "Sending",
        "Capability"
    ],
    "Pardon the misspelling, I meant polling.": [
        "Pardon",
        "Evidence"
    ],
    "Great tutorial, but I have a problem.": [
        "Predicament",
        "Desirability",
        "Possession"
    ],
    "I tried it and it works on emulator ( Nexus 4 ), but on my real device Samsung Galaxy mini ( 2.3.6 ) it starts, but when I click the button ( `` Show Location'' ) an error message pop up and the program is closing automatically.": [
        "Gizmo",
        "Temporal_collocation",
        "Clothing_parts",
        "Reasoning",
        "Ingest_substance",
        "Project",
        "Attempt",
        "Being_employed",
        "Existence",
        "Process_start",
        "Sounds",
        "Body_movement",
        "Locative_relation"
    ],
    "Can you help me ?": [
        "Assistance",
        "Capability"
    ],
    "What can be the problem ?": [
        "Predicament",
        "Capability"
    ],
    "I do have google service, I was connecting to Wifi, I have mobile net, but my GPS location probably wasn't found, because I was indoor ( but this is why I need fuse location, so I guess it can't be a problem ).": [
        "Rite",
        "Network",
        "Reason",
        "Cause_to_amalgamate",
        "Locale",
        "Intentionally_act",
        "Bringing",
        "Required_event",
        "Capability",
        "Attaching",
        "Predicament",
        "Becoming_aware",
        "Coming_to_believe",
        "Likelihood"
    ],
    "@Naphtali, @Paul and @Daniel, I have updated the tutorial and fixed some defects in it.": [
        "Quitting_a_place",
        "Relational_quantity",
        "Resolve_problem"
    ],
    "Added feature to get location onChange.": [
        "Locale",
        "Execution"
    ],
    "Now dynamically the location will be updated when the device gets a new location.": [
        "Temporal_collocation",
        "Locale",
        "Temporal_collocation",
        "Gizmo",
        "Age",
        "Execution"
    ],
    "Need not click the button to get the location.": [
        "Clothing_parts",
        "Locale",
        "Execution",
        "Sounds"
    ],
    "Now it is tested in both Emulator and real device.": [
        "Temporal_collocation",
        "Gizmo",
        "Quantity",
        "Existence",
        "Operational_testing"
    ],
    "Let me know if you guys need anything more in this tutorial.": [
        "People",
        "Required_event",
        "Increment",
        "Awareness",
        "Grant_permission"
    ],
    "Android Location Tracker with Google Maps - Java Tutorial says:": [
        "Locale"
    ],
    "-LSB- ... -RSB- the Android location using fused provider tutorial to understand better about the Android fused location provider API and how it can be used -LSB- ... -RSB-": [
        "Locale",
        "Desirability",
        "Likelihood",
        "Being_attached",
        "Using",
        "Categorization",
        "Using"
    ],
    "Hi Joe, I implemented your code in my eclipse and tried to run in emulator.But on clicking show location i am not getting anything displayed in emulator and location `` null'' showing in log.": [
        "Eclipse",
        "Make_noise",
        "Reasoning",
        "Locale",
        "Execute_plan",
        "Getting",
        "Execution",
        "Attempt"
    ],
    "Would you please help anything i am missing.": [
        "Emotion_directed",
        "Assistance",
        "Success_or_failure"
    ],
    "How do we know if getLastLocation is not an obsolete location ?": [
        "Locale",
        "Intentionally_act",
        "Certainty"
    ],
    "Google documentation mentions that it may be null however it does not say how old it may be ?": [
        "Being_in_effect",
        "Concessive",
        "Likelihood",
        "Intentionally_act",
        "Age"
    ],
    "Is fused API will give me exact result or exact location because some time GPS is switching the location ?": [
        "Relational_quantity",
        "Locale",
        "Being_attached",
        "Causation",
        "Correctness",
        "Change_tool",
        "Measure_duration",
        "Giving"
    ],
    "Best Android tutorials I found so far.": [
        "Continued_state_of_affairs",
        "Locating"
    ],
    "I wanst getting how to go about fusedLocationApi.": [
        "Becoming",
        "Execution"
    ],
    "But this made my life a lot easier.": [
        "Quantity",
        "Causation"
    ],
    "Hi, its Very Nice Tutorial.": [
        "Stimulus_focus"
    ],
    "I have a Question can we on the gps or location service automatically without user manually in android if yes then please share the flow.": [
        "Point_of_dispute",
        "Locale",
        "Public_services",
        "Temporal_collocation",
        "Fluidic_motion",
        "Capability",
        "Stimulus_focus"
    ],
    "Hi, Thank you Sir for this great tutorial.": [
        "Judgment_direct_address",
        "Attention_getting",
        "Desirability"
    ],
    "I have a couple of queries.": [
        "Questioning",
        "Personal_relationship"
    ],
    "How can i use PendingIntenet for getting location updates when app is running in background ( A short snippet will be gr8 ).": [
        "Locale",
        "Temporal_collocation",
        "Part_piece",
        "Duration_attribute",
        "Capability",
        "Using",
        "Execution",
        "Execution"
    ],
    "What if the WiFi is OFF ?": [],
    "From where are the location coordinated are retrieved ?": [
        "Locative_relation",
        "Locale"
    ],
    "Thank You Very Much !!": [
        "Judgment_direct_address",
        "Relational_quantity"
    ],
    "This helped me alot for my application.": [
        "Using",
        "Assistance"
    ],
    "and its really simple also if you follow this completely.": [
        "Relative_time"
    ],
    "This tutorial is great except I have one question.": [
        "Cardinal_numbers",
        "Desirability",
        "Point_of_dispute"
    ],
    "I am trying to implement the request in a class and upload the results in a separate class which happens to be a fragment.": [
        "Gizmo",
        "Causation",
        "Part_piece",
        "Becoming_separated",
        "Event",
        "Execution",
        "Attempt"
    ],
    "What should I use in place of `` this'' when building the GoogleApiClient and where should I call connect from ?": [
        "Locale",
        "Temporal_collocation",
        "Being_obligated",
        "Execution",
        "Using",
        "Locative_relation",
        "Cognitive_connection",
        "Building"
    ],
    "From the OnCreateView method ?": [
        "Execution"
    ],
    "hi, thanks for this great tutorials.": [
        "Judgment_direct_address"
    ],
    "i have followed it but i am not receiving any location.": [
        "Locale",
        "Quantity",
        "Receiving",
        "Relative_time"
    ],
    "I'm developing an app using this fused location provider and all seems to work good.": [
        "Locale",
        "Quantity",
        "Appearance",
        "Being_attached",
        "Desirability",
        "Being_employed",
        "Cause_to_make_progress",
        "Using"
    ],
    "But the problems I have is that the locations I get dont have any information about altitude.": [
        "Predicament",
        "Locale",
        "Quantity",
        "Execution",
        "Information",
        "Possession"
    ],
    "Can it works when i am in offline?Plz reply any one": [
        "Temporal_collocation",
        "Communication_response",
        "Quantity",
        "Cardinal_numbers",
        "Being_employed",
        "Capability"
    ],
    "May you have peace knowing that your social role and function is well and effective.": [
        "Social_event",
        "Performers_and_roles",
        "Likelihood",
        "Awareness"
    ],
    "Generating an error when using Provider for scoped instances": [
        "Instance",
        "Creating",
        "Using",
        "Temporal_collocation"
    ],
    "A content provider manages access to a central repository of data.": [
        "Having_or_lacking_access",
        "Part_orientational",
        "Building_subparts",
        "Operating_a_system"
    ],
    "You implement a provider as one or more classes in an Android application, along with elements in the manifest file.": [
        "Gizmo",
        "Using",
        "Cardinal_numbers",
        "Ingredients",
        "Increment",
        "Accompaniment"
    ],
    "One of your classes implements a subclass ContentProvider, which is the interface between your provider and other applications.": [
        "Cardinal_numbers",
        "Gizmo",
        "Increment"
    ],
    "Although content providers are meant to make data available to other applications, you may of course have activities in your application that allow the user to query and modify the data managed by your provider.": [
        "Evidence",
        "Intentionally_act",
        "Using",
        "Questioning",
        "Increment",
        "Likelihood",
        "Success_or_failure",
        "Causation",
        "Grant_permission",
        "Cause_change"
    ],
    "The rest of this topic is a basic list of steps for building a content provider and a list of APIs to use.": [
        "Stimulus_focus",
        "Topic",
        "Being_necessary",
        "Using",
        "Building",
        "Intentionally_act"
    ],
    "Before you start building a provider, consider the following:": [
        "Building",
        "Activity_start",
        "Categorization"
    ],
    "You don't need a provider to use databases or other types of persistent storage if the use is entirely within your own application and you don't need any of the features listed above.": [
        "Storing",
        "Using",
        "Intentionally_act",
        "Increment",
        "Possession",
        "Required_event",
        "Process_continue",
        "Quantity",
        "Using"
    ],
    "Instead, you can use one of the storage systems described on the Saving App Data page.": [
        "Cardinal_numbers",
        "Storing",
        "Contacting",
        "Gizmo",
        "Capability",
        "Communicate_categorization",
        "Using"
    ],
    "Next, follow these steps to build your provider:": [
        "Building",
        "Intentionally_act",
        "Relative_time"
    ],
    "A content provider is the interface to data saved in a structured format.": [],
    "Before you create the interface, you must decide how to store the data.": [
        "Being_obligated",
        "Intentionally_create",
        "Storing",
        "Deciding"
    ],
    "You can store the data in any form you like, and then design the interface to read and write the data as necessary.": [
        "Categorization",
        "Being_necessary",
        "Quantity",
        "Capability",
        "Coming_up_with",
        "Storing",
        "Temporal_collocation",
        "Experiencer_focus"
    ],
    "These are some of the data storage technologies that are available in Android:": [
        "Relational_quantity",
        "Artifact",
        "Storing"
    ],
    "Remember that you don't have to use a database to implement your repository.": [
        "Gizmo",
        "Building_subparts",
        "Intentionally_act",
        "Using",
        "Being_obligated",
        "Memory"
    ],
    "A provider appears externally as a set of tables, similar to a relational database, but this is not a requirement for the provider's internal implementation.": [
        "Execute_plan",
        "Coming_to_be",
        "Execution",
        "Similarity",
        "Being_necessary"
    ],
    "Note: If you make a change to your repository that isn't backwards-compatible, you need to mark the repository with a new version number.": [
        "Becoming_aware",
        "Building_subparts",
        "Quantity",
        "Age",
        "Undergo_change",
        "Sign",
        "Required_event",
        "Causation"
    ],
    "You also need to increase the version number for your app that implements the new content provider.": [
        "Cause_change_of_position_on_a_scale",
        "Quantity",
        "Gizmo",
        "Age",
        "Required_event"
    ],
    "Making this change prevents system downgrades from causing the system to crash when it attempts to reinstall an app that has an incompatible content provider.": [
        "Undergo_change",
        "System",
        "Temporal_collocation",
        "Compatibility",
        "Causation",
        "Causation",
        "Impact",
        "Thwarting",
        "Inclusion",
        "Attempt"
    ],
    "Here are some tips for designing your provider's data structure:": [
        "Locative_relation",
        "Part_orientational",
        "Relational_quantity",
        "Buildings",
        "Coming_up_with"
    ],
    "You can also use a BLOB to implement a schema-independent table.": [
        "Gizmo",
        "Capability",
        "Using"
    ],
    "In this type of table, you define a primary key column, a MIME type column, and one or more generic columns as BLOB.": [
        "Increment",
        "Communicate_categorization",
        "Importance",
        "First_rank",
        "Cardinal_numbers"
    ],
    "The meaning of the data in the BLOB columns is indicated by the value in the MIME type column.": [
        "Linguistic_meaning",
        "Evidence"
    ],
    "This allows you to store different row types in the same table.": [
        "Similarity",
        "Operate_vehicle",
        "Text_creation",
        "Identicality",
        "Grant_permission",
        "Storing"
    ],
    "The Contacts Provider's `` data'' table ContactsContract.Data is an example of a schema-independent table.": [
        "Contacting",
        "Instance"
    ],
    "A content URI is a URI that identifies data in a provider.": [
        "Verification"
    ],
    "Content URIs include the symbolic name of the entire provider ( its authority ) and a name that points to a table or file ( a path ).": [
        "Ranked_expectation",
        "Execution",
        "Locale",
        "Inclusion"
    ],
    "The optional id part points to an individual row in a table.": [
        "Part_whole",
        "People",
        "Quarreling",
        "Locale"
    ],
    "Every data access method of ContentProvider has a content URI as an argument ; this allows you to determine the table, row, or file to access.": [
        "Frequency",
        "Having_or_lacking_access",
        "Quarreling",
        "Grant_permission",
        "Execution",
        "Inclusion",
        "Reasoning"
    ],
    "The basics of content URIs are described in the topic Content provider basics.": [
        "Topic",
        "Communicate_categorization"
    ],
    "A provider usually has a single authority, which serves as its Android-internal name.": [
        "Execution",
        "Sole_instance",
        "Assistance",
        "Inclusion"
    ],
    "To avoid conflicts with other providers, you should use Internet domain ownership ( in reverse ) as the basis of your provider authority.": [
        "Body_decoration",
        "Increment",
        "Being_obligated",
        "Execution",
        "Hostile_encounter",
        "Preventing",
        "Possession",
        "Using"
    ],
    "Because this recommendation is also true for Android package names, you can define your provider authority as an extension of the name of the package containing the provider.": [
        "Documents",
        "Execution",
        "Capability",
        "Execution",
        "Inclusion",
        "Communicate_categorization"
    ],
    "For example, if your Android package name is com.example.": [
        "Instance",
        "Execution"
    ],
    "<appname>, you should give your provider the authority com.example.": [
        "Being_obligated",
        "Execution",
        "Giving"
    ],
    "Developers usually create content URIs from the authority by appending paths that point to individual tables.": [
        "Execution",
        "People",
        "Intentionally_create",
        "Adducing",
        "Attaching"
    ],
    "For example, if you have two tables table1 and table2, you combine the authority from the previous example to yield the content URIs com.example.": [
        "Instance",
        "Cause_to_amalgamate",
        "Execution",
        "Time_vector",
        "Cardinal_numbers",
        "Creating"
    ],
    "Paths aren't limited to a single segment, and there doesn't have to be a table for each level of the path.": [
        "Part_whole",
        "Locative_relation",
        "Sole_instance",
        "Intentionally_act",
        "Rank",
        "Being_obligated"
    ],
    "By convention, providers offer access to a single row in a table by accepting a content URI with an ID value for the row at the end of the URI.": [
        "Be_in_agreement_on_action",
        "Having_or_lacking_access",
        "Quarreling",
        "Offering",
        "Sole_instance",
        "Receiving",
        "Temporal_subregion"
    ],
    "Also by convention, providers match the ID value to the table's _ ID column, and perform the requested access against the row that matches.": [
        "Be_in_agreement_on_action",
        "Having_or_lacking_access",
        "Evaluative_comparison",
        "Quarreling",
        "Evaluative_comparison",
        "Execution",
        "Intentionally_act"
    ],
    "This convention facilitates a common design pattern for apps accessing a provider.": [
        "Custom",
        "Coming_up_with",
        "Pattern"
    ],
    "The app does a query against the provider and displays the resulting Cursor in a ListView using a CursorAdapter.": [
        "Questioning",
        "Causation",
        "Using",
        "Intentionally_act"
    ],
    "The definition of CursorAdapter requires one of the columns in the Cursor to be _ ID": [
        "Cardinal_numbers",
        "Communicate_categorization",
        "Have_as_requirement"
    ],
    "The user then picks one of the displayed rows from the UI in order to look at or modify the data.": [
        "Cardinal_numbers",
        "Cause_change",
        "Temporal_collocation",
        "Quarreling",
        "Scrutiny",
        "Choosing"
    ],
    "The app gets the corresponding row from the Cursor backing the ListView, gets the _ ID value for this row, appends it to the content URI, and sends the access request to the provider.": [
        "Self_motion",
        "Quarreling",
        "Having_or_lacking_access",
        "Causation",
        "Execution",
        "Attaching",
        "Execution"
    ],
    "The provider can then do the query or modification against the exact row the user picked.": [
        "Questioning",
        "Cause_change",
        "Quarreling",
        "Correctness",
        "Temporal_collocation",
        "Capability",
        "Intentionally_act",
        "Choosing"
    ],
    "To help you choose which action to take for an incoming content URI, the provider API includes the convenience class UriMatcher, which maps content URI `` patterns'' to integer values.": [
        "Inclusion",
        "Have_as_requirement",
        "Intentionally_act",
        "Choosing",
        "Assistance"
    ],
    "You can use the integer values in a switch statement that chooses the desired action for the content URI or URIs that match a particular pattern.": [
        "Assessing",
        "Evaluative_comparison",
        "Desiring",
        "Pattern",
        "Idiosyncrasy",
        "Capability",
        "Using",
        "Intentionally_act",
        "Choosing"
    ],
    "A content URI pattern matches content URIs using wildcard characters:": [
        "Physical_artworks",
        "Pattern",
        "Using",
        "Evaluative_comparison"
    ],
    "As an example of designing and coding content URI handling, consider a provider with the authority com.example.app.provider that recognizes the following content URIs pointing to tables:": [
        "Instance",
        "Coming_up_with",
        "Execution",
        "Becoming_aware",
        "Relative_time",
        "Adducing",
        "Categorization"
    ],
    "The provider also recognizes these content URIs if they have a row ID appended to them, as for example content: / / com.example.app.provider / table3/1 for the row identified by 1 in table3.": [
        "Instance",
        "Attaching",
        "Verification",
        "Quarreling",
        "Becoming_aware"
    ],
    "The following content URI patterns would be possible:": [
        "Relative_time",
        "Pattern",
        "Likelihood"
    ],
    "The following code snippet shows how the methods in UriMatcher work.": [
        "Working_on",
        "Part_piece",
        "Execution",
        "Relative_time",
        "Evidence"
    ],
    "This code handles URIs for an entire table differently from URIs for a single row, by using the content URI pattern content: / / <authority> / <path> for tables, and content: / / <authority> / <path> / <id> for single rows.": [
        "Quarreling",
        "Pattern",
        "Quarreling",
        "Ranked_expectation",
        "Sole_instance",
        "Execution",
        "Resolve_problem",
        "Using"
    ],
    "The method addURI ( ) maps an authority and path to an integer value.": [
        "Execution",
        "Execution"
    ],
    "The method match ( ) returns the integer value for a URI.": [
        "Execution",
        "Evaluative_comparison",
        "Execution"
    ],
    "A switch statement chooses between querying the entire table, and querying for a single record:": [
        "Questioning",
        "Recording",
        "Ranked_expectation",
        "Sole_instance",
        "Choosing"
    ],
    "Another class, ContentUris, provides convenience methods for working with the id part of content URIs.": [
        "Increment",
        "Execution",
        "Being_employed",
        "Part_whole",
        "Supply"
    ],
    "The classes Uri and Uri.Builder include convenience methods for parsing existing Uri objects and building new ones.": [
        "Clothing",
        "Age",
        "Building",
        "Existence",
        "Execution",
        "Inclusion"
    ],
    "The ContentProvider instance manages access to a structured set of data by handling requests from other applications.": [
        "Instance",
        "Having_or_lacking_access",
        "Intentionally_act",
        "Increment",
        "Execution",
        "Execution",
        "Operating_a_system"
    ],
    "All forms of access eventually call ContentResolver, which then calls a concrete method of ContentProvider to get access.": [
        "Having_or_lacking_access",
        "Execution",
        "Execution",
        "Execution",
        "Temporal_collocation",
        "Time_vector",
        "Quantity"
    ],
    "The abstract class ContentProvider defines six abstract methods that you must implement as part of your own concrete subclass.": [
        "Execution",
        "Gizmo",
        "Being_obligated",
        "Cardinal_numbers",
        "Possession",
        "Part_whole",
        "Communicate_categorization"
    ],
    "All of these methods except onCreate ( ) are called by a client application that is attempting to access your content provider:": [
        "Execution",
        "Quantity",
        "Attempt",
        "Using",
        "Execution"
    ],
    "Notice that these methods have the same signature as the identically-named ContentResolver methods.": [
        "Execution",
        "Identicality",
        "Sign_agreement",
        "Becoming_aware"
    ],
    "Your implementation of these methods should account for the following:": [
        "Execution",
        "Execute_plan",
        "Explaining_the_facts",
        "Being_obligated"
    ],
    "The ContentProvider.query ( ) method must return a Cursor object, or if it fails, throw an Exception.": [
        "Execution",
        "Success_or_failure",
        "Being_obligated",
        "Cause_motion",
        "Execution"
    ],
    "If you are using an SQLite database as your data storage, you can simply return the Cursor returned by one of the query ( ) methods of the SQLiteDatabase class.": [
        "Questioning",
        "Execution",
        "Storing",
        "Execution",
        "Capability",
        "Execution",
        "Using",
        "Cardinal_numbers"
    ],
    "If the query does not match any rows, you should return a Cursor instance whose getCount ( ) method returns 0.": [
        "Questioning",
        "Evaluative_comparison",
        "Quarreling",
        "Instance",
        "Execution",
        "Quantity",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Execution"
    ],
    "You should return null only if an internal error occurred during the query process.": [
        "Questioning",
        "Execution",
        "Being_obligated",
        "Being_in_effect",
        "Execution",
        "Sole_instance",
        "Event"
    ],
    "If you aren't using an SQLite database as your data storage, use one of the concrete subclasses of Cursor.": [
        "Storing",
        "Using",
        "Cardinal_numbers",
        "Using"
    ],
    "For example, the MatrixCursor class implements a cursor in which each row is an array of Object.": [
        "Instance",
        "Gizmo",
        "Quarreling",
        "Diversity"
    ],
    "With this class, use addRow ( ) to add a new row.": [
        "Quarreling",
        "Age"
    ],
    "Remember that the Android system must be able to communicate the Exception across process boundaries.": [
        "Boundary",
        "System",
        "Execution",
        "Communication",
        "Capability",
        "Being_obligated",
        "Memory"
    ],
    "Android can do this for the following exceptions that may be useful in handling query errors:": [
        "Relative_time",
        "Likelihood",
        "Capability",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "The insert ( ) method adds a new row to the appropriate table, using the values in the ContentValues argument.": [
        "Execution",
        "Quarreling",
        "Age",
        "Reasoning",
        "Using"
    ],
    "If a column name is not in the ContentValues argument, you may want to provide a default value for it either in your provider code or in your database schema.": [
        "Reasoning",
        "Likelihood",
        "Supply",
        "Desiring"
    ],
    "This method should return the content URI for the new row.": [
        "Execution",
        "Quarreling",
        "Age",
        "Being_obligated",
        "Execution"
    ],
    "To construct this, append the new row's _ ID ( or other primary key ) value to the table's content URI, using withAppendedId ( ).": [
        "Attaching",
        "Quarreling",
        "Importance",
        "Building",
        "Age",
        "First_rank",
        "Using",
        "Increment"
    ],
    "The delete ( ) method does not have to physically delete rows from your data storage.": [
        "Execution",
        "Quarreling",
        "Intentionally_act",
        "Storing",
        "Being_obligated"
    ],
    "If you are using a sync adapter with your provider, you should consider marking a deleted row with a `` delete'' flag rather than removing the row entirely.": [
        "Operate_vehicle",
        "Being_obligated",
        "Removing",
        "Using",
        "Sign",
        "Categorization"
    ],
    "The sync adapter can check for deleted rows and remove them from the server before deleting them from the provider.": [
        "Quarreling",
        "Capability",
        "Inspecting",
        "Removing"
    ],
    "The update ( ) method takes the same ContentValues argument used by insert ( ), and the same selection and selectionArgs arguments used by delete ( ) and ContentProvider.query ( ).": [
        "Execution",
        "Identicality",
        "Reasoning",
        "Evidence",
        "Using",
        "Removing"
    ],
    "This may allow you to re-use code between these methods.": [
        "Execution",
        "Likelihood",
        "Grant_permission"
    ],
    "The Android system calls onCreate ( ) when it starts up the provider.": [
        "Temporal_collocation",
        "System",
        "Process_start",
        "Execution"
    ],
    "You should perform only fast-running initialization tasks in this method, and defer database creation and data loading until the provider actually receives a request for the data.": [
        "Sole_instance",
        "Being_obligated",
        "Execution",
        "Intentionally_create",
        "Being_obligated",
        "Execution",
        "Receiving",
        "Intentionally_act",
        "Change_event_time"
    ],
    "If you do lengthy tasks in onCreate ( ), you will slow down your provider's startup.": [
        "Duration_attribute",
        "Being_obligated",
        "Ingestion",
        "Intentionally_act"
    ],
    "In turn, this will slow down the response from the provider to other applications.": [
        "Temporal_subregion",
        "Ingestion",
        "Increment",
        "Response"
    ],
    "The following two snippets demonstrate the interaction between ContentProvider.onCreate ( ) and Room.databaseBuilder ( ).": [
        "Part_piece",
        "Cardinal_numbers",
        "Reasoning",
        "Relative_time"
    ],
    "This snippet shows the implementation of ContentProvider.onCreate ( ) where the database object is built and handles to the data access objects are created:": [
        "Part_piece",
        "Having_or_lacking_access",
        "Execute_plan",
        "Locative_relation",
        "Building",
        "Resolve_problem",
        "Intentionally_create",
        "Evidence"
    ],
    "The ContentProvider class has two methods for returning MIME types:": [
        "Execution",
        "Cardinal_numbers",
        "Execution",
        "Inclusion"
    ],
    "The getType ( ) method returns a String in MIME format that describes the type of data returned by the content URI argument.": [
        "Execution",
        "Execution",
        "Reasoning",
        "Execution"
    ],
    "The Uri argument can be a pattern rather than a specific URI ; in this case, you should return the type of data associated with content URIs that match the pattern.": [
        "Instance",
        "Evaluative_comparison",
        "Pattern",
        "Reasoning",
        "Being_obligated",
        "Capability",
        "Cognitive_connection",
        "Execution"
    ],
    "For common types of data such as as text, HTML, or JPEG, getType ( ) should return the standard MIME type for that data.": [
        "Being_obligated",
        "Execution"
    ],
    "A full list of these standard types is available on the IANA MIME Media Types website.": [
        "Fullness"
    ],
    "For content URIs that point to a row or rows of table data, getType ( ) should return a MIME type in Android's vendor-specific MIME format:": [
        "Quarreling",
        "Text_creation",
        "Quarreling",
        "Being_obligated",
        "Adducing",
        "Execution"
    ],
    "You supply the <name> and <type>.": [],
    "The <name> value should be globally unique, and the <type> value should be unique to the corresponding URI pattern.": [
        "Pattern",
        "Idiosyncrasy",
        "Being_obligated"
    ],
    "A good choice for <name> is your company's name or some part of your application's Android package name.": [
        "Businesses",
        "Relational_quantity",
        "Relational_quantity",
        "Using",
        "Execution",
        "Choosing",
        "Membership"
    ],
    "A good choice for the <type> is a string that identifies the table associated with the URI.": [
        "Relational_quantity",
        "Cognitive_connection",
        "Choosing",
        "Verification"
    ],
    "For example, if a provider's authority is com.example.app.provider, and it exposes a table named table1, the MIME type for multiple rows in table1 is:": [
        "Instance",
        "Quarreling",
        "Reveal_secret",
        "Quantity",
        "Execution"
    ],
    "For a single row of table1, the MIME type is:": [
        "Quarreling",
        "Sole_instance"
    ],
    "If your provider offers files, implement getStreamTypes ( ).": [
        "Gizmo",
        "Offering"
    ],
    "The method returns a String array of MIME types for the files your provider can return for a given content URI.": [
        "Execution",
        "Diversity",
        "Giving",
        "Execution",
        "Capability",
        "Execution"
    ],
    "You should filter the MIME types you offer by the MIME type filter argument, so that you return only those MIME types that the client wants to handle.": [
        "Reasoning",
        "Being_obligated",
        "Offering",
        "Sole_instance",
        "Resolve_problem",
        "Desiring",
        "Execution"
    ],
    "For example, consider a provider that offers photo images as files in.": [
        "Instance",
        "Sensation",
        "Offering",
        "Categorization"
    ],
    "If an application calls ContentResolver.getStreamTypes ( ) with the filter string image / * ( something that is an `` image'' ), then the ContentProvider.getStreamTypes ( ) method should return the array:": [
        "Using",
        "Similarity",
        "Execution",
        "Diversity",
        "Being_obligated",
        "Execution",
        "Temporal_collocation",
        "Execution"
    ],
    "If the app is only interested in.": [
        "Sole_instance",
        "Desiring"
    ],
    "jpg files, then it can call ContentResolver.getStreamTypes ( ) with the filter string * / jpeg, and ContentProvider.getStreamTypes ( ) should return:": [
        "Temporal_collocation",
        "Being_obligated",
        "Execution",
        "Execution",
        "Capability"
    ],
    "If your provider doesn't offer any of the MIME types requested in the filter string, getStreamTypes ( ) should return null.": [
        "Intentionally_act",
        "Quantity",
        "Being_obligated",
        "Offering",
        "Execution",
        "Execution"
    ],
    "A contract class is a public final class that contains constant definitions for the URIs, column names, MIME types, and other meta-data that pertain to the provider.": [
        "Documents",
        "Communicate_categorization",
        "Increment",
        "Secrecy_status",
        "Ordinal_numbers",
        "Inclusion"
    ],
    "The class establishes a contract between the provider and other applications by ensuring that the provider can be correctly accessed even if there are changes to the actual values of URIs, column names, and so forth.": [
        "Documents",
        "Increment",
        "Actually_occurring_entity",
        "Likelihood",
        "Undergo_change",
        "Intentionally_create",
        "Existence"
    ],
    "A contract class also helps developers because it usually has mnemonic names for its constants, so developers are less likely to use incorrect values for column names or URIs.": [
        "Documents",
        "Correctness",
        "Assistance",
        "Inclusion",
        "Likelihood",
        "Using"
    ],
    "Since it's a class, it can contain Javadoc documentation.": [
        "Capability",
        "Inclusion"
    ],
    "Integrated development environments such as Android Studio can auto-complete constant names from the contract class and display Javadoc for the constants.": [
        "Building_subparts",
        "Documents",
        "Cause_to_make_progress",
        "Capability"
    ],
    "Developers can't access the contract class's class file from your application, but they can statically compile it into their application from a.": [
        "Documents",
        "Using",
        "Capability",
        "Capability"
    ],
    "The ContactsContract class and its nested classes are examples of contract classes.": [
        "Documents",
        "Categorization",
        "Instance"
    ],
    "Permissions and access for all aspects of the Android system are described in detail in the topic Security and permissions.": [
        "Grant_permission",
        "Having_or_lacking_access",
        "Gizmo",
        "Topic",
        "Grant_permission",
        "Quantity",
        "Being_at_risk",
        "Distinctiveness",
        "Communicate_categorization"
    ],
    "The topic Data storage also described the security and permissions in effect for various types of storage.": [
        "Grant_permission",
        "Objective_influence",
        "Diversity",
        "Topic",
        "Storing",
        "Being_at_risk",
        "Communicate_categorization"
    ],
    "In brief, the important points are:": [
        "Duration_attribute",
        "Locale",
        "Importance"
    ],
    "If you want to use content provider permissions to control access to your data, then you should store your data in internal files, SQLite databases, or the `` cloud'' ( for example, on a remote server ), and you should keep files and databases private to your application.": [
        "Having_or_lacking_access",
        "Temporal_collocation",
        "Instance",
        "Using",
        "Being_obligated",
        "Activity_ongoing",
        "Control",
        "Grant_permission",
        "Storing",
        "Using",
        "Possession"
    ],
    "All applications can read from or write to your provider, even if the underlying data is private, because by default your provider does not have permissions set.": [
        "Grant_permission",
        "Quantity",
        "Execution",
        "Reading",
        "Capability",
        "Intentionally_act"
    ],
    "To change this, set permissions for your provider in your manifest file, using attributes or child elements of the <provider> element.": [
        "Grant_permission",
        "Ingredients",
        "Undergo_change",
        "Kinship",
        "Intentionally_create",
        "Ingredients",
        "Using"
    ],
    "You can set permissions that apply to the entire provider, or to certain tables, or even to certain records, or all three.": [
        "Grant_permission",
        "Recording",
        "Quantity",
        "Cardinal_numbers",
        "Ranked_expectation",
        "Likelihood",
        "Capability",
        "Using",
        "Intentionally_create"
    ],
    "You define permissions for your provider with one or more <permission> elements in your manifest file.": [
        "Cardinal_numbers",
        "Grant_permission",
        "Ingredients",
        "Communicate_categorization",
        "Increment",
        "Grant_permission"
    ],
    "To make the permission unique to your provider, use Java-style scoping for the android: name attribute.": [
        "Grant_permission",
        "Idiosyncrasy",
        "Causation",
        "Using"
    ],
    "For example, name the read permission com.example.app.provider.permission.READ _ PROVIDER.": [
        "Instance",
        "Grant_permission",
        "Categorization"
    ],
    "The following list describes the scope of provider permissions, starting with the permissions that apply to the entire provider and then becoming more fine-grained.": [
        "Grant_permission",
        "Relative_time",
        "Ranked_expectation",
        "Increment",
        "Scope",
        "Using",
        "Temporal_collocation",
        "Becoming",
        "Activity_start"
    ],
    "More fine-grained permissions take precedence over ones with larger scope:": [
        "Clothing",
        "Scope",
        "Increment",
        "Dimension",
        "Grant_permission",
        "Have_as_requirement"
    ],
    "Consider the permissions you need to implement an email provider and app, when you want to allow an outside image viewer application to display photo attachments from your provider.": [
        "Grant_permission",
        "Gizmo",
        "Contacting",
        "Temporal_collocation",
        "Similarity",
        "Using",
        "Physical_artworks",
        "Attaching",
        "Part_inner_outer",
        "Grant_permission",
        "Have_as_requirement",
        "Categorization",
        "Possession"
    ],
    "To give the image viewer the necessary access without requiring permissions, set up temporary permissions for content URIs for photos.": [
        "Similarity",
        "Having_or_lacking_access",
        "Grant_permission",
        "Physical_artworks",
        "Being_necessary",
        "Needing",
        "Giving",
        "Intentionally_create"
    ],
    "Design your email app so that when the user wants to display a photo, the app sends an intent containing the photo's content URI and permission flags to the image viewer.": [
        "Contacting",
        "Temporal_collocation",
        "Physical_artworks",
        "Grant_permission",
        "Similarity",
        "Coming_up_with",
        "Desiring",
        "Inclusion",
        "Causation"
    ],
    "The image viewer can then query your email provider to retrieve the photo, even though the viewer doesn't have the normal read permission for your provider.": [
        "Similarity",
        "Contacting",
        "Physical_artworks",
        "Mental_property",
        "Grant_permission",
        "Intentionally_act",
        "Temporal_collocation",
        "Questioning",
        "Capability"
    ],
    "To turn on temporary permissions, either set the android: grantUriPermissions attribute of the <provider> element, or add one or more <grant-uri-permission> child elements to your <provider> element.": [
        "Becoming",
        "Ingredients",
        "Cardinal_numbers",
        "Kinship",
        "Grant_permission",
        "Ingredients",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_create",
        "Increment"
    ],
    "If you use temporary permissions, you have to call Context.revokeUriPermission ( ) whenever you remove support for a content URI from your provider, and the content URI is associated with a temporary permission.": [
        "Grant_permission",
        "Grant_permission",
        "Being_obligated",
        "Execution",
        "Taking_sides",
        "Using",
        "Cognitive_connection",
        "Removing"
    ],
    "The attribute's value determines how much of your provider is made accessible.": [
        "Having_or_lacking_access",
        "Relational_quantity",
        "Causation",
        "Coming_to_believe"
    ],
    "If the attribute is set to true, then the system will grant temporary permission to your entire provider, overriding any other permissions that are required by your provider-level or path-level permissions.": [
        "System",
        "Quantity",
        "Grant_permission",
        "Ranked_expectation",
        "Increment",
        "Intentionally_create",
        "Grant_permission",
        "Being_necessary",
        "Temporal_collocation"
    ],
    "If this flag is set to false, then you must add <grant-uri-permission> child elements to your <provider> element.": [
        "Artificiality",
        "Kinship",
        "Ingredients",
        "Ingredients",
        "Being_obligated",
        "Intentionally_create",
        "Temporal_collocation"
    ],
    "Each child element specifies the content URI or URIs for which temporary access is granted.": [
        "Kinship",
        "Ingredients",
        "Having_or_lacking_access"
    ],
    "To delegate temporary access to an application, an intent must contain the FLAG_GRANT_READ_URI_PERMISSION or the FLAG_GRANT_WRITE_URI_PERMISSION flags, or both.": [
        "Having_or_lacking_access",
        "Using",
        "Quantity",
        "Being_obligated",
        "Inclusion"
    ],
    "These are set with the setFlags ( ) method.": [
        "Execution",
        "Intentionally_create"
    ],
    "If the android: grantUriPermissions attribute is not present, it's assumed to be false.": [
        "Adopt_selection",
        "Artificiality",
        "Presence"
    ],
    "Like Activity and Service components, a subclass of ContentProvider must be defined in the manifest file for its application, using the <provider> element.": [
        "Public_services",
        "Using",
        "Ingredients",
        "Ingredients",
        "Using",
        "Intentionally_act",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "The Android system gets the following information from the element:": [
        "Relative_time",
        "Ingredients",
        "System",
        "Information",
        "Execution"
    ],
    "Permissions and their corresponding attributes are described in more detail in the section Implementing Content provider permissions.": [
        "Grant_permission",
        "Part_whole",
        "Grant_permission",
        "Increment",
        "Gizmo",
        "Communicate_categorization"
    ],
    "The attributes are fully documented in the dev guide topic for the <provider> element.": [
        "Degree",
        "Ingredients",
        "Recording",
        "Topic"
    ],
    "Applications can access a content provider indirectly with an Intent.": [
        "Capability"
    ],
    "The application does not call any of the methods of ContentResolver or ContentProvider.": [
        "Using",
        "Execution",
        "Intentionally_act",
        "Quantity",
        "Execution"
    ],
    "Instead, it sends an intent that starts an activity, which is often part of the provider's own application.": [
        "Intentionally_act",
        "Frequency",
        "Using",
        "Possession",
        "Membership",
        "Process_start",
        "Causation"
    ],
    "The destination activity is in charge of retrieving and displaying the data in its UI.": [
        "Intentionally_act",
        "Execution"
    ],
    "Depending on the action in the intent, the destination activity may also prompt the user to make modifications to the provider's data.": [
        "Intentionally_act",
        "Intentionally_act",
        "Likelihood",
        "Cause_change",
        "Causation",
        "Cause_to_start"
    ],
    "An intent may also contain `` extras'' data that the destination activity displays in the UI ; the user then has the option of changing this data before using it to modify the data in the provider.": [
        "Intentionally_act",
        "Likelihood",
        "Temporal_collocation",
        "Exchange",
        "Cause_change",
        "Inclusion",
        "Using",
        "Possibilities",
        "Inclusion"
    ],
    "You may want to use intent access to help ensure data integrity.": [
        "Having_or_lacking_access",
        "Likelihood",
        "Assistance",
        "Using",
        "Desiring"
    ],
    "Your provider may depend on having data inserted, updated, and deleted according to strictly defined business logic.": [
        "Businesses",
        "Categorization",
        "Likelihood",
        "Possession",
        "Attributed_information"
    ],
    "If this is the case, allowing other applications to directly modify your data may lead to invalid data.": [
        "Increment",
        "Cause_change",
        "Grant_permission",
        "Likelihood",
        "Reasoning",
        "Causation"
    ],
    "If you want developers to use intent access, be sure to document it thoroughly.": [
        "Having_or_lacking_access",
        "Recording",
        "Likelihood",
        "Using",
        "Desiring"
    ],
    "Explain to them why intent access using your own application's UI is better than trying to modify the data with their code.": [
        "Reason",
        "Having_or_lacking_access",
        "Using",
        "Desirability",
        "Possession",
        "Cause_change",
        "Using",
        "Attempt"
    ],
    "Handling an incoming intent that wishes to modify your provider's data is no different from handling other intents.": [
        "Cause_change",
        "Increment",
        "Intentionally_act",
        "Resolve_problem",
        "Similarity",
        "Desiring"
    ],
    "You can learn more about using intents by reading the topic Intents and Intent Filters.": [
        "Increment",
        "Topic",
        "Using",
        "Education_teaching",
        "Capability",
        "Reading"
    ],
    "For sample code related to this page, refer to the Note Pad sample application.": [
        "Contacting",
        "Self_motion",
        "Using",
        "Cognitive_connection"
    ],
    "For additional related information, refer to Calendar Provider.": [
        "Information",
        "Cognitive_connection",
        "Increment"
    ],
    "Decide if you need a content provider.": [
        "Required_event"
    ],
    "You need to build a content provider if you want to provide one or more of the following features: You want to offer complex data or files to other applications.": [
        "Cardinal_numbers",
        "Increment",
        "Relative_time",
        "Self_motion",
        "Increment",
        "Offering",
        "Required_event",
        "Building",
        "Supply",
        "Desiring"
    ],
    "You want to allow users to copy complex data from your app into other apps.": [
        "Increment",
        "Duplication",
        "Grant_permission",
        "Desiring"
    ],
    "You want to provide custom search suggestions using the search framework.": [
        "Custom",
        "Scrutiny",
        "Using",
        "Supply",
        "Desiring"
    ],
    "You want to expose your application data to widgets.": [
        "Using",
        "Reveal_secret",
        "Desiring"
    ],
    "You want to implement the AbstractThreadedSyncAdapter, CursorAdapter, or CursorLoader classes.": [
        "Gizmo",
        "Desiring"
    ],
    "You want to offer complex data or files to other applications.": [
        "Self_motion",
        "Increment",
        "Offering",
        "Desiring"
    ],
    "If you haven't done so already, read the topic Content provider basics to learn more about providers and how they work.": [
        "Topic",
        "Education_teaching",
        "Increment",
        "Being_employed",
        "Intentionally_act",
        "Time_vector",
        "Reading"
    ],
    "Design the raw storage for your data.": [
        "Storing",
        "Degree_of_processing",
        "Coming_up_with"
    ],
    "A content provider offers data in two ways: File data Data that normally goes into files, such as photos, audio, or videos.": [
        "Execution",
        "Physical_artworks",
        "Offering",
        "Cardinal_numbers",
        "Becoming"
    ],
    "Store the files in your application's private space.": [
        "Storing",
        "Using"
    ],
    "In response to a request for a file from another application, your provider can offer a handle to the file.": [
        "Execution",
        "Using",
        "Increment",
        "Capability",
        "Resolve_problem",
        "Offering",
        "Response"
    ],
    "`` Structured'' data Data that normally goes into a database, array, or similar structure.": [
        "Diversity",
        "Buildings",
        "Similarity",
        "Becoming"
    ],
    "Store the data in a form that's compatible with tables of rows and columns.": [
        "Storing",
        "Compatibility",
        "Quarreling"
    ],
    "A row represents an entity, such as a person or an item in inventory.": [
        "Quarreling",
        "Entity",
        "People",
        "Entity",
        "Store",
        "Communicate_categorization"
    ],
    "A column represents some data for the entity, such a person's name or an item's price.": [
        "Entity",
        "People",
        "Commerce_scenario",
        "Relational_quantity",
        "Entity",
        "Communicate_categorization"
    ],
    "A common way to store this type of data is in an SQLite database, but you can use any type of persistent storage.": [
        "Storing",
        "Quantity",
        "Process_continue",
        "Capability",
        "Storing",
        "Using"
    ],
    "To learn more about the storage types available in the Android system, see the section Designing data storage.": [
        "Gizmo",
        "Part_whole",
        "Education_teaching",
        "Coming_up_with",
        "Storing",
        "Grasp",
        "Increment"
    ],
    "Define a concrete implementation of the ContentProvider class and its required methods.": [
        "Execution",
        "Being_necessary",
        "Execute_plan",
        "Communicate_categorization"
    ],
    "This class is the interface between your data and the rest of the Android system.": [
        "Stimulus_focus",
        "Gizmo"
    ],
    "For more information about this class, see the section Implementing the ContentProvider class.": [
        "Part_whole",
        "Gizmo",
        "Information",
        "Increment",
        "Grasp"
    ],
    "Define the provider's authority string, its content URIs, and column names.": [
        "Execution",
        "Communicate_categorization"
    ],
    "If you want the provider's application to handle intents, also define intent actions, extras data, and flags.": [
        "Intentionally_act",
        "Using",
        "Desiring",
        "Resolve_problem",
        "Communicate_categorization"
    ],
    "Also define the permissions that you will require for applications that want to access your data.": [
        "Possession",
        "Have_as_requirement",
        "Grant_permission",
        "Communicate_categorization"
    ],
    "You should consider defining all of these values as constants in a separate contract class ; later, you can expose this class to other developers.": [
        "Becoming_separated",
        "Documents",
        "Increment",
        "Reveal_secret",
        "Quantity",
        "Time_vector",
        "Communicate_categorization",
        "Categorization",
        "Being_obligated",
        "Capability"
    ],
    "For more information about content URIs, see the section Designing Content URIs.": [
        "Part_whole",
        "Coming_up_with",
        "Information",
        "Increment",
        "Grasp"
    ],
    "For more information about intents, see the section Intents and Data Access.": [
        "Part_whole",
        "Having_or_lacking_access",
        "Information",
        "Increment",
        "Grasp"
    ],
    "Add other optional pieces, such as sample data or an implementation of AbstractThreadedSyncAdapter that can synchronize data between the provider and cloud-based data.": [
        "Part_piece",
        "Increment",
        "Capability",
        "Execute_plan"
    ],
    "If you are working with structured data then consider either a relational database such as SQLite, or a non relational key-value datastore such as LevelDB.": [
        "Temporal_collocation",
        "Categorization",
        "Working_on"
    ],
    "If you are working with unstructured data such as audio, image, or video media then consider storing the data as files.": [
        "Similarity",
        "Working_on",
        "Storing",
        "Temporal_collocation",
        "Categorization"
    ],
    "You can mix and match several different types of storage, and expose them using a single content provider if necessary.": [
        "Evaluative_comparison",
        "Similarity",
        "Storing",
        "Sole_instance",
        "Being_necessary",
        "Reveal_secret",
        "Using",
        "Cause_to_amalgamate",
        "Capability",
        "Quantity"
    ],
    "The Android system can interact with the Room persistence library, which provides access to the SQLite database API that Android's own providers use to store table-oriented data.": [
        "Building_subparts",
        "Buildings",
        "Having_or_lacking_access",
        "System",
        "Process_continue",
        "Supply",
        "Possession",
        "Capability",
        "Storing",
        "Using"
    ],
    "To create a database using this library, instantiate a subclass of RoomDatabase, as described in the Room persistence library guide.": [
        "Buildings",
        "Building_subparts",
        "Process_continue",
        "Intentionally_create",
        "Using",
        "Communicate_categorization"
    ],
    "For storing file data, Android has a variety of file-oriented APIs.": [
        "Self_motion",
        "Storing",
        "Inclusion"
    ],
    "To learn more about file storage, read the topic Data Storage.": [
        "Education_teaching",
        "Storing",
        "Reading",
        "Topic",
        "Storing",
        "Increment"
    ],
    "If you're designing a provider that offers media-related data such as music or videos, you can have a provider that combines table data and files.": [
        "Performing_arts",
        "Self_motion",
        "Cause_to_amalgamate",
        "Offering",
        "Coming_up_with",
        "Capability"
    ],
    "In rare cases, you might benefit from implementing more than one content provider for a single application.": [
        "Frequency",
        "Instance",
        "Execute_plan",
        "Using",
        "Likelihood",
        "Increment",
        "Cardinal_numbers",
        "Sole_instance"
    ],
    "For example, you might want to share some data with a widget using one content provider, and expose a different set of data for sharing with other applications.": [
        "Instance",
        "Similarity",
        "Likelihood",
        "Relational_quantity",
        "Cardinal_numbers",
        "Increment",
        "Using",
        "Execution",
        "Reveal_secret",
        "Desiring"
    ],
    "For working with network-based data, use classes in java.net and android.net.": [
        "Being_employed"
    ],
    "You can also synchronize network-based data to a local data store such as a database, and then offer the data as tables or files.": [
        "Political_locales",
        "Self_motion",
        "Capability",
        "Storing",
        "Offering",
        "Temporal_collocation"
    ],
    "The Basic Sync Adapter sample application demonstrates this type of synchronization.": [
        "Using",
        "Evidence"
    ],
    "Table data should always have a `` primary key'' column that the provider maintains as a unique numeric value for each row.": [
        "Quarreling",
        "First_rank",
        "Idiosyncrasy",
        "Frequency",
        "Being_obligated"
    ],
    "You can use this value to link the row to related rows in other tables ( using it as a `` foreign key'' ).": [
        "Quarreling",
        "Foreign_or_domestic_country",
        "Increment",
        "Using",
        "Capability",
        "Quarreling",
        "Using",
        "Cognitive_connection",
        "Make_cognitive_connection"
    ],
    "Although you can use any name for this column, using BaseColumns.": [
        "Quantity",
        "Using",
        "Capability",
        "Using"
    ],
    "_ ID is the best choice, because linking the results of a provider query to a ListView requires one of the retrieved columns to have the name _ ID.": [
        "Questioning",
        "Desirability",
        "Cardinal_numbers",
        "Causation",
        "Attaching",
        "Have_as_requirement",
        "Choosing"
    ],
    "If you want to provide bitmap images or other very large pieces of file-oriented data, store the data in a file and then provide it indirectly rather than storing it directly in a table.": [
        "Sensation",
        "Degree",
        "Dimension",
        "Storing",
        "Increment",
        "Part_piece",
        "Storing",
        "Supply",
        "Desiring",
        "Temporal_collocation"
    ],
    "If you do this, you need to tell users of your provider that they need to use a ContentResolver file method to access the data.": [
        "Intentionally_act",
        "Execution",
        "Using",
        "Required_event",
        "Telling"
    ],
    "Use the Binary Large OBject ( BLOB ) data type to store data that varies in size or has a varying structure.": [
        "Buildings",
        "Size",
        "Storing",
        "Similarity",
        "Cause_change"
    ],
    "For example, you can use a BLOB column to store a protocol buffer or JSON structure.": [
        "Instance",
        "Law",
        "Buildings",
        "Capability",
        "Storing",
        "Using"
    ],
    "*: Matches a string of any valid characters of any length.": [
        "Quantity",
        "Physical_artworks",
        "Dimension",
        "Being_in_effect",
        "Evaluative_comparison"
    ],
    "#: Matches a string of numeric characters of any length.": [
        "Physical_artworks",
        "Dimension",
        "Quantity",
        "Evaluative_comparison"
    ],
    "content: / / com.example.app.provider / table1: A table called table1.": [
        "Execution"
    ],
    "content: / / com.example.app.provider / table2/dataset1: A table called dataset1.": [
        "Execution"
    ],
    "content: / / com.example.app.provider / table2/dataset2: A table called dataset2.": [
        "Execution"
    ],
    "content: / / com.example.app.provider / table3: A table called table3.": [
        "Execution"
    ],
    "All of these methods except onCreate ( ) can be called by multiple threads at once, so they must be thread-safe.": [
        "Execution",
        "Natural_features",
        "Frequency",
        "Quantity",
        "Being_obligated",
        "Quantity",
        "Execution",
        "Likelihood"
    ],
    "To learn more about multiple threads, see the topic Processes and Threads.": [
        "Natural_features",
        "Topic",
        "Execution",
        "Natural_features",
        "Quantity",
        "Increment",
        "Education_teaching",
        "Grasp"
    ],
    "Avoid doing lengthy operations in onCreate ( ).": [
        "Avoiding",
        "Intentionally_act",
        "Businesses",
        "Duration_attribute"
    ],
    "Defer initialization tasks until they are actually needed.": [
        "Being_obligated",
        "Being_necessary"
    ],
    "The section Implementing the onCreate ( ) method discusses this in more detail.": [
        "Part_whole",
        "Gizmo",
        "Execution",
        "Discussion",
        "Increment"
    ],
    "Although you must implement these methods, your code does not have to do anything except return the expected data type.": [
        "Gizmo",
        "Execution",
        "Expectation",
        "Intentionally_act",
        "Intentionally_act",
        "Execution",
        "Being_obligated",
        "Being_obligated"
    ],
    "For example, you may want to prevent other applications from inserting data into some tables.": [
        "Instance",
        "Relational_quantity",
        "Likelihood",
        "Increment",
        "Preventing",
        "Desiring"
    ],
    "To do this, you can ignore the call to insert ( ) and return 0.": [
        "Execution",
        "Intentionally_act",
        "Execution",
        "Capability"
    ],
    "IllegalArgumentException ( You may choose to throw this if your provider receives an invalid content URI )": [
        "Likelihood",
        "Cause_motion",
        "Receiving",
        "Choosing"
    ],
    "Subtype part: If the URI pattern is for a single row: android.cursor.item / If the URI pattern is for more than one row: android.cursor.dir /": [
        "Quarreling",
        "Pattern",
        "Sole_instance",
        "Increment",
        "Cardinal_numbers",
        "Part_whole"
    ],
    "If the URI pattern is for a single row: android.cursor.item /": [
        "Quarreling",
        "Pattern",
        "Sole_instance"
    ],
    "If the URI pattern is for more than one row: android.cursor.dir /": [
        "Quarreling",
        "Pattern",
        "Increment",
        "Cardinal_numbers"
    ],
    "<type> You supply the <name> and <type>.": [],
    "By default, data files stored on the device's internal storage are private to your application and provider.": [
        "Gizmo",
        "Storing",
        "Using",
        "Self_motion",
        "Storing"
    ],
    "SQLiteDatabase databases you create are private to your application and provider.": [
        "Using",
        "Intentionally_create"
    ],
    "By default, data files that you save to external storage are public and world-readable.": [
        "Storing",
        "Secrecy_status"
    ],
    "You can't use a content provider to restrict access to files in external storage, because other applications can use other API calls to read and write them.": [
        "Having_or_lacking_access",
        "Self_motion",
        "Storing",
        "Increment",
        "Categorization",
        "Contacting",
        "Capability",
        "Grant_permission",
        "Using",
        "Capability"
    ],
    "The method calls for opening or creating files or SQLite databases on your device's internal storage can potentially give both read and write access to all other applications.": [
        "Execution",
        "Self_motion",
        "Gizmo",
        "Having_or_lacking_access",
        "Quantity",
        "Intentionally_create",
        "Quantity",
        "Increment",
        "Storing",
        "Execution",
        "Capability",
        "Giving"
    ],
    "If you use an internal file or database as your provider's repository, and you give it `` world-readable'' or `` world-writeable'' access, the permissions you set for your provider in its manifest won't protect your data.": [
        "Self_motion",
        "Having_or_lacking_access",
        "Grant_permission",
        "Execution",
        "Building_subparts",
        "Protecting",
        "Using",
        "Giving"
    ],
    "The default access for files and databases in internal storage is `` private'', and for your provider's repository you shouldn't change this.": [
        "Having_or_lacking_access",
        "Storing",
        "Building_subparts",
        "Being_obligated",
        "Cause_change"
    ],
    "android: grantUriPermissions: Temporary permission flag.": [
        "Grant_permission"
    ],
    "android: permission: Single provider-wide read/write permission.": [
        "Grant_permission",
        "Sole_instance"
    ],
    "android: readPermission: Provider-wide read permission.": [
        "Grant_permission",
        "Reading"
    ],
    "android: writePermission: Provider-wide write permission.": [
        "Grant_permission"
    ],
    "android: enabled: Flag allowing the system to start the provider.": [
        "System",
        "Grant_permission",
        "Activity_start"
    ],
    "android: exported: Flag allowing other applications to use this provider.": [
        "Exporting",
        "Increment",
        "Using",
        "Grant_permission"
    ],
    "android: initOrder: The order in which this provider should be started, relative to other providers in the same process.": [
        "Process_start",
        "Kinship",
        "Execution",
        "Increment",
        "Identicality",
        "Being_obligated"
    ],
    "android: multiProcess: Flag allowing the system to start the provider in the same process as the calling client.": [
        "System",
        "Execution",
        "Identicality",
        "Execution",
        "Grant_permission",
        "Activity_start"
    ],
    "android: process: The name of the process in which the provider should run.": [
        "Execution",
        "Being_obligated",
        "Execution"
    ],
    "android: syncable: Flag indicating that the provider's data is to be sync ` ed with data on a server.": [
        "Evidence"
    ],
    "android: icon: A drawable resource containing an icon for the provider.": [
        "Inclusion"
    ],
    "The icon appears next to the provider's label in the list of apps in Settings > Apps > All.": [
        "Coming_to_be",
        "Labeling",
        "Locative_relation"
    ],
    "android: label: An informational label describing the provider or its data, or both.": [
        "Quantity",
        "Labeling",
        "Communicate_categorization"
    ],
    "The label appears in the list of apps in Settings > Apps > All.": [
        "Labeling",
        "Coming_to_be"
    ],
    "Actually there is no magic.": [
        "Ineffability",
        "Quantity",
        "Existence"
    ],
    "Custom scope annotations are just annotations.": [
        "Custom",
        "Scope"
    ],
    "They can have any name.": [
        "Quantity",
        "Capability"
    ],
    "First function of scopes is a way to tell Dagger compiler which scopes are allowed within scoped component.": [
        "Ordinal_numbers",
        "Scope",
        "Grant_permission",
        "Ingredients",
        "Telling",
        "Execution"
    ],
    "That's why using @ActivityScope dependency in non-@ActivityScope component will fire a compilation error.": [
        "Reason",
        "Reliance",
        "Ingredients",
        "Using",
        "Shoot_projectiles"
    ],
    "In fact components can declare many scopes -LRB- e.g. @ActivityScope and @UiScope -RRB- and Dagger will treat both of them as single scope - it's called scope aliasing.": [
        "Scope",
        "Scope",
        "Ingredients",
        "Quantity",
        "Sole_instance",
        "Quantity",
        "Execution",
        "Capability",
        "Communicate_categorization"
    ],
    "For example, it's useful in multi module projects - when one Gradle module defines one scope with its Dagger modules and another Gradle module defines another scope, while both of them can be used as single aliased scope in some third Gradle module that defines Dagger component.": [
        "Instance",
        "Project",
        "Temporal_collocation",
        "Increment",
        "Scope",
        "Sole_instance",
        "Relational_quantity",
        "Ordinal_numbers",
        "Ingredients",
        "Cardinal_numbers",
        "Quantity",
        "Likelihood",
        "Categorization",
        "Using"
    ],
    "Second function is to limit number of instances allowed within scoped component.": [
        "Instance",
        "Ingredients",
        "Ordinal_numbers",
        "Quantity",
        "Grant_permission"
    ],
    "There are several types of scopes supported:": [
        "Scope",
        "Quantity",
        "Taking_sides",
        "Existence"
    ],
    "Unscoped - when no annotation declared.": [
        "Temporal_collocation",
        "Quantity"
    ],
    "Unscoped dependency will have simple Provider generated without any caching and any instance of that dependency created in component will be new for every new injection -LRB- as in constructor, or in module provision method, or just as a field -RRB-.": [
        "Instance",
        "Reliance",
        "Ingredients",
        "Frequency",
        "Terms_of_agreement",
        "Execution",
        "Fields",
        "Quantity",
        "Intentionally_create",
        "Age",
        "Creating"
    ],
    "Custom scope e.g. @ActivityScope annotation defined with @javax.": [
        "Custom",
        "Scope",
        "Categorization"
    ],
    "inject.Scope annotation - Dependencies declared with that scope with have caching Provider with double-check lock generated and only single instance will be created for it within component declared with the same scope and its creation will be thread safe.": [
        "Reliance",
        "Scope",
        "Change_position_on_a_scale",
        "Hair_configuration",
        "Sole_instance",
        "Instance",
        "Ingredients",
        "Risky_situation",
        "Sole_instance",
        "Identicality",
        "Intentionally_create",
        "Creating",
        "Intentionally_create"
    ],
    "Note that for every instance of component itself new instance of that dependency will be created.": [
        "Frequency",
        "Instance",
        "Reliance",
        "Ingredients",
        "Age",
        "Creating"
    ],
    "Reusable scope - declared with @dagger.": [
        "Scope"
    ],
    "Reusable annotation - Dependencies declared with that scope may be shared between different components through common parent component and will have caching Provider with single-check lock generated.": [
        "Reliance",
        "Scope",
        "Kinship",
        "Duplication",
        "Hair_configuration",
        "Similarity",
        "Ingredients",
        "Ingredients",
        "Creating",
        "Likelihood"
    ],
    "It is useful when dependency does not necessarily need to have single instance but may be shared for increased performance -LRB- less allocations -RRB- in single component or between components.": [
        "Temporal_collocation",
        "Reliance",
        "Instance",
        "Ingredients",
        "Ingredients",
        "Intentionally_act",
        "Sole_instance",
        "Performing_arts",
        "Have_as_requirement",
        "Likelihood"
    ],
    "For more info on how scopes work refer to LINK and Dagger's generated code.": [
        "Working_on",
        "Cognitive_connection",
        "Creating",
        "Part_orientational",
        "Increment"
    ],
    "How to define the actual scope is your prerogative.": [
        "Scope",
        "Actually_occurring_entity",
        "Communicate_categorization"
    ],
    "Define the livecycle of your scope component, when it's created and when it destroyed - this is your scope.": [
        "Temporal_collocation",
        "Killing",
        "Scope",
        "Ingredients",
        "Creating",
        "Communicate_categorization"
    ],
    "E.g. @ActivityScope is tied to Activity livecycle and defined like that:": [
        "Intentionally_act",
        "Communicate_categorization",
        "Make_cognitive_connection"
    ],
    "So there is no magic.": [
        "Ineffability",
        "Quantity",
        "Existence"
    ],
    "Define your scopes by the semantics of using them.": [
        "Scope",
        "Using",
        "Communicate_categorization"
    ],
    "You may also find useful LINK and LINK.": [
        "Likelihood",
        "Locating"
    ],
    "EDIT 14.10.2018 Expanded on scopes functions and types to eliminate ambiguity in previous answer.": [
        "Scope",
        "Time_vector",
        "Communication_response",
        "Removing",
        "Expansion"
    ],
    "It is worth noting that apparently Dagger2 creates a single instance per scoped provider in a module per component.": [
        "Instance",
        "Ingredients",
        "Sole_instance",
        "Creating",
        "Deserving"
    ],
    "So in order to get a scoped provider in a module, you need to specify the scope for your module's provider method.": [
        "Scope",
        "Execution",
        "Execution",
        "Required_event"
    ],
    "EDIT START: though generally, you don't need to instantiate your own implementations inside your modules, so you can actually just do this:": [
        "Intentionally_act",
        "Temporal_subregion",
        "Possession",
        "Execute_plan",
        "Capability",
        "Required_event"
    ],
    "EDIT END": [],
    "Afterwards, refer to Kirill's answer ; essentially a `` scope'' by itself only determines that it is a different scope from the other one.": [
        "Time_vector",
        "Scope",
        "Cardinal_numbers",
        "Increment",
        "Similarity",
        "Sole_instance",
        "Coming_to_believe",
        "Communication_response"
    ],
    "Using component dependencies -LRB- or subcomponents -RRB- creates a subscope.": [
        "Ingredients",
        "Reliance",
        "Creating",
        "Using"
    ],
    "A component can depend on only one other scoped component.": [
        "Ingredients",
        "Sole_instance",
        "Increment",
        "Capability",
        "Cardinal_numbers"
    ],
    "Scoped generic class fails to build \u00b7 Issue # 671 \u00b7 google/dagger \u00b7 GitHub": [
        "Point_of_dispute",
        "Building",
        "Success_or_failure"
    ],
    "Scoped generic class fails to build": [
        "Building",
        "Success_or_failure"
    ],
    "The following fails to build:": [
        "Relative_time",
        "Success_or_failure",
        "Building"
    ],
    "However, when adding another @Inject element or removing scoping it succeeds:": [
        "Concessive",
        "Temporal_collocation",
        "Increment",
        "Ingredients",
        "Success_or_failure",
        "Removing"
    ],
    "The problem in the first case is that Dagger is overeager to use a single static factory instance for generating instances of scoped generic classes.": [
        "Predicament",
        "Sole_instance",
        "Instance",
        "Instance",
        "Ordinal_numbers",
        "Locale_by_use",
        "Instance",
        "Creating",
        "Using"
    ],
    "@Reusable generic class fails to build": [
        "Success_or_failure",
        "Building"
    ],
    "I guess all that's really missing in the generated code is a typecast to Provider to achieve erasure bliss.": [
        "Quantity",
        "Estimating",
        "Creating",
        "Success_or_failure",
        "Categorization",
        "Accomplishment"
    ],
    "Didn't spot it right away.": [
        "Correctness",
        "Becoming_aware"
    ],
    "The issue does not occur with - source 1.8.": [
        "Point_of_dispute",
        "Source_of_getting",
        "Intentionally_act",
        "Event"
    ],
    "It does with - source 1.7.": [
        "Intentionally_act",
        "Source_of_getting"
    ],
    "Use a raw framework class to avoid Java 7's poor type inference when ...": [
        "Wealthiness",
        "Temporal_collocation",
        "Degree_of_processing",
        "Coming_to_believe",
        "Preventing",
        "Using"
    ],
    "Write and Read a json data to internal storage android": [
        "Storing",
        "Reading"
    ],
    "Every android app has its own internal storage only that app can access, you can read from there or write to it.": [
        "Frequency",
        "Sole_instance",
        "Storing",
        "Possession",
        "Capability",
        "Existence",
        "Inclusion",
        "Categorization"
    ],
    "In you case, you first want to check if you such file exist before creating one.": [
        "Ordinal_numbers",
        "Cardinal_numbers",
        "Reasoning",
        "Intentionally_create",
        "Self_motion",
        "Existence",
        "Inspecting",
        "Desiring"
    ],
    "onCreate of the Activity, you can use do the following": [
        "Intentionally_act",
        "Capability",
        "Intentionally_act",
        "Using"
    ],
    "reference LINK": [],
    "Unlimited/Dynamic ViewPager in both directions": [],
    "Swipe views allow you to navigate between sibling screens, such as tabs, with a horizontal finger gesture, or swipe.": [
        "Observable_body_parts",
        "Gesture",
        "Categorization",
        "Grant_permission"
    ],
    "This navigation pattern is also referred to as horizontal paging.": [
        "Pattern"
    ],
    "This topic teaches you how to create a tab layout with swipe views for switching between tabs, along with how to show a title strip instead of tabs.": [
        "Topic",
        "Accoutrements",
        "Shapes",
        "Education_teaching",
        "Categorization",
        "Reasoning",
        "Change_tool",
        "Intentionally_create",
        "Accompaniment"
    ],
    "You can create swipe views using AndroidX's ViewPager2 widget.": [
        "Intentionally_create",
        "Using",
        "Categorization",
        "Capability"
    ],
    "To use ViewPager2 and tabs, you need to add a dependency on ViewPager2 and on Material Components to your project.": [
        "Reliance",
        "Project",
        "Using",
        "Required_event",
        "Ingredients"
    ],
    "To set up your layout with ViewPager2, add the <ViewPager2> element to your XML layout.": [
        "Cause_change_of_position_on_a_scale",
        "Ingredients",
        "Intentionally_create"
    ],
    "For example, if each page in the swipe view should consume the entire layout, then your layout should look like this:": [
        "Instance",
        "Contacting",
        "Opinion",
        "Ranked_expectation",
        "Scrutiny",
        "Temporal_collocation",
        "Being_obligated",
        "Ingestion"
    ],
    "To insert child views that represent each page, you need to hook this layout to a FragmentStateAdapter.": [
        "Kinship",
        "Contacting",
        "Categorization",
        "Communicate_categorization",
        "Attaching",
        "Required_event"
    ],
    "Here's how you might use it to swipe across a collection of Fragment objects:": [
        "Locative_relation",
        "Part_piece",
        "Likelihood",
        "Execution",
        "Removing",
        "Using"
    ],
    "The following sections show how you can add tabs to help facilitate navigation between pages.": [
        "Part_whole",
        "Contacting",
        "Relative_time",
        "Capability",
        "Assistance",
        "Reasoning"
    ],
    "A TabLayout provides a way to display tabs horizontally.": [
        "Supply"
    ],
    "When used together with a ViewPager2, a TabLayout can provide a familiar interface for navigating between pages in a swipe view.": [
        "Temporal_collocation",
        "Collaboration",
        "Expertise",
        "Contacting",
        "Using",
        "Opinion",
        "Capability",
        "Supply"
    ],
    "Figure 1: A TabLayout with four tabs.": [
        "Cardinal_numbers"
    ],
    "To include a TabLayout in a ViewPager2, add a <TabLayout> element above the <ViewPager2> element, as shown below:": [
        "Cause_change_of_position_on_a_scale",
        "Evidence",
        "Inclusion",
        "Ingredients"
    ],
    "Next, create a TabLayoutMediator to link the TabLayout to the ViewPager2, and attach it as follows:": [
        "Attaching",
        "Relative_time",
        "Cognitive_connection",
        "Intentionally_create"
    ],
    "For additional design guidance for tab layouts, see the Material Design documentation for tabs.": [
        "Coming_up_with",
        "Ingredients",
        "Coming_up_with",
        "Increment",
        "Grasp"
    ],
    "To learn more about ViewPager2, see the following additional resources.": [
        "Increment",
        "Relative_time",
        "Increment",
        "Education_teaching",
        "Grasp"
    ],
    "Turning the Page: Migrating to ViewPager2 ( Android Dev Summit' 19 )": [
        "Undergo_change",
        "Contacting",
        "Relational_natural_features"
    ],
    "Try to check below FragmentPagerAdapter to get endless viewpager adapter:": [
        "Inspecting",
        "Execution",
        "Attempt"
    ],
    "I found solution LINK.": [],
    "I hope its helps you.": [
        "Assistance",
        "Desiring"
    ],
    "The proposed solutions are correct but to achieve the result you need to set the initial value of your viewpager to Integer.MAX _ VALUE/2.": [
        "Correctness",
        "Causation",
        "Required_event",
        "Version_sequence",
        "Accomplishment",
        "Intentionally_create"
    ],
    "Anyway, I don't really like this solution, setting getCount to return Integer.MAX _ VALUE can have huge impact on application performance.": [
        "Using",
        "Performing_arts",
        "Intentionally_act",
        "Size",
        "Capability",
        "Objective_influence",
        "Execution",
        "Experiencer_focus"
    ],
    "I figured out a solution in order to avoid this problem using the:": [
        "Predicament",
        "Opinion",
        "Using",
        "Avoiding"
    ],
    "onPageScrollStateChanged Listener": [],
    "I simply reorder the fragment list, update the viewPager and move to the new page without animation, the result is an endless loop in both directions:": [
        "Part_piece",
        "Intentionally_act",
        "Contacting",
        "Causation",
        "Age",
        "Quantity"
    ],
    "This is what happens here: in this example, we have 4 fragments A-B-C-D if the user is on fragment A -LRB- first -RRB-, the new List will become: D-A-B-C -LSB- remove the last and push as first -RSB- I update the ViewPager and move -LRB- without animation -RRB- again to fragment A so index 1.": [
        "Locative_relation",
        "Instance",
        "Part_piece",
        "Part_piece",
        "Ordinal_numbers",
        "Cause_motion",
        "Intentionally_act",
        "Cardinal_numbers",
        "Age",
        "Event",
        "Becoming",
        "Ordinal_numbers",
        "Removing"
    ],
    "Now the user can continue to scroll left and will find fragment D.": [
        "Temporal_collocation",
        "Direction",
        "Part_piece",
        "Capability",
        "Activity_ongoing",
        "Locating"
    ],
    "Same thing with the last fragment: starting again with A-B-C-D if the user is on fragment D -LRB- last -RRB-, the new List will become: B-C-D-A -LSB- remove the first and push as last -RSB- I update the ViewPager and move -LRB- without animation -RRB- again to fragment D so index mainFragmentList.size -LRB- -RRB- -2.": [
        "Cause_motion",
        "Intentionally_act",
        "Identicality",
        "Part_piece",
        "Relative_time",
        "Age",
        "Process_start",
        "Ordinal_numbers",
        "Becoming",
        "Removing"
    ],
    "Now the user can continue to scroll right and will find fragment A.": [
        "Temporal_collocation",
        "Part_orientational",
        "Part_piece",
        "Capability",
        "Activity_ongoing",
        "Locating"
    ],
    "Remember to implement FragmentStatePagerAdapter NOT FragmentPagerAdapter": [
        "Gizmo",
        "Memory"
    ],
    "I have made my own solution.": [
        "Possession",
        "Causation"
    ],
    "I created a ViewPager that supports infinite looping effect, smart auto-scroll, compatible with any indicators and easy to use.": [
        "Objective_influence",
        "Compatibility",
        "Supporting",
        "Manipulate_into_shape",
        "Mental_property",
        "Quantity",
        "Difficulty",
        "Using",
        "Intentionally_create"
    ],
    "It especially uses it as banners of application with a simple item page.": [
        "Using",
        "Entity",
        "Contacting",
        "Using"
    ],
    "My custom ViewPager can:": [],
    "Github link: LINK": [],
    "Hope it helps !": [],
    "One simple way to achieve this for ViewPager2 is with 3 basic ideas:": [
        "Being_necessary",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Accomplishment",
        "Execution"
    ],
    "Some sample code to do this is as follows:": [
        "Relational_quantity",
        "Relative_time",
        "Intentionally_act"
    ],
    "Caveat: this code does not reconcile any TabLayout or an empty data model collection.": [
        "Fullness",
        "Gizmo",
        "Quantity",
        "Execution",
        "Intentionally_act"
    ],
    "Android - Jackson JSON parser returns null value in &#39;release&#39; builds": [
        "Being_in_effect",
        "Execution",
        "Building"
    ],
    "It is possible that the JSONObject parser has been made more lenient in newer Android releases.": [
        "Strictness",
        "Releasing",
        "Likelihood",
        "Increment",
        "Causation"
    ],
    "The error message you are getting appears to be due to dubiously-legal JSON, particularly on the receiving side:": [
        "Taking_sides",
        "Receiving",
        "Getting",
        "Coming_to_be"
    ],
    "I would suggest that you write your downloaded JSON out to a file and compare it with your original to see if there is a problem with the download logic.": [
        "Evaluative_comparison",
        "Predicament",
        "Locative_relation",
        "Existence",
        "Grasp"
    ],
    "UPDATE": [],
    "I can not reproduce your problem.": [
        "Predicament",
        "Duplication",
        "Capability"
    ],
    "Loading that JSON off of external storage works perfectly fine on Android 4.0.3.": [
        "Storing",
        "Locative_relation"
    ],
    ", 2.3.3, 2.2, and 2.1, using the following activity -LRB- note: I was lazy and hard-wired in the path to external storage -RRB-:": [
        "Intentionally_act",
        "Becoming_aware",
        "Storing",
        "Relative_time",
        "Using"
    ],
    "Usually these are the following steps to create json object through the Http connection in android.": [
        "Relative_time",
        "Creating",
        "Social_connection",
        "Intentionally_act"
    ],
    "I think you missed to convert String Buffer -LRB- sb -RRB- into json array object.": [
        "Hit_or_miss",
        "Diversity",
        "Opinion",
        "Cause_change"
    ],
    "Instead of that you directly create the json object from string buffer.": [
        "Intentionally_create"
    ],
    "I dont know how its was worked in android 4.0.": [
        "Being_employed",
        "Awareness"
    ],
    "The modified code is": [],
    "And you can get the json object by passing index value like,": [
        "Capability",
        "Traversing",
        "Execution"
    ],
    "jObj.getJSONObject -LRB- i -RRB- ; / * i is a integer, index value * /": [],
    "I am not very sure why you are getting this error.": [
        "Reason",
        "Degree",
        "Likelihood",
        "Getting"
    ],
    "But I too had come across a similar problem and it was solved by changing the charSet.": [
        "Predicament",
        "Exchange",
        "Sufficiency",
        "Similarity",
        "Resolve_problem",
        "Execution"
    ],
    "Try using iso-8859-1 instead of UTF-8.": [
        "Using",
        "Attempt"
    ],
    "Have you tried Jackson ?": [
        "Attempt"
    ],
    "I've used it on every version of android and it works quite nicely.": [
        "Frequency",
        "Being_employed",
        "Using"
    ],
    "Have you tried the JSONParser ?": [
        "Attempt"
    ],
    "here is a example wich i use:": [
        "Locative_relation",
        "Instance"
    ],
    "I copied your code and used LINK as the input to your getJSONFromUrl -LRB- String url -RRB- method.": [
        "Cognitive_connection",
        "Execution",
        "Duplication",
        "Using"
    ],
    "Interestingly, I was not able to reproduce your issue -LRB- with several combinations of AVD and/or target API of 15, 10, or 7 -RRB-.": [
        "Duplication",
        "Point_of_dispute",
        "Cardinal_numbers",
        "Cardinal_numbers",
        "Quantity",
        "Capability"
    ],
    "Some things I do notice:": [
        "Relational_quantity",
        "Intentionally_act",
        "Becoming_aware"
    ],
    "InputStream is, String json, JSONObject jObj are declared externally to your getJSONFromUrl -LRB- -RRB- method and there is a possibility that they are somehow affected differently by some other part of your code when running on one API compared to another.": [
        "Execution",
        "Relational_quantity",
        "Temporal_collocation",
        "Increment",
        "Increment",
        "Cardinal_numbers",
        "Evaluative_comparison",
        "Existence",
        "Part_whole",
        "Feigning",
        "Execution",
        "Likelihood"
    ],
    "Looking at the exception that you got, it is likely that it is thrown due to the fact that the input String to the JSONObject constructor is an empty string -LRB-'''' -RRB-.": [
        "Perception_active",
        "Fullness",
        "Execution",
        "Likelihood",
        "Cause_motion"
    ],
    "Is it possible that somehow your server supplied a different data to your older Android ?": [
        "Likelihood",
        "Similarity",
        "Age",
        "Supply"
    ],
    "Here's my suggestions:": [],
    "Add the following lines to the top of your getJSONFromUrl -LRB- -RRB- method:": [
        "Execution",
        "Relative_time",
        "Occupy_rank"
    ],
    "Add a line of debug code to print out the downloaded string between the last 2 try-catch blocks, like this:": [
        "Emptying",
        "Text_creation",
        "Relative_time",
        "Cardinal_numbers",
        "Measure_linear_extent"
    ],
    "I think we will know more about your issue after you make either one or both of the above changes: -RRB-": [
        "Cardinal_numbers",
        "Quantity",
        "Undergo_change",
        "Point_of_dispute",
        "Opinion",
        "Increment",
        "Awareness",
        "Causation"
    ],
    "Hello i used the following code and i did not get any errors in 2.2, 2.3.3 code is very simple.": [
        "Relative_time",
        "Quantity",
        "Degree",
        "Using",
        "Intentionally_act",
        "Getting"
    ],
    "Hope it helps.": [],
    "Jackson or GSON.": [],
    "could be the german extra characters in there and an internationalization -LRB- i18n -RRB- or utf-8 issue.": [
        "People_by_origin",
        "Physical_artworks",
        "Point_of_dispute",
        "Existence",
        "Capability"
    ],
    "I would restart Eclipse, do a clean build and try again.": [
        "Eclipse",
        "Intentionally_act",
        "Activity_resume",
        "Attempt",
        "Building"
    ],
    "Surely this will work.": [],
    "In 4.0 android version we have to create asynctask to avoid exception i.e NetworkOnMainThreadException ll get.": [
        "Execution",
        "Avoiding",
        "Intentionally_create",
        "Being_obligated"
    ],
    "Its working fine for me.": [
        "Desirability"
    ],
    "enjoy.": [],
    "I used following code for json, for me it support all android version.": [
        "Quantity",
        "Taking_sides",
        "Relative_time",
        "Using"
    ],
    "I hope this will help you.": [
        "Assistance",
        "Desiring"
    ],
    "What is the type of the variable called json in the line: json = sb.toString -LRB- -RRB- ;": [
        "Execution"
    ],
    "Is it a String ?": [],
    "If it is a JSONObject, change its type to String and your code will work perfectly.": [
        "Undergo_change",
        "Working_on"
    ],
    "Another remark is the handling of exceptions: It seems that if an exception is thrown in the first block when you building your String, the JSONObject initialization will be attempted with some faulty data.": [
        "Appearance",
        "Temporal_collocation",
        "Relational_quantity",
        "Increment",
        "Measure_linear_extent",
        "Ordinal_numbers",
        "Cause_motion",
        "Building",
        "Attempt"
    ],
    "Anyway try this -LRB- I suspect your download method is buggy -RRB-:": [
        "Execution",
        "Attempt",
        "Awareness"
    ],
    "the solution here will solve your problem it's because of the utf-8 encoding coming back from the server.": [
        "Locative_relation",
        "Observable_body_parts",
        "Predicament",
        "Resolve_problem",
        "Execution",
        "Causation"
    ],
    "Using Jackson support for Kotlin fails in native mode.": [
        "Indigenous_origin",
        "Using",
        "Taking_sides",
        "Success_or_failure"
    ],
    "\u00b7 Issue # 3954 \u00b7 quarkusio/quarkus \u00b7 GitHub": [
        "Point_of_dispute"
    ],
    "When using the Jackson Kotlin module with a Kotlin data class, it fails in native mode with the following:": [
        "Indigenous_origin",
        "Using",
        "Success_or_failure",
        "Temporal_collocation"
    ],
    "The example code is pretty straight forward:": [
        "Instance",
        "Sending"
    ],
    "( Describe the expected behavior clearly and concisely. )": [
        "Conduct",
        "Communicate_categorization",
        "Obviousness"
    ],
    "If I run this in JVM mode, aka mvn compile quarkus: dev, or as a runnable jar it works just fine.": [
        "Containers",
        "Being_employed",
        "Desirability",
        "Execution"
    ],
    "( Describe the actual behavior clearly and concisely. )": [
        "Communicate_categorization",
        "Actually_occurring_entity",
        "Obviousness",
        "Conduct"
    ],
    "Steps to reproduce the behavior:": [
        "Duplication",
        "Conduct",
        "Intentionally_act"
    ],
    "( If applicable, add screenshots to help explain your problem. )": [
        "Assistance"
    ],
    "Environment ( please complete the following information ):": [
        "Completeness",
        "Information",
        "Relative_time",
        "Stimulus_focus"
    ],
    "Output of uname - a or ver:": [],
    "GraalVM version ( if different from Java ):": [
        "Similarity"
    ],
    "Quarkus version or git rev:": [],
    "( Add any other context about the problem here. )": [
        "Predicament",
        "Increment",
        "Quantity"
    ],
    "For a short-term work-around the following working:": [
        "Relative_time"
    ],
    "I think this is a legit issue.": [
        "Point_of_dispute",
        "Opinion"
    ],
    "As a parameter of a REST method, the Address type should be registered for reflection automatically.": [
        "Stimulus_focus",
        "Execution",
        "Speak_on_topic",
        "Cogitation",
        "Terms_of_agreement",
        "Being_obligated",
        "Becoming_aware"
    ],
    "There's something wrong going on.": [
        "Morality_evaluation",
        "Process_continue",
        "Existence"
    ],
    "@geoand any chance you could have a look to this one ?": [
        "Scrutiny",
        "Clothing",
        "Quantity",
        "Capability",
        "Likelihood"
    ],
    "This doesn't appear to be a Quarkus issue.": [
        "Intentionally_act",
        "Point_of_dispute",
        "Coming_to_be"
    ],
    "class does get registered for reflection correctly when I tested.": [
        "Cogitation",
        "Temporal_collocation",
        "Intentionally_act",
        "Operational_testing",
        "Execution",
        "Becoming_aware"
    ],
    "In order to confirm this, @rdifrango can you please use your workaround without the @RegisterForReflection annotation ?": [
        "Verification",
        "Capability",
        "Using",
        "Emotion_directed"
    ],
    "If I am correct, it should still work.": [
        "Suitability",
        "Continued_state_of_affairs",
        "Being_obligated",
        "Working_on"
    ],
    "In that case you'll need to go read up on what the proper way to use Kotlin data classes and Jackson.": [
        "Instance",
        "Locative_relation",
        "Proper_reference",
        "Using",
        "Becoming",
        "Execution",
        "Required_event",
        "Categorization"
    ],
    "@geoand you're correct, it still works if I remove @RegisterForReflection.": [
        "Continued_state_of_affairs",
        "Suitability",
        "Being_employed",
        "Removing"
    ],
    "I also tested by swap back to val from var but with default values and that's when it fails again, so working:": [
        "Exchange",
        "Observable_body_parts",
        "Temporal_collocation",
        "Being_employed",
        "Success_or_failure",
        "Operational_testing"
    ],
    "Thanks for confirming and looking into it.": [
        "Scrutiny",
        "Judgment_direct_address"
    ],
    "It certainly looks like it's an issue with how Kotlin and Jackson interact.": [
        "Scrutiny",
        "Likelihood",
        "Point_of_dispute"
    ],
    "So I will go ahead and close this since it doesn't appear to be a Quarkus issue.": [
        "Temporal_subregion",
        "Intentionally_act",
        "Point_of_dispute",
        "Becoming",
        "Coming_to_be",
        "Social_connection"
    ],
    "If you feel that is not correct, please reopen and provide an update.": [
        "Feeling",
        "Stimulus_focus",
        "Suitability",
        "Supply"
    ],
    "@geoand I still think this is an issue as the NOT WORKING case, works just fine in JVM mode, it only fails in NATIVE mode.": [
        "Point_of_dispute",
        "Instance",
        "Being_employed",
        "Continued_state_of_affairs",
        "Sole_instance",
        "Desirability",
        "Success_or_failure",
        "Awareness"
    ],
    "Native Mode: Performance test socket: too many open files": [
        "Performing_arts",
        "Operational_testing",
        "Sufficiency",
        "Quantity",
        "Self_motion",
        "Secrecy_status"
    ],
    "@rdifrango a small reproducer then where I can see the exact error you are getting ?": [
        "Dimension",
        "Correctness",
        "Temporal_collocation",
        "Locative_relation",
        "Perception_experience",
        "Capability",
        "Execution"
    ],
    "The code above is exactly what I used, nothing more nothing less: )": [
        "Frequency",
        "Increment",
        "Using"
    ],
    "To build it we issue:": [
        "Point_of_dispute",
        "Building"
    ],
    "If you could upload it to github or something, so I don't make any mistakes while trying to reproduce that would be great: )": [
        "Duplication",
        "Intentionally_act",
        "Quantity",
        "Capability",
        "Desirability",
        "Causation",
        "Attempt"
    ],
    "@geoand, I'll see what I can do, sadly uploading to GH is non-trivial at the office: )": [
        "Building_subparts",
        "Capability",
        "Intentionally_act",
        "Grasp"
    ],
    "Here's the maven POM file:": [
        "Locative_relation",
        "Expertise"
    ],
    "I'll try and reproduce it.": [
        "Attempt",
        "Duplication"
    ],
    "One last thing, do you have a curl command for POSTing to the endpoint ?": [
        "Hair_configuration",
        "Relative_time",
        "Cardinal_numbers",
        "Execution",
        "Intentionally_act",
        "Sending"
    ],
    "Thanks, I'll try it and let you know": [
        "Judgment_direct_address",
        "Attempt",
        "Awareness",
        "Grant_permission"
    ],
    "I was able to reproduce the problem.": [
        "Predicament",
        "Duplication",
        "Capability"
    ],
    "It doesn't look like a regular Quarkus problem ( since the class is registered for reflection ), but more some kind of weird interop issue.": [
        "Predicament",
        "Recording",
        "Cogitation",
        "Increment",
        "Relational_quantity",
        "Intentionally_act",
        "Point_of_dispute",
        "Desirability",
        "Scrutiny"
    ],
    "I am guessing it will take a lot more digging than I can do at the moment, so let's leave it open and I'll take a look when I have som extra time.": [
        "Scrutiny",
        "Temporal_collocation",
        "Quantity",
        "Grant_permission",
        "Departing",
        "Secrecy_status",
        "Measure_duration",
        "Estimating",
        "Capability",
        "Have_as_requirement",
        "Increment",
        "Intentionally_act"
    ],
    "Actually what we are seeing seems consistent with the Kotlin module not being applied in native mode.": [
        "Compatibility",
        "Indigenous_origin",
        "Personal_relationship",
        "Using",
        "Appearance"
    ],
    "So if anyone wants to explore more, that would be great.": [
        "Increment",
        "Desirability",
        "Scrutiny",
        "Desiring"
    ],
    "I will of course eventually get to this but frankly since we have workable workarounds and the root cause it probably hidden deep, I wouldn't consider it very high priority: )": [
        "Dimension",
        "Likelihood",
        "Degree",
        "Causation",
        "Hiding_objects",
        "Position_on_a_scale",
        "Time_vector",
        "Required_event",
        "Categorization"
    ],
    "This issue has been automatically marked as stale because it has not had recent activity.": [
        "Point_of_dispute",
        "Relative_time",
        "Intentionally_act",
        "Sign",
        "Being_obligated"
    ],
    "It will be closed if no further activity occurs.": [
        "Quantity",
        "Intentionally_act",
        "Increment",
        "Event",
        "Body_movement"
    ],
    "We are doing this automatically to ensure out-of-date issues does not stay around indefinitely.": [
        "Residence",
        "Intentionally_act",
        "Intentionally_act"
    ],
    "If you believe this issue is still relevant please put a comment on it on why and if it truly needs to stay request or add ` pinned' label.": [
        "Point_of_dispute",
        "Reason",
        "Cause_change_of_position_on_a_scale",
        "Attaching",
        "Labeling",
        "Stimulus_focus",
        "Required_event",
        "Continued_state_of_affairs",
        "State_continue",
        "Causation",
        "Execution",
        "Certainty"
    ],
    "Would be nice to have this fixed.": [
        "Resolve_problem",
        "Stimulus_focus"
    ],
    "Nobody is going to yell at anyone, we are as super friendly community: )": [
        "Execution",
        "Social_interaction_evaluation",
        "Desirability",
        "Communication_noise",
        "Motion"
    ],
    "The problem is that the behavior is different between JVM and native mode.": [
        "Predicament",
        "Indigenous_origin",
        "Conduct",
        "Similarity"
    ],
    "With the no-arg plugin, in JVM the defaults are used which unfortunately is not the case in native mode.": [
        "Indigenous_origin",
        "Reasoning",
        "Using"
    ],
    "Add documentation for kotlin dataclass mongodb": [],
    "I am running into this same issue, except I get the error": [
        "Point_of_dispute",
        "Identicality",
        "Execution",
        "Execution"
    ],
    "I tried adding kotlin.Metadata to the reflection-config file, and now am also getting": [
        "Temporal_collocation",
        "Execution",
        "Attempt"
    ],
    "java.lang.AssertionError: Built-in class kotlin.Any is not found": [
        "Locating"
    ],
    "I tried debugging by doing Class.forName ( Any:: class.java.name ), which I was able to do when I added java.lang.Object to the reflection-config file, but I still get Built-in class kotlin.Any is not found when jackson tries to read a value.": [
        "Temporal_collocation",
        "Attempt",
        "Quantity",
        "Continued_state_of_affairs",
        "Emptying",
        "Intentionally_act",
        "Capability",
        "Becoming_aware",
        "Categorization",
        "Attempt",
        "Intentionally_act",
        "Getting"
    ],
    "Yeah this seems to require a chat with the Kotlin folks to see how to proceed.": [
        "Chatting",
        "Appearance",
        "Needing",
        "Grasp",
        "Process_continue"
    ],
    "Unfortunately I haven't had the time to do that: (": [
        "Measure_duration",
        "Being_obligated",
        "Intentionally_act"
    ],
    "hi @geoand - have you been able to get in touch with the kotlin/graalvm folks ?": [
        "Quantity",
        "Capability",
        "Execution"
    ],
    "With all the stuff that needed to be done for 1.3, I didn't follow up after not being able to reach them the first time.": [
        "Quantity",
        "Locative_relation",
        "Measure_duration",
        "Intentionally_act",
        "Ordinal_numbers",
        "Intentionally_act",
        "Required_event",
        "Relative_time",
        "Change_position_on_a_scale",
        "Capability"
    ],
    "I'll try again this week I hope.": [
        "Calendric_unit",
        "Desiring",
        "Attempt"
    ],
    "Just as an indicator ( I haven't isolated this into a barebones example ), in case it helps, I am running into this problem for a data class which does not have any default values ( but all properties are val, and obviously I have registered the Kotlin Jackson module on the mapper ).": [
        "Instance",
        "Instance",
        "Predicament",
        "Quantity",
        "Intentionally_act",
        "Possession",
        "Quantity",
        "Likelihood",
        "Execution",
        "Becoming_aware",
        "Assistance"
    ],
    "However I do have several enum parameters for which there are default enum values ( @JsonEnumDefaultValue ) and I have activated the READ_UNKNOWN_ENUM_VALUES_USING_DEFAULT_VALUE on the mapper.": [
        "Concessive",
        "Intentionally_act",
        "Quantity",
        "Terms_of_agreement",
        "Change_operational_state",
        "Existence"
    ],
    "I was able to get around this problem by explicitly adding Jackson annotations.": [
        "Predicament",
        "Execution",
        "Capability"
    ],
    "So, this code works in JVM mode but doesn't in native mode": [
        "Indigenous_origin",
        "Being_employed",
        "Intentionally_act"
    ],
    "but this code works in both JVM and native modes and keeps the class immutable.": [
        "Quantity",
        "Indigenous_origin",
        "Activity_ongoing",
        "Being_employed"
    ],
    "However, it pollutes my class and I expect to write code without any Jackson annotations as in the first example.": [
        "Concessive",
        "Instance",
        "Ordinal_numbers",
        "Quantity",
        "Expectation"
    ],
    "@miron4dev is that class part of a jax-rs method ( I assume it's the payload of a POST request ) ?": [
        "Sending",
        "Membership",
        "Execution",
        "Adopt_selection",
        "Execution"
    ],
    "@geoand yes, it's the payload of a POST request.": [
        "Sending",
        "Execution"
    ],
    "I want to give something a try soon.": [
        "Attempt",
        "Giving",
        "Desiring"
    ],
    "I'll come back when I have something to report.": [
        "Observable_body_parts",
        "Temporal_collocation",
        "Execution"
    ],
    "I went through various scenaria to try and reproduce the problems with Kotlin Data classes and Jackson deserialization in native but I failed to uncover any ...": [
        "Duplication",
        "Indigenous_origin",
        "Quantity",
        "Diversity",
        "Becoming",
        "Success_or_failure",
        "Attempt",
        "Predicament"
    ],
    "Here is where I recorded what I did: https://github.com/geoand/kotlin-jackson-demo": [
        "Locative_relation",
        "Locative_relation",
        "Recording",
        "Intentionally_act"
    ],
    "If folks have concrete reproducible examples of issues I would love to know about them.": [
        "Instance",
        "Awareness",
        "Experiencer_focus"
    ],
    "I need to do a little more testing.": [
        "Operational_testing",
        "Required_event",
        "Increment",
        "Intentionally_act"
    ],
    "I wondered if it was because you had extracted the data classes out into their own files, rather than inside of the GreetingResource.kt file itself, so I tested with my previous 1.1.1.": [
        "Cogitation",
        "Possession",
        "Removing",
        "Time_vector",
        "Part_inner_outer",
        "Operational_testing"
    ],
    "Final code.": [],
    "I need to upgrade Graal to test with 1.3.2, so this will take me a little longer.": [
        "Required_event",
        "Duration_attribute",
        "Operational_testing",
        "Have_as_requirement"
    ],
    "Will report back when I can.": [
        "Observable_body_parts",
        "Temporal_collocation",
        "Capability"
    ],
    "Feel free to ping me when you have results: )": [
        "Perception_active",
        "Temporal_collocation",
        "Expensiveness",
        "Motion_noise",
        "Causation"
    ],
    "I have tried a number of different configurations ( slow testing cycle due to the 15minute native compile ! )": [
        "Operational_testing",
        "Operate_vehicle",
        "Quantity",
        "Similarity",
        "Indigenous_origin",
        "Taking_time",
        "Attempt"
    ],
    "Upgrading to Quarkus 1.3.2, and GraalVM 20.x, did not initially make any difference.": [
        "Similarity",
        "Quantity",
        "Causation",
        "Intentionally_act"
    ],
    "I then changed the POM to reflect your POM and it worked.": [
        "Temporal_collocation",
        "Being_employed",
        "Cogitation",
        "Undergo_change"
    ],
    "I then individually started removing the POM configurations back to my original and the key ( single ) element that has made this work is in the Kotlin maven plugin configuration.": [
        "Observable_body_parts",
        "Importance",
        "Sole_instance",
        "Ingredients",
        "Being_employed",
        "Expertise",
        "Temporal_collocation",
        "Removing",
        "Causation",
        "Activity_start"
    ],
    "So, as long as the latest POM creation through the maven archetypes generate the above setting ( which appears to be the case ), then this bug can be closed.": [
        "Relative_time",
        "Reasoning",
        "Temporal_collocation",
        "Expertise",
        "Coming_to_be",
        "Likelihood",
        "Intentionally_create",
        "Body_movement",
        "Desiring",
        "Cause_to_start"
    ],
    "For anyone who is not creating a new project, they simply need to add the parameter to the `` configuration'' of the kotlin-maven-plugin, as linked to above.": [
        "Project",
        "Age",
        "Intentionally_create",
        "Terms_of_agreement",
        "Cognitive_connection",
        "Required_event"
    ],
    "Thanks a lot for the thorough check @codemwnci !": [
        "Judgment_direct_address",
        "Quantity"
    ],
    "Indeed the project generation now includes": [
        "Project",
        "Stage_of_progress",
        "Temporal_collocation",
        "Inclusion"
    ],
    "I'll close this issue as per both our findings": [
        "Point_of_dispute",
        "Quantity",
        "Locating",
        "Social_connection"
    ],
    "If anyone is having troubles with Kotlin in native mode, check the configuration resources linked here: oracle/graal # 2306": [
        "Locative_relation",
        "Indigenous_origin",
        "Cognitive_connection",
        "Predicament",
        "Possession",
        "Inspecting"
    ],
    "Kotlin reflection fails in native build in some cases that Java reflection success": [
        "Indigenous_origin",
        "Instance",
        "Cogitation",
        "Relational_quantity",
        "Success_or_failure",
        "Success_or_failure",
        "Building"
    ],
    "Using asSequence.chunked ( ... ) causes native mode to fail": [
        "Successful_action",
        "Indigenous_origin",
        "Using",
        "Causation"
    ],
    "I have some experiences to add on this one.": [
        "Relational_quantity",
        "Expertise",
        "Cardinal_numbers"
    ],
    "I use an IntelliJ plug-in to convert JSON to Kotlin data classes for me ( large structure ! )": [
        "Buildings",
        "Dimension",
        "Cause_change",
        "Using"
    ],
    "Everything worked fine in JVM mode, Jackson-Kotlin-module clearly enabled for the mapper.readValue ( jsonBody ).": [
        "Working_on",
        "Obviousness",
        "Desirability"
    ],
    "However, a straight native-image version failed, with similar errors above.": [
        "Concessive",
        "Ordinal_numbers",
        "Success_or_failure",
        "Similarity"
    ],
    "I experimented a lot with the issue, looked at the optional fields, default values and so on.": [
        "Fields",
        "Quantity",
        "Point_of_dispute",
        "Scrutiny"
    ],
    "The JSON structure was quite complex, with multiple levels and even an array.": [
        "Rank",
        "Diversity",
        "Buildings",
        "Quantity"
    ],
    "What was interested was when I moved to using mapper.readTree for the json and picked out the specific parts I wanted in the hierarchy and then did a mapper.readValue ( myNode ), it worked fine.": [
        "Desiring",
        "Temporal_collocation",
        "Part_whole",
        "Temporal_collocation",
        "Motion",
        "Being_employed",
        "Desirability",
        "Desiring",
        "Using",
        "Locative_relation",
        "Intentionally_act",
        "Choosing"
    ],
    "The Jackson-Kotlin-module in native-image clearly prefers a simpler denormalised-like structure, than many levels ( why ? )": [
        "Rank",
        "Reason",
        "Partiality",
        "Buildings",
        "Quantity",
        "Obviousness"
    ],
    "I still had a few levels in the JSON, i.e. moving from about 5 nodes down to 2.": [
        "Rank",
        "Ingestion",
        "Cardinal_numbers",
        "Continued_state_of_affairs",
        "Being_obligated",
        "Quantity",
        "Motion"
    ],
    "When I started using mapper.readTree I also started getting different errors, the Jackson parser was giving me more specific object it was struggling to convert, rather than the blanket error ( as above ) that it can't construct the root data class ).": [
        "Temporal_collocation",
        "Hostile_encounter",
        "Adorning",
        "Similarity",
        "Increment",
        "Cause_change",
        "Getting",
        "Building",
        "Capability",
        "Giving",
        "Using",
        "Activity_start"
    ],
    "Thus the error you get from the Jackson conversion can be a little misleading and in a hierarchy of objects it could be a leaf node that it is struggling to convert, yet reports an issue at the root node ( exception probably bubbles up in the code ).": [
        "Hostile_encounter",
        "Point_of_dispute",
        "Locative_relation",
        "Cause_change",
        "Quantity",
        "Likelihood",
        "Cause_change",
        "Capability",
        "Execution",
        "Fluidic_motion",
        "Capability"
    ],
    "So, my recommendation for anyone having these issues, is to use mapper.readTree when using native-image, pull out the bits you want from the JSON-nodes and use mapper.readValue on that, rather than relying on a large tree to object conversion.": [
        "Cause_change",
        "Using",
        "Dimension",
        "Possession",
        "Temporal_collocation",
        "Reliance",
        "Using",
        "Possession",
        "Withdraw_from_participation"
    ],
    "More like using a SAX parser for XML than DOM, was the logic.": [
        "Using",
        "Increment"
    ],
    "I'm looking forward to using Java-records in the future in this scenario, and I believe Kotlin will map the internals of data-classes to records so it will look the same to the JVM ( ? )": [
        "Sending",
        "Possibilities",
        "Recording",
        "Identicality",
        "Scrutiny",
        "Awareness",
        "Scrutiny",
        "Using"
    ],
    "No not keen on using Lombok here as a replacement for my Kotlin data classes.": [
        "Quantity",
        "Make_noise",
        "Locative_relation",
        "Take_place_of",
        "Using"
    ],
    "JSON source was from Yahoo Finance: https://query1.finance.yahoo.com/v8/finance/chart/AMZN": [
        "Source_of_getting"
    ],
    "( what I could not convert with native-image using the entire tree, yet works when you pick more specific nodes of interest )": [
        "Being_employed",
        "Temporal_collocation",
        "Increment",
        "Emotion_directed",
        "Ranked_expectation",
        "Capability",
        "Using",
        "Cause_change",
        "Choosing"
    ],
    "An addendum, I've been able to get it working with the entire object tree for native-image ( fiddling with JSON to Kotlin data-class IntelliJ plugin options ), generating val with nullable type and default of null, along with the Jackson field name,.": [
        "Possibilities",
        "Fields",
        "Being_employed",
        "Ranked_expectation",
        "Capability",
        "Creating",
        "Execution",
        "Accompaniment"
    ],
    "i.e.:": [],
    "Add Jackson pointers with Kotlin and cleanup the example Gradle build scripts": [
        "Instance",
        "Building"
    ],
    "@geoand, you asked for reproducible examples of issues.": [
        "Instance",
        "Execution"
    ],
    "I ran into this issue last week and had a hard time figuring out why your example worked and my code didn't.": [
        "Measure_duration",
        "Opinion",
        "Reason",
        "Instance",
        "Being_employed",
        "Calendric_unit",
        "Relative_time",
        "Difficulty",
        "Intentionally_act",
        "Point_of_dispute",
        "Execution",
        "Locative_relation",
        "Being_obligated"
    ],
    "In the end, I found out that the issue seemed to be data classes that have non-primitive members, e.g. a data class containing a List or another data class.": [
        "Temporal_subregion",
        "Point_of_dispute",
        "Increment",
        "Membership",
        "Possession",
        "Inclusion",
        "Appearance",
        "Becoming_aware"
    ],
    "I'm not sure if I should open a new issue as this one has been closed for a while.": [
        "Cardinal_numbers",
        "Point_of_dispute",
        "Age",
        "Measure_duration",
        "Being_obligated",
        "Secrecy_status",
        "Body_movement",
        "Likelihood"
    ],
    "I have extended your example project and will shortly post two pull requests - one for the additional examples that break for me, and one to update to the latest Quarkus version.": [
        "Expansion",
        "Instance",
        "Project",
        "Sending",
        "Execution",
        "Cardinal_numbers",
        "Instance",
        "Cause_to_fragment",
        "Relative_time",
        "Manipulation",
        "Increment",
        "Cardinal_numbers"
    ],
    "I hope this helps to track down the issue.": [
        "Point_of_dispute",
        "Assistance",
        "Desiring"
    ],
    "This was referenced Mar 22, 2021": [],
    "add endpoints and HTTP requests to show that Jackson deserialization ...": [
        "Reasoning",
        "Execution"
    ],
    "I'll try to take a look later on this week,": [
        "Scrutiny",
        "Calendric_unit",
        "Have_as_requirement",
        "Time_vector",
        "Attempt"
    ],
    "@geoand This is the same issue I described above ( complex structures ) and why I added troubleshooting notes to the Kotlin documentation.": [
        "Buildings",
        "Reason",
        "Point_of_dispute",
        "Identicality"
    ],
    "Using the field annotation does overcome it, but may be considered a workaround.": [
        "Fields",
        "Intentionally_act",
        "Using",
        "Likelihood",
        "Categorization"
    ],
    "Ah, thanks @oztimpower, I had forgot !": [
        "Judgment_direct_address",
        "Remembering_information"
    ],
    "I run into the same issue today ( I suppose ).": [
        "Point_of_dispute",
        "Temporal_collocation",
        "Identicality",
        "Opinion",
        "Execution"
    ],
    "Initially I used the following data class to de-serialize a": [
        "Relative_time",
        "Using"
    ],
    "json resource ( via rest client ):": [
        "Stimulus_focus"
    ],
    "It worked without any problem in the non-native mode but as soon as I deployed the application in native mode, the de-serialization failed.": [
        "Using",
        "Working_on",
        "Quantity",
        "Indigenous_origin",
        "Success_or_failure",
        "Arranging",
        "Predicament"
    ],
    "After some time, I figured out, that it works if I annotate the stations field with a @JsonProperty annotation:": [
        "Measure_duration",
        "Fields",
        "Relational_quantity",
        "Being_employed",
        "Locative_relation",
        "Opinion"
    ],
    "There is a bunch of log messages though that remained even after I added the annotation:": [
        "State_continue",
        "Execution",
        "Existence"
    ],
    "Ensure that Kotlin Data classes with default values work in native with JAX-RS": [
        "Indigenous_origin",
        "Working_on"
    ],
    "How to Integrate reCAPTCHA 2.0 in Android": [],
    "The SafetyNet service includes a reCAPTCHA API that you can use to protect your app from malicious traffic.": [
        "Public_services",
        "Protecting",
        "Inclusion",
        "Using",
        "Capability"
    ],
    "reCAPTCHA is a free service that uses an advanced risk analysis engine to protect your app from spam and other abusive actions.": [
        "Stage_of_progress",
        "Run_risk",
        "Scrutiny",
        "Abusing",
        "Intentionally_act",
        "Expensiveness",
        "Increment",
        "Public_services",
        "Protecting",
        "Using"
    ],
    "If the service suspects that the user interacting with your app might be a bot instead of a human, it serves a CAPTCHA that a human must solve before your app can continue executing.": [
        "Public_services",
        "People",
        "Execution",
        "Being_obligated",
        "Likelihood",
        "Resolve_problem",
        "Capability",
        "Activity_ongoing",
        "Assistance",
        "Awareness"
    ],
    "This document explains how to integrate the reCAPTCHA API from SafetyNet into your app.": [
        "Documents"
    ],
    "By accessing or using the reCAPTCHA API, you agree to the Google APIs Terms of Service, and to these Additional Terms.": [
        "Rite",
        "Simple_name",
        "Increment",
        "Using",
        "Agree_or_refuse_to_act"
    ],
    "Please read and understand all applicable terms and policies before accessing the APIs.": [
        "Quantity",
        "Simple_name",
        "Law",
        "Categorization"
    ],
    "To register a key pair for use with the SafetyNet reCAPTCHA API, navigate to the reCAPTCHA Android signup site, then complete the following sequence of steps:": [
        "Completeness",
        "Relative_time",
        "Intentionally_act",
        "Importance",
        "Locale_by_use",
        "Sequence",
        "Recording",
        "Personal_relationship",
        "Temporal_collocation"
    ],
    "In the form that appears, provide the following information:": [
        "Information",
        "Coming_to_be",
        "Relative_time",
        "Supply"
    ],
    "Check the Accept the reCAPTCHA Terms of Service checkbox, then click Register.": [
        "Inspecting",
        "Simple_name",
        "Public_services",
        "Sounds",
        "Receiving",
        "Temporal_collocation"
    ],
    "In the Adding reCAPTCHA to your app section on the page that appears next, your public and private keys appear under Site key and Secret key, respectively.": [
        "Part_whole",
        "Contacting",
        "Natural_features",
        "Coming_to_be",
        "Importance",
        "Secrecy_status",
        "Locative_relation",
        "Coming_to_be"
    ],
    "You use the site key when you send the verify request, and you use the secret key when you validate the user response token.": [
        "Locale_by_use",
        "Temporal_collocation",
        "Importance",
        "Response",
        "Verification",
        "Secrecy_status",
        "Using",
        "Execution",
        "Sending"
    ],
    "Before using the reCAPTCHA API, you need to add the SafetyNet API to your project.": [
        "Project",
        "Required_event",
        "Using"
    ],
    "If you use Android Studio and you want to selectively compile this API into your Gradle dependencies, you should include the build rule that's shown in the following code snippet:": [
        "Building_subparts",
        "Reliance",
        "Execution",
        "Relative_time",
        "Part_piece",
        "Being_obligated",
        "Using",
        "Evidence",
        "Building",
        "Desiring",
        "Inclusion"
    ],
    "For more information, see Set Up Google Play Services.": [
        "Information",
        "Execution",
        "Performers_and_roles",
        "Public_services",
        "Increment",
        "Grasp"
    ],
    "This section describes how to call the reCAPTCHA API to send a CAPTCHA verification request and receive the user response token.": [
        "Part_whole",
        "Execution",
        "Response",
        "Causation",
        "Receiving",
        "Verification",
        "Execution"
    ],
    "To invoke the SafetyNet reCAPTCHA API, you call the verifyWithRecaptcha ( ) method.": [
        "Execution",
        "Execution"
    ],
    "Usually, this method corresponds to the user's selecting a UI element, such as a button, in your activity.": [
        "Execution",
        "Clothing_parts",
        "Ingredients",
        "Intentionally_act",
        "Choosing"
    ],
    "When using the verifyWithRecaptcha ( ) method in your app, you must do the following:": [
        "Execution",
        "Using",
        "Being_obligated",
        "Intentionally_act",
        "Temporal_collocation"
    ],
    "The following code snippet shows how to invoke this method:": [
        "Relative_time",
        "Execution",
        "Part_piece",
        "Evidence"
    ],
    "When the reCAPTCHA API executes the onSuccess ( ) method, the user has successfully completed the CAPTCHA challenge.": [
        "Execution",
        "Execution",
        "Difficulty",
        "Activity_finish",
        "Temporal_collocation"
    ],
    "However, this method only indicates that the user has solved the CAPTCHA correctly.": [
        "Concessive",
        "Execution",
        "Sole_instance",
        "Resolve_problem",
        "Evidence"
    ],
    "You still need to validate the user's response token from your backend server.": [
        "Response",
        "Continued_state_of_affairs",
        "Required_event"
    ],
    "To learn how to validate the user's response token, see Verifying the user's response.": [
        "Response",
        "Education_teaching",
        "Verification",
        "Perception_experience"
    ],
    "If your app can not communicate with the reCAPTCHA service successfully, it may be because the API is encountering an error.": [
        "Public_services",
        "Capability",
        "Becoming_aware",
        "Communication",
        "Likelihood"
    ],
    "You should add logic in your app to gracefully handle such an error.": [
        "Being_obligated",
        "Resolve_problem"
    ],
    "Also, when the error occurs, your app should display a message to your users explaining why your app can not finish processing their CAPTCHA response.": [
        "Temporal_collocation",
        "Reason",
        "Response",
        "Event",
        "Being_obligated",
        "Capability",
        "Processing_materials",
        "Activity_finish"
    ],
    "The following list shows the status codes for the most common API errors:": [
        "Relative_time",
        "Evidence"
    ],
    "The site key is invalid.": [
        "Locale_by_use",
        "Importance"
    ],
    "Check that you've registered an API key successfully and that you've correctly copied the site key as a parameter when calling the API.": [
        "Locale_by_use",
        "Terms_of_agreement",
        "Importance",
        "Execution",
        "Duplication",
        "Temporal_collocation",
        "Recording"
    ],
    "The type of site key is invalid.": [
        "Locale_by_use",
        "Importance"
    ],
    "Create a new site key by navigating to the reCAPTCHA Android signup site.": [
        "Importance",
        "Locale_by_use",
        "Age",
        "Cause_to_start"
    ],
    "The calling app's package name doesn't match any of the names that you've associated with the site key.": [
        "Execution",
        "Execution",
        "Locale_by_use",
        "Importance",
        "Quantity",
        "Evaluative_comparison",
        "Intentionally_act",
        "Cognitive_connection"
    ],
    "Add the calling app's package name to the site key on the reCAPTCHA Admin Console, or disable package name validation for your site key.": [
        "Execution",
        "Execution",
        "Render_nonfunctional",
        "Locale_by_use",
        "Importance"
    ],
    "The API isn't supported on the device's Android SDK version.": [
        "Taking_sides",
        "Gizmo"
    ],
    "Upgrade to a new version of the Android SDK, then try communicating with the API again.": [
        "Attempt",
        "Age",
        "Communication",
        "Temporal_collocation"
    ],
    "The session timed out as the API waited for a response, either because the user didn't interact with the CAPTCHA or because the CAPTCHA loading process itself timed out.": [
        "Response",
        "Execution",
        "Intentionally_act",
        "Locative_relation",
        "Waiting"
    ],
    "Wait for the user to invoke the API again.": [],
    "In the meantime, you can inform the user that they must complete the CAPTCHA to continue using your app.": [
        "Being_obligated",
        "Capability",
        "Using",
        "Process_continue",
        "Activity_finish",
        "Telling"
    ],
    "There is no Internet connection.": [
        "Quantity",
        "Social_connection",
        "Existence"
    ],
    "After ensuring connectivity, try communicating with the API again.": [
        "Attempt",
        "Communication"
    ],
    "The operation encountered a general failure.": [
        "Using",
        "Success_or_failure",
        "Execution",
        "Becoming_aware"
    ],
    "For more details about the status codes that the reCAPTCHA API can return, see the SafetyNetStatusCodes reference.": [
        "Execution",
        "Capability",
        "Perception_experience",
        "Increment"
    ],
    "In the form that appears, provide the following information: Label: A unique label for your key.": [
        "Relative_time",
        "Information",
        "Importance",
        "Coming_to_be",
        "Labeling",
        "Idiosyncrasy",
        "Labeling",
        "Supply"
    ],
    "Typically, you use the name of your company or organization.": [
        "Businesses",
        "Organization",
        "Using"
    ],
    "Package Names: Provide the package name of each app that uses this API key.": [
        "Execution",
        "Execution",
        "Importance",
        "Using",
        "Supply"
    ],
    "In order for an app to use the API, the package name that you enter must be an exact match of the package name for that app.": [
        "Execution",
        "Evaluative_comparison",
        "Correctness",
        "Being_obligated",
        "Execution",
        "Using"
    ],
    "Enter each package name on its own line.": [
        "Execution",
        "Possession"
    ],
    "Send alerts to owners: Check this checkbox if you want to receive emails about the reCAPTCHA API.": [
        "Attention",
        "Contacting",
        "Inspecting",
        "Receiving",
        "Possession",
        "Possession",
        "Causation"
    ],
    "Label: A unique label for your key.": [
        "Importance",
        "Labeling",
        "Idiosyncrasy",
        "Labeling"
    ],
    "Pass in your API site key as a parameter.": [
        "Natural_features",
        "Locale_by_use",
        "Importance",
        "Terms_of_agreement"
    ],
    "Override the onSuccess ( ) and onFailure ( ) methods to handle both possible outcomes of the verification request task.": [
        "Execution",
        "Quantity",
        "Likelihood",
        "Being_obligated",
        "Execution",
        "Verification",
        "Resolve_problem"
    ],
    "In particular, if the API passes an instance of ApiException into onFailure ( ), you need to handle each possible status code that you can retrieve using getStatusCode ( ).": [
        "Natural_features",
        "Instance",
        "Likelihood",
        "Required_event",
        "Using",
        "Capability",
        "Resolve_problem"
    ],
    "For more information, see Handling communication errors.": [
        "Information",
        "Increment",
        "Communication",
        "Grasp"
    ],
    "The cool thing about the new Google Recaptcha is that the validation is now completely encapsulated in the widget.": [
        "Temporal_collocation",
        "Desirability",
        "Age"
    ],
    "That means, that the widget will take care of asking questions, validating responses all the way till it determines that a user is actually a human, only then you get a g-recaptcha-response value.": [
        "Questioning",
        "Quantity",
        "People",
        "Sole_instance",
        "Temporal_collocation",
        "Taking_time",
        "Execution",
        "Coming_to_believe",
        "Execution",
        "Response",
        "Execution",
        "Evidence"
    ],
    "But that does not keep your site safe from HTTP client request forgery.": [
        "Locale_by_use",
        "Forging",
        "Intentionally_act",
        "Being_at_risk",
        "Execution",
        "Activity_ongoing"
    ],
    "Anyone with HTTP POST knowledge could put random data inside of the g-recaptcha-response form field, and foll your site to make it think that this field was provided by the google widget.": [
        "Sending",
        "Locale_by_use",
        "Fields",
        "Awareness",
        "Frequency",
        "Capability",
        "Supply",
        "Causation",
        "Awareness",
        "Execution"
    ],
    "So you have to validate this token.": [
        "Being_obligated"
    ],
    "In human speech it would be like,": [
        "People",
        "Similarity"
    ],
    "Validating the response is really easy.": [
        "Response",
        "Difficulty"
    ],
    "Just make a GET Request to": [
        "Execution",
        "Causation"
    ],
    "And replace the response_string with the value that you earlier got by the g-recaptcha-response field.": [
        "Fields",
        "Relative_time",
        "Take_place_of",
        "Execution"
    ],
    "You will get a JSON Response with a success field.": [
        "Success_or_failure",
        "Fields",
        "Response",
        "Execution"
    ],
    "More information here: LINK": [],
    "Edit: It's actually a POST, as per LINK.": [
        "Sending"
    ],
    "Hi curious you can validate your google recaptcha at client side also 100 % work for me to verify your google recaptcha just see below code This code at the html body:": [
        "Cardinal_numbers",
        "Execution",
        "Working_on",
        "Capability",
        "Taking_sides",
        "Grasp",
        "Verification"
    ],
    "This code put at head section on call get_action -LRB- this -RRB- method form button:": [
        "Execution",
        "Execution",
        "Execution",
        "Clothing_parts",
        "Part_whole",
        "Causation"
    ],
    "A method I use in my login servlet to verify reCaptcha responses.": [
        "Response",
        "Execution",
        "Verification",
        "Using"
    ],
    "Uses classes from the java.json package.": [
        "Execution"
    ],
    "Returns the API response in a JsonObject.": [
        "Response",
        "Execution"
    ],
    "Check the success field for true or false": [
        "Success_or_failure",
        "Fields",
        "Artificiality",
        "Inspecting"
    ],
    "Here is complete demo code to understand client side and server side process.": [
        "Locative_relation",
        "Execution",
        "Process_completed_state",
        "Taking_sides",
        "Categorization"
    ],
    "you can copy paste it and just replace google site key and google secret key.": [
        "Locale_by_use",
        "Importance",
        "Secrecy_status",
        "Duplication",
        "Capability",
        "Replacing"
    ],
    "Android PDF Rendering": [],
    "public final class PdfRenderer extends Object implements AutoCloseable": [
        "Gizmo",
        "Ordinal_numbers",
        "Secrecy_status",
        "Expansion"
    ],
    "This class enables rendering a PDF document.": [
        "Documents",
        "Causation"
    ],
    "This class is not thread safe.": [
        "Risky_situation"
    ],
    "If you want to render a PDF, you create a renderer and for every page you want to render, you open the page, render it, and close the page.": [
        "Frequency",
        "Contacting",
        "Causation",
        "Secrecy_status",
        "Desiring",
        "Social_connection",
        "Intentionally_create"
    ],
    "After you are done with rendering, you close the renderer.": [
        "Intentionally_act",
        "Social_connection"
    ],
    "After the renderer is closed it should not be used anymore.": [
        "Being_obligated",
        "Using",
        "Body_movement"
    ],
    "Note that the pages are rendered one by one, i.e. you can have only a single page opened at any given time.": [
        "Contacting",
        "Cardinal_numbers",
        "Sole_instance",
        "Contacting",
        "Quantity",
        "Measure_duration",
        "Causation",
        "Sole_instance",
        "Giving",
        "Capability",
        "Secrecy_status",
        "Becoming_aware"
    ],
    "A typical use of the APIs to render a PDF looks like this:": [
        "Causation",
        "Scrutiny"
    ],
    "If you are using this class to rasterize a PDF for printing or show a print preview, it is recommended that you respect the following contract in order to provide a consistent user experience when seeing a preview and printing, i.e. the user sees a preview that is the same as the printout.": [
        "Reasoning",
        "Relative_time",
        "Documents",
        "Compatibility",
        "Expertise",
        "Personal_relationship",
        "Identicality",
        "Judgment",
        "Temporal_collocation",
        "Perception_experience",
        "Using",
        "Supply"
    ],
    "This class represents a PDF document page for rendering.": [
        "Documents",
        "Contacting",
        "Communicate_categorization"
    ],
    "Gets the number of pages in the document.": [
        "Contacting",
        "Documents",
        "Quantity",
        "Bringing"
    ],
    "Opens a page for rendering.": [
        "Contacting",
        "Body_movement"
    ],
    "Gets whether the document prefers to be scaled for printing.": [
        "Documents",
        "Partiality",
        "Bringing"
    ],
    "Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.": [
        "Temporal_collocation",
        "Quantity",
        "Execution",
        "Increment",
        "Existence",
        "Coming_to_believe",
        "Execution"
    ],
    "Note: The provided file descriptor must be seekable, i.e. its data being randomly accessed, e.g. pointing to a file.": [
        "Supply",
        "Taking_time",
        "Becoming_aware",
        "Adducing",
        "Being_obligated"
    ],
    "Note: This class takes ownership of the passed in file descriptor and is responsible for closing it when the renderer is closed.": [
        "Traversing",
        "Temporal_collocation",
        "Body_movement",
        "Becoming_aware",
        "Removing",
        "Body_movement",
        "Possession"
    ],
    "If the file is from an untrusted source it is recommended to run the renderer in a separate, isolated process with minimal permissions to limit the impact of security exploits.": [
        "Becoming_separated",
        "Being_at_risk",
        "Source_of_getting",
        "Execution",
        "Objective_influence",
        "Execution",
        "Grant_permission"
    ],
    "You should not use this instance after this method is called.": [
        "Instance",
        "Execution",
        "Being_obligated",
        "Execution",
        "Using"
    ],
    "You should take this info account if the document is rendered for printing and the target media size differs from the page size.": [
        "Part_orientational",
        "Documents",
        "Contacting",
        "Being_obligated",
        "Similarity",
        "Causation",
        "Have_as_requirement"
    ],
    "A subclass overrides the finalize method to dispose of system resources or to perform other cleanup.": [
        "Gizmo",
        "Increment",
        "Intentionally_act",
        "Execution"
    ],
    "The general contract of finalize is that it is invoked if and when the Java \u2122 virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized.": [
        "Intentionally_act",
        "Relational_quantity",
        "Documents",
        "Execution",
        "Gizmo",
        "Temporal_collocation",
        "Quantity",
        "Increment",
        "Likelihood",
        "Event",
        "Death",
        "Temporal_collocation",
        "Activity_ready_state",
        "Execution",
        "Existence",
        "Causation"
    ],
    "The finalize method may take any action, including making this object available again to other threads ; the usual purpose of finalize, however, is to perform cleanup actions before the object is irrevocably discarded.": [
        "Execution",
        "Natural_features",
        "Concessive",
        "Quantity",
        "Increment",
        "Intentionally_act",
        "Likelihood",
        "Inclusion",
        "Intentionally_act",
        "Intentionally_act",
        "Have_as_requirement",
        "Removing",
        "Causation"
    ],
    "For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded.": [
        "Instance",
        "Candidness",
        "Commerce_sell",
        "Compliance",
        "Likelihood",
        "Social_connection",
        "Intentionally_act",
        "Communicate_categorization",
        "Execution",
        "Removing"
    ],
    "The finalize method of class Object performs no special action ; it simply returns normally.": [
        "Quantity",
        "Intentionally_act",
        "Execution",
        "Execution",
        "Intentionally_act"
    ],
    "Subclasses of Object may override this definition.": [
        "Communicate_categorization",
        "Likelihood"
    ],
    "The Java programming language does not guarantee which thread will invoke the finalize method for any given object.": [
        "Natural_features",
        "Giving",
        "Quantity",
        "Intentionally_act",
        "Execution",
        "Likelihood"
    ],
    "It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked.": [
        "Quantity",
        "Hair_configuration",
        "Temporal_collocation",
        "Likelihood",
        "Containing",
        "Concessive"
    ],
    "If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates.": [
        "Execution",
        "Cause_motion"
    ],
    "After the finalize method has been invoked for an object, no further action is taken until the Java virtual machine has again determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, including possible actions by other objects or classes which are ready to be finalized, at which point the object may be discarded.": [
        "Execution",
        "Quantity",
        "Likelihood",
        "Intentionally_act",
        "Increment",
        "Gizmo",
        "Temporal_collocation",
        "Quantity",
        "Increment",
        "Likelihood",
        "Adducing",
        "Likelihood",
        "Event",
        "Death",
        "Removing",
        "Intentionally_act",
        "Execution",
        "Existence",
        "Activity_ready_state",
        "Inclusion"
    ],
    "The finalize method is never invoked more than once by a Java virtual machine for any given object.": [
        "Execution",
        "Giving",
        "Quantity",
        "Frequency",
        "Gizmo",
        "Time_vector",
        "Increment"
    ],
    "Any exception thrown by the finalize method causes the finalization of this object to be halted, but is otherwise ignored.": [
        "Execution",
        "Quantity",
        "Activity_stop",
        "Cause_motion",
        "Causation"
    ],
    "Respect the property whether the document would like to be scaled for printing as per shouldScaleForPrinting ( ).": [
        "Documents",
        "Possession",
        "Judgment",
        "Experiencer_focus"
    ],
    "When scaling a document for printing the aspect ratio should be preserved.": [
        "Documents",
        "Distinctiveness",
        "Temporal_collocation",
        "Preserving",
        "Being_obligated"
    ],
    "Do not inset the content with any margins from the PrintAttributes as the application is responsible to render it such that the margins are respected.": [
        "Intentionally_act",
        "Quantity",
        "Judgment",
        "Causation",
        "Using"
    ],
    "If document page size is greater than the printed media size the content should be anchored to the upper left corner of the page for left-to-right locales and top right corner for right-to-left locales.": [
        "Documents",
        "People_along_political_spectrum",
        "Contacting",
        "Part_orientational",
        "Locale_by_event",
        "Text_creation",
        "Being_obligated",
        "Part_orientational",
        "Being_attached"
    ],
    "Some phones -LRB- like the Nexus One -RRB- come with a version of LINK pre-installed so it may be as easy as sending the appropriate Intent once you've saved the file to the SD card.": [
        "Contacting",
        "Cardinal_numbers",
        "Self_motion",
        "Relational_quantity",
        "Likelihood",
        "Causation",
        "Execution",
        "Difficulty",
        "Frequency"
    ],
    "LINK.": [],
    "For the local pdf files, you can render them through the third party libraries.": [
        "Political_locales",
        "Participation",
        "Buildings",
        "Causation",
        "Part_whole",
        "Capability"
    ],
    "for example, use the LINK, its supported file types include PDF, PNG and JPEG.": [
        "Instance",
        "Taking_sides",
        "Self_motion",
        "Using",
        "Inclusion"
    ],
    "One shortcoming of MuPDF is that it uses native library to fulfill the target, so it won't be easy to port the application on BlackBerry platform later.": [
        "Buildings",
        "Locale_by_use",
        "Using",
        "Cardinal_numbers",
        "Indigenous_origin",
        "Accomplishment",
        "Using",
        "Difficulty",
        "Time_vector"
    ],
    "Android-Lollipop -LRB- api 21 -RRB- introduce a new API: LINK": [
        "Age"
    ],
    "This API allows you to create a Bitmap from a page in a PDF document.": [
        "Contacting",
        "Documents",
        "Grant_permission",
        "Intentionally_create"
    ],
    "Shortly:": [],
    "get a seekable file descriptor from your pdf document:": [
        "Documents",
        "Execution"
    ],
    "create the PdfRenderer": [],
    "prepare the Bitmap": [],
    "get the LINK to render": [
        "Execution",
        "Causation"
    ],
    "render the page on the prepared bitmap": [
        "Contacting",
        "Activity_ready_state",
        "Causation"
    ],
    "now you can do what you want with the bitmap.": [
        "Temporal_collocation",
        "Possession",
        "Capability",
        "Intentionally_act"
    ],
    "note that the 2 null args may allow you to clip some portion in the page and perform a transformation -LRB- using a LINK -RRB- of the clip": [
        "Part_whole",
        "Contacting",
        "Cause_change",
        "Relational_quantity",
        "Cardinal_numbers",
        "Intentionally_act",
        "Using",
        "Grant_permission",
        "Likelihood"
    ],
    "there is another rendering mode: LINK.": [
        "Causation",
        "Increment",
        "Existence"
    ],
    "If you need this mode there are some guidelines to use it properly: here are LINK.": [
        "Required_event",
        "Relational_quantity",
        "Locative_relation",
        "Using",
        "Existence"
    ],
    "This library is simple and works well: LINK LINK": [
        "Buildings",
        "Being_employed"
    ],
    "Old Reply ...": [],
    "I think that Joan Zapata give us the better and simple solution:": [
        "Desirability",
        "Giving",
        "Opinion"
    ],
    "I assure you that it works !": [
        "Being_employed",
        "Telling"
    ],
    "LINK: LINK": [],
    "To open a pdf from a byte array, you can use RadaeePDF, you can do the following into your activity:": [
        "Diversity",
        "Intentionally_act",
        "Secrecy_status",
        "Capability",
        "Using",
        "Intentionally_act",
        "Relative_time"
    ],
    "Get startedOpen in appChahat Jain74 FollowersAboutFollowSign inGet startedFollow74 FollowersAboutGet startedOpen in appRendering a PDF Document in Android Activity/Fragment ( Using PdfRenderer ) Chahat JainJun 26, 2018 \u00b7 4 min readWhen we want to render a PDF Document we always have a easy way.": [
        "Execution",
        "Execution",
        "Cardinal_numbers",
        "Documents",
        "Frequency",
        "Difficulty",
        "Using",
        "Causation",
        "Possession"
    ],
    "We use intent ( android support library ) in Android & open a PDF Viewer of Android.": [
        "Taking_sides",
        "Buildings",
        "Secrecy_status",
        "Using"
    ],
    "But what if we want to render a PDF Document in our app itself.": [
        "Possession",
        "Causation",
        "Documents"
    ],
    "Then we think it will be very hard.": [
        "Temporal_collocation",
        "Degree",
        "Opinion",
        "Difficulty"
    ],
    "Is it possible to render a PDF Document in android app ?": [
        "Documents",
        "Likelihood",
        "Causation"
    ],
    "Let's first go through easy way using android support library Intent: This will open a PDF Viewer of Android.": [
        "Ordinal_numbers",
        "Taking_sides",
        "Buildings",
        "Grant_permission",
        "Difficulty",
        "Secrecy_status",
        "Using",
        "Becoming"
    ],
    "You can read your PDF Document.Now let's learn how to render a PDF Document in android app itself - We will use android support library PdfRenderer ( Added in API level 21 ).": [
        "Education_teaching",
        "Documents",
        "Taking_sides",
        "Buildings",
        "Rank",
        "Reading",
        "Causation",
        "Using",
        "Grant_permission",
        "Capability"
    ],
    "PdfRenderer -- This class enables rendering a PDF document.": [
        "Documents",
        "Causation"
    ],
    "This class is not thread safe.If you want to render a PDF, you create a renderer and for every page you want to render, you open the page, render it, and close the page.": [
        "Frequency",
        "Contacting",
        "Causation",
        "Secrecy_status",
        "Social_connection",
        "Possession",
        "Intentionally_create"
    ],
    "Note that the pages are rendered one by one, i.e. you can have only a single page opened at any given time.Concept: PdfRenderer will convert your PDF page into image and you can show it on ImageView.Let's learn how to use PdfRenderer library: Create a simple android project named as PdfRenderName your Activity as PdfRenderActivity ( The activity where we want to render a PDF Document ) Create a assets folder ( res \u2192 New \u2192 Folder \u2192 Assets Folder ) and put your PDF Document inside it.If you want to use FloatingActionButton for navigating through multiple pages of PDF Document then you have to add design library in build.gradle ( Module: app ) file .5.": [
        "Contacting",
        "Cardinal_numbers",
        "Sole_instance",
        "Contacting",
        "Similarity",
        "Education_teaching",
        "Project",
        "Containers",
        "Documents",
        "Coming_up_with",
        "Buildings",
        "Causation",
        "Sole_instance",
        "Intentionally_act",
        "Containers",
        "Age",
        "Quantity",
        "Giving",
        "Locative_relation",
        "Quantity",
        "Reasoning",
        "Causation",
        "Submitting_documents",
        "Body_movement",
        "Temporal_collocation",
        "Cause_to_start",
        "Becoming_aware",
        "Cause_change",
        "Causation",
        "Being_obligated",
        "Desiring",
        "Intentionally_act",
        "Using",
        "Capability"
    ],
    "Add following code in your layout file.": [
        "Relative_time"
    ],
    "In my case it is activity_pdf_render.": [
        "Instance"
    ],
    "Now add the following code in your PdfRenderActivity -- 7.": [
        "Temporal_collocation",
        "Relative_time"
    ],
    "Now Run your app & you will see your PDF Document will render in android app itself.Wowww ... ... ... That's it ... Thanks ....": [
        "Temporal_collocation",
        "Documents",
        "Judgment_direct_address",
        "Causation",
        "Grasp",
        "Execution"
    ],
    "Chahat JainAndroid DeveloperFollow360 10\u00a0360\u00a0360 10 AndroidPdfrendererPdfAndroid Support LibraryMore from Chahat JainFollowAndroid DeveloperMore From MediumLet's Create: Portfolio App With Next.js, Strapi Headless CMS and Bootstrap 5Stephan Bakkelund Valois in The StartupSecurity Best Practices in AngularAshish KumarWebdriverIO with CucumberJSAdarsh Kumar GM in The StartupThis in JavaScriptBeribey in The StartupSetting Prettier on a React Typescript project ( 2021 ) Andr\u00e9 Borba Netto AssisCreating a Catching Game Using PhaserClaudia Sinowato in The StartupKeeping env variables private in React AppParam Singh in The StartupFunctional Programming for the Web: Monads and Basic DOM Manipulation in PureScriptKevin B. GreeneAboutHelpLegalGet the Medium app": [
        "Cardinal_numbers",
        "Taking_sides",
        "Measure_linear_extent",
        "Businesses",
        "Project",
        "Hunting_success_or_failure",
        "Network",
        "Position_on_a_scale",
        "Using"
    ],
    "Rendering a PDF Document in Android Activity/Fragment ( Using PdfRenderer ) Chahat JainJun 26, 2018 \u00b7 4 min readWhen we want to render a PDF Document we always have a easy way.": [
        "Execution",
        "Cardinal_numbers",
        "Documents",
        "Frequency",
        "Difficulty",
        "Causation",
        "Using",
        "Causation",
        "Possession"
    ],
    "Rendering a PDF Document in Android Activity/Fragment ( Using PdfRenderer ) Chahat JainJun 26, 2018 \u00b7 4 min read": [
        "Documents",
        "Cardinal_numbers",
        "Causation",
        "Using"
    ],
    "Chahat JainJun 26, 2018 \u00b7 4 min read": [
        "Cardinal_numbers"
    ],
    "When we want to render a PDF Document we always have a easy way.": [
        "Temporal_collocation",
        "Execution",
        "Documents",
        "Frequency",
        "Difficulty",
        "Causation",
        "Desiring"
    ],
    "You can read your PDF Document.": [
        "Documents",
        "Capability",
        "Reading"
    ],
    "Now let's learn how to render a PDF Document in android app itself - We will use android support library PdfRenderer ( Added in API level 21 ).": [
        "Temporal_collocation",
        "Documents",
        "Taking_sides",
        "Buildings",
        "Rank",
        "Causation",
        "Using",
        "Education_teaching",
        "Grant_permission"
    ],
    "TS shows numbers instead of contact names in notifications": [
        "Telling",
        "Contacting",
        "Quantity",
        "Evidence"
    ],
    "TS shows number instead of contacts names in the main screen \u00b7 Issue # 3376 \u00b7 signalapp/Signal-Android \u00b7 GitHub": [
        "Quantity",
        "Contacting",
        "Point_of_dispute",
        "First_rank",
        "Evidence"
    ],
    "TS shows number instead of contacts names in the main screen": [
        "Quantity",
        "Contacting",
        "First_rank",
        "Evidence"
    ],
    "When I open textsecure in the main screen, it displays the number/contacts names just like a flash, every second it displays numbers or contacts names.": [
        "Temporal_collocation",
        "Location_of_light",
        "Frequency",
        "Measure_duration",
        "Quantity",
        "Contacting",
        "First_rank",
        "Secrecy_status"
    ],
    "Device: Honor 3C Jelly Bean 4.2.2 Emotion UI 2.0": [
        "Gizmo",
        "Emotion_directed"
    ],
    "Here is a debug log: https://gist.github.com/anonymous/cc03830f4322e1c1a1f4": [
        "Locative_relation",
        "Emptying"
    ],
    "message notifications appear not until I open TS": [
        "Telling",
        "Coming_to_be",
        "Secrecy_status"
    ],
    "I will try to disable thoses managers this evening and give a feedback !": [
        "People_by_vocation",
        "Calendric_unit",
        "Giving",
        "Render_nonfunctional",
        "Attempt"
    ],
    "@ 2-4601 The only manager that I have allow me to specify if an app can send push notification to the notifications bar ( options = Not authorized/Authorized/Notify ) also if an app is authorized to startup with android and if an app is allowed l working when the screen is locked ( for battery saving ).": [
        "People_by_vocation",
        "Cause_motion",
        "Telling",
        "Buildings",
        "Possibilities",
        "Grant_permission",
        "Being_employed",
        "Temporal_collocation",
        "Offenses",
        "Sole_instance",
        "Grant_permission",
        "Grant_permission",
        "Inhibit_movement",
        "Telling",
        "Sending",
        "Capability"
    ],
    "I gave all authorizations but the pictures/names/phone numbers stil flickering.": [
        "Grant_permission",
        "Quantity",
        "Location_of_light",
        "Quantity",
        "Giving"
    ],
    "I tried to disable the huawei phone manager but I'm not allowed.": [
        "Contacting",
        "People_by_vocation",
        "Render_nonfunctional",
        "Grant_permission",
        "Attempt"
    ],
    "I think this is a limitation of this version of EmotionUI/Android jelly bean.": [
        "Opinion"
    ],
    "My Friend was able to get it all working, if I remember well the problematic settings were in Security > Privacy for the contacts and in battery for GCM.": [
        "Contacting",
        "Offenses",
        "Personal_relationship",
        "Quantity",
        "Memory",
        "Being_at_risk",
        "Execution",
        "Capability"
    ],
    "@ 5boro Does your friend has the same device with the same version of Emotion UI ?": [
        "Gizmo",
        "Intentionally_act",
        "Personal_relationship",
        "Identicality",
        "Emotion_directed",
        "Inclusion"
    ],
    "In the configuration panel I didn't find any privacy settings for the contacts.": [
        "Quantity",
        "Contacting",
        "Intentionally_act",
        "Locating"
    ],
    "I will post screenshot of the configuration panel as soon as possible.": [
        "Likelihood",
        "Sending"
    ],
    "It's actually an Huawei Honor 6, with EMUI 3.0.": [],
    "Here screenshots of the phone manager, there is no privacy settings for apps.": [
        "Locative_relation",
        "Contacting",
        "Quantity",
        "People_by_vocation",
        "Existence"
    ],
    "Also I can't disable the phone manager:": [
        "Contacting",
        "People_by_vocation",
        "Render_nonfunctional",
        "Capability"
    ],
    "@ahamrani Apparemment les param\u00e8tres dont je parlait ont \u00e9t\u00e9 impl\u00e9ment\u00e9s dans la version 3.0 d'EmotionUI: http://www.anandtech.com/show/8655/the-huawei-ascend-mate-7-review/2 ( derni\u00e8re partie de l'article )": [],
    "Je reste convaincu que c'est un param\u00e8tre de s\u00e9curit\u00e9 de l'os qui emp\u00e8che l'acc\u00e8s aux contacts, tun'utilise pas Xprivacy ou App Ops ?": [
        "Contacting"
    ],
    "@ 5boro please discuss in english so everybody can understand what you say, not just french speaking people ; )": [
        "People_by_origin",
        "Court_examination",
        "People",
        "Emotion_directed",
        "Grasp",
        "Capability",
        "Discussion"
    ],
    "`` Apparently the settings I talked about were implemented in version 3.0 of Emotion UI: http://www.anandtech.com/show/8655/the-huawei-ascend-mate-7-review/2 ( last part of the article )": [
        "Execute_plan",
        "Emotion_directed",
        "Membership",
        "Relative_time"
    ],
    "I'm still convinced that there are some security settings in the OS that deny the access to the contacts.": [
        "Relational_quantity",
        "Being_at_risk",
        "Having_or_lacking_access",
        "Contacting",
        "Continued_state_of_affairs",
        "Existence",
        "Certainty"
    ],
    "You don't use Xprivacy or App Ops ?''": [
        "Intentionally_act",
        "Using"
    ],
    "@Mihahn \ud83d\udc4d You should join the French translation team": [
        "Court_examination",
        "Translating",
        "Being_obligated",
        "Execution",
        "Becoming_a_member"
    ],
    "@ 5boro nah, I'm not a native speaker and I'm just learning french at school ...": [
        "Court_examination",
        "Locale_by_use",
        "Indigenous_origin",
        "Education_teaching"
    ],
    "and I'm not really good at it \ud83d\ude48": [
        "Desirability"
    ],
    "The device is not rooted, so can not install Xprivacy or App Ops.": [
        "Gizmo",
        "Installing",
        "Capability"
    ],
    "That's what I thought, I think I will have to wait that Honor deploy an update for the european version of my device or I will have to root it.": [
        "Gizmo",
        "Origin",
        "Awareness",
        "Being_obligated",
        "Waiting",
        "Arranging",
        "Opinion"
    ],
    "I found a huawei home made privacy gard in the app manager, but unfortunatly I can not disable it and it hasn't control panel for app settings, it's shame.": [
        "Buildings",
        "People_by_vocation",
        "Experiencer_obj",
        "Render_nonfunctional",
        "Control",
        "Causation",
        "Locating",
        "Capability"
    ],
    "P.S: Honor est r\u00e9ellement une sous-marque de huawei ...": [],
    "It does seem to exist though: https://youtu.be/swrT6ePAvlo?t=60": [
        "Appearance",
        "Intentionally_act",
        "Existence"
    ],
    "Dans ta derni\u00e8re capture, `` Applis prot\u00e9g\u00e9es'', c'est quoi ?": [],
    "In the panel `` Applis prot\u00e9g\u00e9es'' there is the list of apps allowed to run when the screen is locked.": [
        "Temporal_collocation",
        "Grant_permission",
        "Existence",
        "Inhibit_movement",
        "Execution"
    ],
    "I think this is for battery optimisation.": [
        "Offenses",
        "Opinion"
    ],
    "I already Allowed TextSecure without any change in the behavior.": [
        "Conduct",
        "Time_vector",
        "Quantity",
        "Grant_permission",
        "Undergo_change"
    ],
    "Yes it's strange that in the video there is a permissions manager, but believe me I didn't find it in mine, maybe it's a feature for the EMUI 2.3 ?": [
        "People_by_vocation",
        "Locale_by_use",
        "Indigenous_origin",
        "Becoming_aware",
        "Intentionally_act",
        "Existence",
        "Awareness"
    ],
    "If the permission manager is not installed, there is no reason for TSecure not to be able to access your contacts.": [
        "Grant_permission",
        "Installing",
        "Quantity",
        "People_by_vocation",
        "Contacting",
        "Causation",
        "Capability",
        "Existence"
    ],
    "It has to be present, maybe it's only accessible to root users ...": [
        "Sole_instance",
        "Required_event",
        "Presence",
        "Having_or_lacking_access"
    ],
    "@ 5boro Yeah you're right, I think I don't have choice, I'll have to root it.": [
        "Choosing",
        "Intentionally_act",
        "Correctness",
        "Being_obligated",
        "Awareness"
    ],
    "Since there is no other solutions than root my device or wait for an update from Honor, I guess it's better to close this issue.": [
        "Quantity",
        "Gizmo",
        "Point_of_dispute",
        "Increment",
        "Desirability",
        "Social_connection",
        "Estimating",
        "Waiting",
        "Existence"
    ],
    "@ahamrani If I were you I would go ask on Huawei/EmUI related forums before voiding my warranty ...": [
        "Emptying",
        "Cognitive_connection",
        "Execution",
        "Becoming"
    ],
    "A friend of mine ( owning a Huawei P6 with Android 4.4.2 and EmotionUI 2.3 ) has the same problem.": [
        "Locale_by_use",
        "Predicament",
        "Identicality",
        "Personal_relationship",
        "Possession",
        "Inclusion"
    ],
    "Contacts are kind of flashing every few seconds and he only receives messages on opening TextSecure.": [
        "Contacting",
        "Location_of_light",
        "Frequency",
        "Quantity",
        "Sole_instance",
        "Receiving",
        "Body_movement"
    ],
    "There has to be a solution without rooting the phone ...": [
        "Contacting",
        "Existence",
        "Required_event"
    ],
    "@ 5boro This morning I called Huawei/Honor support center, they told me that my device is not produced anymore, that they don't know if an update will be deployed for the European version and if it is, it will be available automatically on my device.": [
        "Calendric_unit",
        "Gizmo",
        "Taking_sides",
        "Locale_by_use",
        "Intentionally_act",
        "Origin",
        "Execution",
        "Manufacturing",
        "Arranging",
        "Awareness"
    ],
    "In xdadevelopers forums ( http://forum.xda-developers.com/t/honor-3c ), there are some guides showing how to update to another version, but this is not official ...": [
        "Execution",
        "Relational_quantity",
        "Increment",
        "Reasoning",
        "Existence"
    ],
    "@Mihahn I thought that Emui 2.3 has the permissions manager ?": [
        "People_by_vocation",
        "Inclusion",
        "Opinion"
    ],
    "The real question is why the home made permissions/privacy manager doesn't allow TextSecure accessing contact properly ?": [
        "Reason",
        "Buildings",
        "Contacting",
        "Point_of_dispute",
        "Existence",
        "People_by_vocation",
        "Intentionally_act",
        "Grant_permission",
        "Causation"
    ],
    "Does TextSecure behavior is considered as malware/bloatware ?": [
        "Conduct",
        "Categorization"
    ],
    "No contact names pictures appearing": [
        "Quantity",
        "Contacting",
        "Physical_artworks",
        "Coming_to_be"
    ],
    "I have a good news and a bad news, good news is that pictures/names/numbers aren't flickering anymore since the latest update 2.18.2.": [
        "Location_of_light",
        "Relational_quantity",
        "Desirability",
        "Desirability",
        "Relative_time"
    ],
    "Bad news is that the app is very slow.": [
        "Desirability",
        "Degree",
        "Taking_time"
    ],
    "I will open a new issue and close this one.": [
        "Cardinal_numbers",
        "Point_of_dispute",
        "Age",
        "Secrecy_status",
        "Social_connection"
    ],
    "TS very slow since update 2.18.2": [
        "Taking_time",
        "Degree"
    ],
    "Dagger 2 doesn't implement some of the component methods in Android project with custom annotation processor": [
        "Gizmo",
        "Ingredients",
        "Project",
        "Custom",
        "Execution",
        "Relational_quantity",
        "Intentionally_act"
    ],
    "The Dagger basics page explained how Dagger can help you automate dependency injection in your app.": [
        "Contacting",
        "Reliance",
        "Capability",
        "Assistance"
    ],
    "With Dagger, you don't have to write tedious and error-prone boilerplate code.": [
        "Intentionally_act",
        "Stimulus_focus",
        "Being_obligated"
    ],
    "To use Dagger in your project, add these dependencies to your application in your build.gradle file.": [
        "Project",
        "Reliance",
        "Using",
        "Using",
        "Cause_change_of_position_on_a_scale"
    ],
    "You can find the latest version of Dagger in this GitHub project.": [
        "Project",
        "Relative_time",
        "Capability",
        "Locating"
    ],
    "Consider an example Android app with the dependency graph from Figure 1.": [
        "Instance",
        "Reliance",
        "Categorization"
    ],
    "Dependency graph of the example code": [
        "Reliance",
        "Instance"
    ],
    "In Android, you usually create a Dagger graph that lives in your application class because you want an instance of the graph to be in memory as long as the app is running.": [
        "Using",
        "Instance",
        "Remembering_experience",
        "Execution",
        "Residence",
        "Desiring",
        "Intentionally_create",
        "Desiring"
    ],
    "In this way, the graph is attached to the app lifecycle.": [
        "Being_attached"
    ],
    "In some cases, you might also want to have the application context available in the graph.": [
        "Instance",
        "Using",
        "Relational_quantity",
        "Likelihood",
        "Desiring"
    ],
    "For that, you would also need the graph to be in the application class.": [
        "Using",
        "Required_event"
    ],
    "One advantage of this approach is that the graph is available to other Android framework classes.": [
        "Execution",
        "Cardinal_numbers",
        "Increment"
    ],
    "Additionally, it simplifies testing by allowing you to use a custom application class in tests.": [
        "Custom",
        "Using",
        "Operational_testing",
        "Grant_permission",
        "Using",
        "Operational_testing"
    ],
    "Because the interface that generates the graph is annotated with @Component, you can call it ApplicationComponent or ApplicationGraph.": [
        "Ingredients",
        "Capability",
        "Creating",
        "Execution"
    ],
    "You usually keep an instance of that component in your custom application class and call it every time you need the application graph, as shown in the following code snippet:": [
        "Instance",
        "Custom",
        "Using",
        "Frequency",
        "Relative_time",
        "Execution",
        "Measure_duration",
        "Required_event",
        "Part_piece",
        "Ingredients",
        "Evidence",
        "Activity_ongoing"
    ],
    "Because certain Android framework classes such as activities and fragments are instantiated by the system, Dagger can't create them for you.": [
        "Intentionally_act",
        "Part_piece",
        "Gizmo",
        "Likelihood",
        "Intentionally_create",
        "Capability"
    ],
    "For activities specifically, any initialization code needs to go into the onCreate ( ) method.": [
        "Intentionally_act",
        "Execution",
        "Quantity",
        "Required_event",
        "Becoming"
    ],
    "That means you can not use the @Inject annotation in the constructor of the class ( constructor injection ) as you did in the previous examples.": [
        "Time_vector",
        "Intentionally_act",
        "Instance",
        "Using",
        "Capability",
        "Evidence"
    ],
    "Instead, you have to use field injection.": [
        "Fields",
        "Being_obligated",
        "Using"
    ],
    "Instead of creating the dependencies an activity requires in the onCreate ( ) method, you want Dagger to populate those dependencies for you.": [
        "Intentionally_act",
        "Execution",
        "Reliance",
        "Intentionally_create",
        "Residence",
        "Have_as_requirement",
        "Desiring"
    ],
    "For field injection, you instead apply the @Inject annotation to the fields that you want to get from the Dagger graph.": [
        "Fields",
        "Fields",
        "Using",
        "Execution",
        "Possession"
    ],
    "For simplicity, LoginViewModel is not an Android Architecture Components ViewModel ; it's just a regular class that acts as a ViewModel.": [
        "Intentionally_act",
        "Ingredients"
    ],
    "For more information about how to inject these classes, check out the code in the official Android Blueprints Dagger implementation, in the dev-dagger branch.": [
        "Execute_plan",
        "Information",
        "Execution",
        "Increment"
    ],
    "One of the considerations with Dagger is that injected fields can not be private.": [
        "Cogitation",
        "Fields",
        "Locale_by_use",
        "Cardinal_numbers",
        "Capability"
    ],
    "They need to have at least package-private visibility like in the preceding code.": [
        "Relative_time",
        "Required_event",
        "Relational_quantity"
    ],
    "Dagger needs to know that LoginActivity has to access the graph in order to provide the ViewModel it requires.": [
        "Required_event",
        "Being_obligated",
        "Have_as_requirement",
        "Supply",
        "Awareness"
    ],
    "In the Dagger basics page, you used the @Component interface to get objects from the graph by exposing functions with the return type of what you want to get from the graph.": [
        "Contacting",
        "Ingredients",
        "Execution",
        "Reveal_secret",
        "Desiring",
        "Getting",
        "Using"
    ],
    "In this case, you need to tell Dagger about an object ( LoginActivity in this case ) that requires a dependency to be injected.": [
        "Instance",
        "Reliance",
        "Telling",
        "Required_event",
        "Have_as_requirement"
    ],
    "For that, you expose a function that takes as a parameter the object that requests injection.": [
        "Terms_of_agreement",
        "Execution",
        "Reveal_secret",
        "Taking_time"
    ],
    "This function tells Dagger that LoginActivity wants to access the graph and requests injection.": [
        "Execution",
        "Desiring"
    ],
    "Dagger needs to satisfy all the dependencies that LoginActivity requires ( LoginViewModel with its own dependencies ).": [
        "Quantity",
        "Reliance",
        "Required_event",
        "Have_as_requirement",
        "Possession",
        "Experiencer_focus"
    ],
    "If you have multiple classes that request injection, you have to specifically declare them all in the component with their exact type.": [
        "Execution",
        "Quantity",
        "Ingredients",
        "Quantity",
        "Correctness",
        "Being_obligated"
    ],
    "For example, if you had LoginActivity and RegistrationActivity requesting injection, you'd have two inject ( ) methods instead of a generic one covering both cases.": [
        "Instance",
        "Execution",
        "Cardinal_numbers",
        "Instance",
        "Being_obligated",
        "Quantity",
        "Execution",
        "Cardinal_numbers",
        "Topic"
    ],
    "A generic inject ( ) method doesn't tell Dagger what needs to be provided.": [
        "Execution",
        "Supply",
        "Required_event",
        "Telling",
        "Intentionally_act"
    ],
    "The functions in the interface can have any name, but calling them inject ( ) when they receive the object to inject as a parameter is a convention in Dagger.": [
        "Temporal_collocation",
        "Terms_of_agreement",
        "Custom",
        "Quantity",
        "Capability",
        "Receiving",
        "Execution"
    ],
    "To inject an object in the activity, you'd use the appComponent defined in your application class and call the inject ( ) method, passing in an instance of the activity that requests injection.": [
        "Intentionally_act",
        "Using",
        "Execution",
        "Instance",
        "Execution",
        "Execution",
        "Natural_features",
        "Using",
        "Categorization"
    ],
    "When using activities, inject Dagger in the activity's onCreate ( ) method before calling super.onCreate ( ) to avoid issues with fragment restoration.": [
        "Intentionally_act",
        "Intentionally_act",
        "Part_piece",
        "Using",
        "Preventing",
        "Temporal_collocation",
        "Execution",
        "Execution"
    ],
    "During the restore phase in super.onCreate ( ), an activity attaches fragments that might want to access activity bindings.": [
        "Intentionally_act",
        "Part_piece",
        "Having_or_lacking_access",
        "Rejuvenation",
        "Likelihood",
        "Possession",
        "Attaching"
    ],
    "When using fragments, inject Dagger in the fragment's onAttach ( ) method.": [
        "Part_piece",
        "Part_piece",
        "Execution",
        "Using",
        "Temporal_collocation"
    ],
    "In this case, it can be done before or after calling super.onAttach ( ).": [
        "Instance",
        "Likelihood",
        "Execution",
        "Intentionally_act"
    ],
    "Let's tell Dagger how to provide the rest of the dependencies to build the graph:": [
        "Stimulus_focus",
        "Reliance",
        "Building",
        "Supply",
        "Telling",
        "Grant_permission"
    ],
    "For this example, you're using the Retrofit networking library.": [
        "Instance",
        "Buildings",
        "Using"
    ],
    "UserRemoteDataSource has a dependency on LoginRetrofitService.": [
        "Reliance",
        "Inclusion"
    ],
    "However, the way to create an instance of LoginRetrofitService is different from what you've been doing until now.": [
        "Instance",
        "Execution",
        "Temporal_collocation",
        "Intentionally_act",
        "Intentionally_create",
        "Concessive",
        "Similarity"
    ],
    "It's not a class instantiation ; it's the result of calling Retrofit.Builder ( ) and passing in different parameters to configure the login service.": [
        "Traversing",
        "Rite",
        "Terms_of_agreement",
        "Similarity",
        "Execution",
        "Causation"
    ],
    "Apart from the @Inject annotation, there's another way to tell Dagger how to provide an instance of a class: the information inside Dagger modules.": [
        "Instance",
        "Information",
        "Increment",
        "Supply",
        "Telling",
        "Existence"
    ],
    "A Dagger module is a class that is annotated with @Module.": [],
    "There, you can define dependencies with the @Provides annotation.": [
        "Locative_relation",
        "Reliance",
        "Supply",
        "Capability",
        "Communicate_categorization"
    ],
    "Modules are a way to semantically encapsulate information on how to provide objects.": [
        "Supply",
        "Information",
        "Execution"
    ],
    "As you can see, you called the class NetworkModule to group the logic of providing objects related to networking.": [
        "Capability",
        "Cognitive_connection",
        "Supply",
        "Execution",
        "Grasp"
    ],
    "If the application expands, you can also add how to provide an OkHttpClient here, or how to configure Gson or Moshi.": [
        "Using",
        "Cause_expansion",
        "Locative_relation",
        "Capability",
        "Supply"
    ],
    "The dependencies of a @Provides method are the parameters of that method.": [
        "Reliance",
        "Execution",
        "Terms_of_agreement",
        "Supply"
    ],
    "For the previous method, LoginRetrofitService can be provided with no dependencies because the method has no parameters.": [
        "Time_vector",
        "Execution",
        "Quantity",
        "Reliance",
        "Terms_of_agreement",
        "Likelihood",
        "Inclusion",
        "Supply"
    ],
    "If you had declared an OkHttpClient as a parameter, Dagger would need to provide an OkHttpClient instance from the graph to satisfy the dependencies of LoginRetrofitService.": [
        "Terms_of_agreement",
        "Instance",
        "Reliance",
        "Experiencer_obj",
        "Supply",
        "Required_event"
    ],
    "In order for the Dagger graph to know about this module, you have to add it to the @Component interface as follows:": [
        "Certainty",
        "Ingredients",
        "Relative_time",
        "Being_obligated"
    ],
    "The recommended way to add types to the Dagger graph is by using constructor injection ( i.e. with the @Inject annotation on the constructor of the class ).": [
        "Using"
    ],
    "Sometimes, this is not possible and you have to use Dagger modules.": [
        "Using",
        "Likelihood",
        "Being_obligated",
        "Frequency"
    ],
    "One example is when you want Dagger to use the result of a computation to determine how to create an instance of an object.": [
        "Instance",
        "Temporal_collocation",
        "Instance",
        "Cardinal_numbers",
        "Intentionally_create",
        "Coming_to_believe",
        "Causation",
        "Using",
        "Desiring"
    ],
    "Whenever it has to provide an instance of that type, Dagger runs the code inside the @Provides method.": [
        "Instance",
        "Execution",
        "Supply",
        "Required_event",
        "Execution",
        "Supply"
    ],
    "This is how the Dagger graph in the example looks right now:": [
        "Instance",
        "Correctness",
        "Temporal_collocation",
        "Scrutiny"
    ],
    "Representation of the graph with LoginActivity being injected by Dagger": [
        "Communicate_categorization"
    ],
    "The entry point to the graph is LoginActivity.": [
        "Execution",
        "Adducing"
    ],
    "Because LoginActivity injects LoginViewModel, Dagger builds a graph that knows how to provide an instance of LoginViewModel, and recursively, of its dependencies.": [
        "Instance",
        "Reliance",
        "Building",
        "Supply",
        "Awareness"
    ],
    "Dagger knows how to do this because of the @Inject annotation on the classes' constructor.": [
        "Categorization",
        "Intentionally_act",
        "Causation",
        "Awareness"
    ],
    "Inside the ApplicationComponent generated by Dagger, there's a factory-type method to get instances of all the classes it knows how to provide.": [
        "Instance",
        "Quantity",
        "Creating",
        "Existence",
        "Supply",
        "Awareness",
        "Execution",
        "Execution"
    ],
    "In this example, Dagger delegates to the NetworkModule included in ApplicationComponent to get an instance of LoginRetrofitService.": [
        "Instance",
        "Instance",
        "Inclusion",
        "Getting"
    ],
    "Scopes were mentioned on the Dagger basics page as a way to have a unique instance of a type in a component.": [
        "Scope",
        "Contacting",
        "Instance",
        "Ingredients",
        "Idiosyncrasy",
        "Text_creation"
    ],
    "This is what is meant by scoping a type to the component's lifecycle.": [
        "Ingredients",
        "Evidence"
    ],
    "Because you might want to use UserRepository in other features of the app and might not want to create a new object every time you need it, you can designate it as a unique instance for the whole app.": [
        "Frequency",
        "Likelihood",
        "Increment",
        "Age",
        "Required_event",
        "Instance",
        "Idiosyncrasy",
        "Ranked_expectation",
        "Possession",
        "Capability",
        "Intentionally_create",
        "Measure_duration",
        "Using",
        "Appointing"
    ],
    "It is the same for LoginRetrofitService: it can be expensive to create, and you also want a unique instance of that object to be reused.": [
        "Identicality",
        "Instance",
        "Idiosyncrasy",
        "Expensiveness",
        "Capability",
        "Intentionally_create",
        "Desiring"
    ],
    "Creating an instance of UserRemoteDataSource is not that expensive, so scoping it to the component's lifecycle is not necessary.": [
        "Instance",
        "Expensiveness",
        "Being_necessary",
        "Intentionally_create",
        "Ingredients"
    ],
    "@Singleton is the only scope annotation that comes with the javax.inject package.": [
        "Scope",
        "Sole_instance",
        "Execution",
        "Execution"
    ],
    "You can use it to annotate ApplicationComponent and the objects you want to reuse across the whole application.": [
        "Using",
        "Ranked_expectation",
        "Capability",
        "Possession",
        "Using"
    ],
    "Take care not to introduce memory leaks when applying scopes to objects.": [
        "Remembering_experience",
        "Temporal_collocation",
        "Scope",
        "Conquering",
        "Using"
    ],
    "As long as the scoped component is in memory, the created object is in memory too.": [
        "Ingredients",
        "Sufficiency",
        "Intentionally_create",
        "Remembering_experience",
        "Desiring"
    ],
    "Because ApplicationComponent is created when the app is launched ( in the application class ), it is destroyed when the app gets destroyed.": [
        "Temporal_collocation",
        "Activity_start",
        "Using",
        "Execution",
        "Killing",
        "Intentionally_create"
    ],
    "Thus, the unique instance of UserRepository always remains in memory until the application is destroyed.": [
        "Instance",
        "Remembering_experience",
        "Using",
        "Idiosyncrasy",
        "Remainder",
        "Killing",
        "Frequency"
    ],
    "If your login flow ( managed by a single LoginActivity ) consists of multiple fragments, you should reuse the same instance of LoginViewModel in all fragments.": [
        "Fluidic_motion",
        "Instance",
        "Part_piece",
        "Sole_instance",
        "Quantity",
        "Identicality",
        "Quantity",
        "Being_obligated",
        "Operating_a_system"
    ],
    "@Singleton can not annotate LoginViewModel to reuse the instance for the following reasons:": [
        "Instance",
        "Causation",
        "Relative_time",
        "Capability"
    ],
    "The instance of LoginViewModel would persist in memory after the flow has finished.": [
        "Instance",
        "Fluidic_motion",
        "Process_completed_state",
        "Process_continue",
        "Remembering_experience"
    ],
    "You want a different instance of LoginViewModel for each login flow.": [
        "Fluidic_motion",
        "Similarity",
        "Instance",
        "Desiring"
    ],
    "For example, if the user logs out, you want a different instance of LoginViewModel, rather than the same instance as when the user logged in for the first time.": [
        "Instance",
        "Instance",
        "Temporal_collocation",
        "Similarity",
        "Identicality",
        "Measure_duration",
        "Ordinal_numbers",
        "Locative_relation",
        "Possession"
    ],
    "To scope LoginViewModel to the lifecycle of LoginActivity you need to create a new component ( a new subgraph ) for the login flow and a new scope.": [
        "Scope",
        "Fluidic_motion",
        "Required_event",
        "Ingredients",
        "Age",
        "Intentionally_create"
    ],
    "Let's create a graph specific to the login flow.": [
        "Fluidic_motion",
        "Intentionally_create",
        "Grant_permission"
    ],
    "Now, LoginActivity should get injections from LoginComponent because it has a login-specific configuration.": [
        "Temporal_collocation",
        "Being_obligated",
        "Possession",
        "Execution"
    ],
    "This removes the responsibility to inject LoginActivity from the ApplicationComponent class.": [
        "Being_obligated",
        "Removing"
    ],
    "LoginComponent must be able to access the objects from ApplicationComponent because LoginViewModel depends on UserRepository.": [
        "Being_obligated",
        "Capability"
    ],
    "The way to tell Dagger that you want a new component to use part of another component is with Dagger subcomponents.": [
        "Ingredients",
        "Age",
        "Increment",
        "Part_whole",
        "Using",
        "Possession",
        "Telling",
        "Execution"
    ],
    "The new component must be a subcomponent of the component containing shared resources.": [
        "Ingredients",
        "Age",
        "Inclusion",
        "Being_obligated"
    ],
    "Subcomponents are components that inherit and extend the object graph of a parent component.": [
        "Ingredients",
        "Kinship",
        "Ingredients",
        "Expansion"
    ],
    "Thus, all objects provided in the parent component are provided in the subcomponent too.": [
        "Kinship",
        "Sufficiency",
        "Quantity",
        "Ingredients",
        "Supply"
    ],
    "In this way, an object from a subcomponent can depend on an object provided by the parent component.": [
        "Kinship",
        "Ingredients",
        "Capability",
        "Supply"
    ],
    "To create instances of subcomponents, you need an instance of the parent component.": [
        "Kinship",
        "Required_event",
        "Ingredients",
        "Instance",
        "Intentionally_create",
        "Instance"
    ],
    "Therefore, the objects provided by the parent component to the subcomponent are still scoped to the parent component.": [
        "Kinship",
        "Ingredients",
        "Supply",
        "Continued_state_of_affairs"
    ],
    "In the example, you must define LoginComponent as a subcomponent of ApplicationComponent.": [
        "Instance",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "To do this, annotate LoginComponent with @Subcomponent:": [
        "Intentionally_act"
    ],
    "You also must define a subcomponent factory inside LoginComponent so that ApplicationComponent knows how to create instances of LoginComponent.": [
        "Part_inner_outer",
        "Locale_by_use",
        "Instance",
        "Awareness",
        "Intentionally_create",
        "Communicate_categorization",
        "Being_obligated"
    ],
    "To tell Dagger that LoginComponent is a subcomponent of ApplicationComponent, you have to indicate it by:": [
        "Sign",
        "Being_obligated",
        "Telling"
    ],
    "Creating a new Dagger module ( e.g. SubcomponentsModule ) passing the subcomponent's class to the subcomponents attribute of the annotation.": [
        "Age",
        "Traversing",
        "Creating"
    ],
    "Adding the new module ( i.e. SubcomponentsModule ) to ApplicationComponent:": [
        "Age"
    ],
    "Note that ApplicationComponent doesn't need to inject LoginActivity anymore because that responsibility now belongs to LoginComponent, so you can remove the inject ( ) method from ApplicationComponent.": [
        "Being_obligated",
        "Execution",
        "Intentionally_act",
        "Temporal_collocation",
        "Capability",
        "Required_event",
        "Removing",
        "Possession"
    ],
    "Consumers of ApplicationComponent need to know how to create instances of LoginComponent.": [
        "Instance",
        "Intentionally_create",
        "Certainty",
        "Needing"
    ],
    "The parent component must add a method in its interface to let consumers create instances of the subcomponent out of an instance of the parent component:": [
        "Kinship",
        "Execution",
        "Ingredients",
        "Instance",
        "Instance",
        "Intentionally_create",
        "Partitive",
        "Grant_permission",
        "Being_obligated"
    ],
    "Expose the factory that creates instances of LoginComponentin the interface:": [
        "Locale_by_use",
        "Instance",
        "Creating",
        "Reveal_secret"
    ],
    "If you build the project, you can create instances of both ApplicationComponent and LoginComponent.": [
        "Project",
        "Instance",
        "Quantity",
        "Building",
        "Capability",
        "Intentionally_create"
    ],
    "ApplicationComponent is attached to the lifecycle of the application because you want to use the same instance of the graph as long as the application is in memory.": [
        "Using",
        "Instance",
        "Remembering_experience",
        "Identicality",
        "Desiring",
        "Being_attached",
        "Using",
        "Possession"
    ],
    "What's the lifecycle of LoginComponent ?": [],
    "One of the reasons why you needed LoginComponent is because you needed to share the same instance of the LoginViewModel between Login-related fragments.": [
        "Causation",
        "Reason",
        "Instance",
        "Part_piece",
        "Being_necessary",
        "Identicality",
        "Cardinal_numbers"
    ],
    "But also, you want different instances of LoginViewModel whenever there's a new login flow.": [
        "Similarity",
        "Fluidic_motion",
        "Age",
        "Instance",
        "Desiring",
        "Existence"
    ],
    "LoginActivity is the right lifetime for LoginComponent: for every new activity, you need a new instance of LoginComponent and fragments that can use that instance of LoginComponent.": [
        "Frequency",
        "Intentionally_act",
        "Part_piece",
        "Morality_evaluation",
        "Age",
        "Required_event",
        "Instance",
        "Capability",
        "Using"
    ],
    "Because LoginComponent is attached to the LoginActivity lifecycle, you have to keep a reference to the component in the activity in the same way you kept the reference to the applicationComponent in the application class.": [
        "Ingredients",
        "Intentionally_act",
        "Using",
        "Identicality",
        "Being_attached",
        "Activity_ongoing",
        "Activity_ongoing",
        "Being_obligated"
    ],
    "That way, fragments can access it.": [
        "Execution",
        "Part_piece",
        "Capability"
    ],
    "Notice that the variable loginComponent is not annotated with @Inject because you're not expecting that variable to be provided by Dagger.": [
        "Supply",
        "Expectation",
        "Becoming_aware"
    ],
    "You can use the ApplicationComponent to get a reference to LoginComponent and then inject LoginActivity as follows:": [
        "Temporal_collocation",
        "Relative_time",
        "Capability",
        "Execution",
        "Using"
    ],
    "LoginComponent is created in the activity's onCreate ( ) method, and it'll get implicitly destroyed when the activity gets destroyed.": [
        "Intentionally_act",
        "Execution",
        "Temporal_collocation",
        "Execution",
        "Execution",
        "Killing",
        "Intentionally_create"
    ],
    "The LoginComponent must always provide the same instance of LoginViewModel each time it's requested.": [
        "Instance",
        "Identicality",
        "Execution",
        "Frequency",
        "Being_obligated",
        "Measure_duration",
        "Supply"
    ],
    "You can ensure this by creating a custom annotation scope and annotating both LoginComponent and LoginViewModel with it.": [
        "Custom",
        "Scope",
        "Quantity",
        "Capability",
        "Intentionally_create"
    ],
    "Note that you can not use the @Singleton annotation because it's already been used by the parent component and that'd make the object an application singleton ( unique instance for the whole app ).": [
        "Time_vector",
        "Kinship",
        "Using",
        "Instance",
        "Ingredients",
        "Idiosyncrasy",
        "Ranked_expectation",
        "Capability",
        "Using",
        "Causation",
        "Using"
    ],
    "You need to create a different annotation scope.": [
        "Similarity",
        "Scope",
        "Required_event",
        "Intentionally_create"
    ],
    "In this case, you could have called this scope @LoginScope but it's not a good practice.": [
        "Instance",
        "Scope",
        "Practice",
        "Relational_quantity",
        "Capability",
        "Execution"
    ],
    "The scope annotation's name should not be explicit to the purpose it fulfills.": [
        "Scope",
        "Candidness",
        "Being_obligated"
    ],
    "Instead, it should be named depending on its lifetime because annotations can be reused by sibling components such as RegistrationComponent and SettingsComponent.": [
        "Likelihood",
        "Appointing",
        "Being_obligated",
        "Ingredients"
    ],
    "That's why you should call it @ActivityScope instead of @LoginScope.": [
        "Reason",
        "Being_obligated",
        "Execution"
    ],
    "Now, if you had two fragments that need LoginViewModel, both of them are provided with the same instance.": [
        "Temporal_collocation",
        "Part_piece",
        "Have_as_requirement",
        "Instance",
        "Being_obligated",
        "Cardinal_numbers",
        "Identicality",
        "Quantity",
        "Supply"
    ],
    "For example, if you have a LoginUsernameFragment and a LoginPasswordFragment they need to get injected by the LoginComponent:": [
        "Instance",
        "Required_event",
        "Execution"
    ],
    "The components access the instance of the component that lives in the LoginActivity object.": [
        "Ingredients",
        "Having_or_lacking_access",
        "Instance",
        "Ingredients"
    ],
    "Example code for LoginUserNameFragment appears in the following code snippet:": [
        "Instance",
        "Relative_time",
        "Part_piece",
        "Coming_to_be"
    ],
    "And the same for LoginPasswordFragment:": [
        "Identicality"
    ],
    "Figure 3 shows how the Dagger graph looks with the new subcomponent.": [
        "Cardinal_numbers",
        "Age",
        "Scrutiny",
        "Evidence"
    ],
    "The classes with a white dot ( UserRepository, LoginRetrofitService, and LoginViewModel ) are the ones that have a unique instance scoped to their respective components.": [
        "Clothing",
        "Color",
        "Instance",
        "Idiosyncrasy",
        "Ingredients"
    ],
    "Representation of the graph you built for the Android app example": [
        "Instance",
        "Building",
        "Communicate_categorization"
    ],
    "Let's break down the parts of the graph:": [
        "Cause_to_fragment",
        "Part_whole"
    ],
    "The NetworkModule ( and therefore LoginRetrofitService ) is included in ApplicationComponent because you specified it in the component.": [
        "Ingredients",
        "Inclusion"
    ],
    "UserRepository remains in ApplicationComponent because it's scoped to the ApplicationComponent.": [
        "Remainder"
    ],
    "If the project grows, you want to share the same instance across different features ( e.g. Registration ).": [
        "Project",
        "Instance",
        "Identicality",
        "Similarity",
        "Change_position_on_a_scale",
        "Desiring"
    ],
    "Because UserRepository is part of ApplicationComponent, its dependencies ( i.e. UserLocalDataSource and UserRemoteDataSource ) need to be in this component too in order to be able to provide instances of UserRepository.": [
        "Part_whole",
        "Reliance",
        "Ingredients",
        "Sufficiency",
        "Instance",
        "Supply",
        "Required_event",
        "Capability"
    ],
    "LoginViewModel is included in LoginComponent because it's only required by the classes injected by LoginComponent.": [
        "Sole_instance",
        "Filling",
        "Being_necessary",
        "Inclusion"
    ],
    "LoginViewModel is not included in ApplicationComponent because no dependency in ApplicationComponent needs LoginViewModel.": [
        "Quantity",
        "Reliance",
        "Required_event",
        "Inclusion"
    ],
    "Similarly, if you hadn't had scoped UserRepository to ApplicationComponent, Dagger would automatically have included UserRepository and its dependencies as part of LoginComponent because that is currently the only place UserRepository is used.": [
        "Reliance",
        "Temporal_collocation",
        "Locale",
        "Sole_instance",
        "Part_whole",
        "Using",
        "Inclusion"
    ],
    "Apart from scoping objects to a different lifecycle, creating subcomponents is a good practice to encapsulate different parts of your application from each other.": [
        "Using",
        "Increment",
        "Similarity",
        "Intentionally_create",
        "Relational_quantity",
        "Part_whole",
        "Practice"
    ],
    "Structuring your app to create different Dagger subgraphs depending on the flow of your app helps towards a more performant and scalable application in terms of memory and startup time.": [
        "Similarity",
        "Fluidic_motion",
        "Simple_name",
        "Remembering_experience",
        "Measure_duration",
        "Intentionally_create",
        "Increment",
        "Using",
        "Assistance"
    ],
    "When building the Dagger graph for your application:": [
        "Temporal_collocation",
        "Using",
        "Building"
    ],
    "When you create a component, you should consider what element is responsible for the lifetime of that component.": [
        "Temporal_collocation",
        "Ingredients",
        "Ingredients",
        "Being_obligated",
        "Intentionally_create",
        "Categorization"
    ],
    "In this case, the application class was in charge of ApplicationComponent and LoginActivity in charge of LoginComponent.": [
        "Instance",
        "Using",
        "Execution"
    ],
    "Use scoping only when it makes sense.": [
        "Sole_instance",
        "Temporal_collocation",
        "Sensation",
        "Causation"
    ],
    "Overusing scoping can have a negative effect on your app's runtime performance: the object is in memory as long as the component is in memory and getting a scoped object is more expensive.": [
        "Remembering_experience",
        "Ingredients",
        "Performing_arts",
        "Expensiveness",
        "Increment",
        "Capability",
        "Execution",
        "Desiring",
        "Objective_influence"
    ],
    "When Dagger provides the object, it uses DoubleCheck locking instead of a factory-type provider.": [
        "Temporal_collocation",
        "Using",
        "Supply",
        "Hair_configuration"
    ],
    "One of the benefits of using dependency injection frameworks like Dagger is that it makes testing your code easier.": [
        "Reliance",
        "Using",
        "Operational_testing",
        "Causation",
        "Cardinal_numbers"
    ],
    "You don't have to use Dagger for unit tests.": [
        "Operational_testing",
        "Intentionally_act",
        "Being_obligated",
        "Using"
    ],
    "When testing a class that uses constructor injection, you don't need to use Dagger to instantiate that class.": [
        "Intentionally_act",
        "Using",
        "Operational_testing",
        "Temporal_collocation",
        "Using",
        "Required_event"
    ],
    "You can directly call its constructor passing in fake or mock dependencies directly just as you would if they weren't annotated.": [
        "Reliance",
        "Practice",
        "Capability",
        "Artificiality",
        "Execution"
    ],
    "For example, when testing LoginViewModel:": [
        "Instance",
        "Temporal_collocation",
        "Operational_testing"
    ],
    "For integration tests, a good practice is to create a TestApplicationComponent meant for testing.": [
        "Operational_testing",
        "Practice",
        "Operational_testing",
        "Relational_quantity",
        "Evidence",
        "Intentionally_create"
    ],
    "Production and testing use a different component configuration.": [
        "Manufacturing",
        "Operational_testing",
        "Ingredients",
        "Similarity",
        "Using"
    ],
    "This requires more up-front design of the modules in your application.": [
        "Increment",
        "Using",
        "Coming_up_with",
        "Have_as_requirement"
    ],
    "The testing component extends the production component and installs a different set of modules.": [
        "Operational_testing",
        "Intentionally_create",
        "Similarity",
        "Expansion",
        "Execution",
        "Installing",
        "Ingredients"
    ],
    "FakeNetworkModule has a fake implementation of the original NetworkModule.": [
        "Artificiality",
        "Execute_plan",
        "Inclusion"
    ],
    "There you can provide fake instances or mocks of whatever you want to replace.": [
        "Existence",
        "Artificiality",
        "Capability",
        "Possession",
        "Replacing",
        "Judgment_communication",
        "Instance",
        "Supply"
    ],
    "In your integration or end-to-end tests, you'd use a TestApplication that creates the TestApplicationComponent instead of an ApplicationComponent.": [
        "Operational_testing",
        "Creating",
        "Using"
    ],
    "Then, this test application is used in a custom TestRunner that you'll use to run instrumentation tests.": [
        "Temporal_collocation",
        "Operational_testing",
        "Custom",
        "Operational_testing",
        "Execution",
        "Using",
        "Using",
        "Using"
    ],
    "For more information about this, check out the Using Dagger in your Android app codelab.": [
        "Inspecting",
        "Using",
        "Information",
        "Increment"
    ],
    "Dagger modules are a way to encapsulate how to provide objects in a semantic way.": [
        "Supply",
        "Execution"
    ],
    "You can include modules in components but you can also include modules inside other modules.": [
        "Ingredients",
        "Increment",
        "Capability",
        "Inclusion"
    ],
    "This is powerful, but can be easily misused.": [
        "Likelihood"
    ],
    "Once a module has been added to either a component or another module, it's already in the Dagger graph ; Dagger can provide those objects in that component.": [
        "Ingredients",
        "Increment",
        "Frequency",
        "Time_vector",
        "Capability",
        "Supply"
    ],
    "Before adding a module, check if that module is part of the Dagger graph already by checking if it's already added to the component or by compiling the project and seeing if Dagger can find the required dependencies for that module.": [
        "Ingredients",
        "Project",
        "Being_necessary",
        "Membership",
        "Capability",
        "Reliance",
        "Locating",
        "Perception_experience",
        "Inspecting",
        "Time_vector"
    ],
    "Good practice dictates that modules should only be declared once in a component ( outside of specific advanced Dagger use cases ).": [
        "Practice",
        "Sole_instance",
        "Ingredients",
        "Change_position_on_a_scale",
        "Instance",
        "Desirability",
        "Being_obligated",
        "Frequency"
    ],
    "Let's say you have your graph configured in this way.": [
        "Grant_permission"
    ],
    "ApplicationComponent includes Module1 and Module2 and Module1 includes ModuleX.": [
        "Inclusion"
    ],
    "If now Module2 depends on classes provided by ModuleX.": [
        "Temporal_collocation",
        "Supply"
    ],
    "A bad practice is including ModuleX in Module2 because ModuleX is included twice in the graph as seen in the following code snippet:": [
        "Practice",
        "Relative_time",
        "Desirability",
        "Part_piece",
        "Inclusion",
        "Event_instance",
        "Grasp",
        "Inclusion"
    ],
    "Instead, you should do one of the following:": [
        "Being_obligated",
        "Cardinal_numbers",
        "Intentionally_act"
    ],
    "Not refactoring in this way results in a lot of modules including each other without a clear sense of organization and making it more difficult to see where each dependency is coming from.": [
        "Increment",
        "Organization",
        "Reliance",
        "Obviousness",
        "Increment",
        "Difficulty",
        "Inclusion",
        "Sensation",
        "Execution",
        "Locative_relation",
        "Quantity",
        "Perception_experience",
        "Execution",
        "Causation"
    ],
    "Good practice ( Option 1 ): ModuleX is declared once in the Dagger graph.": [
        "Practice",
        "Possibilities",
        "Desirability",
        "Frequency"
    ],
    "Good practice ( Option 2 ): Common dependencies from Module1 and Module2 in ModuleX are extracted out to a new module named ModuleXCommon that is included in the component.": [
        "Practice",
        "Possibilities",
        "Reliance",
        "Ingredients",
        "Desirability",
        "Age",
        "Inclusion",
        "Locative_relation",
        "Removing"
    ],
    "Then two other modules named ModuleXWithModule1Dependencies and ModuleXWithModule2Dependencies are created with the dependencies that are specific to each module.": [
        "Temporal_collocation",
        "Reliance",
        "Increment",
        "Cardinal_numbers",
        "Appointing",
        "Intentionally_create"
    ],
    "All modules are declared once in the Dagger graph.": [
        "Quantity",
        "Frequency"
    ],
    "Assisted injection is a DI pattern that is used to construct an object where some parameters may be provided by the DI framework and others must be passed in at creation time by the user.": [
        "Terms_of_agreement",
        "Increment",
        "Intentionally_create",
        "Measure_duration",
        "Assistance",
        "Pattern",
        "Relational_quantity",
        "Likelihood",
        "Locative_relation",
        "Being_obligated",
        "Supply",
        "Building",
        "Using",
        "Traversing"
    ],
    "In Android, this pattern is common in details screens where the id of the element to show is only known at runtime, not at compile time when Dagger generates the DI graph.": [
        "Pattern",
        "Ingredients",
        "Reasoning",
        "Sole_instance",
        "Temporal_collocation",
        "Measure_duration",
        "Creating",
        "Locative_relation",
        "Awareness"
    ],
    "To learn more about assisted injection with Dagger, see the Dagger documentation.": [
        "Education_teaching",
        "Assistance",
        "Grasp",
        "Increment"
    ],
    "If you haven't already, review the best practices section.": [
        "Businesses",
        "Part_whole",
        "Desirability",
        "Time_vector"
    ],
    "To see how to use Dagger in an Android app, see the Using Dagger in an Android app codelab.": [
        "Using",
        "Using",
        "Grasp"
    ],
    "Use constructor injection with @Inject to add types to the Dagger graph whenever it's possible.": [
        "Likelihood"
    ],
    "When it's not: Use @Binds to tell Dagger which implementation an interface should have.": [
        "Temporal_collocation",
        "Attaching",
        "Being_obligated",
        "Telling",
        "Using"
    ],
    "Use @Provides to tell Dagger how to provide classes that your project doesn't own.": [
        "Project",
        "Supply",
        "Intentionally_act",
        "Supply",
        "Possession",
        "Telling"
    ],
    "Use @Binds to tell Dagger which implementation an interface should have.": [
        "Being_obligated",
        "Telling",
        "Attaching",
        "Using"
    ],
    "You should only declare modules once in a component.": [
        "Sole_instance",
        "Ingredients",
        "Being_obligated",
        "Frequency"
    ],
    "Name the scope annotations depending on the lifetime where the annotation is used.": [
        "Appointing",
        "Scope",
        "Using",
        "Locative_relation"
    ],
    "Examples include @ApplicationScope, @LoggedUserScope, and @ActivityScope.": [],
    "Adding the new module ( i.e. SubcomponentsModule ) to ApplicationComponent: Kotlin Java Note that ApplicationComponent doesn't need to inject LoginActivity anymore because that responsibility now belongs to LoginComponent, so you can remove the inject ( ) method from ApplicationComponent.": [
        "Becoming_aware",
        "Being_obligated",
        "Execution",
        "Age",
        "Intentionally_act",
        "Temporal_collocation",
        "Capability",
        "Required_event",
        "Removing",
        "Possession"
    ],
    "Expose the factory that creates instances of LoginComponentin the interface: Kotlin Java": [
        "Locale_by_use",
        "Instance",
        "Creating",
        "Reveal_secret"
    ],
    "When a type is marked with a scope annotation, it can only be used by components that are annotated with the same scope.": [
        "Temporal_collocation",
        "Scope",
        "Sole_instance",
        "Ingredients",
        "Likelihood",
        "Identicality",
        "Using",
        "Sign"
    ],
    "When a component is marked with a scope annotation, it can only provide types with that annotation or types that have no annotation.": [
        "Temporal_collocation",
        "Ingredients",
        "Scope",
        "Sole_instance",
        "Quantity",
        "Sign",
        "Supply",
        "Capability"
    ],
    "A subcomponent can not use a scope annotation used by one of its parent components.": [
        "Scope",
        "Kinship",
        "Ingredients",
        "Cardinal_numbers",
        "Using",
        "Using",
        "Capability"
    ],
    "Refactor the modules and extract the common module out to the component.": [
        "Ingredients",
        "Removing"
    ],
    "Create a new module with the objects that both modules share and extract it out to the component.": [
        "Quantity",
        "Ingredients",
        "Age",
        "Removing",
        "Locative_relation",
        "Cause_to_start"
    ],
    "There may be a more elegant way to solve this, but the simplest and most reliable solution is to do two passes with javac -- once to run just your annotation processor, and the second to do everything it normally does.": [
        "Trust",
        "Natural_features",
        "Measure_duration",
        "Likelihood",
        "Increment",
        "Resolve_problem",
        "Cardinal_numbers",
        "Aesthetics",
        "Intentionally_act",
        "Execution",
        "Existence",
        "Frequency",
        "Execution",
        "Intentionally_act"
    ],
    "The javac LINK specifies two options which should help you out.": [
        "Cardinal_numbers",
        "Being_obligated",
        "Locative_relation",
        "Assistance",
        "Possibilities"
    ],
    "- proc: -LCB- none, only -RCB-": [],
    "Controls whether annotation processing and/or compilation is done.": [
        "Processing_materials",
        "Intentionally_act",
        "Prohibiting"
    ],
    "- proc: none means that compilation takes place without annotation processing.": [
        "Processing_materials",
        "Event",
        "Evidence"
    ],
    "- proc: only means that only annotation processing is done, without any subsequent compilation.": [
        "Sole_instance",
        "Processing_materials",
        "Relative_time",
        "Quantity",
        "Intentionally_act",
        "Evidence"
    ],
    "- processor class1 -LSB-, class2, class3 ... -RSB-": [],
    "Names of the annotation processors to run.": [
        "Execution"
    ],
    "This bypasses the default discovery process.": [
        "Becoming_aware",
        "Execution"
    ],
    "The first pass -LRB- to run only your own annotation processor -RRB- is": [
        "Natural_features",
        "Ordinal_numbers",
        "Execution",
        "Possession",
        "Sole_instance"
    ],
    "and the second pass -LRB- a regular build -RRB- is": [
        "Measure_duration",
        "Natural_features",
        "Building"
    ],
    "If you're using something like Ant or Maven, you should be able to update the build instructions to have two compiler passes with only a minimal amount of effort.": [
        "Expertise",
        "Natural_features",
        "Sole_instance",
        "Attempt",
        "Cardinal_numbers",
        "Quantity",
        "Education_teaching",
        "Building",
        "Using",
        "Possession",
        "Capability",
        "Being_obligated"
    ],
    "Edit: here's my attempt at Gradle instructions": [
        "Locative_relation",
        "Education_teaching",
        "Attempt"
    ],
    "I have no experience with Gradle, but it seems like you need to do something like this.": [
        "Quantity",
        "Expertise",
        "Intentionally_affect",
        "Required_event",
        "Appearance"
    ],
    "In your Gradle build script, you need to define the preprocessing task and add a dependency on your task to the javaCompile task.": [
        "Being_obligated",
        "Cause_change_of_position_on_a_scale",
        "Reliance",
        "Required_event",
        "Building",
        "Communicate_categorization"
    ],
    "New answer I have somehow missed that you are using kapt.": [
        "Communication_response",
        "Age",
        "Hit_or_miss",
        "Using"
    ],
    "Kapt can process your classes, even without full qualified name -LRB- which is remarkable -RRB- if you add this to your build.gradle:": [
        "Fullness",
        "Processing_materials",
        "Capability"
    ],
    "More info about this: LINK": [
        "Increment"
    ],
    "Previous answer can be useful is someone has the same issue with annotationProcessor -LRB- apt -RRB- in gradle.": [
        "Point_of_dispute",
        "Communication_response",
        "Relative_time",
        "Identicality",
        "Inclusion",
        "Capability"
    ],
    "Short answer: use fully qualified name for ActivityInjectorModule:": [
        "Communication_response",
        "Degree",
        "Duration_attribute"
    ],
    "Alternatively put both files in the same package.": [
        "Execution",
        "Quantity",
        "Identicality",
        "Causation"
    ],
    "Long answer: Dagger is an annotation processor, it runs before your code is compiled and -LRB- potentially -RRB- before your other annotation processor runs.": [
        "Duration_attribute",
        "Communication_response",
        "Increment",
        "Execution"
    ],
    "The sequence in which processors run is not defined.": [
        "Execution",
        "Sequence",
        "Communicate_categorization"
    ],
    "Dagger annotation processor will process the TypeElement annotated with @dagger.": [
        "Processing_materials"
    ],
    "Component and it will try to find all modules including the `` ActivityInjectorModule.class''.": [
        "Ingredients",
        "Quantity",
        "Inclusion",
        "Locating",
        "Attempt"
    ],
    "The thing is, ActivityInjectorModule might not have been generated yet.": [
        "Likelihood",
        "Creating"
    ],
    "Therefore `` ActivityInjectorModule'' will not have a package at this point.": [
        "Execution",
        "Locale"
    ],
    "Dagger will assume that ActivityInjectorModule resides in the same package as the Component class and will not add an import.": [
        "Execution",
        "Cause_change_of_position_on_a_scale",
        "Importing",
        "Identicality",
        "Adopt_selection",
        "Residence"
    ],
    "The usual workaround for this is to use full-qualified names for generated classes, if they are used by other annotation processors.": [
        "Creating",
        "Using",
        "Increment",
        "Using"
    ],
    "Sometimes it makes sense to move annotation processing to a difference gradle module, but I don't this that this is what you want.": [
        "Sensation",
        "Similarity",
        "Processing_materials",
        "Desiring",
        "Intentionally_act",
        "Causation",
        "Motion",
        "Frequency"
    ],
    "Solution:": [],
    "Explanation:": [],
    "Javac annotation processor uses rounds instead of defining processors order.": [
        "Ammunition",
        "Using",
        "Communicate_categorization"
    ],
    "So normally the simplified algorithm is like that:": [],
    "Now a bit about kapt.": [
        "Temporal_collocation",
        "Quantity"
    ],
    "Kapt LINK to run annotation processors.": [
        "Execution"
    ],
    "To make it possible, it runs kotlin compliler first to LINK and runs javac on them.": [
        "Ordinal_numbers",
        "Likelihood",
        "Execution",
        "Execution"
    ],
    "Currently kapt LINK, meaning it does not generate java stubs for kotlin classes, generated by annotation processors.": [
        "Temporal_collocation",
        "Causation",
        "Intentionally_act",
        "Creating",
        "Cause_to_start"
    ],
    "Note: javac still uses multiple rounds, it just can't pick up generated kotlin sources.": [
        "Ammunition",
        "Locative_relation",
        "Quantity",
        "Attributed_information",
        "Continued_state_of_affairs",
        "Creating",
        "Choosing",
        "Using",
        "Capability"
    ],
    "So, back to your question.": [
        "Observable_body_parts",
        "Point_of_dispute"
    ],
    "One possible option is to move your generated classes into a separate module like it's LINK.": [
        "Cognitive_connection",
        "Likelihood",
        "Creating",
        "Becoming_separated",
        "Cardinal_numbers",
        "Motion",
        "Possibilities"
    ],
    "But the easiest option is to generate java code directly and your generated java classes will be picked up by javac automatically, launching second round of annotation processing, where dagger will process them.": [
        "Creating",
        "Locative_relation",
        "Measure_duration",
        "Shapes",
        "Locative_relation",
        "Processing_materials",
        "Possibilities",
        "Shoot_projectiles",
        "Processing_materials",
        "Choosing",
        "Cause_to_start"
    ],
    "Just a few more notes:": [
        "Quantity",
        "Increment"
    ],
    "For instance, a Twitter API client may be built using a networking library such as Retrofit.": [
        "Instance",
        "Sounds",
        "Buildings",
        "Likelihood",
        "Building",
        "Using"
    ],
    "To use this library, you might also need to add parsing libraries such as Gson.": [
        "Buildings",
        "Buildings",
        "Likelihood",
        "Cause_change_of_position_on_a_scale",
        "Required_event",
        "Using"
    ],
    "In addition, classes that implement authentication or caching may require accessing shared preferences or other common storage, requiring instantiating them first and creating an inherent dependency chain.": [
        "Communication_response",
        "Gizmo",
        "Increment",
        "Storing",
        "Ordinal_numbers",
        "Reliance",
        "Intentionally_create",
        "Likelihood",
        "Needing",
        "Have_as_requirement"
    ],
    "If you're not familiar with Dependency Injection, watch this quick video.": [
        "Reliance",
        "Speed",
        "Expertise",
        "Perception_active"
    ],
    "Dagger 2 analyzes these dependencies for you and generates code to help wire them together.": [
        "Cardinal_numbers",
        "Reliance",
        "Collaboration",
        "Assistance",
        "Scrutiny",
        "Creating"
    ],
    "While there are other Java dependency injection frameworks, many of them suffered limitations in relying on XML, required validating dependency issues at run-time, or incurred performance penalties during startup.": [
        "Reliance",
        "Performing_arts",
        "Rewards_and_punishments",
        "Increment",
        "Quantity",
        "Reliance",
        "Existence",
        "Catastrophe",
        "Being_necessary"
    ],
    "Dagger 2 relies purely on using Java annotation processors and compile-time checks to analyze and verify dependencies.": [
        "Cardinal_numbers",
        "Reliance",
        "Reliance",
        "Scrutiny",
        "Verification",
        "Using"
    ],
    "It is considered to be one of the most efficient dependency injection frameworks built to date.": [
        "Reliance",
        "Continued_state_of_affairs",
        "Building",
        "Cardinal_numbers",
        "Categorization"
    ],
    "Advantages Here is a list of other advantages for using Dagger 2:": [
        "Locative_relation",
        "Cardinal_numbers",
        "Increment",
        "Using"
    ],
    "Simplifies access to shared instances.": [
        "Having_or_lacking_access",
        "Instance"
    ],
    "Just as the ButterKnife library makes it easier to define references to Views, event handlers, and resources, Dagger 2 provides a simple way to obtain references to shared instances.": [
        "Buildings",
        "Categorization",
        "Event",
        "Instance",
        "Getting",
        "Execution",
        "Communicate_categorization",
        "Supply"
    ],
    "For instance, once we declare in Dagger our singleton instances such as MyTwitterApiClient or SharedPreferences, we can declare fields with a simple @Inject annotation:": [
        "Instance",
        "Time_vector",
        "Instance",
        "Capability",
        "Fields"
    ],
    "Easy configuration of complex dependencies.": [
        "Reliance"
    ],
    "There is an implicit order in which your objects are often created.": [
        "Frequency",
        "Intentionally_create",
        "Existence"
    ],
    "Dagger 2 walks through the dependency graph and generates code that is both easy to understand and trace, while also saving you from writing the large amount of boilerplate code you would normally need to write by hand to obtain references and pass them to other objects as dependencies.": [
        "Cardinal_numbers",
        "Reliance",
        "Quantity",
        "Grasp",
        "Text_creation",
        "Observable_body_parts",
        "Reliance",
        "Creating",
        "Dimension",
        "Getting",
        "Increment",
        "Difficulty",
        "Quantity",
        "Process_end",
        "Self_motion",
        "Required_event"
    ],
    "It also helps simplify refactoring, since you can focus on what modules to build rather than focusing on the order in which they need to be created.": [
        "Capability",
        "Building",
        "Required_event",
        "Intentionally_create",
        "Place_weight_on",
        "Place_weight_on",
        "Assistance"
    ],
    "Easier unit and integration testing Because the dependency graph is created for us, we can easily swap out modules that make network responses and mock out this behavior.": [
        "Reliance",
        "Exchange",
        "Network",
        "Response",
        "Locative_relation",
        "Intentionally_create",
        "Causation",
        "Operational_testing",
        "Capability",
        "Practice",
        "Conduct"
    ],
    "Scoped instances Not only can you easily manage instances that can last the entire application lifecycle, you can also leverage Dagger 2 to define instances with shorter lifetimes ( i.e. bound to a user session, activity lifecycle, etc. ).": [
        "Relative_time",
        "Using",
        "Cardinal_numbers",
        "Attaching",
        "Intentionally_act",
        "Instance",
        "Communicate_categorization",
        "Ranked_expectation",
        "Sole_instance",
        "Capability",
        "Operating_a_system"
    ],
    "Setup Android Studio by default will not allow you to navigate to generated Dagger 2 code as legitimate classes because they are not normally added to the source path.": [
        "Creating",
        "Source_of_getting",
        "Building_subparts",
        "Cardinal_numbers",
        "Legality",
        "Grant_permission"
    ],
    "Adding the annotationProcessor plugin will add these files into the IDE classpath and enable you to have more visibility.": [
        "Increment"
    ],
    "Make sure to upgrade to the latest Gradle version to use the annotationProcessor syntax:": [
        "Relative_time",
        "Using",
        "Verification"
    ],
    "If you are using Kotlin, then you should use the following setup:": [
        "Relative_time",
        "Being_obligated",
        "Using",
        "Using",
        "Temporal_collocation"
    ],
    "Note that the compileOnly keyword refers to dependencies that are only needed at compilation.": [
        "Reliance",
        "Sole_instance",
        "Being_necessary"
    ],
    "Since Dagger 2 generates code that is used by your app at runtime, the implementation configuration should be used for the dagger libraries.": [
        "Execute_plan",
        "Buildings",
        "Using",
        "Being_obligated",
        "Creating"
    ],
    "The Dagger compiler generates code that is used to create the dependency graph of the classes defined in your source code.": [
        "Reliance",
        "Source_of_getting",
        "Intentionally_create",
        "Categorization",
        "Using",
        "Creating"
    ],
    "These classes are added to the IDE class path during compilation.": [],
    "The annotationProcessor keyword, which is understood by the Android Gradle plugin, does not add these classes to the class path, they are used only for annotation processing, which prevents accidentally referencing them.": [
        "Sole_instance",
        "Processing_materials",
        "Thwarting",
        "Intentionally_act",
        "Categorization",
        "Cause_change_of_position_on_a_scale",
        "Using"
    ],
    "The simplest example is to show how to centralize all your singleton creation with Dagger 2.": [
        "Quantity",
        "Cardinal_numbers",
        "Instance",
        "Intentionally_create",
        "Reasoning"
    ],
    "Suppose you weren't using any type of dependency injection framework and wrote code in your Twitter client similar to the following:": [
        "Reliance",
        "Sounds",
        "Opinion",
        "Quantity",
        "Similarity",
        "Using"
    ],
    "Declare your singletons You need to define what objects should be included as part of the dependency chain by creating a Dagger 2 module.": [
        "Reliance",
        "Cardinal_numbers",
        "Being_obligated",
        "Part_whole",
        "Intentionally_create",
        "Inclusion",
        "Communicate_categorization",
        "Have_as_requirement"
    ],
    "For instance, if we wish to make a single Retrofit instance tied to the application lifecycle and available to all our activities and fragments, we first need to make Dagger aware that a Retrofit instance can be provided.": [
        "Instance",
        "Using",
        "Quantity",
        "Part_piece",
        "Supply",
        "Sole_instance",
        "Finish_competition",
        "Intentionally_act",
        "Ordinal_numbers",
        "Required_event",
        "Likelihood",
        "Awareness",
        "Causation",
        "Desiring"
    ],
    "Because we wish to setup caching, we need an Application context.": [
        "Using",
        "Required_event",
        "Desiring"
    ],
    "Our first Dagger module, AppModule.java, will be used to provide this reference.": [
        "Ordinal_numbers",
        "Supply",
        "Using"
    ],
    "We will define a method annotated with @Provides that informs Dagger that this method is the constructor for the Application return type ( i.e., it is the method in charge of providing the instance of the Application class ):": [
        "Using",
        "Execution",
        "Instance",
        "Execution",
        "Supply",
        "Telling",
        "Supply",
        "Execution",
        "Communicate_categorization"
    ],
    "We create a class called NetModule.java and annotate it with @Module to signal to Dagger to search within the available methods for possible instance providers.": [
        "Likelihood",
        "Instance",
        "Execution",
        "Intentionally_create",
        "Scrutiny",
        "Communication",
        "Execution"
    ],
    "The methods that will actually expose available return types should also be annotated with the @Provides annotation.": [
        "Execution",
        "Supply",
        "Reveal_secret",
        "Execution",
        "Being_obligated"
    ],
    "The @Singleton annotation also signals to the Dagger compiler that the instance should be created only once in the application.": [
        "Instance",
        "Using",
        "Being_obligated",
        "Frequency",
        "Sole_instance",
        "Intentionally_create",
        "Gesture"
    ],
    "In the following example, we are specifying SharedPreferences, Gson, Cache, OkHttpClient, and Retrofit as the return types that can be used as part of the dependency list.": [
        "Instance",
        "Execution",
        "Reliance",
        "Relative_time",
        "Likelihood",
        "Part_whole",
        "Using"
    ],
    "Note that the method names ( i.e. provideGson ( ), provideRetrofit ( ), etc ) do not matter and can be named anything.": [
        "Execution",
        "Intentionally_act",
        "Likelihood"
    ],
    "The return type annotated with a @Provides annotation is used to associate this instantiation with any other modules of the same type.": [
        "Execution",
        "Collaboration",
        "Quantity",
        "Supply",
        "Increment",
        "Identicality",
        "Using"
    ],
    "The @Singleton annotation is used to declare to Dagger that the provided object is to be only initialized only once during the entire lifecycle of the Component which uses that Module.": [
        "Sole_instance",
        "Ingredients",
        "Supply",
        "Frequency",
        "Ranked_expectation",
        "Using",
        "Using"
    ],
    "A Retrofit instance depends both on a Gson and OkHttpClient instance, so we can define another method within the same class that takes these two types.": [
        "Instance",
        "Quantity",
        "Execution",
        "Increment",
        "Identicality",
        "Cardinal_numbers",
        "Taking_time",
        "Communicate_categorization",
        "Capability"
    ],
    "The @Provides annotation and these two parameters in the method will cause Dagger to recognize that there is a dependency on Gson and OkHttpClient to build a Retrofit instance.": [
        "Supply",
        "Execution",
        "Reliance",
        "Instance",
        "Cardinal_numbers",
        "Terms_of_agreement",
        "Building",
        "Existence",
        "Becoming_aware",
        "Causation"
    ],
    "Define injection targets Dagger provides a way for the fields in your activities, fragments, or services to be assigned references simply by annotating the fields with an @Inject annotation and calling an inject ( ) method.": [
        "Intentionally_act",
        "Part_piece",
        "Public_services",
        "Fields",
        "Execution",
        "Supply",
        "Execution"
    ],
    "Calling inject ( ) will cause Dagger 2 to locate the singletons in the dependency graph to try to find a matching return type.": [
        "Cardinal_numbers",
        "Reliance",
        "Execution",
        "Becoming_aware",
        "Attempt",
        "Locating",
        "Causation",
        "Execution"
    ],
    "If it finds one, it assigns the references to the respective fields.": [
        "Cardinal_numbers",
        "Fields",
        "Becoming_aware"
    ],
    "For instance, in the example below, it will attempt to find a provider that returns MyTwitterApiClient and a SharedPreferences type:": [
        "Instance",
        "Instance",
        "Execution",
        "Locating",
        "Attempt"
    ],
    "The injector class used in Dagger 2 is called a component.": [
        "Ingredients",
        "Using",
        "Execution"
    ],
    "It assigns references in our activities, services, or fragments to have access to singletons we earlier defined.": [
        "Public_services",
        "Part_piece",
        "Having_or_lacking_access",
        "Intentionally_act",
        "Relative_time",
        "Categorization"
    ],
    "We will need to annotate this class with a @Component annotation.": [
        "Ingredients",
        "Required_event"
    ],
    "Note that the activities, services, or fragments that are allowed to request the dependencies declared by the modules ( by means of the @Inject annotation ) should be declared in this class with individual inject ( ) methods:": [
        "Intentionally_act",
        "Public_services",
        "Part_piece",
        "Reliance",
        "People",
        "Execution",
        "Execution",
        "Execution",
        "Being_obligated",
        "Grant_permission"
    ],
    "Note that base classes are not sufficient as injection targets.": [
        "Locale_by_use",
        "Becoming_aware",
        "Sufficiency"
    ],
    "Dagger 2 relies on strongly typed classes, so you must specify explicitly which ones should be defined.": [
        "Cardinal_numbers",
        "Reliance",
        "Clothing",
        "Text_creation",
        "Being_obligated",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "( There are suggestions to workaround the issue, but the code to do so may be more complicated to trace than simply defining them. )": [
        "Point_of_dispute",
        "Increment",
        "Communicate_categorization",
        "Intentionally_act",
        "Likelihood",
        "Existence"
    ],
    "Code generation An important aspect of Dagger 2 is that the library generates code for classes annotated with the @Component interface.": [
        "Cardinal_numbers",
        "Buildings",
        "Ingredients",
        "Stage_of_progress",
        "Importance",
        "Distinctiveness",
        "Creating"
    ],
    "You can use a class prefixed with Dagger ( i.e. DaggerTwitterApiComponent.java ) that will be responsible for instantiating an instance of our dependency graph and using it to perform the injection work for fields annotated with @Inject.": [
        "Instance",
        "Reliance",
        "Working_on",
        "Capability",
        "Intentionally_act",
        "Fields",
        "Using",
        "Using"
    ],
    "Instantiating the component We should do all this work within a specialization of the Application class since these instances should be declared only once throughout the entire lifespan of the application:": [
        "Quantity",
        "Working_on",
        "Using",
        "Instance",
        "Using",
        "Ranked_expectation",
        "Being_obligated",
        "Intentionally_act",
        "Frequency",
        "Sole_instance",
        "Ingredients"
    ],
    "Make sure to rebuild the project ( in Android Studio, select Build > Rebuild Project ) if you can not reference the Dagger component.": [
        "Project",
        "Building_subparts",
        "Project",
        "Ingredients",
        "Capability",
        "Verification"
    ],
    "Because we are extending the default Application class with the class MyApp, we have to specify MyApp as the application name in the AndroidManifest.xml in order for it to be instantiated.": [
        "Using",
        "Being_obligated",
        "Expansion",
        "Using"
    ],
    "This way your app will launch MyApp to handle the initial instantiation.": [
        "Execution",
        "Version_sequence",
        "Shoot_projectiles",
        "Resolve_problem"
    ],
    "Within our activity, we simply need to get access to these components and call inject ( ).": [
        "Having_or_lacking_access",
        "Ingredients",
        "Execution",
        "Intentionally_act",
        "Execution",
        "Required_event"
    ],
    "If we need two different objects of the same return type, we can use the @Named qualifier annotation.": [
        "Execution",
        "Wearing",
        "Required_event",
        "Similarity",
        "Identicality",
        "Cardinal_numbers",
        "Using",
        "Capability"
    ],
    "You will define it both where you provide the singletons ( @Provides annotation ), and where you inject them ( @Inject annotations ):": [
        "Quantity",
        "Supply",
        "Locative_relation",
        "Supply",
        "Communicate_categorization"
    ],
    "Injection will also require these named annotations too:": [
        "Appointing",
        "Sufficiency",
        "Have_as_requirement"
    ],
    "@Named is a qualifier that is pre-defined by dagger, but you can create your own qualifier annotations as well:": [
        "Capability",
        "Possession",
        "Intentionally_create"
    ],
    "In Dagger 2, you can define how components should be encapsulated by defining custom scopes.": [
        "Cardinal_numbers",
        "Ingredients",
        "Custom",
        "Scope",
        "Being_obligated",
        "Communicate_categorization",
        "Communicate_categorization",
        "Capability"
    ],
    "For instance, you can create a scope that only lasts the duration of an activity or fragment lifecycle.": [
        "Instance",
        "Intentionally_act",
        "Part_piece",
        "Sole_instance",
        "Capability",
        "Duration_attribute",
        "Scope",
        "Intentionally_create"
    ],
    "You can create a scope that maps only to a user authenticated session.": [
        "Sole_instance",
        "Scope",
        "Intentionally_create",
        "Capability"
    ],
    "You can define any number of custom scope annotations in your application by declaring them as a public @interface:": [
        "Custom",
        "Scope",
        "Using",
        "Quantity",
        "Secrecy_status",
        "Quantity",
        "Communicate_categorization",
        "Capability"
    ],
    "Even though Dagger 2 does not rely on the annotation at runtime, keeping the RetentionPolicy at RUNTIME is useful in allowing you to inspect your modules later.": [
        "Cardinal_numbers",
        "Grant_permission",
        "Activity_ongoing",
        "Time_vector",
        "Reliance",
        "Inspecting",
        "Intentionally_act"
    ],
    "Dependent Components vs. Subcomponents Leveraging scopes allows us to create either dependent components or subcomponents.": [
        "Ingredients",
        "Scope",
        "Ingredients",
        "Grant_permission",
        "Intentionally_create"
    ],
    "The example above showed that we used the @Singleton annotation that lasted the entire lifecycle of the application.": [
        "Instance",
        "Using",
        "Ranked_expectation",
        "Using",
        "Duration_attribute",
        "Evidence"
    ],
    "We also relied on one major Dagger component.": [
        "Importance",
        "Ingredients",
        "Cardinal_numbers",
        "Reliance"
    ],
    "If we wish to have multiple components that do not need to remain in memory all the time ( i.e. components that are tied to the lifecycle of an activity or fragment, or even tied to when a user is signed-in ), we can create dependent components or subcomponents.": [
        "Have_as_requirement",
        "Remembering_experience",
        "Intentionally_act",
        "Part_piece",
        "Temporal_collocation",
        "Ingredients",
        "Quantity",
        "Frequency",
        "Capability",
        "Desiring",
        "Finish_competition",
        "Intentionally_create",
        "Intentionally_act",
        "Existence"
    ],
    "In either case, each provide a way of encapsulating your code.": [
        "Instance",
        "Execution",
        "Supply"
    ],
    "We'll see how to use both in the next section.": [
        "Quantity",
        "Part_whole",
        "Locative_relation",
        "Using",
        "Grasp"
    ],
    "There are several considerations when using these approaches:": [
        "Execution",
        "Quantity",
        "Temporal_collocation",
        "Cogitation",
        "Using",
        "Existence"
    ],
    "Dependent components require the parent component to explicitly list out what dependencies can be injected downstream, while subcomponents do not.": [
        "Kinship",
        "Reliance",
        "Ingredients",
        "Ingredients",
        "Likelihood",
        "Locative_relation",
        "Intentionally_act",
        "Have_as_requirement"
    ],
    "For parent components, you would need to expose to the downstream component by specifying the type and a method:": [
        "Kinship",
        "Execution",
        "Ingredients",
        "Ingredients",
        "Reveal_secret",
        "Required_event"
    ],
    "If you forget to add this line, you will likely see an error about an injection target missing.": [
        "Success_or_failure",
        "Remembering_information",
        "Cause_change_of_position_on_a_scale",
        "Likelihood",
        "Grasp"
    ],
    "Similar to how private/public variables are managed, using a parent component allows more explicit control and better encapsulation, but using subcomponents makes dependency injection easier to manage at the expense of less encapsulation.": [
        "Similarity",
        "Kinship",
        "Reliance",
        "Ingredients",
        "Candidness",
        "Increment",
        "Desirability",
        "Control",
        "Operating_a_system",
        "Using",
        "Expensiveness",
        "Operating_a_system",
        "Grant_permission",
        "Causation"
    ],
    "Two dependent components can not share the same scope.": [
        "Scope",
        "Ingredients",
        "Identicality",
        "Cardinal_numbers",
        "Capability"
    ],
    "For instance, two components can not both be scoped as @Singleton.": [
        "Instance",
        "Quantity",
        "Ingredients",
        "Cardinal_numbers",
        "Likelihood"
    ],
    "This restriction is imposed because of reasons described here.": [
        "Causation",
        "Locative_relation",
        "Communicate_categorization",
        "Causation"
    ],
    "Dependent components need to define their own scope.": [
        "Scope",
        "Ingredients",
        "Required_event",
        "Possession",
        "Communicate_categorization"
    ],
    "While Dagger 2 also enables the ability to create scoped instances, the responsibility rests on you to create and delete references that are consistent with the intended behavior.": [
        "Instance",
        "Being_obligated",
        "Compatibility",
        "Cardinal_numbers",
        "Conduct",
        "Intentionally_create",
        "Capability"
    ],
    "Dagger 2 does not know anything about the underlying implementation.": [
        "Execute_plan",
        "Intentionally_act",
        "Certainty"
    ],
    "See this Stack Overflow discussion for more details.": [
        "Increment",
        "Discussion",
        "Grasp"
    ],
    "For instance, if we wish to use a component created for the entire lifecycle of a user session signed into the application, we can define our own UserScope interface:": [
        "Instance",
        "Ingredients",
        "Using",
        "Ranked_expectation",
        "Capability",
        "Possession",
        "Using",
        "Communicate_categorization",
        "Intentionally_create",
        "Sign_agreement",
        "Desiring"
    ],
    "Next, we define the parent component:": [
        "Kinship",
        "Ingredients",
        "Communicate_categorization"
    ],
    "We can then define a child component:": [
        "Kinship",
        "Ingredients",
        "Temporal_collocation",
        "Capability",
        "Communicate_categorization"
    ],
    "Let's assume this GitHub module simply returns back an API interface to the GitHub API:": [
        "Observable_body_parts",
        "Adopt_selection",
        "Execution",
        "Grant_permission"
    ],
    "In order for this GitHubModule.java to get access to the Retrofit instance, we need explicitly define them in the upstream component.": [
        "Having_or_lacking_access",
        "Instance",
        "Required_event",
        "Ingredients",
        "Communicate_categorization",
        "Execution"
    ],
    "If the downstream modules will be performing the injection, they should also be removed from the upstream components too:": [
        "Ingredients",
        "Being_obligated",
        "Sufficiency",
        "Intentionally_act",
        "Removing"
    ],
    "The final step is to use the UserComponent to perform the instantiation.": [
        "Ordinal_numbers",
        "Intentionally_act",
        "Intentionally_act",
        "Using"
    ],
    "This time, we first need to build the AppComponent and pass it into the constructor of the DaggerUserComponent builder:": [
        "Measure_duration",
        "Ordinal_numbers",
        "Process_end",
        "Building",
        "Required_event"
    ],
    "See this example code for a working example.": [
        "Instance",
        "Being_employed",
        "Grasp"
    ],
    "Using subcomponents is another way to extend the object graph of a component.": [
        "Ingredients",
        "Using",
        "Increment",
        "Expansion",
        "Execution"
    ],
    "Like components with dependencies, subcomponents have their own life-cycle and can be garbage collected when all references to the subcomponent are gone, and have the same scope restrictions.": [
        "Reliance",
        "Gathering_up",
        "Temporal_collocation",
        "Scope",
        "Quantity",
        "Identicality",
        "Ingredients",
        "Possession",
        "Motion",
        "Capability"
    ],
    "One advantage in using this approach is that you do not need to define all the downstream components.": [
        "Execution",
        "Quantity",
        "Intentionally_act",
        "Ingredients",
        "Using",
        "Communicate_categorization",
        "Cardinal_numbers",
        "Required_event"
    ],
    "Another major difference is that subcomponents simply need to be declared in the parent component.": [
        "Similarity",
        "Kinship",
        "Importance",
        "Ingredients",
        "Increment",
        "Required_event"
    ],
    "Here's an example of using a subcomponent for an activity.": [
        "Locative_relation",
        "Instance",
        "Intentionally_act",
        "Using"
    ],
    "We annotate the class with a custom scope and the @Subcomponent annotation:": [
        "Custom",
        "Scope"
    ],
    "The module that will be used is defined below:": [
        "Using",
        "Communicate_categorization"
    ],
    "Finally, in the parent component, we will define a factory method with the return value of the component and the dependencies needed to instantiate it:": [
        "Kinship",
        "Locale_by_use",
        "Ingredients",
        "Reliance",
        "Execution",
        "Being_necessary",
        "Time_vector",
        "Execution",
        "Communicate_categorization"
    ],
    "In the above example, a new instance of the subcomponent will be created every time that the newMyActivitySubcomponent ( ) is called.": [
        "Instance",
        "Frequency",
        "Measure_duration",
        "Instance",
        "Age",
        "Execution",
        "Intentionally_create"
    ],
    "To use the submodule to inject an activity:": [
        "Intentionally_act",
        "Using"
    ],
    "Subcomponent Builders Available starting in v2 .7": [
        "Process_start"
    ],
    "Subcomponent builders allow the creator of the subcomponent to be de-coupled from the parent component, by removing the need to have a subcomponent factory method declared on that parent component.": [
        "Kinship",
        "Locale_by_use",
        "Execution",
        "Ingredients",
        "Have_as_requirement",
        "Removing",
        "Grant_permission"
    ],
    "The subcomponent is declared as an inner interface in the subcomponent interface and it must include a build ( ) method which the return type matching the subcomponent.": [
        "Execution",
        "Evaluative_comparison",
        "Part_inner_outer",
        "Being_obligated",
        "Execution",
        "Building",
        "Inclusion"
    ],
    "It's convenient to declare a base interface with this method, like SubcomponentBuilder above.": [
        "Locale_by_use",
        "Execution"
    ],
    "This new builder must be added to the parent component graph using a `` binder'' module with a `` subcomponents'' parameter:": [
        "Kinship",
        "Ingredients",
        "Terms_of_agreement",
        "Age",
        "Being_obligated",
        "Using"
    ],
    "Once the builders are made available in the component graph, the activity can use it to create its subcomponent:": [
        "Ingredients",
        "Intentionally_act",
        "Frequency",
        "Capability",
        "Causation",
        "Intentionally_create",
        "Using"
    ],
    "ProGuard Dagger 2 should work out of box without ProGuard, but if you start seeing library class dagger.producers.monitoring.internal.Monitors $ 1 extends or implements program class javax.inject.Provider, make sure your Gradle configuration uses the annotationProcessor declaration instead of provided.": [
        "Containers",
        "Buildings",
        "Gizmo",
        "Supply",
        "Project",
        "Partitive",
        "Being_obligated",
        "Verification",
        "Using",
        "Working_on",
        "Temporal_subregion",
        "Perception_experience"
    ],
    "If you are upgrading Dagger 2 versions ( i.e. from v2 .0 to v2 .5 ), some of the generated code has changed.": [
        "Cardinal_numbers",
        "Creating",
        "Relational_quantity",
        "Undergo_change"
    ],
    "If you are incorporating Dagger code that was generated with older versions, you may see MemberInjector and actual and former argument lists different in length errors.": [
        "Actually_occurring_entity",
        "Time_vector",
        "Similarity",
        "Age",
        "Likelihood",
        "Reasoning",
        "Dimension",
        "Creating",
        "Inclusion",
        "Grasp"
    ],
    "Make sure to clean the entire project and verify that you have upgraded all versions to use the consistent version of Dagger 2.": [
        "Project",
        "Compatibility",
        "Cardinal_numbers",
        "Ranked_expectation",
        "Quantity",
        "Using",
        "Verification",
        "Verification"
    ],
    "Dagger 2 Github Page Sample project using Dagger 2 Vince Mi's Codepath Meetup Dagger 2 Slides http://code.tutsplus.com/tutorials/dependency-injection-with-dagger-2-on-android--cms-23345 Jake Wharton's Devoxx Dagger 2 Slides Jake Wharton's Devoxx Dagger 2 Talk Dagger 2 Google Developers Talk Dagger 1 to Dagger 2 Tasting Dagger 2 on Android Dagger 2 Testing with Mockito": [
        "Contacting",
        "Project",
        "Change_position_on_a_scale",
        "Chatting",
        "Cardinal_numbers",
        "Perception_active",
        "Using",
        "Operational_testing"
    ],
    "Snorkeling with Dagger 2 Dependency Injection in Java Component Dependency vs. Submodules in Dagger 2 Dagger 2 Component Scopes Test Advanced Dagger Talk Dagger 2 For Beginner Tutorial Dependency Injection with Dagger 2": [
        "Reliance",
        "Scope",
        "Operational_testing",
        "Chatting",
        "Cardinal_numbers",
        "Ingredients"
    ],
    "Overview Many Android apps rely on instantiating objects that often require other dependencies.": [
        "Reliance",
        "Frequency",
        "Increment",
        "Quantity",
        "Reliance",
        "Have_as_requirement"
    ],
    "JSONObject parse dictionary objects": [],
    "public class JSONObject extends Object": [
        "Secrecy_status",
        "Expansion"
    ],
    "A modifiable set of name/value mappings.": [],
    "Names are unique, non-null strings.": [
        "Idiosyncrasy"
    ],
    "Values may be any mix of JSONObjects, JSONArrays, Strings, Booleans, Integers, Longs, Doubles or NULL.": [
        "Likelihood",
        "Quantity"
    ],
    "Values may not be null, NaNs, infinities, or of any type not listed here.": [
        "Being_in_effect",
        "Locative_relation",
        "Likelihood",
        "Quantity"
    ],
    "This class can coerce values to another type when requested.": [
        "Temporal_collocation",
        "Execution",
        "Increment",
        "Capability"
    ],
    "This class can look up both mandatory and optional values:": [
        "Quantity",
        "Being_obligatory",
        "Scrutiny",
        "Capability"
    ],
    "Warning: this class represents null in two incompatible ways: the standard Java null reference, and the sentinel value NULL.": [
        "Compatibility",
        "Being_in_effect",
        "Execution",
        "Cardinal_numbers",
        "Communicate_categorization"
    ],
    "In particular, calling put ( name, null ) removes the named entry from the object but put ( name, JSONObject.NULL ) stores an entry whose value is JSONObject.NULL.": [
        "Causation",
        "Storing",
        "Execution",
        "Execution",
        "Removing"
    ],
    "Instances of this class are not thread safe.": [
        "Instance",
        "Risky_situation"
    ],
    "Although this class is nonfinal, it was not designed for inheritance and should not be subclassed.": [
        "Coming_up_with",
        "Being_obligated"
    ],
    "In particular, self-use by overrideable methods is not specified.": [
        "Execution"
    ],
    "See Effective Java Item 17, `` Design and Document or inheritance or else prohibit it'' for further information.": [
        "Entity",
        "Coming_up_with",
        "Documents",
        "Information",
        "Increment",
        "Grasp",
        "Prohibiting"
    ],
    "A sentinel value used to explicitly define a name with no value.": [
        "Quantity",
        "Communicate_categorization",
        "Using"
    ],
    "Creates a JSONObject with no name/value mappings.": [
        "Quantity",
        "Creating"
    ],
    "Creates a new JSONObject by copying all name/value mappings from the given map.": [
        "Quantity",
        "Age",
        "Giving",
        "Creating",
        "Duplication"
    ],
    "Creates a new JSONObject with name/value mappings from the next object in the tokener.": [
        "Age",
        "Creating",
        "Locative_relation"
    ],
    "Creates a new JSONObject with name/value mappings from the JSON string.": [
        "Age",
        "Creating"
    ],
    "Creates a new JSONObject by copying mappings for the listed names from the given object.": [
        "Age",
        "Duplication",
        "Giving",
        "Creating"
    ],
    "Appends value to the array already mapped to name.": [
        "Diversity",
        "Time_vector"
    ],
    "Returns the value mapped by name, or throws if no such mapping exists.": [
        "Execution",
        "Quantity",
        "Cause_motion",
        "Existence"
    ],
    "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or throws otherwise.": [
        "Existence",
        "Execution",
        "Likelihood",
        "Cause_motion"
    ],
    "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or throws otherwise.": [
        "Change_position_on_a_scale",
        "Cause_motion",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or throws otherwise.": [
        "Existence",
        "Execution",
        "Likelihood",
        "Cause_motion"
    ],
    "Returns the value mapped by name if it exists and is a JSONArray, or throws otherwise.": [
        "Existence",
        "Execution",
        "Cause_motion"
    ],
    "Returns the value mapped by name if it exists and is a JSONObject, or throws otherwise.": [
        "Existence",
        "Execution",
        "Cause_motion"
    ],
    "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or throws otherwise.": [
        "Dimension",
        "Cause_motion",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists, coercing it if necessary, or throws if no such mapping exists.": [
        "Being_necessary",
        "Quantity",
        "Existence",
        "Execution",
        "Cause_motion"
    ],
    "Returns true if this object has a mapping for name.": [
        "Execution",
        "Inclusion"
    ],
    "Returns true if this object has no mapping for name or if it has a mapping whose value is NULL.": [
        "Execution",
        "Quantity",
        "Inclusion"
    ],
    "Returns an iterator of the String names in this object.": [
        "Execution"
    ],
    "Returns the number of name/value mappings in this object.": [
        "Quantity",
        "Execution"
    ],
    "Returns an array containing the string names in this object.": [
        "Execution",
        "Diversity",
        "Inclusion"
    ],
    "Encodes the number as a JSON string.": [
        "Quantity"
    ],
    "Returns the value mapped by name, or null if no such mapping exists.": [
        "Quantity",
        "Execution",
        "Existence"
    ],
    "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or fallback otherwise.": [
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is a boolean or can be coerced to a boolean, or false otherwise.": [
        "Artificiality",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or fallback otherwise.": [
        "Change_position_on_a_scale",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is a double or can be coerced to a double, or NaN otherwise.": [
        "Change_position_on_a_scale",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or fallback otherwise.": [
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is an int or can be coerced to an int, or 0 otherwise.": [
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is a JSONArray, or null otherwise.": [
        "Being_in_effect",
        "Existence",
        "Execution"
    ],
    "Returns the value mapped by name if it exists and is a JSONObject, or null otherwise.": [
        "Being_in_effect",
        "Existence",
        "Execution"
    ],
    "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or 0 otherwise.": [
        "Dimension",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists and is a long or can be coerced to a long, or fallback otherwise.": [
        "Dimension",
        "Existence",
        "Execution",
        "Likelihood"
    ],
    "Returns the value mapped by name if it exists, coercing it if necessary, or fallback if no such mapping exists.": [
        "Being_necessary",
        "Quantity",
        "Existence",
        "Execution"
    ],
    "Returns the value mapped by name if it exists, coercing it if necessary, or the empty string if no such mapping exists.": [
        "Being_necessary",
        "Fullness",
        "Quantity",
        "Existence",
        "Execution"
    ],
    "Maps name to value, clobbering any existing name/value mapping with the same name.": [
        "Quantity",
        "Appointing",
        "Existence",
        "Identicality"
    ],
    "Equivalent to put ( name, value ) when both parameters are non-null ; does nothing otherwise.": [
        "Causation",
        "Temporal_collocation",
        "Terms_of_agreement",
        "Quantity",
        "Intentionally_act"
    ],
    "Encodes data as a JSON string.": [],
    "Removes the named mapping if it exists ; does nothing otherwise.": [
        "Existence",
        "Removing",
        "Intentionally_act"
    ],
    "Returns an array with the values corresponding to names.": [
        "Diversity",
        "Execution"
    ],
    "Encodes this object as a compact JSON string, such as:": [],
    "Encodes this object as a human readable JSON string for debugging, such as:": [
        "People"
    ],
    "Wraps the given object if necessary.": [
        "Being_necessary",
        "Giving"
    ],
    "Unlike null, names with this value:": [
        "Being_in_effect"
    ],
    "This value violates the general contract of Object #equals by returning true when compared to null.": [
        "Temporal_collocation",
        "Evaluative_comparison",
        "Documents",
        "Execution",
        "Evaluative_comparison",
        "Execution",
        "Compliance"
    ],
    "Its toString ( ) method returns `` null''.": [
        "Execution",
        "Execution"
    ],
    "Names that aren't present in copyFrom will be skipped.": [
        "Presence",
        "Self_motion"
    ],
    "If this object has no mapping for name, this inserts a new mapping.": [
        "Quantity",
        "Age",
        "Inclusion"
    ],
    "If the mapping exists but its value is not an array, the existing and new values are inserted in order into a new array which is itself mapped to name.": [
        "Diversity",
        "Age",
        "Existence",
        "Existence"
    ],
    "In aggregate, this allows values to be added to a mapping one at a time.": [
        "Cardinal_numbers",
        "Measure_duration",
        "Grant_permission"
    ],
    "Note that append ( String, Object ) provides better semantics.": [
        "Expertise",
        "Supply"
    ],
    "In particular, the mapping for name will always be a JSONArray.": [
        "Frequency"
    ],
    "Using accumulate will result in either a JSONArray or a mapping whose type is the type of value depending on the number of calls to it.": [
        "Contacting",
        "Using",
        "Quantity",
        "Causation"
    ],
    "Note that JSON represents numbers as doubles, so this is lossy ; use strings to transfer numbers via JSON.": [
        "Quantity",
        "Communicate_categorization",
        "Transfer"
    ],
    "The mapping may be NULL.": [
        "Likelihood",
        "Being_in_effect"
    ],
    "The returned iterator supports remove, which will remove the corresponding mapping from this object.": [
        "Execution",
        "Removing",
        "Evidence"
    ],
    "If this object is modified after the iterator is returned, the iterator's behavior is undefined.": [
        "Cause_change",
        "Execution",
        "Conduct"
    ],
    "The order of the keys is undefined.": [
        "Natural_features"
    ],
    "This method returns null if this object contains no mappings.": [
        "Execution",
        "Quantity",
        "Being_in_effect",
        "Execution",
        "Inclusion"
    ],
    "If the value is null, any existing mapping for name is removed.": [
        "Existence",
        "Quantity",
        "Being_in_effect",
        "Removing"
    ],
    "This applies quotes and any necessary character escaping.": [
        "Being_necessary",
        "Physical_artworks",
        "Quantity",
        "Using"
    ],
    "The array contains null for names that aren't mapped.": [
        "Diversity",
        "Being_in_effect",
        "Inclusion"
    ],
    "This method returns null if names is either null or empty.": [
        "Execution",
        "Fullness",
        "Execution",
        "Being_in_effect"
    ],
    "If the object is null or, returns NULL.": [
        "Execution",
        "Being_in_effect"
    ],
    "If the object is a JSONArray or JSONObject, no wrapping is necessary.": [
        "Quantity",
        "Being_necessary"
    ],
    "If the object is NULL, no wrapping is necessary.": [
        "Quantity",
        "Being_necessary"
    ],
    "If the object is an array or Collection, returns an equivalent JSONArray.": [
        "Diversity",
        "Execution",
        "Execution"
    ],
    "If the object is a Map, returns an equivalent JSONObject.": [
        "Execution"
    ],
    "If the object is a primitive wrapper type or String, returns the object.": [
        "Execution"
    ],
    "Otherwise if the object is from a java package, returns the result of toString.": [
        "Execution",
        "Causation",
        "Execution"
    ],
    "If wrapping fails, returns null.": [
        "Successful_action",
        "Execution"
    ],
    "When the requested type is a boolean, strings will be coerced using a case-insensitive comparison to `` true'' and `` false''.": [
        "Temporal_collocation",
        "Execution",
        "Using"
    ],
    "When the requested type is a double, other Number types will be coerced using doubleValue.": [
        "Temporal_collocation",
        "Execution",
        "Change_position_on_a_scale",
        "Increment",
        "Quantity",
        "Using"
    ],
    "Strings that can be coerced using Double #valueOf ( String ) will be.": [
        "Likelihood",
        "Using"
    ],
    "When the requested type is an int, other Number types will be coerced using intValue.": [
        "Temporal_collocation",
        "Execution",
        "Increment",
        "Quantity",
        "Using"
    ],
    "Strings that can be coerced using Double #valueOf ( String ) will be, and then cast to int.": [
        "Likelihood",
        "Communicate_categorization",
        "Using",
        "Temporal_collocation"
    ],
    "When the requested type is a long, other Number types will be coerced using longValue.": [
        "Temporal_collocation",
        "Execution",
        "Increment",
        "Quantity",
        "Using",
        "Dimension"
    ],
    "Strings that can be coerced using Double #valueOf ( String ) will be, and then cast to long.": [
        "Temporal_collocation",
        "Likelihood",
        "Desiring",
        "Using",
        "Communicate_categorization"
    ],
    "This two-step conversion is lossy for very large values.": [
        "Cause_change",
        "Degree",
        "Dimension"
    ],
    "For example, the string `` 9223372036854775806'' yields the long 9223372036854775807.": [
        "Instance",
        "Dimension",
        "Creating"
    ],
    "When the requested type is a String, other non-null values will be coerced using String #valueOf ( Object ).": [
        "Temporal_collocation",
        "Execution",
        "Increment",
        "Using"
    ],
    "Although null can not be coerced, the sentinel value JSONObject #NULL is coerced to the string `` null''.": [
        "Likelihood"
    ],
    "Use getType ( ) to retrieve a mandatory value.": [
        "Being_obligatory"
    ],
    "This fails with a JSONException if the requested name has no value or if the value can not be coerced to the requested type.": [
        "Quantity",
        "Execution",
        "Likelihood",
        "Inclusion",
        "Success_or_failure"
    ],
    "Use optType ( ) to retrieve an optional value.": [],
    "This returns a system - or user-supplied default if the requested name has no value or if the value can not be coerced to the requested type.": [
        "System",
        "Quantity",
        "Execution",
        "Likelihood",
        "Inclusion",
        "Execution"
    ],
    "show up in the names ( ) array": [
        "Reasoning",
        "Locative_relation",
        "Diversity"
    ],
    "show up in the keys ( ) iterator": [
        "Reasoning",
        "Locative_relation",
        "Natural_features"
    ],
    "return true for has ( java.lang.String )": [
        "Execution"
    ],
    "do not throw on get ( java.lang.String )": [
        "Intentionally_act",
        "Dressing",
        "Execution"
    ],
    "are included in the encoded JSON string.": [
        "Inclusion"
    ],
    "Jump to SectionTable of ContentsOverviewFetching JSON ResultsSetting up our ModelPutting It All TogetherBonus: Setting Up Your AdapterConverting JSON to ModelsEdit PagePage HistoryOverview This guide describes the process of converting JSON data retrieved from a network request and converting that data to simple Model objects.": [
        "Change_position_on_a_scale",
        "Network",
        "Gizmo",
        "Quantity",
        "Cause_change",
        "Execution",
        "Execution"
    ],
    "This approach will be compatible with nearly any basic data-driven application and fits well with any ORM solution for persistence such as DBFlow or SugarORM that may be introduced.": [
        "Execution",
        "Relational_quantity",
        "Quantity",
        "Being_necessary",
        "Using",
        "Process_continue",
        "Likelihood",
        "Compatibility",
        "Suitability"
    ],
    "For this guide, we will be using the Yelp API as the example.": [
        "Instance",
        "Using"
    ],
    "The goal of this guide is to perform a Yelp API Search and then process the results into Java objects which we can then use to populate information within our application.": [
        "Processing_materials",
        "Causation",
        "Information",
        "Using",
        "Scrutiny",
        "Residence",
        "Capability",
        "Intentionally_act",
        "Using",
        "Temporal_collocation"
    ],
    "The model in this case is Business and for our application, let's suppose we just need the name, phone, and image of the business which are all provided by the Search API.": [
        "Gizmo",
        "Instance",
        "Businesses",
        "Using",
        "Contacting",
        "Businesses",
        "Quantity",
        "Scrutiny",
        "Grant_permission",
        "Required_event",
        "Supply",
        "Similarity",
        "Opinion"
    ],
    "Fetching JSON Results The first step in retrieving any API-based model data is to execute a network request to retrieve the JSON response that represents the underlying data that we want to use.": [
        "Quantity",
        "Gizmo",
        "Execution",
        "Network",
        "Response",
        "Causation",
        "Ordinal_numbers",
        "Bringing",
        "Desiring",
        "Communicate_categorization",
        "Intentionally_act",
        "Using",
        "Execution"
    ],
    "In this case, we want to execute a request to http://api.yelp.com/v2/search?term=food&location=San+Francisco and then this will return us a JSON dictionary that looks like:": [
        "Instance",
        "Execution",
        "Execution",
        "Scrutiny",
        "Execution",
        "Desiring",
        "Temporal_collocation"
    ],
    "Sending out this API request can be done in any number of ways but first requires us to register for a Yelp developer account and use OAuth 1.0 a to authenticate with our provided access_token.": [
        "Execution",
        "Ordinal_numbers",
        "Execution",
        "Quantity",
        "Supply",
        "Quantity",
        "Recording",
        "Likelihood",
        "Intentionally_act",
        "Have_as_requirement",
        "Locative_relation",
        "Causation"
    ],
    "You might for example use our rest-client-template to manage this authentication and then construct a YelpClient that has a search method:": [
        "Instance",
        "Scrutiny",
        "Execution",
        "Likelihood",
        "Operating_a_system",
        "Inclusion",
        "Temporal_collocation",
        "Using",
        "Building"
    ],
    "This search method will take care of executing our JSON request to the Yelp API.": [
        "Scrutiny",
        "Execution",
        "Execution",
        "Have_as_requirement",
        "Execution"
    ],
    "The API call might be executed in an Activity now when the user performs a search.": [
        "Temporal_collocation",
        "Temporal_collocation",
        "Scrutiny",
        "Execution",
        "Intentionally_act",
        "Likelihood",
        "Execution",
        "Intentionally_act"
    ],
    "Executing the API request would look like:": [
        "Execution",
        "Execution",
        "Scrutiny"
    ],
    "We could now run the app and verify that the JSON array of business has the format we expect from the provided sample response in the documentation.": [
        "Businesses",
        "Supply",
        "Temporal_collocation",
        "Capability",
        "Expectation",
        "Response",
        "Diversity",
        "Execution",
        "Possession",
        "Verification"
    ],
    "Setting up our Model The primary resource in the Yelp API is the Business.": [
        "Gizmo",
        "Sounds",
        "Businesses",
        "First_rank"
    ],
    "Let's create a Java class that will act as the Business model in our application:": [
        "Businesses",
        "Vehicle",
        "Using",
        "Grant_permission",
        "Intentionally_create",
        "Intentionally_act"
    ],
    "So far, the business model is just a series of declared fields and then getters to access those fields.": [
        "Businesses",
        "Temporal_collocation",
        "Fields",
        "Gizmo",
        "Continued_state_of_affairs",
        "Sequence"
    ],
    "Next, we need to add method that would manage the deserialization of a JSON dictionary into a populated Business object:": [
        "Execution",
        "Businesses",
        "Operating_a_system",
        "Required_event"
    ],
    "With this method in place, we could take a single business JSON dictionary such as:": [
        "Execution",
        "Locale",
        "Businesses",
        "Sole_instance",
        "Capability",
        "Have_as_requirement"
    ],
    "and successfully create a Business with Business.fromJson ( json ).": [
        "Businesses",
        "Intentionally_create"
    ],
    "However, in the API response, we actually get a collection of business JSON in an array.": [
        "Concessive",
        "Response",
        "Businesses",
        "Diversity",
        "Execution",
        "Execution"
    ],
    "So ideally we also would have an easy way of processing an array of businesses into an ArrayList of Business objects.": [
        "Diversity",
        "Businesses",
        "Businesses",
        "Difficulty",
        "Processing_materials",
        "Execution"
    ],
    "With that in place, we can now pass an JSONArray of business json data and process that easily into a nice ArrayList object for easy use in our application with Business.fromJson ( myJsonArray ).": [
        "Locale",
        "Businesses",
        "Execution",
        "Stimulus_focus",
        "Difficulty",
        "Using",
        "Temporal_collocation",
        "Capability",
        "Process_end"
    ],
    "Putting It All Together Now, we can return to our Activity where we are executing the network request and use the new Model to get easy access to our Business data.": [
        "Causation",
        "Quantity",
        "Collaboration",
        "Execution",
        "Network",
        "Vehicle",
        "Having_or_lacking_access",
        "Businesses",
        "Temporal_collocation",
        "Intentionally_act",
        "Age",
        "Difficulty",
        "Locative_relation",
        "Execution",
        "Execution",
        "Execution",
        "Using",
        "Capability"
    ],
    "Let's tweak the network request handler in our activity:": [
        "Network",
        "Execution",
        "Intentionally_act",
        "Manipulation",
        "Grant_permission"
    ],
    "This approach works very similarly for any simple API data which often is returned in collections whether it be images on Instagram, tweets on Twitter, or auctions on Ebay.": [
        "Execution",
        "Execution",
        "Sensation",
        "Make_noise",
        "Sounds",
        "Social_event",
        "Degree",
        "Frequency",
        "Being_employed",
        "Quantity",
        "Execution"
    ],
    "Bonus: Setting Up Your Adapter The next step might be to create an adapter and populate these new model objects into a ListView or RecyclerView.": [
        "Residence",
        "Vehicle",
        "Intentionally_act",
        "Age",
        "Locative_relation",
        "Likelihood",
        "Intentionally_create"
    ],
    "For additional details on using adapters to display data in lists, see Using RecyclerView or Using ListView.": [
        "Increment",
        "Perception_experience",
        "Using",
        "Using"
    ],
    "Jump to SectionTable of ContentsOverviewFetching JSON ResultsSetting up our ModelPutting It All TogetherBonus: Setting Up Your Adapter": [
        "Change_position_on_a_scale",
        "Quantity"
    ],
    "Table of ContentsOverviewFetching JSON ResultsSetting up our ModelPutting It All TogetherBonus: Setting Up Your Adapter": [
        "Quantity"
    ],
    "Overview This guide describes the process of converting JSON data retrieved from a network request and converting that data to simple Model objects.": [
        "Network",
        "Gizmo",
        "Execution",
        "Execution",
        "Cause_change"
    ],
    "Sound panning should work for stereo files (and if not, add it to the docs)": [
        "Sounds",
        "Seeking",
        "Self_motion",
        "Cause_change_of_position_on_a_scale",
        "Being_obligated",
        "Working_on"
    ],
    "Users expect to be able to control the volume of an audio app.": [
        "Control",
        "Capability",
        "Expectation"
    ],
    "Standard behavior includes the ability to use the volume controls ( either buttons or knobs on the device or sliders in the UI ), and to avoid suddenly playing out loud if a peripheral like headphones is disconnected while in use.": [
        "Clothing_parts",
        "Gizmo",
        "Locative_relation",
        "Sound_level",
        "Conduct",
        "Prohibiting",
        "Performers_and_roles",
        "Using",
        "Preventing",
        "Capability",
        "Inclusion"
    ],
    "When a user presses a volume key in a game or music app the volume should change, even if the player is paused between songs or there's no music for the current game location.": [
        "Temporal_collocation",
        "Importance",
        "Gizmo",
        "Quantity",
        "Performing_arts",
        "Locale",
        "Temporal_collocation",
        "Undergo_change",
        "Being_obligated",
        "Cause_motion",
        "Existence"
    ],
    "Android uses separate audio streams for playing music, alarms, notifications, the incoming call ringer, system sounds, in-call volume, and DTMF tones.": [
        "Becoming_separated",
        "Quantity",
        "Performing_arts",
        "Experiencer_obj",
        "Telling",
        "Execution",
        "Cause_to_make_noise",
        "Gizmo",
        "Sensation",
        "Performers_and_roles",
        "Using"
    ],
    "This allows users to control the volume of each stream independently.": [
        "Quantity",
        "Grant_permission",
        "Control"
    ],
    "By default, pressing the volume control modifies the volume of the active audio stream.": [
        "Being_active",
        "Quantity",
        "Control",
        "Attempt_suasion",
        "Cause_change"
    ],
    "If your app isn't currently playing anything, hitting the volume keys adjusts the music volume ( or the ringer volume before Android 9 ).": [
        "Impact",
        "Natural_features",
        "Performing_arts",
        "Cause_to_make_noise",
        "Temporal_collocation",
        "Performers_and_roles"
    ],
    "Unless your app is an alarm clock, you should play audio with usage AudioAttributes.USAGE _ MEDIA.": [
        "Noise_makers",
        "Being_obligated",
        "Performers_and_roles"
    ],
    "To ensure that volume controls adjust the correct stream, you should call setVolumeControlStream ( ) passing in the stream type matching your attributes that you can retrieve from AudioAttributes.getVolumeControlStream.": [
        "Quantity",
        "Evaluative_comparison",
        "Prohibiting",
        "Suitability",
        "Adjusting",
        "Being_obligated",
        "Capability",
        "Execution"
    ],
    "Make this call in your app's lifecycle, typically from the onResume ( ) method of the activity or fragment that controls your media.": [
        "Execution",
        "Execution",
        "Part_piece",
        "Control",
        "Causation",
        "Intentionally_act"
    ],
    "This connects the volume controls to STREAM_MUSIC whenever the target activity or fragment is visible.": [
        "Attaching",
        "Intentionally_act",
        "Part_piece",
        "Control",
        "Obviousness"
    ],
    "In rare cases, you can set the volume of an audio stream programmatically.": [
        "Frequency",
        "Instance",
        "Quantity",
        "Capability",
        "Intentionally_create"
    ],
    "For example, when your app replaces an existing UI.": [
        "Instance",
        "Temporal_collocation",
        "Existence",
        "Replacing"
    ],
    "This is not recommended because the Android AudioManager mixes all audio streams of the same type together.": [
        "Quantity",
        "Collaboration",
        "Identicality",
        "Cause_to_amalgamate",
        "Quantity"
    ],
    "These methods change the volume of every app that uses the stream.": [
        "Quantity",
        "Execution",
        "Frequency",
        "Undergo_change",
        "Using"
    ],
    "Some devices ( like Chromebooks ) have volume controls but do not allow apps to use the AudioManager methods described above to change the level of an audio stream.": [
        "Gizmo",
        "Quantity",
        "Relational_quantity",
        "Prohibiting",
        "Execution",
        "Communicate_categorization",
        "Rank",
        "Undergo_change",
        "Intentionally_act",
        "Using",
        "Grant_permission"
    ],
    "These are called fixed-volume devices.": [
        "Gizmo",
        "Execution"
    ],
    "You can discover if your app is running on a fixed-volume device by calling isVolumeFixed ( ).": [
        "Gizmo",
        "Execution",
        "Becoming_aware",
        "Capability",
        "Execution"
    ],
    "An audio app should provide the ability to balance its output volume with other apps that might be playing on the same stream.": [
        "Quantity",
        "Increment",
        "Likelihood",
        "Identicality",
        "Being_obligated",
        "Performers_and_roles",
        "Capability",
        "Supply"
    ],
    "On fixed-volume devices, the app should connect its own volume controls to the appropriate setVolume ( ) method in the table below:": [
        "Gizmo",
        "Execution",
        "Prohibiting",
        "Possession",
        "Being_obligated",
        "Cognitive_connection"
    ],
    "Users have a number of alternatives when it comes to enjoying the audio from their Android devices.": [
        "Execution",
        "Temporal_collocation",
        "Gizmo",
        "Waking_up",
        "Quantity",
        "Experiencer_focus"
    ],
    "Most devices have a built-in speaker, headphone jacks for wired headsets, and many also feature Bluetooth connectivity and support for A2DP audio.": [
        "Gizmo",
        "Quantity",
        "Relational_quantity",
        "Taking_sides",
        "Inclusion"
    ],
    "When a headset is unplugged or a Bluetooth device disconnected, the audio stream automatically reroutes to the built-in speaker.": [
        "Temporal_collocation",
        "Quantity",
        "Gizmo"
    ],
    "If you listen to music at a high volume, this can be a noisy surprise.": [
        "Performing_arts",
        "Experiencer_obj",
        "Perception_active",
        "Position_on_a_scale",
        "Capability"
    ],
    "Users usually expect apps that include a music player with onscreen playback controls to pause playback in this case.": [
        "Performing_arts",
        "Instance",
        "Gizmo",
        "Inclusion",
        "Control",
        "Expectation"
    ],
    "Other apps, like games that don't include controls, should keep playing.": [
        "Prohibiting",
        "Increment",
        "Intentionally_act",
        "Activity_ongoing",
        "Inclusion",
        "Being_obligated"
    ],
    "The user can adjust the volume with the device's hardware controls.": [
        "Gizmo",
        "Prohibiting",
        "Capability",
        "Adjusting"
    ],
    "When audio output switches back to the built-in speaker the system broadcasts an ACTION_AUDIO_BECOMING_NOISY intent.": [
        "Temporal_collocation",
        "Observable_body_parts",
        "System",
        "Change_tool"
    ],
    "You should create a BroadcastReceiver that listens for this intent whenever you're playing audio.": [
        "Performers_and_roles",
        "Being_obligated",
        "Intentionally_create",
        "Perception_active"
    ],
    "Your receiver should look like this:": [
        "Being_obligated",
        "Scrutiny"
    ],
    "Register the receiver when you begin playback, and unregister it when you stop.": [
        "Temporal_collocation",
        "Process_start",
        "Preventing"
    ],
    "If you design your app as we describe in this guide, these calls should appear in the onPlay ( ) and onStop ( ) media session callbacks.": [
        "Contacting",
        "Coming_up_with",
        "Coming_to_be",
        "Being_obligated",
        "Communicate_categorization"
    ],
    "setStreamVolume ( ) setStreamVolume ( )": [],
    "Not receiving notifications when phone is locked and connected through WIFI": [
        "Telling",
        "Temporal_collocation",
        "Contacting",
        "Receiving",
        "Inhibit_movement",
        "Cognitive_connection"
    ],
    "A notification is a message that Android displays outside your app's UI to provide the user with reminders, communication from other people, or other timely information from your app.": [
        "Telling",
        "Communication",
        "People",
        "Increment",
        "Information",
        "Evoking",
        "Supply"
    ],
    "Users can tap the notification to open your app or take an action directly from the notification.": [
        "Intentionally_act",
        "Secrecy_status",
        "Have_as_requirement",
        "Telling",
        "Attaching",
        "Capability"
    ],
    "This page provides an overview of where notifications appear and the available features.": [
        "Contacting",
        "Telling",
        "Coming_to_be",
        "Locative_relation",
        "Supply"
    ],
    "If you want to start building your notifications, instead read Create a Notification.": [
        "Telling",
        "Telling",
        "Building",
        "Intentionally_create",
        "Reading",
        "Activity_start",
        "Desiring"
    ],
    "For more information about the design and interaction patterns, see the Notifications design guide.": [
        "Coming_up_with",
        "Telling",
        "Pattern",
        "Grasp",
        "Information",
        "Increment"
    ],
    "Additionally, see the Android Notifications Sample for a demonstration of best practices in using the Notification.Style API in both mobile and wearable apps.": [
        "Telling",
        "Quantity",
        "Bringing",
        "Businesses",
        "Attack",
        "Using",
        "Grasp"
    ],
    "Notifications appear to users in different locations and formats, such as an icon in the status bar, a more detailed entry in the notification drawer, as a badge on the app's icon, and on paired wearables automatically.": [
        "Telling",
        "Locale",
        "Buildings",
        "Telling",
        "Accoutrements",
        "Coming_to_be",
        "Similarity",
        "Increment",
        "Containers",
        "Execution"
    ],
    "When you issue a notification, it first appears as an icon in the status bar.": [
        "Temporal_collocation",
        "Telling",
        "Ordinal_numbers",
        "Buildings",
        "Coming_to_be",
        "Creating"
    ],
    "Notification icons appear on the left side of the status bar": [
        "Telling",
        "Buildings",
        "Coming_to_be",
        "Taking_sides",
        "Part_orientational"
    ],
    "Users can swipe down on the status bar to open the notification drawer, where they can view more details and take actions with the notification.": [
        "Ingestion",
        "Buildings",
        "Locative_relation",
        "Intentionally_act",
        "Telling",
        "Containers",
        "Increment",
        "Removing",
        "Categorization",
        "Have_as_requirement",
        "Secrecy_status",
        "Capability"
    ],
    "Notifications in the notification drawer": [
        "Telling",
        "Telling",
        "Containers"
    ],
    "Users can drag down on a notification in the drawer to reveal the expanded view, which shows additional content and action buttons, if provided.": [
        "Ingestion",
        "Telling",
        "Containers",
        "Reveal_secret",
        "Opinion",
        "Intentionally_act",
        "Clothing_parts",
        "Supply",
        "Increment",
        "Capability",
        "Evidence",
        "Cause_motion"
    ],
    "A notification remains visible in the notification drawer until dismissed by the app or the user.": [
        "Telling",
        "Containers",
        "Obviousness",
        "State_continue"
    ],
    "Beginning with Android 5.0, notifications can briefly appear in a floating window called a heads-up notification.": [
        "Process_start",
        "Telling",
        "Connecting_architecture",
        "Telling",
        "Motion",
        "Coming_to_be",
        "Capability",
        "Execution"
    ],
    "This behavior is normally for important notifications that the user should know about immediately, and it appears only if the device is unlocked.": [
        "Gizmo",
        "Conduct",
        "Importance",
        "Sole_instance",
        "Being_obligated",
        "Awareness",
        "Telling",
        "Coming_to_be"
    ],
    "A heads-up notification appears in front of the foreground app": [
        "Telling",
        "Coming_to_be",
        "Part_orientational"
    ],
    "The heads-up notification appears the moment your app issues the notification and it disappears after a moment, but remains visible in the notification drawer as usual.": [
        "Telling",
        "Containers",
        "Coming_to_be",
        "Departing",
        "Obviousness",
        "State_continue"
    ],
    "Example conditions that might trigger heads-up notifications include the following:": [
        "Instance",
        "Telling",
        "State_of_entity",
        "Likelihood",
        "Inclusion"
    ],
    "Beginning with Android 5.0, notifications can appear on the lock screen.": [
        "Process_start",
        "Telling",
        "Hair_configuration",
        "Coming_to_be",
        "Capability"
    ],
    "You can programmatically set the level of detail visible in notifications posted by your app on a secure lock screen, or even whether the notification will show on the lock screen at all.": [
        "Telling",
        "Sending",
        "Being_at_risk",
        "Hair_configuration",
        "Telling",
        "Reasoning",
        "Quantity",
        "Obviousness",
        "Capability",
        "Intentionally_create",
        "Rank"
    ],
    "Users can use the system settings to choose the level of detail visible in lock screen notifications, including the option to disable all lock screen notifications.": [
        "Gizmo",
        "Hair_configuration",
        "Render_nonfunctional",
        "Quantity",
        "Telling",
        "Obviousness",
        "Capability",
        "Possibilities",
        "Rank",
        "Choosing",
        "Inclusion",
        "Using"
    ],
    "Starting with Android 8.0, users can choose to disable or enable lock screen notifications for each notification channel.": [
        "Process_start",
        "Render_nonfunctional",
        "Hair_configuration",
        "Telling",
        "Natural_features",
        "Capability",
        "Telling",
        "Choosing"
    ],
    "Notifications on the lock screen with sensitive content hidden": [
        "Telling",
        "Hair_configuration",
        "Health_response",
        "Hiding_objects"
    ],
    "To learn more, see how to Set lock screen visibility.": [
        "Increment",
        "Hair_configuration",
        "Education_teaching",
        "Intentionally_create",
        "Grasp"
    ],
    "In supported launchers on devices running Android 8.0 ( API level 26 ) and higher, app icons indicate new notifications with a colored `` badge'' ( also known as a `` notification dot'' ) on the corresponding app launcher icon.": [
        "Taking_sides",
        "Gizmo",
        "Rank",
        "Telling",
        "Age",
        "Position_on_a_scale",
        "Operating_a_system",
        "Telling",
        "Evidence"
    ],
    "Users can long-press on an app icon to see the notifications for that app.": [
        "Telling",
        "Capability",
        "Grasp"
    ],
    "Users can then dismiss or act on notifications from that menu, similar to the notification drawer.": [
        "Telling",
        "Telling",
        "Containers",
        "Temporal_collocation",
        "Capability",
        "Similarity",
        "Intentionally_act"
    ],
    "Notification badges and the long-press menu": [
        "Telling",
        "Accoutrements"
    ],
    "To learn more about how badges work, read Notification badges.": [
        "Telling",
        "Accoutrements",
        "Working_on",
        "Reading",
        "Increment",
        "Education_teaching"
    ],
    "If the user has a paired Wear OS device, all your notifications appear there automatically, including expandable detail and action buttons.": [
        "Gizmo",
        "Telling",
        "Locative_relation",
        "Intentionally_act",
        "Clothing_parts",
        "Quantity",
        "Coming_to_be",
        "Inclusion",
        "Wearing"
    ],
    "You can also enhance the experience by customizing some appearances for the notification on wearables and provide different actions, including suggested replies and voice input replies.": [
        "Expertise",
        "Intentionally_act",
        "Communication_response",
        "Relational_quantity",
        "Similarity",
        "Telling",
        "Capability",
        "Cause_to_make_progress",
        "Inclusion",
        "Supply"
    ],
    "For more information, see how to add wearable-specific features to your notification.": [
        "Information",
        "Increment",
        "Telling",
        "Grasp"
    ],
    "Notifications automatically appear on a paired Wear OS device": [
        "Telling",
        "Gizmo",
        "Wearing",
        "Coming_to_be"
    ],
    "The design of a notification is determined by system templates -- your app simply defines the contents for each portion of the template.": [
        "Coming_up_with",
        "Telling",
        "Gizmo",
        "Part_whole",
        "Categorization"
    ],
    "Some details of the notification appear only in the expanded view.": [
        "Sole_instance",
        "Opinion",
        "Relational_quantity",
        "Telling",
        "Coming_to_be"
    ],
    "A notification with basic details": [
        "Being_necessary",
        "Telling"
    ],
    "The most common parts of a notification are indicated in figure 7 as follows:": [
        "Telling",
        "Relative_time",
        "Part_whole",
        "Evidence"
    ],
    "For more information about how to create a notification with these features and more, read Create a Notification.": [
        "Telling",
        "Telling",
        "Categorization",
        "Intentionally_create",
        "Cause_to_start",
        "Information",
        "Increment"
    ],
    "Although it's not required, every notification should open an appropriate app activity when tapped.": [
        "Frequency",
        "Telling",
        "Intentionally_act",
        "Temporal_collocation",
        "Attaching",
        "Being_necessary",
        "Being_obligated",
        "Secrecy_status"
    ],
    "In addition to this default notification action, you can add action buttons that complete an app-related task from the notification ( often without opening an activity ), as shown in figure 9.": [
        "Intentionally_act",
        "Clothing_parts",
        "Being_obligated",
        "Telling",
        "Body_movement",
        "Intentionally_act",
        "Evidence",
        "Capability",
        "Completeness",
        "Communication_response",
        "Frequency"
    ],
    "A notification with action buttons": [
        "Intentionally_act",
        "Clothing_parts",
        "Telling"
    ],
    "Starting in Android 7.0 ( API level 24 ), you can also add an action to reply to messages or enter other text directly from the notification.": [
        "Process_start",
        "Rank",
        "Communication_response",
        "Telling",
        "Increment",
        "Intentionally_act",
        "Execution",
        "Capability"
    ],
    "Starting in Android 10 ( API level 29 ), the platform can automatically generate action buttons with suggested intent-based actions.": [
        "Cardinal_numbers",
        "Intentionally_act",
        "Clothing_parts",
        "Intentionally_act",
        "Rank",
        "Cause_to_start",
        "Capability",
        "Process_start"
    ],
    "Adding action buttons is explained further in Create a Notification.": [
        "Intentionally_act",
        "Clothing_parts",
        "Increment",
        "Telling"
    ],
    "By default, the notification's text content is truncated to fit on one line.": [
        "Telling",
        "Cardinal_numbers",
        "Suitability"
    ],
    "If you want your notification to be longer, you can enable a larger text area that's expandable by applying an additional template, as shown in figure 8.": [
        "Duration_attribute",
        "Locale",
        "Using",
        "Increment",
        "Capability",
        "Dimension",
        "Possession",
        "Evidence",
        "Telling"
    ],
    "An expandable notification for large text": [
        "Telling",
        "Dimension"
    ],
    "You can also create an expandable notification with an image, in inbox style, a chat conversation, or media playback controls.": [
        "Telling",
        "Similarity",
        "Hair_configuration",
        "Chatting",
        "Capability",
        "Chatting",
        "Control",
        "Intentionally_create"
    ],
    "For more information, read Create an Expandable Notification.": [
        "Information",
        "Telling",
        "Increment",
        "Intentionally_create",
        "Reading"
    ],
    "And although we recommend you always use these templates to ensure proper design compatibility on all devices, if necessary, you can also create a custom notification layout.": [
        "Coming_up_with",
        "Compatibility",
        "Gizmo",
        "Being_necessary",
        "Custom",
        "Telling",
        "Frequency",
        "Proper_reference",
        "Quantity",
        "Capability",
        "Intentionally_create",
        "Using"
    ],
    "To avoid bombarding your users with multiple or redundant notifications when you have additional updates, you should consider updating an existing notification rather than issuing a new one, or consider using the inbox-style notification to show conversation updates.": [
        "Telling",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Reasoning",
        "Chatting",
        "Increment",
        "Existence",
        "Age",
        "Being_obligated",
        "Quantity",
        "Telling",
        "Using",
        "Preventing",
        "Categorization"
    ],
    "However, if it's necessary to deliver multiple notifications, you should consider grouping those separate notifications into a group ( available on Android 7.0 and higher ).": [
        "Concessive",
        "Telling",
        "Organization",
        "Position_on_a_scale",
        "Quantity",
        "Becoming_separated",
        "Being_obligated",
        "Delivery",
        "Being_necessary",
        "Categorization"
    ],
    "A notification group allows you to collapse multiple notifications into just one post in the notification drawer, with a summary.": [
        "Telling",
        "Execution",
        "Telling",
        "Sending",
        "Quantity",
        "Cardinal_numbers",
        "Containers",
        "Grant_permission"
    ],
    "The user can then expand the notification to reveal the details for each individual notification.": [
        "Telling",
        "Reveal_secret",
        "People",
        "Temporal_collocation",
        "Expansion",
        "Capability"
    ],
    "The user can progressively expand the notification group and each notification within it for more details.": [
        "Execution",
        "Increment",
        "Capability",
        "Expansion",
        "Telling"
    ],
    "A collapsed and expanded notification group": [
        "Telling",
        "Organization"
    ],
    "To learn how to add notifications to a group, see Create a Group of Notifications.": [
        "Telling",
        "Execution",
        "Execution",
        "Telling",
        "Cause_change_of_position_on_a_scale",
        "Grasp",
        "Education_teaching"
    ],
    "Starting in Android 8.0 ( API level 26 ), all notifications must be assigned to a channel or it will not appear.": [
        "Activity_start",
        "Telling",
        "Natural_features",
        "Rank",
        "Quantity",
        "Being_obligated",
        "Coming_to_be"
    ],
    "By categorizing notifications into channels, users can disable specific notification channels for your app ( instead of disabling all your notifications ), and users can control the visual and auditory options for each channel -- all from the Android system settings ( figure 11 ).": [
        "Telling",
        "Natural_features",
        "Render_nonfunctional",
        "Telling",
        "Natural_features",
        "Gizmo",
        "Categorization",
        "Render_nonfunctional",
        "Capability",
        "Quantity",
        "Control",
        "Possibilities"
    ],
    "Users can also long-press a notification to change behaviors for the associated channel.": [
        "Conduct",
        "Natural_features",
        "Cognitive_connection",
        "Cause_change",
        "Telling",
        "Capability"
    ],
    "On devices running Android 7.1 ( API level 25 ) and lower, users can manage notifications on a per-app basis only ( effectively each app only has one channel on Android 7.1 and lower ).": [
        "Gizmo",
        "Telling",
        "Body_decoration",
        "Sole_instance",
        "Natural_features",
        "Rank",
        "Cardinal_numbers",
        "Capability",
        "Operating_a_system",
        "Operating_a_system",
        "Possession"
    ],
    "Notification settings for Clock app and one of its channels": [
        "Telling",
        "Natural_features",
        "Cardinal_numbers"
    ],
    "One app can have multiple notification channels -- a separate channel for each type of notification the app issues.": [
        "Telling",
        "Natural_features",
        "Natural_features",
        "Cardinal_numbers",
        "Quantity",
        "Becoming_separated",
        "Capability"
    ],
    "An app can also create notification channels in response to choices made by users of your app.": [
        "Telling",
        "Natural_features",
        "Choosing",
        "Causation",
        "Intentionally_create",
        "Response",
        "Capability"
    ],
    "For example, you may set up separate notification channels for each conversation group created by a user in a messaging app.": [
        "Instance",
        "Becoming_separated",
        "Telling",
        "Natural_features",
        "Chatting",
        "Organization",
        "Likelihood",
        "Intentionally_create",
        "Intentionally_create"
    ],
    "The channel is also where you specify the importance level for your notifications on Android 8.0 and higher.": [
        "Natural_features",
        "Position_on_a_scale",
        "Rank",
        "Importance",
        "Telling",
        "Locative_relation"
    ],
    "So all notifications posted to the same notification channel have the same behavior.": [
        "Telling",
        "Telling",
        "Natural_features",
        "Conduct",
        "Quantity",
        "Identicality",
        "Sending"
    ],
    "For more information, see Create and Manage Notification Channels.": [
        "Information",
        "Telling",
        "Natural_features",
        "Increment",
        "Grasp"
    ],
    "Android uses the importance of a notification to determine how much the notification should interrupt the user ( visually and audibly ).": [
        "Importance",
        "Telling",
        "Relational_quantity",
        "Interrupt_process",
        "Being_obligated",
        "Using"
    ],
    "The higher the importance of a notification, the more interruptive the notification will be.": [
        "Importance",
        "Telling",
        "Increment",
        "Position_on_a_scale"
    ],
    "On Android 8.0 ( API level 26 ) and above, importance of a notification is determined by the importance of the channel the notification was posted to.": [
        "Telling",
        "Importance",
        "Natural_features",
        "Rank",
        "Sending"
    ],
    "Users can change the importance of a notification channel in the system settings ( figure 12 ).": [
        "Importance",
        "Telling",
        "Natural_features",
        "Gizmo",
        "Cardinal_numbers",
        "Undergo_change",
        "Capability"
    ],
    "On Android 7.1 ( API level 25 ) and below, importance of each notification is determined by the notification's priority.": [
        "Importance",
        "Telling",
        "Rank"
    ],
    "Users can change the importance of each channel on Android 8.0 and higher": [
        "Importance",
        "Natural_features",
        "Position_on_a_scale",
        "Undergo_change",
        "Capability"
    ],
    "The possible importance levels are the following:": [
        "Likelihood",
        "Importance",
        "Rank",
        "Relative_time"
    ],
    "All notifications, regardless of importance, appear in non-interruptive system UI locations, such as in the notification drawer and as a badge on the launcher icon ( though you can modify the appearance of the notification badge ).": [
        "Telling",
        "Importance",
        "Gizmo",
        "Locale",
        "Telling",
        "Quantity",
        "Containers",
        "Accoutrements",
        "Capability",
        "Coming_to_be",
        "Cause_change"
    ],
    "For more information, see how to set the importance.": [
        "Information",
        "Importance",
        "Increment",
        "Intentionally_create",
        "Grasp"
    ],
    "Starting in Android 5.0 ( API level 21 ), users can enable Do Not Disturb mode, which silences sounds and vibration for all notifications.": [
        "Process_start",
        "Rank",
        "Sensation",
        "Telling",
        "Quantity",
        "Capability",
        "Intentionally_act",
        "Killing",
        "Stimulus_focus"
    ],
    "Notifications still appear in the system UI as normal, unless the user specifies otherwise.": [
        "Telling",
        "Gizmo",
        "Medical_conditions",
        "Continued_state_of_affairs",
        "Coming_to_be"
    ],
    "There are three different levels available in Do Not Disturb mode:": [
        "Similarity",
        "Stimulus_focus",
        "Rank",
        "Cardinal_numbers",
        "Existence"
    ],
    "Users can can allow notifications through based on system-wide categories ( left ) and based on who sent a message or who is calling ( right ).": [
        "Telling",
        "Direction",
        "Execution",
        "Part_orientational",
        "Capability",
        "Grant_permission",
        "Causation"
    ],
    "On Android 8.0 ( API level 26 ) and above, users can additionally allow notifications through for app-specific categories ( also known as channels ) by overriding Do Not Disturb on a channel-by-channel basis.": [
        "Telling",
        "Natural_features",
        "Body_decoration",
        "Rank",
        "Intentionally_act",
        "Capability",
        "Grant_permission",
        "Stimulus_focus"
    ],
    "For example, a payment app might have channels for notifications related to withdrawals and deposits.": [
        "Instance",
        "Commerce_pay",
        "Natural_features",
        "Telling",
        "Removing",
        "Likelihood",
        "Cognitive_connection"
    ],
    "The user can then choose to allow either withdrawal notifications, deposit notifications, or both when in priority mode.": [
        "Quantity",
        "Temporal_collocation",
        "Removing",
        "Telling",
        "Temporal_collocation",
        "Choosing",
        "Grant_permission",
        "Capability"
    ],
    "On devices running Android 7.1 ( API level 25 ) and below, users can allow notifications through on an app by app basis, rather than on a channel by channel basis.": [
        "Gizmo",
        "Telling",
        "Body_decoration",
        "Natural_features",
        "Rank",
        "Capability",
        "Operating_a_system",
        "Grant_permission"
    ],
    "To properly configure your notifications for these user settings, you must set a system-wide category and channel.": [
        "Natural_features",
        "Being_obligated",
        "Telling",
        "Intentionally_create"
    ],
    "A notification is required when your app is running a `` foreground service'' -- a Service running in the background that's long living and noticeable to the user, such as a media player.": [
        "Telling",
        "Needing",
        "Temporal_collocation",
        "Public_services",
        "Duration_attribute",
        "Dead_or_alive",
        "Gizmo",
        "Execution"
    ],
    "This notification can not be dismissed like other notifications.": [
        "Telling",
        "Telling",
        "Increment",
        "Likelihood"
    ],
    "To remove the notification, the service must be either stopped or removed from the `` foreground'' state.": [
        "Telling",
        "Public_services",
        "Political_locales",
        "Being_obligated",
        "Activity_stop",
        "Removing",
        "Removing"
    ],
    "For more information read Running a service in the foreground.": [
        "Information",
        "Public_services",
        "Increment",
        "Operating_a_system",
        "Categorization"
    ],
    "And if you are building a media player, also read Using MediaStyle notifications with a foreground service.": [
        "Telling",
        "Public_services",
        "Using",
        "Building",
        "Participation",
        "Categorization"
    ],
    "Beginning with Android 8.1 ( API level 27 ), apps can not make a notification sound more than once per second.": [
        "Process_start",
        "Rank",
        "Telling",
        "Ordinal_numbers",
        "Increment",
        "Frequency",
        "Capability",
        "Sounds",
        "Causation"
    ],
    "If your app posts multiple notifications in one second, they all appear as expected, but only the first notification per second makes a sound.": [
        "Sending",
        "Sole_instance",
        "Ordinal_numbers",
        "Telling",
        "Sensation",
        "Quantity",
        "Ordinal_numbers",
        "Cardinal_numbers",
        "Coming_to_be",
        "Telling",
        "Expectation",
        "Causation"
    ],
    "However, Android also applies a rate limit when updating a notification.": [
        "Concessive",
        "Frequency",
        "Telling",
        "Temporal_collocation",
        "Using"
    ],
    "If you post updates to a single notification too frequently ( many in less than one second ), the system might drop some updates.": [
        "Telling",
        "Sufficiency",
        "Quantity",
        "Ordinal_numbers",
        "System",
        "Change_position_on_a_scale",
        "Sole_instance",
        "Frequency",
        "Cardinal_numbers",
        "Relational_quantity",
        "Sending",
        "Likelihood"
    ],
    "Since Android 1.0, the notification system UI and the notification-related APIs have continually evolved.": [
        "Telling",
        "System",
        "Coming_to_be"
    ],
    "To use the latest notification API features while still supporting older devices, use the support library notification API: NotificationCompat and its subclasses, as well as NotificationManagerCompat.": [
        "Relative_time",
        "Telling",
        "Gizmo",
        "Taking_sides",
        "Buildings",
        "Age",
        "Taking_sides",
        "Continued_state_of_affairs",
        "Using"
    ],
    "This will allow you to avoid writing conditional code to check API levels because these APIs handle that for you.": [
        "Rank",
        "Inspecting",
        "Text_creation",
        "Resolve_problem",
        "Preventing",
        "Grant_permission"
    ],
    "NotificationCompat is updated as the platform evolves to include the latest methods.": [
        "Execution",
        "Relative_time",
        "Coming_to_be",
        "Inclusion"
    ],
    "It is important to note that the availability of a method in NotificationCompat does not guarantee that the corresponding feature will be provided on older devices.": [
        "Execution",
        "Gizmo",
        "Age",
        "Intentionally_act",
        "Supply",
        "Likelihood",
        "Importance"
    ],
    "In some cases calling a newly-introduced API results in a no-op on older devices.": [
        "Instance",
        "Gizmo",
        "Relational_quantity",
        "Causation",
        "Age",
        "Execution"
    ],
    "For example, NotificationCompat.addAction ( ) displays the action button on a device running Android 4.1 ( API level 16 ) and higher only.": [
        "Instance",
        "Intentionally_act",
        "Clothing_parts",
        "Gizmo",
        "Rank",
        "Sole_instance",
        "Position_on_a_scale",
        "Execution"
    ],
    "The following is a summary of the most notable behavior changes for Android notifications.": [
        "Conduct",
        "Undergo_change",
        "Telling"
    ],
    "The user's activity is in fullscreen mode ( the app uses fullScreenIntent ).": [
        "Intentionally_act",
        "Using"
    ],
    "The notification has high priority and uses ringtones or vibrations on devices running Android 7.1 ( API level 25 ) and lower.": [
        "Telling",
        "Gizmo",
        "Position_on_a_scale",
        "Rank",
        "Using",
        "Operating_a_system",
        "Inclusion"
    ],
    "The notification channel has high importance on devices running Android 8.0 ( API level 26 ) and higher.": [
        "Telling",
        "Natural_features",
        "Importance",
        "Gizmo",
        "Position_on_a_scale",
        "Rank",
        "Position_on_a_scale",
        "Operating_a_system",
        "Inclusion"
    ],
    "Small icon: This is required and set with setSmallIcon ( ).": [
        "Dimension",
        "Being_necessary",
        "Intentionally_create"
    ],
    "App name: This is provided by the system.": [
        "Gizmo",
        "Supply"
    ],
    "Time stamp: This is provided by the system but you can override with setWhen ( ) or hide it with setShowWhen ( false ).": [
        "Measure_duration",
        "Gizmo",
        "Artificiality",
        "Capability",
        "Eclipse",
        "Supply",
        "Body_movement"
    ],
    "Large icon: This is optional ( usually used only for contact photos ; do not use it for your app icon ) and set with setLargeIcon ( ).": [
        "Sole_instance",
        "Contacting",
        "Physical_artworks",
        "Intentionally_create",
        "Size",
        "Using",
        "Using",
        "Intentionally_act"
    ],
    "Title: This is optional and set with setContentTitle ( ).": [
        "Observable_body_parts",
        "Intentionally_create"
    ],
    "Text: This is optional and set with setContentText ( ).": [
        "Intentionally_create"
    ],
    "Urgent: Makes a sound and appears as a heads-up notification.": [
        "Sensation",
        "Telling",
        "Causation",
        "Coming_to_be"
    ],
    "Low: No sound and does not appear in the status bar.": [
        "Position_on_a_scale",
        "Quantity",
        "Sensation",
        "Intentionally_act",
        "Buildings",
        "Coming_to_be"
    ],
    "Total silence: blocks all sounds and vibrations, including from alarms, music, videos, and games.": [
        "Killing",
        "Sensation",
        "Emotion_directed",
        "Performing_arts",
        "Completeness",
        "Measure_linear_extent",
        "Quantity",
        "Inclusion"
    ],
    "Alarms only: blocks all sounds and vibrations, except from alarms.": [
        "Emotion_directed",
        "Sensation",
        "Emotion_directed",
        "Sole_instance",
        "Quantity",
        "Measure_linear_extent"
    ],
    "Priority only: users can configure which system-wide categories can interrupt them ( such as only alarms, reminders, events, calls, or messages ).": [
        "Sole_instance",
        "Experiencer_obj",
        "Evoking",
        "Event",
        "Contacting",
        "Interrupt_process",
        "Capability"
    ],
    "For messages and calls, users can also choose to filter based on who the sender or caller is ( figure 13 ).": [
        "Contacting",
        "Capability",
        "Choosing"
    ],
    "Introduced expandable notification templates ( called notification styles ), allowing for larger notification content area to display information.": [
        "Telling",
        "Hair_configuration",
        "Locale",
        "Information",
        "Execution",
        "Dimension",
        "Grant_permission"
    ],
    "Users can use a one finger swipe up/down gesture to expand a notification.": [
        "Observable_body_parts",
        "Gesture",
        "Telling",
        "Cardinal_numbers",
        "Capability",
        "Expansion",
        "Using"
    ],
    "Also introduced the ability to add additional actions, in the form of buttons, to a notification.": [
        "Intentionally_act",
        "Clothing_parts",
        "Telling",
        "Increment",
        "Capability"
    ],
    "Added ability for users to turn notifications off on a per-app basis in settings.": [
        "Telling",
        "Locative_relation",
        "Body_decoration",
        "Cause_change",
        "Capability"
    ],
    "Notification listener services were added to the API.": [
        "Telling",
        "Public_services"
    ],
    "Android Wear ( now called Wear OS ) support was added in API level 20.": [
        "Temporal_collocation",
        "Taking_sides",
        "Rank",
        "Cardinal_numbers",
        "Wearing",
        "Execution"
    ],
    "Introduced lock screen and heads-up notifications.": [
        "Hair_configuration",
        "Telling"
    ],
    "The user can now put the phone into Do Not Disturb mode and configure which notifications are allowed to interrupt them when the device is in priority only mode.": [
        "Contacting",
        "Telling",
        "Temporal_collocation",
        "Gizmo",
        "Sole_instance",
        "Stimulus_focus",
        "Interrupt_process",
        "Temporal_collocation",
        "Causation",
        "Intentionally_act",
        "Grant_permission",
        "Capability"
    ],
    "Methods added to API set whether or not a notification is displayed on the lock screen ( setVisibility ( ) ) and for specifying `` public'' version of the notification text.": [
        "Execution",
        "Telling",
        "Hair_configuration",
        "Intentionally_create"
    ],
    "setPriority ( ) method added which tells the system how `` interruptive'' this notification should be ( e.g. setting it to high makes the notification appear as a heads-up notification ).": [
        "Execution",
        "System",
        "Telling",
        "Self_motion",
        "Being_obligated",
        "Dimension",
        "Coming_to_be"
    ],
    "Notification stacks support added to Android Wear ( now called Wear OS ) devices.": [
        "Telling",
        "Temporal_collocation",
        "Gizmo",
        "Wearing",
        "Taking_sides",
        "Execution"
    ],
    "Put notifications into a stack using setGroup ( ).": [
        "Telling",
        "Causation",
        "Using"
    ],
    "Note that notification stacks were not supported on tablets nor phones yet.": [
        "Telling",
        "Taking_sides",
        "Contacting",
        "Becoming_aware"
    ],
    "Notification stacks would later become known as a group or bundle.": [
        "Telling",
        "Organization",
        "Time_vector",
        "Becoming"
    ],
    "Notification templates were restyled to put emphasis on the hero image and avatar.": [
        "Telling",
        "Similarity",
        "Causation",
        "Place_weight_on"
    ],
    "Three notification templates were added: one for messaging apps and the other two for decorating custom content views with the expandable affordance and other system decorations.": [
        "Telling",
        "Cardinal_numbers",
        "Increment",
        "Cardinal_numbers",
        "Custom",
        "Gizmo",
        "Cardinal_numbers",
        "Categorization",
        "Abounding_with"
    ],
    "Support added to handheld devices ( phones and tablets ) for notification groups.": [
        "Taking_sides",
        "Gizmo",
        "Contacting",
        "Telling",
        "Execution"
    ],
    "Uses the same API as Android Wear ( now called Wear OS ) notification stacks introduced in Android 5.0 ( API level 21 ).": [
        "Telling",
        "Identicality",
        "Wearing",
        "Rank",
        "Execution",
        "Using",
        "Temporal_collocation"
    ],
    "Users can reply directly inside of a notification ( they can enter text which will then be routed to the notification's parent app ) using inline reply.": [
        "Telling",
        "Temporal_collocation",
        "Kinship",
        "Using",
        "Communication_response",
        "Capability",
        "Execution"
    ],
    "Individual notifications must now be put in a specific channel.": [
        "People",
        "Temporal_collocation",
        "Natural_features",
        "Telling",
        "Being_obligated",
        "Causation"
    ],
    "Users can now turn off notifications per channel, instead of turning off all notifications from an app.": [
        "Temporal_collocation",
        "Locative_relation",
        "Natural_features",
        "Telling",
        "Quantity",
        "Capability",
        "Cause_change",
        "Becoming"
    ],
    "Apps with active notifications display a notification `` badge'' on top of their app icon on the home/launcher screen.": [
        "Being_active",
        "Telling",
        "Telling",
        "Part_orientational"
    ],
    "Users can now snooze a notification from the drawer.": [
        "Temporal_collocation",
        "Sleep",
        "Telling",
        "Containers",
        "Capability"
    ],
    "You can set an automatic timeout for a notification.": [
        "Telling",
        "Capability",
        "Intentionally_create"
    ],
    "You can also set the notification's background color.": [
        "Telling",
        "Stimulus_focus",
        "Intentionally_create",
        "Capability"
    ],
    "Some APIs regarding notification behaviors were moved from Notification to NotificationChannel.": [
        "Relational_quantity",
        "Telling",
        "Telling",
        "Topic",
        "Conduct",
        "Motion"
    ],
    "For example, use NotificationChannel.setImportance ( ) instead of NotificationCompat.Builder.setPriority ( ) for Android 8.0 and higher.": [
        "Instance",
        "Position_on_a_scale"
    ],
    "I just finished a GCM app.": [
        "Process_completed_state"
    ],
    "It still works well if you close the app.": [
        "Being_employed",
        "Continued_state_of_affairs",
        "Social_connection"
    ],
    "The thing is you should have already opened the app for once.": [
        "Time_vector",
        "Being_obligated",
        "Secrecy_status",
        "Time_vector"
    ],
    "create two class to achieve this goal: GcmBroadcastReceiver and GcnIntentService.": [
        "Accomplishment",
        "Cardinal_numbers",
        "Intentionally_create"
    ],
    "Find more information LINK": [],
    "Here is the trick": [],
    "the class being extended is WakeFulBroadcastReceiver.": [
        "Change_event_time"
    ],
    "There is a WAKE_LOCK permission in your Manifest.xml.": [
        "Grant_permission",
        "Existence"
    ],
    "This allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming.": [
        "Sleep",
        "Mental_property",
        "Activity_ongoing",
        "Using",
        "Grant_permission"
    ],
    "However, if you extend BroadcastReceiver, it will not work after the app is closed.": [
        "Concessive",
        "Expansion",
        "Body_movement",
        "Working_on"
    ],
    "It will not work on killing the app from task manager, but work if you just slide it away from recent.": [
        "Being_obligated",
        "People_by_vocation",
        "Working_on",
        "Relative_time",
        "Change_position_on_a_scale",
        "Killing"
    ],
    "I tried doing on whatsapp by killing it and ask someone to send a msg to me, and I haven't got any notification.": [
        "Killing",
        "Quantity",
        "Telling",
        "Execution",
        "Sending",
        "Intentionally_act",
        "Execution",
        "Attempt"
    ],
    "Then I started the app, and I got notification.": [
        "Temporal_collocation",
        "Telling",
        "Execution",
        "Activity_start"
    ],
    "Yes, it is possible ` to receive notifications from google cloud message when the application is fully closed'.": [
        "Telling",
        "Temporal_collocation",
        "Using",
        "Degree",
        "Likelihood",
        "Body_movement",
        "Receiving"
    ],
    "Infact, A broadcast receiver is the mechanism GCM uses to deliver messages.": [
        "Delivery",
        "Using",
        "Execution"
    ],
    "You need to have implement a LINK and declare it in the AndroidManifest.xml.": [
        "Gizmo",
        "Required_event"
    ],
    "Please refer to the following code snippet.": [
        "Relative_time",
        "Part_piece"
    ],
    "AndroidManifest.xml": [],
    "Java code": [],
    "When GCM delivers a message to your device, BroadcastReceiver will receive the message and call the onReceive -LRB- -RRB- function, wherein you may start a service to actually perform the intended task for you.": [
        "Temporal_collocation",
        "Gizmo",
        "Rite",
        "Being_obligated",
        "Likelihood",
        "Process_start",
        "Delivery",
        "Intentionally_act",
        "Receiving",
        "Execution"
    ],
    "The above Code example uses a specialized BroadcastReceiver called WakefulBroadcastReceiver, which makes sure that the device doesn't go to sleep, while the service is doing its work.": [
        "Instance",
        "Gizmo",
        "Sleep",
        "Public_services",
        "Working_on",
        "Intentionally_act",
        "Intentionally_act",
        "Becoming",
        "Using",
        "Verification",
        "Execution"
    ],
    "Refer to the Official Android Page for the same: LINK": [
        "Contacting",
        "Execution",
        "Identicality"
    ],
    "I've been trying another phone and the second worked perfectly, even when the phone was off.": [
        "Measure_duration",
        "Temporal_collocation",
        "Contacting",
        "Increment",
        "Locative_relation",
        "Attempt",
        "Being_employed"
    ],
    "The first had a room that did not allow to be notified when the app was closed ... Thanks to all": [
        "Ordinal_numbers",
        "Building_subparts",
        "Temporal_collocation",
        "Judgment_direct_address",
        "Quantity",
        "Intentionally_act",
        "Being_obligated",
        "Body_movement",
        "Telling",
        "Grant_permission"
    ],
    "When the app is closed forcelly by the user: notifications don't arrive": [
        "Temporal_collocation",
        "Telling",
        "Body_movement",
        "Intentionally_act",
        "Execution"
    ],
    "It's a feature of the Android platform.": [],
    "Force stopping an application by the user puts the application in a stopped state and none of its code is run, including any broadcast receivers declared in manifest.": [
        "Military",
        "Using",
        "Political_locales",
        "Activity_stop",
        "Quantity",
        "Activity_stop",
        "Inclusion",
        "Causation",
        "Execution"
    ],
    "Only when the user explicitly launches the app it is put in a state where the receivers get fired.": [
        "Sole_instance",
        "Temporal_collocation",
        "Political_locales",
        "Shoot_projectiles",
        "Causation",
        "Execution",
        "Locative_relation",
        "Activity_start"
    ],
    "For further reading: LINK": [],
    "After some testing I did on this issue, I found out that it behaves differently on how the app is closed.": [
        "Operational_testing",
        "Relational_quantity",
        "Intentionally_act",
        "Conduct",
        "Point_of_dispute",
        "Body_movement",
        "Becoming_aware"
    ],
    "If you close the app while the cable is connected to the device, it then blocks every notification when the app is closed.": [
        "Contacting",
        "Gizmo",
        "Frequency",
        "Telling",
        "Temporal_collocation",
        "Measure_linear_extent",
        "Social_connection",
        "Body_movement",
        "Cognitive_connection",
        "Temporal_collocation"
    ],
    "However, if you take the cable off the device and close the app, when you send the notification, everything works again, as it should !": [
        "Concessive",
        "Contacting",
        "Gizmo",
        "Temporal_collocation",
        "Telling",
        "Being_employed",
        "Being_obligated",
        "Social_connection",
        "Taking_time",
        "Sending"
    ],
    "In case you get a `` Waiting for the Debugger'' popup message, just restart the device and then send a test notification !": [
        "Instance",
        "Gizmo",
        "Temporal_collocation",
        "Operational_testing",
        "Telling",
        "Activity_resume",
        "Sending",
        "Waiting",
        "Execution"
    ],
    "Firebase API has two types of messages, they call them:": [
        "Cardinal_numbers",
        "Execution",
        "Inclusion"
    ],
    "find more information from LINK": [
        "Increment",
        "Information",
        "Locating"
    ],
    "IMPORTANT: You can't send data payload messages from Firebase Console, Console only delivers notification message.": [
        "Sole_instance",
        "Telling",
        "Delivery",
        "Causation",
        "Capability"
    ],
    "So I have mentioned how to send push notification using postman please follow below steps for that.": [
        "Cause_motion",
        "Telling",
        "Stimulus_focus",
        "Intentionally_act",
        "Sending",
        "Relative_time",
        "Using"
    ],
    "You must send push messages with data payload because of data payload - Doesn't matter whether your application is in the foreground or background or killed, these messages will always be delivered to onMessageReceived -LRB- -RRB- method.": [
        "Cause_motion",
        "Intentionally_act",
        "Using",
        "Killing",
        "Frequency",
        "Execution",
        "Being_obligated",
        "Sending",
        "Delivery",
        "Causation"
    ],
    "In Android 8.0 Oreo if the application is closed, then notification is not received It is because of DOZE mode and battery optimization, you just have to turn off battery optimization for all apps or particular app.": [
        "Using",
        "Temporal_collocation",
        "Telling",
        "Sleep",
        "Offenses",
        "Locative_relation",
        "Quantity",
        "Idiosyncrasy",
        "Body_movement",
        "Receiving",
        "Cause_change",
        "Causation",
        "Being_obligated"
    ],
    "Turn off battery optimization for your app by below step:": [
        "Offenses",
        "Intentionally_act",
        "Temporal_subregion"
    ],
    "Settings >> Battery >> battery Optimization >> find your app >> select >> if optimized click on don't optimize >> try pushing notification": [
        "Offenses",
        "Offenses",
        "Sounds",
        "Intentionally_act",
        "Attempt",
        "Cause_change_of_position_on_a_scale",
        "Telling",
        "Coming_to_believe",
        "Choosing"
    ],
    "Send push notification using postman": [
        "Cause_change_of_position_on_a_scale",
        "Telling",
        "Using",
        "Causation"
    ],
    "Step 1: LINK": [],
    "Step 2: Set this two into Header": [
        "Intentionally_act",
        "Cardinal_numbers",
        "Cardinal_numbers"
    ],
    "Authorization: key = AIzaSyBuRl1Ikz3VXFvU7xW9mmg51lJ3uDSH": [],
    "Content-Type: application/json": [],
    "Step 3: Send this json": [
        "Intentionally_act",
        "Cardinal_numbers",
        "Causation"
    ],
    "Hope this helps.": [],
    "Enjoy :-RRB-: -RRB-": [],
    "I was having the same issue on Oneplus phone.": [
        "Point_of_dispute",
        "Contacting",
        "Identicality",
        "Possession"
    ],
    "As mentioned by many people above, the issue was forceful app termination.": [
        "People",
        "Point_of_dispute",
        "Firing",
        "Quantity"
    ],
    "In my case, it was done due to `` Recent App management'' setting as shown below.": [
        "Instance",
        "Relative_time",
        "Evidence",
        "Intentionally_act"
    ],
    "Once I changed it to `` Normal clear'' setting everything started working fine.": [
        "Desirability",
        "Frequency",
        "Undergo_change",
        "Activity_start",
        "Being_employed"
    ],
    "Please enable JavaScript in your browser to enjoy a better experience.": [
        "Expertise",
        "Desirability",
        "Experiencer_focus"
    ],
    "How to Fix Android Delayed Notifications By Karrar Haider in Mobile.": [
        "Predicament",
        "Telling"
    ],
    "Recently, notifications on my Android phone were being delayed by up to 15 minutes, and sometimes didn't even reach me until I open the app.": [
        "Temporal_collocation",
        "Telling",
        "Contacting",
        "Measure_duration",
        "Frequency",
        "Being_up_to_it",
        "Cardinal_numbers",
        "Execution",
        "Secrecy_status",
        "Change_event_time",
        "Intentionally_act"
    ],
    "It was quite frustrating and I missed many urgent messages.": [
        "Quantity",
        "Hit_or_miss"
    ],
    "However, it turns out it was mostly a fault on my end.": [
        "Concessive",
        "Temporal_subregion",
        "Judgment"
    ],
    "As I was trying to optimize my phone for better performance, I made some mistakes in the process.": [
        "Contacting",
        "Execution",
        "Performing_arts",
        "Desirability",
        "Relational_quantity",
        "Causation",
        "Attempt"
    ],
    "If you are also facing a laggy Android phone causing delayed notifications, then there are a bunch of reasons why it may be happening.": [
        "Observable_body_parts",
        "Contacting",
        "Telling",
        "Reason",
        "Change_event_time",
        "Execution",
        "Likelihood",
        "Event",
        "Causation",
        "Causation",
        "Existence",
        "Temporal_collocation"
    ],
    "In this post, I'll list all the solutions to delayed notifications on Android.": [
        "Sending",
        "Quantity",
        "Change_event_time",
        "Telling"
    ],
    "Locked Out of Your Android Device ?": [
        "Hair_configuration",
        "Gizmo",
        "Partitive"
    ],
    "Here's What You Can Do": [
        "Locative_relation",
        "Capability",
        "Intentionally_act"
    ],
    "Getting locked out of your own Android phone can be really frustrating and quite embarrassing.": [
        "Inhibit_movement",
        "Contacting",
        "Stimulus_focus",
        "Possession",
        "Partitive",
        "Getting",
        "Capability"
    ],
    "Maybe you have ... Read more": [
        "Increment"
    ],
    "Stop using battery & phone optimizing apps Most phone and battery optimizing apps close all the background processes to free up RAM and put less load on the phone.": [
        "Offenses",
        "Relational_quantity",
        "Quantity",
        "Contacting",
        "Quantity",
        "Processing_materials",
        "Social_connection",
        "Causation",
        "Using",
        "Activity_stop"
    ],
    "This may boost your phone speed, but it will lead to delayed or no notifications from your apps.": [
        "Contacting",
        "Change_event_time",
        "Quantity",
        "Telling",
        "Likelihood",
        "Intoxicants",
        "Causation"
    ],
    "A lot of these background processes sync data and deliver notifications.": [
        "Telling",
        "Quantity",
        "Processing_materials",
        "Delivery"
    ],
    "Once they are disabled, you would not be able to receive any updates from the installed apps unless you open them or they have a feature to automatically turn on.": [
        "Frequency",
        "Quantity",
        "Installing",
        "Cause_change",
        "Render_nonfunctional",
        "Secrecy_status",
        "Receiving",
        "Capability"
    ],
    "Don't kill background processes yourself Following up to the above point, many users like to disable background processes from the Android settings to get a bit performance boost.": [
        "Intentionally_act",
        "Render_nonfunctional",
        "Performing_arts",
        "Processing_materials",
        "Relative_time",
        "Locale",
        "Quantity",
        "Quantity",
        "Being_up_to_it",
        "Killing",
        "Execution",
        "Experiencer_focus"
    ],
    "Don't do it, at least not for the apps from which you are expecting notifications, such as Facebook Messenger or WhatsApp.": [
        "Telling",
        "Intentionally_act",
        "Relational_quantity",
        "Expectation",
        "Intentionally_act"
    ],
    "You should also refrain from task-killing apps that promise to completely shut down the app when you close an app using them.": [
        "Body_movement",
        "Ingestion",
        "Temporal_collocation",
        "Being_obligated",
        "Using",
        "Forgoing",
        "Social_connection",
        "Commitment"
    ],
    "They also kill background processes while closing the app interface.": [
        "Body_movement",
        "Execution",
        "Killing"
    ],
    "10 Apps to Enhance & Optimize Your Android Smartphone": [
        "Cardinal_numbers",
        "Cause_to_make_progress"
    ],
    "Android, despite of all optimization efforts by Google, tends to slow down with usage over time.": [
        "Quantity",
        "Attempt",
        "Ingestion",
        "Measure_duration",
        "Likelihood"
    ],
    "The new ... Read more": [],
    "Use Power Saver mode wisely If you have a phone running Android Lollipop or newer operating system, then you must know about the Power Saver mode that helps you get more juice out of the battery.": [
        "Contacting",
        "Using",
        "Substance",
        "Offenses",
        "Execution",
        "Gizmo",
        "Increment",
        "Being_obligated",
        "Execution",
        "Execution",
        "Partitive",
        "Assistance",
        "Temporal_collocation",
        "Certainty"
    ],
    "Usually, you are asked to turn on the battery saver mode when your battery goes below 15 %, which is great for keeping your phone alive when you need it.": [
        "Offenses",
        "Temporal_collocation",
        "Cardinal_numbers",
        "Contacting",
        "Required_event",
        "Becoming",
        "Desirability",
        "Dead_or_alive",
        "Activity_ongoing",
        "Becoming",
        "Execution"
    ],
    "However, Power Saver mode disables an important feature of the phone i.e. data syncing.": [
        "Concessive",
        "Contacting",
        "Execution",
        "Importance",
        "Render_nonfunctional"
    ],
    "While Power Saver mode is enabled, no app will syncs data in the background to keep you updated so you will not receive any notifications either.": [
        "Quantity",
        "Telling",
        "Quantity",
        "Execution",
        "Receiving",
        "Activity_ongoing"
    ],
    "Don't keep Power Saver mode enabled all the time, and only enable it on low battery when you are sure you are not waiting for an important message.": [
        "Intentionally_act",
        "Offenses",
        "Temporal_collocation",
        "Execution",
        "Position_on_a_scale",
        "Importance",
        "Frequency",
        "Waiting",
        "Likelihood",
        "Sole_instance",
        "Activity_ongoing"
    ],
    "Keep Wi-Fi enabled at all times In case you only receive notifications as soon as you unlock the screen, then there is a chance that your Wi-Fi gets disabled when your phone goes to sleep.": [
        "Timespan",
        "Instance",
        "Telling",
        "Render_nonfunctional",
        "Temporal_collocation",
        "Sleep",
        "Quantity",
        "Sole_instance",
        "Contacting",
        "Receiving",
        "Existence",
        "Execution",
        "Becoming",
        "Likelihood",
        "Temporal_collocation"
    ],
    "It's good for battery saving, but bad for data syncing.": [
        "Offenses",
        "Desirability",
        "Desirability"
    ],
    "Here's how to fix it:": [
        "Locative_relation",
        "Resolve_problem"
    ],
    "Go to phone Settings and tap on Wi-Fi.": [
        "Contacting",
        "Attaching",
        "Motion"
    ],
    "Now tap on the main menu at the top-right corner and select Advanced from it.": [
        "Temporal_collocation",
        "First_rank",
        "Attaching"
    ],
    "On the next page, ensure `` Keep Wi-Fi on during sleep'' option is set to Always.": [
        "Contacting",
        "Locative_relation",
        "Possibilities",
        "Intentionally_create"
    ],
    "This should keep Wi-Fi on when the screen goes black and show notifications in time.": [
        "Temporal_collocation",
        "Reasoning",
        "Telling",
        "Measure_duration",
        "Being_obligated",
        "Color",
        "Becoming",
        "Activity_ongoing"
    ],
    "Fixing delayed notifications for a particular app If the notifications are being delayed for a particular app and not all of the apps, then there are multiple ways to fix it.": [
        "Telling",
        "Change_event_time",
        "Idiosyncrasy",
        "Quantity",
        "Resolve_problem",
        "Resolve_problem",
        "Quantity",
        "Execution",
        "Existence",
        "Temporal_collocation"
    ],
    "First, make sure it is properly syncing data in the background over mobile data connection:": [
        "Bringing",
        "Social_connection",
        "Ordinal_numbers",
        "Verification"
    ],
    "Go to phone Settings, tap on Data Usage.": [
        "Contacting",
        "Motion",
        "Attaching"
    ],
    "Select the respective app, make sure `` Restrict app background data'' feature is turned off.": [
        "Choosing",
        "Cause_change",
        "Verification",
        "Locative_relation"
    ],
    "If that's not the problem, then you can also try deleting cache of the app.": [
        "Predicament",
        "Temporal_collocation",
        "Attempt",
        "Capability"
    ],
    "Go to Apps from the phone Settings and open up the respective app.": [
        "Contacting",
        "Locative_relation",
        "Motion",
        "Secrecy_status"
    ],
    "Tap on `` Clear Cache'' button to flush the cache.": [
        "Clothing_parts",
        "Emptying"
    ],
    "You can also tap on ` Clear data'' button to delete all the data of the app.": [
        "Clothing_parts",
        "Quantity",
        "Obviousness",
        "Attaching",
        "Capability"
    ],
    "However, this will also delete all the app preferences and saved data unless it is backed up in the cloud.": [
        "Concessive",
        "Quantity",
        "Taking_sides",
        "Locative_relation"
    ],
    "Decrease Android Heartbeat Interval Almost all of the messaging apps in your phone use Google Cloud Messaging ( GCM ) service to send push notifications.": [
        "Change_position_on_a_scale",
        "Frequency",
        "Quantity",
        "Contacting",
        "Public_services",
        "Cause_motion",
        "Telling",
        "Causation",
        "Relational_quantity"
    ],
    "Your phone keeps a stable connection with this service to ensure you receive timely notifications.": [
        "Buildings",
        "Public_services",
        "Telling",
        "Contacting",
        "Social_connection",
        "Receiving",
        "Activity_ongoing"
    ],
    "For this purpose, your phone will send a network packet called a `` Heartbeat'' after every few minutes to ensure you are connected and able to receive notifications.": [
        "Contacting",
        "Network",
        "Measure_volume",
        "Frequency",
        "Measure_duration",
        "Telling",
        "Quantity",
        "Receiving",
        "Cognitive_connection",
        "Causation",
        "Capability",
        "Execution"
    ],
    "The packet interval is 15 minutes for Wi-Fi connection, and 28 minutes for mobile data connection.": [
        "Measure_volume",
        "Measure_duration",
        "Social_connection",
        "Bringing",
        "Frequency",
        "Cardinal_numbers"
    ],
    "Now there is a tiny problem, most routers and carriers disconnect from an inactive port after few minutes of inactivity, usually 5 minutes.": [
        "Temporal_collocation",
        "Predicament",
        "Measure_duration",
        "Dimension",
        "Locale_by_use",
        "Being_active",
        "Quantity",
        "Existence"
    ],
    "So if you will not receive a notification for 5 minutes, then your connection will be terminated.": [
        "Telling",
        "Social_connection",
        "Measure_duration",
        "Activity_stop",
        "Receiving",
        "Temporal_collocation"
    ],
    "And you will not receive any notifications until another packet ( heartbeat ) is sent and a connection is made.": [
        "Telling",
        "Measure_volume",
        "Social_connection",
        "Quantity",
        "Increment",
        "Causation",
        "Receiving",
        "Causation"
    ],
    "To solve this problem, we simply need to speed up the frequency of the heartbeat packet.": [
        "Predicament",
        "Locative_relation",
        "Frequency",
        "Measure_volume",
        "Resolve_problem",
        "Intoxicants",
        "Required_event"
    ],
    "And for this purpose, you can use the free app Push Notifications Fixer.": [
        "Expensiveness",
        "Telling",
        "Cause_motion",
        "Capability",
        "Using"
    ],
    "After installation, you will see two options, Mobile heartbeat interval, and Wi-Fi heartbeat interval.": [
        "Installing",
        "Possibilities",
        "Frequency",
        "Cardinal_numbers",
        "Grasp"
    ],
    "Both of these options will be set to 5 minutes, which is perfect as most connections usually timeout after 5 minutes or more.": [
        "Possibilities",
        "Social_connection",
        "Increment",
        "Measure_duration",
        "Relational_quantity",
        "Quantity",
        "Intentionally_create",
        "Cause_to_make_progress"
    ],
    "Tap on the Apply button to apply this heartbeat interval and you should start receiving notifications in time.": [
        "Clothing_parts",
        "Telling",
        "Measure_duration",
        "Frequency",
        "Being_obligated",
        "Using",
        "Receiving",
        "Activity_start"
    ],
    "Increasing the heartbeat interval impacts your overall battery timing.": [
        "Cause_change_of_position_on_a_scale",
        "Clothing",
        "Offenses",
        "Frequency",
        "Impact"
    ],
    "However, the impact is very minimum and I didn't see any noticeable difference in battery time after installing this app.": [
        "Concessive",
        "Objective_influence",
        "Quantity",
        "Similarity",
        "Offenses",
        "Measure_duration",
        "Degree",
        "Installing",
        "Extreme_value",
        "Intentionally_act",
        "Grasp"
    ],
    "In case you want to switch back to default heartbeat interval, either uninstall the app or set the default interval right from the app.": [
        "Instance",
        "Observable_body_parts",
        "Frequency",
        "Change_tool",
        "Intentionally_create",
        "Correctness",
        "Desiring"
    ],
    "How to Survive a Dying Battery on Android": [
        "Death",
        "Offenses",
        "Surviving"
    ],
    "Short battery life is one of the biggest downfalls of Android phones, and there are times when you ... Read more": [
        "Duration_attribute",
        "Offenses",
        "Timespan",
        "Increment",
        "Contacting",
        "Temporal_collocation",
        "Reading",
        "Cardinal_numbers",
        "Existence"
    ],
    "Ending thoughts Push Notifications Fixer fixed my problem of delayed notifications.": [
        "Process_end",
        "Awareness",
        "Telling",
        "Change_event_time",
        "Telling",
        "Cause_motion",
        "Predicament",
        "Resolve_problem"
    ],
    "And I guess I was a fool to use Power Saver feature all the time in hopes of getting more up time.": [
        "Increment",
        "Measure_duration",
        "Estimating",
        "Execution",
        "Execution",
        "Using",
        "Frequency",
        "Experiencer_focus",
        "Desiring"
    ],
    "The above-mentioned solutions should be enough to solve your problem of delayed Android notifications.": [
        "Change_event_time",
        "Telling",
        "Predicament",
        "Resolve_problem",
        "Sufficiency",
        "Being_obligated"
    ],
    "Do share which of these methods worked for you.": [
        "Execution",
        "Being_employed"
    ],
    "5 Common Causes to Laggy Android Devices ( And How to Fix Them ) Hongkiat.com": [
        "Gizmo",
        "Predicament",
        "Causation"
    ],
    "How to Manage Your Android Smartphone From DesktopAgus": [
        "Operating_a_system"
    ],
    "How to Sync Mail, Contacts & Calendars From Android to iOSAshutosh KS": [
        "Sent_items",
        "Contacting"
    ],
    "10 Best Music Player Apps for AndroidRean": [
        "Participation",
        "Cardinal_numbers",
        "Performing_arts"
    ],
    "How to Know If Your Android Phone Is Victim of Malicious ActsKarrar Haider": [
        "Contacting",
        "Undergoing",
        "Awareness"
    ],
    "10 Best Free Spy Apps for AndroidHongkiat Lim": [
        "Perception_active",
        "Cardinal_numbers"
    ],
    "Top 5 Android Emulators For Your DesktopAshutosh KS": [
        "Part_orientational"
    ],
    "10 Apps to Connect Computer to Android DevicesAshutosh KS": [
        "Cardinal_numbers",
        "Cognitive_connection"
    ],
    "2021 Reproduction of materials found on this site, in any form, without explicit permission is prohibited.": [
        "Substance",
        "Locale_by_use",
        "Candidness",
        "Prohibiting",
        "Quantity",
        "Grant_permission",
        "Locating"
    ],
    "Publishing policy & dash ; Privacy Policy": [
        "Self_motion",
        "Law",
        "Law"
    ],
    "By Karrar Haider in Mobile.": [],
    "polymorphic deserialization of JSON with jackson, property type becomes &quot;null&quot;": [
        "Possession",
        "Becoming"
    ],
    "As promised, I'm putting an example for how to use annotations to serialize/deserialize polymorphic objects, I based this example in the Animal class from the tutorial you were reading.": [
        "Instance",
        "Reading",
        "Using",
        "Commitment"
    ],
    "First of all your Animal class with the Json Annotations for the subclasses.": [
        "Ordinal_numbers",
        "Quantity"
    ],
    "Then your subclasses, Dog and Cat.": [
        "Temporal_collocation"
    ],
    "As you can see, there is nothing special for Cat and Dog, the only one that know about them is the abstract class Animal, so when deserializing, you'll target to Animal and the ObjectMapper will return the actual instance as you can see in the following test:": [
        "Temporal_collocation",
        "Instance",
        "Operational_testing",
        "Sole_instance",
        "Cardinal_numbers",
        "Actually_occurring_entity",
        "Relative_time",
        "Perception_experience",
        "Capability",
        "Awareness",
        "Aiming",
        "Execution",
        "Existence"
    ],
    "Output after running the Test class:": [
        "Operational_testing",
        "Execution"
    ],
    "-LCB-'' @type'': `` Dog'', `` name'': `` ruffus'', `` breed'': `` english shepherd'' -RCB-": [],
    "Deserialized dogJson Class: Dog": [],
    "-LCB-'' @type'': `` Cat'', `` name'': `` goya'', `` favoriteToy'': `` mice'' -RCB-": [],
    "Deserialized catJson Class: Cat": [],
    "Hope this helps,": [],
    "Jose Luis": [],
    "If using the fasterxml then,": [
        "Temporal_collocation",
        "Using"
    ],
    "these changes might be needed": [
        "Undergo_change",
        "Likelihood",
        "Required_event"
    ],
    "in main method --": [],
    "use": [],
    "and in Animal deserialize -LRB- -RRB- function, make below changes": [
        "Undergo_change",
        "Causation"
    ],
    "This works for fasterxml.jackson.": [],
    "If it still complains of the class fields.": [
        "Complaining",
        "Continued_state_of_affairs",
        "Fields"
    ],
    "Use the same format as in the json for the field names -LRB- with'' _'' - underscore -RRB-.": [
        "Convey_importance",
        "Identicality",
        "Fields",
        "Using"
    ],
    "as this / / mapper.setPropertyNamingStrategy -LRB- new CamelCaseNamingStrategy -LRB- -RRB- -RRB- ; might not be supported.": [
        "Taking_sides",
        "Age",
        "Likelihood"
    ],
    "A simple way to enable polymorphic serialization / deserialization via Jackson library is to globally configure the Jackson object mapper -LRB- jackson.databind.ObjectMapper -RRB- to add information, such as the concrete class type, for certain kinds of classes, such as abstract classes.": [
        "Buildings",
        "Information",
        "Likelihood"
    ],
    "To do that, just make sure your mapper is configured correctly.": [
        "Intentionally_act",
        "Verification"
    ],
    "For example:": [],
    "Option 1: Support polymorphic serialization / deserialization for abstract classes -LRB- and Object typed classes -RRB-": [
        "Possibilities",
        "Taking_sides"
    ],
    "Option 2: Support polymorphic serialization / deserialization for abstract classes -LRB- and Object typed classes -RRB-, and arrays of those types.": [
        "Possibilities",
        "Taking_sides",
        "Cardinal_numbers",
        "Arranging"
    ],
    "You need only one line before the declaration of the class Animal for correct polymorphic serialization/deserialization:": [
        "Suitability",
        "Required_event",
        "Sole_instance",
        "Cardinal_numbers"
    ],
    "This line means: add a meta-property on serialization or read a meta-property on deserialization -LRB- include = JsonTypeInfo.As.PROPERTY -RRB- called'' @class'' -LRB- property ='' @class'' -RRB- that holds the fully-qualified Java class name -LRB- use = JsonTypeInfo.Id.CLASS -RRB-.": [
        "Possession",
        "Evidence",
        "Cause_change_of_position_on_a_scale",
        "Categorization",
        "Containing",
        "Inclusion"
    ],
    "So, if you create a JSON directly -LRB- without serialization -RRB- remember to add the meta-property'' @class'' with the desired class name for correct deserialization.": [
        "Desiring",
        "Suitability",
        "Intentionally_create",
        "Memory"
    ],
    "More information LINK": [],
    "Handling polymorphism is either model-bound or requires lots of code with various custom deserializers.": [
        "Diversity",
        "Custom",
        "Quantity",
        "Have_as_requirement"
    ],
    "I'm a co-author of a LINK that allows for model-independent json deserialization library.": [
        "Buildings",
        "Grant_permission"
    ],
    "The solution to OP's problem can be found below.": [
        "Predicament",
        "Likelihood",
        "Locating"
    ],
    "Note that the rules are declared in a very brief manner.": [
        "Execution",
        "Degree",
        "Conduct",
        "Duration_attribute"
    ],
    "Maven depenendency for pretius-jddl -LRB- check newest version at LINK:": [
        "Expertise",
        "Inspecting"
    ],
    "Whereas @jbarrueta answer is perfect, in the 2.12 version of Jackson was introduced a new long-awaited type for the @JsonTypeInfo annotation, DEDUCTION.": [
        "Coming_to_believe",
        "Communication_response",
        "Age",
        "Cause_to_make_progress"
    ],
    "It is useful for the cases when you have no way to change the incoming json or must not do so.": [
        "Instance",
        "Temporal_collocation",
        "Quantity",
        "Intentionally_act",
        "Cause_change",
        "Execution",
        "Being_obligated"
    ],
    "I'd still recommend to use use = JsonTypeInfo.Id.NAME, as the new way LINK in complex cases when it has no way to determine which subtype to use.": [
        "Cognitive_connection",
        "Instance",
        "Temporal_collocation",
        "Age",
        "Quantity",
        "Continued_state_of_affairs",
        "Inclusion",
        "Coming_to_believe",
        "Using"
    ],
    "Now you can simply write": [
        "Temporal_collocation",
        "Capability"
    ],
    "And it will produce -LCB- `` name'': `` ruffus'', `` breed'': `` english shepherd'' -RCB- and -LCB- `` name'': `` goya'', `` favoriteToy'': `` mice'' -RCB-": [],
    "Once again, it's safer to use NAME if some of the fields may be not present, like breed or favoriteToy.": [
        "Fields",
        "Relational_quantity",
        "Likelihood",
        "Using",
        "Presence",
        "Frequency"
    ],
    "Polymorphic deserialization fails when defaultImpl is specified and a subtype contains a subtype property that is set to null": [
        "Temporal_collocation",
        "Success_or_failure",
        "Possession",
        "Inclusion",
        "Intentionally_create"
    ],
    "We have a protocol where all JSON objects contain a _ type field that indicates what the JSON represents.": [
        "Law",
        "Quantity",
        "Fields",
        "Locative_relation",
        "Communicate_categorization",
        "Evidence",
        "Inclusion"
    ],
    "In some cases, protocol objects contain other protocol objects as properties.": [
        "Instance",
        "Law",
        "Possession",
        "Relational_quantity",
        "Increment",
        "Inclusion"
    ],
    "We are currently using Jackson 2.8.7 for serialization and deserialization.": [
        "Temporal_collocation",
        "Using"
    ],
    "If we define a defaultImpl class as a catch-all for unknown types, deserialization fails for any protocol objects that contain other protocol objects if the reference to those objects is null.": [
        "Law",
        "Awareness",
        "Success_or_failure",
        "Increment",
        "Quantity",
        "Being_in_effect",
        "Inclusion",
        "Communicate_categorization"
    ],
    "It appears that Jackson attempts to substitute the null with an instance of the default class.": [
        "Instance",
        "Coming_to_be",
        "Replacing",
        "Attempt"
    ],
    "This results in a com.fasterxml.jackson.databind.JsonMappingException exception as the default class is not a subclass of the property's type.": [
        "Possession",
        "Causation"
    ],
    "The following code illustrates the problem:": [
        "Predicament",
        "Relative_time",
        "Evidence"
    ],
    "Running this code produces the exception": [
        "Execution",
        "Manufacturing"
    ],
    "If you comment out the defaultImpl portion of the annotation, the application runs as expected without an exception.": [
        "Using",
        "Expectation",
        "Part_whole",
        "Execution"
    ],
    "My general expectation would be that the deserializer would simply set the property to null.": [
        "Expectation",
        "Execution",
        "Possession",
        "Intentionally_create"
    ],
    "However, I'm somewhat new to Jackson, so perhaps I'm missing something here.": [
        "Concessive",
        "Locative_relation",
        "Degree",
        "Success_or_failure",
        "Age"
    ],
    "I believe I had a similar problem.": [
        "Predicament",
        "Being_obligated",
        "Similarity",
        "Certainty"
    ],
    "I'm guessing that the author might say that this is a question for Stack Overflow however I think that it relates to Issue # 955.": [
        "Concessive",
        "Likelihood",
        "Point_of_dispute",
        "Creating",
        "Opinion",
        "Coming_to_believe"
    ],
    "If nothing else the documentation could possibly be a little clearer.": [
        "Quantity",
        "Likelihood",
        "Capability"
    ],
    "In the meantime I think that you will need to annotate your child classes with @JsonTypeInfo and @JsonSubTypes to override the inherited annotations.": [
        "Kinship",
        "Required_event",
        "Opinion"
    ],
    "However I might have misunderstood your use case.": [
        "Reasoning",
        "Concessive",
        "Likelihood"
    ],
    "Also I'm new to Jackson, so it might be a case of the blind leading the blind.": [
        "Likelihood",
        "Age",
        "Reasoning",
        "Execution"
    ],
    "Is the following any use to you ?": [
        "Quantity",
        "Relative_time"
    ],
    "I gave your suggestion a try, and it does seem to address the issue.": [
        "Speak_on_topic",
        "Point_of_dispute",
        "Intentionally_act",
        "Attempt",
        "Giving",
        "Appearance"
    ],
    "I really appreciate the insight.": [
        "Judgment"
    ],
    "I didn't post this to StackOverflow as it seemed like buggy behavior and there were a few other tickets related to defaultImpl like you mentioned.": [
        "Clothing_parts",
        "Appearance",
        "Increment",
        "Quantity",
        "Sending",
        "Intentionally_act",
        "Conduct",
        "Cognitive_connection",
        "Existence"
    ],
    "I think the key piece of information I was missing is that the annotations are inherited by the child classes, which makes the default class apply to all of the subclasses and not just the base class.": [
        "Information",
        "Kinship",
        "Locale_by_use",
        "Importance",
        "Part_piece",
        "Success_or_failure",
        "Quantity",
        "Using",
        "Causation",
        "Opinion"
    ],
    "Your technique of overriding the annotations in each of the child classes makes sense now that I understand that.": [
        "Execution",
        "Kinship",
        "Sensation",
        "Awareness",
        "Causation",
        "Temporal_collocation"
    ],
    "Thanks again for the help.": [
        "Judgment_direct_address",
        "Assistance"
    ],
    "One thing that I ran across when I applied this approach to my production code is that you still need to keep the @JsonSubtypes annotation as part of the Base class.": [
        "Temporal_collocation",
        "Intentionally_create",
        "Locale_by_use",
        "Cardinal_numbers",
        "Continued_state_of_affairs",
        "Execution",
        "Activity_ongoing",
        "Part_whole",
        "Execution",
        "Required_event",
        "Using"
    ],
    "Your example code prints the correct type value strings, but the deserialized object types are all instances of the Default class.": [
        "Instance",
        "Quantity",
        "Suitability",
        "Instance"
    ],
    "In other words, the annotations should look something like": [
        "Simple_name",
        "Increment",
        "Being_obligated",
        "Scrutiny"
    ],
    "When I updated your sample with these annotations, Jackson correctly deserialized each object to the expected subclass.": [
        "Temporal_collocation",
        "Expectation"
    ],
    "Thanks again for your help.": [
        "Judgment_direct_address",
        "Assistance"
    ],
    "My example worked for me ( the types were as expected ), I'm using Jackson Annotations 2.8 and core 2.8.7.": [
        "Instance",
        "Gizmo",
        "Working_on",
        "Expectation",
        "Using"
    ],
    "I suspect the version of Jackson are you using explains the difference.": [
        "Similarity",
        "Using",
        "Awareness"
    ],
    "Issue # 1565 seems to imply that the behaviour has changed between versions.": [
        "Point_of_dispute",
        "Undergo_change",
        "Evidence",
        "Appearance"
    ],
    "Thank that resolved my probleme !": [
        "Judgment_direct_address",
        "Resolve_problem"
    ],
    "Jackson Polymorphic DeserializationHow to Use Jackson to Deserialize Json Fields into Polymorphic TypesDavid TruongJan 9, 2019 \u00b7 2 min readPhoto by Markus Spiske on UnsplashJackson deserialization/serialization works out of the box most of the time.": [
        "Fields",
        "Containers",
        "Measure_duration",
        "Cardinal_numbers",
        "Relational_quantity",
        "Using",
        "Being_employed",
        "Partitive"
    ],
    "Unless your JSON structure is complicated, you won't have to deal with deserializing your JSON into a polymorphic data type.An example of polymorphic deserialization is if you want your JSON object to deserialize into a java subclass.": [
        "Make_agreement_on_action",
        "Instance",
        "Buildings",
        "Desiring",
        "Being_obligated"
    ],
    "Consider the following below: If you have a JSON object for `` Vehicle'', it could be a `` Car'' or `` Plane'', each with its own fields, some unique to the other.": [
        "Fields",
        "Relational_quantity",
        "Increment",
        "Capability",
        "Possession",
        "Idiosyncrasy",
        "Categorization"
    ],
    "During deserialization, you would want Jackson to deserialize the `` Vehicle'' JSON object to the appropriate `` Car'' or `` Plane'' class.": [
        "Desiring"
    ],
    "We can do that using the @JsonTypeInfo and @JsonSubTypes annotations.": [
        "Using",
        "Intentionally_act",
        "Capability"
    ],
    "The above classes should be: The @JsonTypeInfo includes a few configuration fields to indicate how Jackson should find the classes to deserialize the JSON to.": [
        "Categorization",
        "Quantity",
        "Locating",
        "Evidence",
        "Fields",
        "Inclusion",
        "Being_obligated"
    ],
    "In this case, we are telling Jackson to use the classname to find the appropriate class to deserialize to.": [
        "Instance",
        "Locating",
        "Using"
    ],
    "The @JsonSubTypes tells Jackson which classes it should deserialize to.The above should be able to deserialize the following JSON objects into the appropriate objects:": [
        "Being_obligated",
        "Relative_time",
        "Capability"
    ],
    "Jackson Polymorphic DeserializationHow to Use Jackson to Deserialize Json Fields into Polymorphic TypesDavid TruongJan 9, 2019 \u00b7 2 min read": [
        "Fields",
        "Cardinal_numbers",
        "Using"
    ],
    "How to Use Jackson to Deserialize Json Fields into Polymorphic TypesDavid TruongJan 9, 2019 \u00b7 2 min read": [
        "Fields",
        "Cardinal_numbers",
        "Using"
    ],
    "David TruongJan 9, 2019 \u00b7 2 min read": [
        "Cardinal_numbers"
    ],
    "Photo by Markus Spiske on Unsplash": [
        "Physical_artworks"
    ],
    "Jackson deserialization/serialization works out of the box most of the time.": [
        "Containers",
        "Measure_duration",
        "Being_employed",
        "Relational_quantity",
        "Partitive"
    ],
    "Unless your JSON structure is complicated, you won't have to deal with deserializing your JSON into a polymorphic data type.": [
        "Buildings",
        "Make_agreement_on_action",
        "Being_obligated"
    ],
    "An example of polymorphic deserialization is if you want your JSON object to deserialize into a java subclass.": [
        "Instance",
        "Desiring"
    ],
    "How can I hide a fragment on start of my MainActivity( or the application)?": [
        "Eclipse",
        "Temporal_subregion",
        "Using",
        "Capability",
        "Part_piece"
    ],
    "When you complete the previous lesson, you have an app that shows an activity that consists of a single screen with a text field and a Send button.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Fields",
        "Closure",
        "Time_vector",
        "Sole_instance",
        "Activity_finish",
        "Evidence"
    ],
    "In this lesson, you add some code to the MainActivity that starts a new activity to display a message when the user taps the Send button.": [
        "Temporal_collocation",
        "Clothing_parts",
        "Relational_quantity",
        "Process_start",
        "Age",
        "Attaching",
        "Intentionally_act"
    ],
    "Follow these steps to add a method to the MainActivity class that's called when the Send button is tapped:": [
        "Relative_time",
        "Execution",
        "Temporal_collocation",
        "Clothing_parts",
        "Cause_change_of_position_on_a_scale",
        "Execution",
        "Attaching",
        "Intentionally_act"
    ],
    "In the file app > java > com.example.myfirstapp > MainActivity, add the following sendMessage ( ) method stub:": [
        "Execution",
        "Relative_time"
    ],
    "You might see an error because Android Studio can not resolve the View class used as the method argument.": [
        "Building_subparts",
        "Execution",
        "Likelihood",
        "Categorization",
        "Reasoning",
        "Using",
        "Resolve_problem",
        "Capability",
        "Grasp"
    ],
    "To clear the error, click the View declaration, place your cursor on it, and then press Alt + Enter, or Option + Enter on a Mac, to perform a Quick Fix.": [
        "Predicament",
        "Categorization",
        "Possibilities",
        "Speed",
        "Removing",
        "Intentionally_act",
        "Sounds",
        "Attempt_suasion",
        "Temporal_collocation"
    ],
    "If a menu appears, select Import class.": [
        "Importing",
        "Coming_to_be",
        "Choosing"
    ],
    "Now when the button is tapped, the system calls the sendMessage ( ) method.": [
        "Temporal_collocation",
        "Temporal_collocation",
        "Clothing_parts",
        "System",
        "Execution",
        "Attaching",
        "Execution"
    ],
    "Take note of the details in this method.": [
        "Execution",
        "Becoming_aware",
        "Conquering"
    ],
    "They're required for the system to recognize the method as compatible with the android: onClick attribute.": [
        "Gizmo",
        "Compatibility",
        "Needing",
        "Execution",
        "Becoming_aware"
    ],
    "Specifically, the method has the following characteristics:": [
        "Execution",
        "Relative_time",
        "Distinctiveness",
        "Inclusion"
    ],
    "An Intent is an object that provides runtime binding between separate components, such as two activities.": [
        "Intentionally_act",
        "Ingredients",
        "Becoming_separated",
        "Cardinal_numbers",
        "Supply"
    ],
    "The Intent represents an app's intent to do something.": [
        "Intentionally_affect",
        "Communicate_categorization"
    ],
    "You can use intents for a wide variety of tasks, but in this lesson, your intent starts another activity.": [
        "Being_obligated",
        "Dimension",
        "Increment",
        "Using",
        "Intentionally_act",
        "Process_start",
        "Capability"
    ],
    "In MainActivity, add the EXTRA_MESSAGE constant and the sendMessage ( ) code, as shown:": [
        "Evidence"
    ],
    "Expect Android Studio to encounter Can not resolve symbol errors again.": [
        "Building_subparts",
        "Expectation",
        "Capability",
        "Resolve_problem",
        "Becoming_aware"
    ],
    "To clear the errors, press Alt + Enter, or Option + Return on a Mac.": [
        "Verdict",
        "Cause_motion",
        "Possibilities",
        "Execution"
    ],
    "Your should end up with the following imports:": [
        "Import_export",
        "Relative_time",
        "Being_obligated",
        "Becoming"
    ],
    "An error still remains for DisplayMessageActivity, but that's okay.": [
        "Continued_state_of_affairs",
        "Remainder",
        "Desirability"
    ],
    "You fix it in the next section.": [
        "Part_whole",
        "Resolve_problem",
        "Locative_relation"
    ],
    "Here's what's going on in sendMessage ( ):": [
        "Locative_relation",
        "Motion"
    ],
    "The Intent constructor takes two parameters, a Context and a Class.": [
        "Terms_of_agreement",
        "Cardinal_numbers",
        "Removing"
    ],
    "The Context parameter is used first because the Activity class is a subclass of Context.": [
        "Ordinal_numbers",
        "Intentionally_act",
        "Terms_of_agreement",
        "Using"
    ],
    "The Class parameter of the app component, to which the system delivers the Intent, is, in this case, the activity to start.": [
        "System",
        "Instance",
        "Intentionally_act",
        "Ingredients",
        "Activity_start",
        "Delivery",
        "Terms_of_agreement"
    ],
    "The putExtra ( ) method adds the value of EditText to the intent.": [
        "Execution"
    ],
    "An Intent can carry data types as key-value pairs called extras.": [
        "Personal_relationship",
        "Execution",
        "Capability",
        "Intentionally_act"
    ],
    "Your key is a public constant EXTRA_MESSAGE because the next activity uses the key to retrieve the text value.": [
        "Importance",
        "Locative_relation",
        "Secrecy_status",
        "Intentionally_act",
        "Using"
    ],
    "It's a good practice to define keys for intent extras with your app's package name as a prefix.": [
        "Natural_features",
        "Execution",
        "Relational_quantity",
        "Communicate_categorization",
        "Practice"
    ],
    "This ensures that the keys are unique, in case your app interacts with other apps.": [
        "Natural_features",
        "Reasoning",
        "Increment",
        "Idiosyncrasy"
    ],
    "To create the second activity, follow these steps:": [
        "Measure_duration",
        "Intentionally_act",
        "Intentionally_act",
        "Intentionally_create",
        "Relative_time"
    ],
    "Android Studio automatically does three things:": [
        "Building_subparts",
        "Cardinal_numbers",
        "Intentionally_act"
    ],
    "If you run the app and tap the button on the first activity, the second activity starts but is empty.": [
        "Clothing_parts",
        "Intentionally_act",
        "Measure_duration",
        "Fullness",
        "Ordinal_numbers",
        "Execution",
        "Process_start",
        "Using"
    ],
    "This is because the second activity uses the empty layout provided by the template.": [
        "Measure_duration",
        "Intentionally_act",
        "Fullness",
        "Supply",
        "Using"
    ],
    "The new activity includes a blank layout file.": [
        "Intentionally_act",
        "Age",
        "Inclusion"
    ],
    "Follow these steps to add a text view to where the message appears:": [
        "Relative_time",
        "Cause_change_of_position_on_a_scale",
        "Locative_relation",
        "Opinion",
        "Coming_to_be",
        "Intentionally_act"
    ],
    "Optionally, you can make some adjustments to the text style if you expand textAppearance in the Common Attributes panel of the Attributes window, and change attributes such as textSize and textColor.": [
        "Adjusting",
        "Hair_configuration",
        "Connecting_architecture",
        "Relational_quantity",
        "Expansion",
        "Capability",
        "Causation",
        "Undergo_change"
    ],
    "In this step, you modify the second activity to display the message that was passed by the first activity.": [
        "Intentionally_act",
        "Measure_duration",
        "Natural_features",
        "Ordinal_numbers",
        "Intentionally_act",
        "Cause_change"
    ],
    "In DisplayMessageActivity, add the following code to the onCreate ( ) method:": [
        "Relative_time",
        "Execution"
    ],
    "Press Alt + Enter, or Option + Return on a Mac, to import these other needed classes:": [
        "Cause_motion",
        "Possibilities",
        "Being_necessary",
        "Increment",
        "Execution",
        "Importing"
    ],
    "Each screen in your app that's not the main entry point, which are all the screens that aren't the home screen, must provide navigation that directs the user to the logical parent screen in the app's hierarchy.": [
        "Execution",
        "Quantity",
        "Buildings",
        "Behind_the_scenes",
        "Kinship",
        "First_rank",
        "Adducing",
        "Being_obligated",
        "Supply"
    ],
    "To do this, add an Up button in the app bar.": [
        "Clothing_parts",
        "Buildings",
        "Intentionally_act"
    ],
    "To add an Up button, you need to declare which activity is the logical parent in the AndroidManifest.xml file.": [
        "Clothing_parts",
        "Intentionally_act",
        "Kinship",
        "Required_event"
    ],
    "Open the file at app > manifests > AndroidManifest.xml, locate the <activity> tag for DisplayMessageActivity, and replace it with the following:": [
        "Intentionally_act",
        "Replacing",
        "Becoming_aware"
    ],
    "The Android system now automatically adds the Up button to the app bar.": [
        "Clothing_parts",
        "Buildings",
        "System",
        "Temporal_collocation"
    ],
    "Click Apply Changes in the toolbar to run the app.": [
        "Sounds",
        "Undergo_change",
        "Execution"
    ],
    "When it opens, type a message in the text field and tap Send to see the message appear in the second activity.": [
        "Temporal_collocation",
        "Fields",
        "Attaching",
        "Measure_duration",
        "Intentionally_act",
        "Body_movement",
        "Grasp",
        "Causation",
        "Coming_to_be"
    ],
    "That's it, you've built your first Android app !": [
        "Ordinal_numbers",
        "Building"
    ],
    "To continue to learn the basics about Android app development, go back to Build your first app and follow the other links provided there.": [
        "Education_teaching",
        "Observable_body_parts",
        "Relative_time",
        "Make_cognitive_connection",
        "Event",
        "Ordinal_numbers",
        "Increment",
        "Building",
        "Locative_relation",
        "Supply",
        "Becoming",
        "Activity_ongoing"
    ],
    "In the file app > java > com.example.myfirstapp > MainActivity, add the following sendMessage ( ) method stub: Kotlin Java You might see an error because Android Studio can not resolve the View class used as the method argument.": [
        "Execution",
        "Building_subparts",
        "Relative_time",
        "Likelihood",
        "Categorization",
        "Reasoning",
        "Cause_change_of_position_on_a_scale",
        "Grasp",
        "Using",
        "Capability",
        "Resolve_problem"
    ],
    "Return to the activity_main.xml file to call the method from the button: Select the button in the Layout Editor.": [
        "Clothing_parts",
        "Execution",
        "Execution",
        "Execution",
        "Choosing"
    ],
    "In the Attributes window, locate the onClick property and select sendMessage -LSB- MainActivity -RSB- from its drop-down list.": [
        "Connecting_architecture",
        "Possession",
        "Becoming_aware"
    ],
    "Specifically, the method has the following characteristics: Public access.": [
        "Execution",
        "Having_or_lacking_access",
        "Secrecy_status",
        "Relative_time",
        "Distinctiveness",
        "Inclusion"
    ],
    "A void or, in Kotlin, an implicit unit return value.": [
        "Execution"
    ],
    "A View as the only parameter.": [
        "Terms_of_agreement",
        "Sole_instance",
        "Perception_active"
    ],
    "This is the View object you clicked at the end of Step 1.": [
        "Perception_active",
        "Intentionally_act",
        "Temporal_subregion",
        "Make_noise"
    ],
    "Select the button in the Layout Editor.": [
        "Clothing_parts",
        "Choosing"
    ],
    "Next, fill in this method to read the contents of the text field and deliver that text to another activity.": [
        "Fields",
        "Intentionally_act",
        "Increment",
        "Abounding_with",
        "Categorization",
        "Execution",
        "Delivery"
    ],
    "The startActivity ( ) method starts an instance of the DisplayMessageActivity that's specified by the Intent.": [
        "Execution",
        "Instance",
        "Process_start"
    ],
    "Next, you need to create that class.": [
        "Required_event",
        "Intentionally_create"
    ],
    "In the Project window, right-click the app folder and select New > Activity > Empty Activity.": [
        "Project",
        "Connecting_architecture",
        "Containers",
        "Emptying",
        "Age",
        "Intentionally_act"
    ],
    "In the Configure Activity window, enter `` DisplayMessageActivity'' for Activity Name.": [
        "Connecting_architecture",
        "Intentionally_act",
        "Execution"
    ],
    "Leave all other properties set to their defaults and click Finish.": [
        "Quantity",
        "Sounds",
        "Increment",
        "Execution",
        "Departing",
        "Possession"
    ],
    "Creates the layout file activity_display_message.xml, which corresponds with the DisplayMessageActivity file.": [
        "Creating"
    ],
    "Adds the required <activity> element in AndroidManifest.xml.": [
        "Being_necessary",
        "Ingredients",
        "Intentionally_act"
    ],
    "Open the file app > res > layout > activity_display_message.xml.": [],
    "Click Enable Autoconnection to Parent in the toolbar.": [
        "Sounds"
    ],
    "In the Palette panel, click Text, drag a TextView into the layout, and drop it near the top-center of the layout so that it snaps to the vertical line that appears.": [
        "Sounds",
        "Cause_to_fragment",
        "Coming_to_be",
        "Cause_motion",
        "Change_position_on_a_scale"
    ],
    "Autoconnect adds left and right constraints in order to place the view in the horizontal center.": [
        "Direction",
        "Opinion",
        "Part_inner_outer",
        "Correctness"
    ],
    "Create one more constraint from the top of the text view to the top of the layout, so that it appears as shown in figure 1.": [
        "Cardinal_numbers",
        "Opinion",
        "Increment",
        "Evidence",
        "Part_orientational",
        "Coming_to_be"
    ],
    "In DisplayMessageActivity, add the following code to the onCreate ( ) method: Kotlin Java": [
        "Relative_time",
        "Execution"
    ],
    "Press Alt + Enter, or Option + Return on a Mac, to import these other needed classes: Kotlin Java": [
        "Cause_motion",
        "Possibilities",
        "Being_necessary",
        "Increment",
        "Execution",
        "Importing"
    ],
    "Don't mess with the visibility flags of the container - FragmentTransaction.hide / show does that internally for you.": [
        "Intentionally_act",
        "Predicament",
        "Containers",
        "Reasoning",
        "Intentionally_act"
    ],
    "So the correct way to do this is:": [
        "Suitability",
        "Intentionally_act"
    ],
    "OR if you are using android.support.v4.app.Fragment": [
        "Using"
    ],
    "In addittion, you can do in a Fragment -LRB- for example when getting server data failed -RRB-:": [
        "Part_piece",
        "Instance",
        "Temporal_collocation",
        "Execution",
        "Capability",
        "Success_or_failure",
        "Intentionally_act"
    ],
    "Hi you do it by using this approach, all fragments will remain in the container once added initially and then we are simply revealing the desired fragment and hiding the others within the container.": [
        "Execution",
        "Part_piece",
        "Containers",
        "Increment",
        "Quantity",
        "Temporal_collocation",
        "Frequency",
        "Reveal_secret",
        "Using",
        "Intentionally_act",
        "Part_piece",
        "Hiding_objects",
        "Desiring",
        "Existence"
    ],
    "Please see LINK for more info.": [
        "Part_orientational",
        "Increment",
        "Grasp"
    ],
    "I hope I get to help anyone.": [
        "Required_event",
        "Assistance",
        "Desiring"
    ],
    "Even if it this is an old question.": [
        "Point_of_dispute",
        "Age"
    ],
    "This worked for me": [],
    "Try this:": [],
    "the answers here are correct and i liked @Jyo the Whiff idea of a show and hide fragment implementation except the way he has it currently would hide the fragment on the first run so i added a slight change in that i added the isAdded check and show the fragment if its not already": [
        "Communication_response",
        "Correctness",
        "Sensation",
        "Reasoning",
        "Part_piece",
        "Execute_plan",
        "Eclipse",
        "Undergo_change",
        "Time_vector",
        "Temporal_collocation",
        "Operating_a_system",
        "Ordinal_numbers",
        "Locative_relation",
        "Experiencer_focus"
    ],
    "From my code, comparing to above solution, the simplest way is to define a layout which contains the fragment, then you could hide or unhide the fragment by controlling the layout attribute which is align with the general way of view.": [
        "Evaluative_comparison",
        "Part_piece",
        "Eclipse",
        "Opinion",
        "Execution",
        "Inclusion",
        "Communicate_categorization",
        "Control",
        "Capability",
        "Temporal_collocation"
    ],
    "No additional code needed in this case and the additional deployment attributes of the fragment could be moved to the outer layout.": [
        "Quantity",
        "Instance",
        "Arranging",
        "Part_piece",
        "Increment",
        "Required_event",
        "Part_inner_outer",
        "Capability",
        "Motion"
    ],
    "In onCreate, after setContentView, i hid two fragments and committed them to the fragment manager, but i didn't hide the first fragment that will serve as home.": [
        "Eclipse",
        "Part_piece",
        "Eclipse",
        "Buildings",
        "Cardinal_numbers",
        "People_by_vocation",
        "Ordinal_numbers",
        "Part_piece",
        "Assistance",
        "Commitment",
        "Intentionally_act"
    ],
    "Ref: LINK": [],
    "I may be way way too late but it could help someone in the future.": [
        "Relative_time",
        "Possibilities",
        "Likelihood",
        "Assistance",
        "Capability",
        "Sufficiency"
    ],
    "This answer is a modification to mangu23 LINK I only added a for loop to avoid repetition and to easily add more fragments without boilerplate code.": [
        "Communication_response",
        "Part_piece",
        "Sole_instance",
        "Increment",
        "Cause_change_of_position_on_a_scale",
        "Cause_change",
        "Avoiding"
    ],
    "We first need a list of the fragments that should be displayed": [
        "Part_piece",
        "Ordinal_numbers",
        "Being_obligated",
        "Required_event"
    ],
    "Then we need to fill it with our fragments": [
        "Temporal_collocation",
        "Required_event",
        "Part_piece",
        "Filling"
    ],
    "And we need a way to know which fragment were selected from the list, so we need getFragmentIndex function": [
        "Execution",
        "Part_piece",
        "Required_event",
        "Choosing",
        "Certainty"
    ],
    "And finally, the displayFragment method will like this:": [
        "Execution",
        "Time_vector",
        "Experiencer_focus"
    ],
    "In this way, we can call displayFragment -LRB- homeFragment -RRB- for example.": [
        "Instance",
        "Execution",
        "Capability"
    ],
    "This will automatically show the HomeFragment and hide any other fragment in the list.": [
        "Eclipse",
        "Quantity",
        "Part_piece",
        "Increment",
        "Reasoning"
    ],
    "This solution allows you to append more fragments to the fragmentList without having to repeat the if statements in the old displayFragment version.": [
        "Part_piece",
        "Increment",
        "Grant_permission",
        "Age",
        "Frequency",
        "Attaching",
        "Being_obligated"
    ],
    "I hope someone will find this useful.": [
        "Becoming_aware",
        "Desiring"
    ],
    "A Fragment typically defines a part of a user interface.": [
        "Part_piece",
        "Membership",
        "Communicate_categorization"
    ],
    "Fragments must be embedded in activities ; they can not run independently of activities.": [
        "Part_piece",
        "Intentionally_act",
        "Being_obligated",
        "Execution",
        "Capability"
    ],
    "Understanding Fragments Here are the important things to understand about fragments:": [
        "Part_piece",
        "Locative_relation",
        "Part_piece",
        "Awareness",
        "Importance",
        "Categorization"
    ],
    "A Fragment is a combination of an XML layout file and a java class much like an Activity.": [
        "Part_piece",
        "Intentionally_act",
        "Relational_quantity"
    ],
    "Using the support library, fragments are supported back to all relevant Android versions.": [
        "Taking_sides",
        "Buildings",
        "Part_piece",
        "Observable_body_parts",
        "Quantity",
        "Using",
        "Taking_sides"
    ],
    "Fragments encapsulate views and logic so that it is easier to reuse within activities.": [
        "Part_piece",
        "Categorization",
        "Intentionally_act"
    ],
    "Fragments are standalone components that can contain views, events and logic.": [
        "Part_piece",
        "Ingredients",
        "Categorization",
        "Event",
        "Capability",
        "Inclusion"
    ],
    "Within a fragment-oriented architecture, activities become navigational containers that are primarily responsible for navigation to other activities, presenting fragments and passing data.": [
        "Intentionally_act",
        "Containers",
        "Part_piece",
        "Process_end",
        "Becoming",
        "Increment",
        "Presence"
    ],
    "Importance of Fragments There are many use cases for fragments but the most common use cases include:": [
        "Importance",
        "Part_piece",
        "Part_piece",
        "Quantity",
        "Instance",
        "Inclusion",
        "Existence"
    ],
    "Reusing View and Logic Components - Fragments enable re-use of parts of your screen including views and event logic over and over in different ways across many disparate activities.": [
        "Perception_active",
        "Part_piece",
        "Categorization",
        "Event",
        "Execution",
        "Intentionally_act",
        "Ingredients",
        "Similarity",
        "Similarity",
        "Quantity",
        "Inclusion",
        "Part_whole"
    ],
    "For example, using the same list across different data sources within an app.": [
        "Instance",
        "Similarity",
        "Identicality",
        "Source_of_getting",
        "Using"
    ],
    "Tablet Support - Often within apps, the tablet version of an activity has a substantially different layout from the phone version which is different from the TV version.": [
        "Intentionally_act",
        "Contacting",
        "Taking_sides",
        "Frequency",
        "Similarity",
        "Inclusion"
    ],
    "Fragments enable device-specific activities to reuse shared elements while also having differences.": [
        "Part_piece",
        "Ingredients",
        "Similarity",
        "Possession",
        "Intentionally_act"
    ],
    "Screen Orientation - Often within apps, the portrait version of an activity has a substantially different layout from the landscape version.": [
        "Intentionally_act",
        "Frequency",
        "Similarity",
        "Possession"
    ],
    "Fragments enable both orientations to reuse shared elements while also having differences.": [
        "Part_piece",
        "Ingredients",
        "Similarity",
        "Quantity",
        "Possession"
    ],
    "Organizing your Code Within a fragment-heavy app, we need to remember to organize our code according to architectural best practices.": [
        "Required_event",
        "Businesses",
        "Attributed_information",
        "Memory"
    ],
    "Inside of an app which uses fragments extensively, we need to keep in mind that the role of an activity shifts.": [
        "Part_piece",
        "Performers_and_roles",
        "Intentionally_act",
        "Change_position_on_a_scale",
        "Using",
        "Activity_ongoing",
        "Required_event"
    ],
    "Activities are navigation controllers primarily responsible for:": [
        "Intentionally_act"
    ],
    "Navigation to other activities through intents.": [
        "Intentionally_act",
        "Increment"
    ],
    "Presenting navigational components such as the navigation drawer or the viewpager.": [
        "Ingredients",
        "Containers",
        "Presence"
    ],
    "Hiding and showing relevant fragments using the fragment manager.": [
        "Hiding_objects",
        "Part_piece",
        "Part_piece",
        "People_by_vocation",
        "Using",
        "Reasoning"
    ],
    "Receiving data from intents and passing data between fragments.": [
        "Part_piece",
        "Process_end",
        "Receiving"
    ],
    "Fragments are content controllers and contain most views, layouts, and event logic including:": [
        "Part_piece",
        "Categorization",
        "Event",
        "Inclusion",
        "Inclusion"
    ],
    "Layouts and views displaying relevant app content.": [
        "Categorization"
    ],
    "Event handling logic associated with relevant views.": [
        "Event",
        "Resolve_problem",
        "Categorization",
        "Cognitive_connection"
    ],
    "View state management logic such as visibility or error handling.": [
        "Political_locales",
        "Categorization"
    ],
    "Triggering of network request through a client object.": [
        "Network",
        "Execution"
    ],
    "Retrieval and storage of data from persistence through model objects.": [
        "Gizmo",
        "Storing",
        "Process_continue"
    ],
    "To reiterate, in a fragment-based architecture, the activities are for navigation and the fragments are for views and logic.": [
        "Part_piece",
        "Categorization",
        "Intentionally_act"
    ],
    "Usage Defining a Fragment A fragment, like an activity, has an XML layout file and a Java class that represents the Fragment controller.": [
        "Part_piece",
        "Intentionally_act",
        "Part_piece",
        "Communicate_categorization",
        "Communicate_categorization",
        "Inclusion"
    ],
    "The XML layout file is just like any other layout file, and can be named fragment_foo.xml.": [
        "Quantity",
        "Increment",
        "Likelihood"
    ],
    "Think of them as a partial ( re-usable ) activity:": [
        "Awareness",
        "Process_completed_state",
        "Intentionally_act"
    ],
    "The Java controller for a fragment looks like:": [
        "Part_piece",
        "Scrutiny"
    ],
    "Embedding a Fragment in an Activity There are two ways to add a fragment to an activity: dynamically using Java and statically using XML.": [
        "Part_piece",
        "Intentionally_act",
        "Cause_change_of_position_on_a_scale",
        "Part_piece",
        "Intentionally_act",
        "Cardinal_numbers",
        "Using",
        "Execution",
        "Existence"
    ],
    "Before embedding a `` support'' fragment in an Activity make sure the Activity is changed to extend from FragmentActivity or AppCompatActivity which adds support for the fragment manager to all Android versions.": [
        "Intentionally_act",
        "Quantity",
        "Part_piece",
        "People_by_vocation",
        "Undergo_change",
        "Expansion",
        "Taking_sides",
        "Verification"
    ],
    "Any activity using fragments should make sure to extend from FragmentActivity or AppCompatActivity:": [
        "Intentionally_act",
        "Part_piece",
        "Quantity",
        "Using",
        "Expansion",
        "Being_obligated",
        "Verification"
    ],
    "Statically To add the fragment statically, simply embed the fragment in the activity's xml layout file:": [
        "Part_piece",
        "Intentionally_act"
    ],
    "You will likely need to change the path for FooFragment based on your project setup.": [
        "Project",
        "Likelihood",
        "Undergo_change",
        "Required_event"
    ],
    "You can not replace a fragment defined statically in the layout file via a FragmentTransaction.": [
        "Part_piece",
        "Capability",
        "Categorization",
        "Take_place_of"
    ],
    "You can only replace fragments that you added dynamically.": [
        "Part_piece",
        "Sole_instance",
        "Take_place_of",
        "Capability"
    ],
    "Dynamically The second way is by adding the fragment dynamically in Java using the FragmentManager.": [
        "Measure_duration",
        "Part_piece",
        "Using"
    ],
    "The FragmentManager class and the FragmentTransaction class allow you to add, remove and replace fragments in the layout of your activity at runtime.": [
        "Removing",
        "Part_piece",
        "Intentionally_act",
        "Grant_permission",
        "Replacing"
    ],
    "In this case, you want to add a `` placeholder'' container ( usually a FrameLayout ) to your activity where the fragment is inserted at runtime:": [
        "Instance",
        "Part_piece",
        "Containers",
        "Intentionally_act",
        "Locative_relation",
        "Desiring"
    ],
    "and then you can use the FragmentManager to create a FragmentTransaction which allows us to add fragments to the FrameLayout at runtime:": [
        "Temporal_collocation",
        "Part_piece",
        "Capability",
        "Grant_permission",
        "Cause_change_of_position_on_a_scale",
        "Intentionally_create",
        "Using"
    ],
    "If the fragment should always be within the activity, use XML to statically add the fragment but in more complex cases be sure to use the Java-based approach.": [
        "Part_piece",
        "Intentionally_act",
        "Execution",
        "Instance",
        "Increment",
        "Frequency",
        "Being_obligated",
        "Using",
        "Likelihood"
    ],
    "Fragment Lifecycle Fragment has many methods which can be overridden to plug into the lifecycle ( similar to an Activity ):": [
        "Execution",
        "Similarity",
        "Intentionally_act",
        "Part_piece",
        "Quantity",
        "Capability",
        "Inclusion"
    ],
    "onAttach ( ) is called when a fragment is connected to an activity.": [
        "Temporal_collocation",
        "Part_piece",
        "Intentionally_act",
        "Cognitive_connection",
        "Execution"
    ],
    "onCreate ( ) is called to do initial creation of the fragment.": [
        "Part_piece",
        "Version_sequence",
        "Intentionally_create",
        "Intentionally_act",
        "Execution"
    ],
    "onCreateView ( ) is called by Android once the Fragment should inflate a view.": [
        "Part_piece",
        "Opinion",
        "Being_obligated",
        "Cause_expansion",
        "Execution"
    ],
    "onViewCreated ( ) is called after onCreateView ( ) and ensures that the fragment's root view is non-null.": [
        "Part_piece",
        "Categorization",
        "Execution"
    ],
    "Any view setup should happen here.": [
        "Opinion",
        "Locative_relation",
        "Quantity",
        "Being_obligated",
        "Event"
    ],
    "E.g., view lookups, attaching listeners.": [
        "Categorization",
        "Attaching"
    ],
    "onActivityCreated ( ) is called when host activity has completed its onCreate ( ) method.": [
        "Temporal_collocation",
        "Intentionally_act",
        "Execution",
        "Activity_finish",
        "Execution"
    ],
    "onStart ( ) is called once the fragment is ready to be displayed on screen.": [
        "Part_piece",
        "Frequency",
        "Activity_ready_state",
        "Execution"
    ],
    "onResume ( ) - Allocate `` expensive'' resources such as registering for location, sensor updates, etc..": [
        "Locale",
        "Becoming_aware"
    ],
    "onPause ( ) - Release `` expensive'' resources.": [
        "Releasing"
    ],
    "onDestroyView ( ) is called when fragment's view is being destroyed, but the fragment is still kept around.": [
        "Temporal_collocation",
        "Part_piece",
        "Locative_relation",
        "Opinion",
        "Activity_ongoing",
        "Continued_state_of_affairs",
        "Execution",
        "Killing"
    ],
    "onDestroy ( ) is called when fragment is no longer in use.": [
        "Part_piece",
        "Temporal_collocation",
        "Execution",
        "Temporal_collocation"
    ],
    "onDetach ( ) is called when fragment is no longer connected to the activity.": [
        "Temporal_collocation",
        "Part_piece",
        "Intentionally_act",
        "Temporal_collocation",
        "Cognitive_connection",
        "Execution"
    ],
    "The lifecycle execution order is mapped out below:": [
        "Execution",
        "Locative_relation"
    ],
    "The most common ones to override are onCreateView which is in almost every fragment to setup the inflated view, onCreate for any data initialization and onActivityCreated used for setting up things that can only take place once the Activity has been fully created.": [
        "Clothing",
        "Frequency",
        "Opinion",
        "Sole_instance",
        "Intentionally_act",
        "Degree",
        "Relational_quantity",
        "Part_piece",
        "Cause_expansion",
        "Quantity",
        "Intentionally_create",
        "Creating",
        "Event",
        "Capability",
        "Using"
    ],
    "Here's an example of how you might use the various fragment lifecycle events:": [
        "Locative_relation",
        "Instance",
        "Part_piece",
        "Likelihood",
        "Event",
        "Diversity",
        "Using"
    ],
    "Refer to this detailed lifecycle chart to view the lifecycle of a fragment more visually.": [
        "Part_piece",
        "Increment",
        "Categorization"
    ],
    "Looking Up a Fragment Instance Often we need to lookup or find a fragment instance within an activity layout file.": [
        "Perception_active",
        "Instance",
        "Part_piece",
        "Instance",
        "Intentionally_act",
        "Required_event",
        "Locating",
        "Frequency"
    ],
    "There are a few methods for looking up an existing fragment instance:": [
        "Scrutiny",
        "Part_piece",
        "Instance",
        "Quantity",
        "Existence",
        "Execution",
        "Existence"
    ],
    "ID - Lookup a fragment by calling findFragmentById on the FragmentManager": [
        "Part_piece",
        "Execution"
    ],
    "Tag - Lookup a fragment by calling findFragmentByTag on the FragmentManager": [
        "Part_piece",
        "Execution"
    ],
    "Pager - Lookup a fragment by calling getRegisteredFragment on a PagerAdapter ( not part of the Android APIs but there is a custom implementation here https://stackoverflow.com/a/30594487 )": [
        "Custom",
        "Execute_plan",
        "Locative_relation",
        "Part_whole",
        "Existence",
        "Execution",
        "Part_piece"
    ],
    "Each method is outlined in more detail below.": [
        "Execution",
        "Increment",
        "Summarizing"
    ],
    "Finding Fragment By ID If the fragment was statically embedded in the XML within an activity and given an android: id such as fragmentDemo then we can lookup this fragment by id by calling findFragmentById on the FragmentManager:": [
        "Part_piece",
        "Intentionally_act",
        "Part_piece",
        "Locating",
        "Capability",
        "Execution",
        "Temporal_collocation",
        "Giving"
    ],
    "Finding Fragment By Tag If the fragment was dynamically added at runtime within an activity then we can lookup this fragment by tag by calling findFragmentByTag on the FragmentManager:": [
        "Part_piece",
        "Intentionally_act",
        "Part_piece",
        "Locating",
        "Temporal_collocation",
        "Execution",
        "Capability"
    ],
    "Finding Fragment Within Pager If the fragment was dynamically added at runtime within an activity into a ViewPager using a FragmentPagerAdapter then we can lookup the fragment by upgrading to a SmartFragmentStatePagerAdapter as described in the ViewPager guide.": [
        "Part_piece",
        "Part_piece",
        "Intentionally_act",
        "Locating",
        "Temporal_collocation",
        "Using",
        "Capability",
        "Communicate_categorization"
    ],
    "Now with the adapter in place, we can also easily access any fragments within the ViewPager using getRegisteredFragment:": [
        "Temporal_collocation",
        "Locale",
        "Part_piece",
        "Quantity",
        "Using",
        "Capability"
    ],
    "Note that the ViewPager loads the fragment instances lazily similar to the a ListView recycling items as they appear on screen.": [
        "Part_piece",
        "Entity",
        "Coming_to_be",
        "Similarity",
        "Instance",
        "Quantity"
    ],
    "If you attempt to access a fragment that is not on screen, the lookup will return null.": [
        "Part_piece",
        "Execution",
        "Attempt"
    ],
    "Communicating with Fragments Fragments should generally only communicate with their direct parent activity.": [
        "Kinship",
        "Part_piece",
        "Aiming",
        "Intentionally_act",
        "Communication",
        "Sole_instance",
        "Being_obligated",
        "Communication"
    ],
    "Fragments communicate through their parent activity allowing the activity to manage the inputs and outputs of data from that fragment coordinating with other fragments or activities.": [
        "Part_piece",
        "Kinship",
        "Intentionally_act",
        "Part_piece",
        "Intentionally_act",
        "Part_piece",
        "Increment",
        "Grant_permission",
        "Operating_a_system",
        "Communication"
    ],
    "Think of the Activity as the controller managing all interaction with each of the fragments contained within.": [
        "Intentionally_act",
        "Part_piece",
        "Quantity",
        "Awareness",
        "Operating_a_system",
        "Inclusion"
    ],
    "A few exceptions to this are dialog fragments presented from within another fragment or nested child fragments.": [
        "Discussion",
        "Part_piece",
        "Kinship",
        "Increment",
        "Part_piece",
        "Quantity",
        "Presence"
    ],
    "Both of these cases are situations where a fragment has nested child fragments and that are therefore allowed to communicate upward to their parent ( which is a fragment ).": [
        "Instance",
        "Part_piece",
        "Kinship",
        "Grant_permission",
        "Locative_relation",
        "Part_piece",
        "Kinship",
        "Quantity",
        "Communication"
    ],
    "The important thing to keep in mind is that fragments should not directly communicate with each other and should generally only communicate with their parent activity.": [
        "Part_piece",
        "Increment",
        "Kinship",
        "Importance",
        "Sole_instance",
        "Intentionally_act",
        "Being_obligated",
        "Communication",
        "Activity_ongoing"
    ],
    "Fragments should be modular, standalone and reusable components.": [
        "Part_piece",
        "Ingredients",
        "Being_obligated"
    ],
    "The fragments allow their parent activity to respond to intents and callbacks in most cases.": [
        "Part_piece",
        "Kinship",
        "Instance",
        "Relational_quantity",
        "Intentionally_act",
        "Grant_permission",
        "Response"
    ],
    "There are three ways a fragment and an activity can communicate:": [
        "Intentionally_act",
        "Part_piece",
        "Capability",
        "Execution",
        "Communication",
        "Cardinal_numbers",
        "Existence"
    ],
    "Bundle - Activity can construct a fragment and set arguments": [
        "Intentionally_act",
        "Part_piece",
        "Execution",
        "Evidence",
        "Capability",
        "Building"
    ],
    "Methods - Activity can call methods on a fragment instance": [
        "Execution",
        "Part_piece",
        "Instance",
        "Intentionally_act",
        "Execution",
        "Execution",
        "Capability"
    ],
    "Listener - Fragment can fire listener events on an activity via an interface": [
        "Part_piece",
        "Intentionally_act",
        "Event",
        "Shoot_projectiles",
        "Capability"
    ],
    "In other words, communication should generally follow these principles:": [
        "Simple_name",
        "Increment",
        "Being_obligated",
        "Relative_time",
        "Communication"
    ],
    "Activities can initialize fragments with data during construction": [
        "Intentionally_act",
        "Building",
        "Capability",
        "Part_piece"
    ],
    "Activities can pass data to fragments using methods on the fragment instance": [
        "Intentionally_act",
        "Part_piece",
        "Execution",
        "Part_piece",
        "Instance",
        "Using",
        "Capability",
        "Process_end"
    ],
    "Fragments can communicate up to their parent activity using an interface and listeners": [
        "Part_piece",
        "Kinship",
        "Intentionally_act",
        "Capability",
        "Using",
        "Being_up_to_it",
        "Communication"
    ],
    "Fragments should pass data to other fragments only routed through their parent activity Fragments can pass data to and from dialog fragments as outlined here": [
        "Part_piece",
        "Sole_instance",
        "Kinship",
        "Discussion",
        "Locative_relation",
        "Increment",
        "Intentionally_act",
        "Part_piece",
        "Summarizing",
        "Being_obligated",
        "Process_end",
        "Beat_opponent",
        "Capability"
    ],
    "Fragments can contain nested child fragments as outlined here": [
        "Part_piece",
        "Kinship",
        "Locative_relation",
        "Part_piece",
        "Summarizing",
        "Inclusion",
        "Capability"
    ],
    "Fragment with Arguments In certain cases, your fragment may want to accept certain arguments.": [
        "Part_piece",
        "Instance",
        "Likelihood",
        "Part_piece",
        "Evidence",
        "Receiving",
        "Quarreling",
        "Desiring",
        "Likelihood"
    ],
    "A common pattern is to create a static newInstance method for creating a Fragment with arguments.": [
        "Part_piece",
        "Evidence",
        "Pattern",
        "Intentionally_create",
        "Intentionally_create",
        "Execution"
    ],
    "This is because a Fragment must have only a constructor with no arguments.": [
        "Part_piece",
        "Sole_instance",
        "Quantity",
        "Evidence",
        "Being_obligated"
    ],
    "Instead, we want to use the setArguments method such as:": [
        "Execution",
        "Using",
        "Desiring"
    ],
    "This sets certain arguments into the Fragment for later access within onCreate.": [
        "Part_piece",
        "Time_vector",
        "Having_or_lacking_access",
        "Likelihood",
        "Evidence"
    ],
    "You can access the arguments later by using:": [
        "Evidence",
        "Capability",
        "Using",
        "Time_vector"
    ],
    "Now we can load a fragment dynamically in an Activity with:": [
        "Part_piece",
        "Intentionally_act",
        "Temporal_collocation",
        "Capability"
    ],
    "This pattern makes passing arguments to fragments for initialization fairly straightforward.": [
        "Pattern",
        "Evidence",
        "Part_piece",
        "Degree",
        "Candidness",
        "Traversing",
        "Causation"
    ],
    "Fragment Methods If an activity needs to make a fragment perform an action after initialization, the easiest way is by having the activity invoke a method on the fragment instance.": [
        "Intentionally_act",
        "Part_piece",
        "Intentionally_act",
        "Execution",
        "Instance",
        "Execution",
        "Part_piece",
        "Execution",
        "Required_event",
        "Possession",
        "Intentionally_act",
        "Causation"
    ],
    "In the fragment, add a method:": [
        "Part_piece",
        "Execution"
    ],
    "and then in the activity, get access to the fragment using the fragment manager and call the method:": [
        "Intentionally_act",
        "Having_or_lacking_access",
        "Part_piece",
        "Execution",
        "People_by_vocation",
        "Using",
        "Execution",
        "Execution",
        "Temporal_collocation"
    ],
    "and then the activity can communicate directly with the fragment by invoking this method.": [
        "Intentionally_act",
        "Part_piece",
        "Execution",
        "Capability",
        "Communication",
        "Temporal_collocation"
    ],
    "Fragment Listener If a fragment needs to communicate events to the activity, the fragment should define an interface as an inner type and require that the activity must implement this interface:": [
        "Part_piece",
        "Part_piece",
        "Event",
        "Intentionally_act",
        "Gizmo",
        "Part_inner_outer",
        "Being_obligated",
        "Being_obligated",
        "Required_event",
        "Have_as_requirement",
        "Communication",
        "Communicate_categorization"
    ],
    "and then in the activity we have to implement the OnItemSelectedListener listener:": [
        "Temporal_collocation",
        "Gizmo",
        "Intentionally_act",
        "Being_obligated"
    ],
    "in order to keep the fragment as re-usable as possible.": [
        "Part_piece",
        "Likelihood",
        "Activity_ongoing"
    ],
    "For more details about this pattern, check out our detailed Creating Custom Listeners guide.": [
        "Pattern",
        "Intentionally_create",
        "Custom",
        "Increment"
    ],
    "Understanding the FragmentManager The FragmentManager is responsible for all runtime management of fragments including adding, removing, hiding, showing, or otherwise navigating between fragments.": [
        "Quantity",
        "Removing",
        "Hiding_objects",
        "Reasoning",
        "Part_piece",
        "Inclusion",
        "Grasp"
    ],
    "As shown above, the fragment manager is also responsible for finding fragments within an activity.": [
        "Part_piece",
        "Part_piece",
        "Intentionally_act",
        "Evidence",
        "People_by_vocation",
        "Locating"
    ],
    "Important available methods are outlined below:": [
        "Execution",
        "Summarizing"
    ],
    "addOnBackStackChangedListener Add a new listener for changes to the fragment back stack.": [
        "Part_piece",
        "Observable_body_parts",
        "Age",
        "Undergo_change"
    ],
    "beginTransaction ( ) Creates a new transaction to change fragments at runtime.": [
        "Commerce_sell",
        "Part_piece",
        "Age",
        "Undergo_change",
        "Creating"
    ],
    "findFragmentById ( int id ) Finds a fragment by id usually inflated from activity XML layout.": [
        "Part_piece",
        "Intentionally_act",
        "Becoming_aware",
        "Cause_expansion"
    ],
    "findFragmentByTag ( String tag ) Finds a fragment by tag usually for a runtime added fragment.": [
        "Part_piece",
        "Coming_to_believe"
    ],
    "popBackStack ( ) Remove a fragment from the backstack.": [
        "Part_piece",
        "Removing"
    ],
    "executePendingTransactions ( ) Forces committed transactions to be applied.": [
        "Commerce_sell",
        "Using",
        "Causation"
    ],
    "See the official documentation for more information.": [
        "Information",
        "Execution",
        "Increment",
        "Grasp"
    ],
    "You can also review the FragmentTransaction to take a closer look at what modifications can be made at run-time through the manager.": [
        "Scrutiny",
        "People_by_vocation",
        "Cause_change",
        "Likelihood",
        "Causation",
        "Have_as_requirement"
    ],
    "ActionBar Menu Items and Fragments One common case is the need for fragment-specific menu items that only show up for that fragment.": [
        "Part_piece",
        "Reasoning",
        "Entity",
        "Locative_relation",
        "Part_piece",
        "Sole_instance",
        "Cardinal_numbers",
        "Reasoning",
        "Have_as_requirement",
        "Entity"
    ],
    "This can be done by adding an onCreateOptionsMenu method to the fragment directly.": [
        "Execution",
        "Part_piece",
        "Likelihood",
        "Intentionally_act"
    ],
    "This works just like the one for the activity:": [
        "Intentionally_act",
        "Being_employed",
        "Cardinal_numbers"
    ],
    "You then also need to notify the fragment that it's menu items should be loaded within the fragment's onCreate method:": [
        "Part_piece",
        "Execution",
        "Temporal_collocation",
        "Being_obligated",
        "Entity",
        "Required_event",
        "Telling"
    ],
    "Clicks can be handled using onClick property as usual or more typically in this case, using the onOptionsItemSelected method in the fragment:": [
        "Make_noise",
        "Instance",
        "Execution",
        "Part_piece",
        "Likelihood",
        "Possession",
        "Increment",
        "Using",
        "Resolve_problem"
    ],
    "Note that the fragment's method is called only when the Activity didn't consume the event first.": [
        "Part_piece",
        "Sole_instance",
        "Temporal_collocation",
        "Intentionally_act",
        "Event",
        "Intentionally_act",
        "Ingestion",
        "Ordinal_numbers",
        "Execution",
        "Execution"
    ],
    "Be sure to check out a more detailed guide about fragments and action bar if you have more questions.": [
        "Part_piece",
        "Intentionally_act",
        "Buildings",
        "Questioning",
        "Increment",
        "Inspecting",
        "Likelihood"
    ],
    "Navigating Between Fragments There are several methods for navigating between different fragments within a single Activity.": [
        "Part_piece",
        "Intentionally_act",
        "Quantity",
        "Part_piece",
        "Similarity",
        "Sole_instance",
        "Execution",
        "Existence"
    ],
    "TabLayout - Tabs at the top": [
        "Part_orientational"
    ],
    "Fragment Navigation Drawer - Slide out navigation menu": [
        "Part_piece",
        "Containers",
        "Change_position_on_a_scale",
        "Locative_relation"
    ],
    "ViewPager - Swiping between fragments": [
        "Part_piece",
        "Removing"
    ],
    "Check the guides linked above for detailed steps for each of these approaches.": [
        "Execution",
        "Intentionally_act",
        "Cognitive_connection",
        "Inspecting"
    ],
    "Managing Fragment Backstack A record of all Fragment transactions is kept for each Activity by the FragmentManager.": [
        "Part_piece",
        "Recording",
        "Quantity",
        "Intentionally_act",
        "Commerce_sell",
        "Operating_a_system",
        "Activity_ongoing"
    ],
    "When used properly, this allows the user to hit the device's back button to remove previously added Fragments ( not unlike how the back button removes an Activity ).": [
        "Gizmo",
        "Clothing_parts",
        "Intentionally_act",
        "Using",
        "Part_orientational",
        "Temporal_collocation",
        "Time_vector",
        "Part_piece",
        "Grant_permission",
        "Impact",
        "Removing",
        "Removing"
    ],
    "Simply call addToBackstack on each FragmentTransaction that should be recorded:": [
        "Recording",
        "Being_obligated"
    ],
    "Programmatically, you can also pop from the back stack at any time through the manager:": [
        "Measure_duration",
        "People_by_vocation",
        "Part_orientational",
        "Quantity",
        "Ingest_substance",
        "Capability"
    ],
    "With this approach, we can easily keep the history of which fragments have appeared dynamically on screen and allow the user to easily navigate to previous fragments.": [
        "Execution",
        "History",
        "Part_piece",
        "Time_vector",
        "Coming_to_be",
        "Activity_ongoing",
        "Capability",
        "Grant_permission"
    ],
    "Fragment Hiding vs Replace In many of the examples above, we call transaction.replace ( ... ) to load a dynamic fragment which first removes the existing fragment from the activity invoking onStop and onDestroy for that fragment before adding the new fragment to the container.": [
        "Part_piece",
        "Instance",
        "Ordinal_numbers",
        "Intentionally_act",
        "Containers",
        "Part_piece",
        "Existence",
        "Age",
        "Execution",
        "Quantity",
        "Replacing",
        "Removing"
    ],
    "This can be good because this will release memory and make the UI snappier.": [
        "Remembering_experience",
        "Releasing",
        "Causation",
        "Desirability",
        "Capability"
    ],
    "However, in many cases, we may want to keep both fragments around in the container and simply toggle their visibility.": [
        "Concessive",
        "Instance",
        "Part_piece",
        "Containers",
        "Quantity",
        "Likelihood",
        "Quantity",
        "Locative_relation",
        "Activity_ongoing",
        "Desiring"
    ],
    "This allows all fragments to maintain their state because they are never removed from the container.": [
        "Part_piece",
        "Political_locales",
        "Containers",
        "Quantity",
        "Frequency",
        "Removing",
        "Activity_ongoing",
        "Grant_permission"
    ],
    "To do this, we might modify this code:": [
        "Intentionally_act",
        "Likelihood",
        "Cause_change"
    ],
    "to this approach instead leveraging add, show, and hide in the FragmentTransaction:": [
        "Execution",
        "Reasoning",
        "Eclipse"
    ],
    "Using this approach, all three fragments will remain in the container once added initially and then we are simply revealing the desired fragment and hiding the others within the container.": [
        "Execution",
        "Quantity",
        "Part_piece",
        "Containers",
        "Increment",
        "Cardinal_numbers",
        "Using",
        "Reveal_secret",
        "Part_piece",
        "Hiding_objects",
        "Desiring",
        "Existence",
        "Temporal_collocation",
        "Frequency"
    ],
    "Check out this stackoverflow for a discussion on deciding when to replace vs hide and show.": [
        "Deciding",
        "Temporal_collocation",
        "Eclipse",
        "Reasoning",
        "Replacing",
        "Discussion"
    ],
    "Nesting Fragments within Fragments Inevitably in certain cases you will want to embed a fragment within another fragment.": [
        "Part_piece",
        "Instance",
        "Part_piece",
        "Likelihood",
        "Increment",
        "Desiring"
    ],
    "Since Android 4.2, you have the ability to embed a fragment within another fragment.": [
        "Part_piece",
        "Increment",
        "Capability"
    ],
    "This nested fragment is known as a child fragment.": [
        "Kinship",
        "Part_piece",
        "Awareness"
    ],
    "A common situation where you might want to nest fragments is when you are using a sliding drawer for top-level navigation and one of the fragments needs to display tabs.": [
        "Part_piece",
        "Temporal_collocation",
        "Change_position_on_a_scale",
        "Likelihood",
        "Containers",
        "Locative_relation",
        "Cardinal_numbers",
        "Required_event",
        "Using",
        "Possession"
    ],
    "Note that one limitation is that nested ( or child ) fragments must be dynamically added at runtime to their parent fragment and can not be statically added using the <fragment> tag.": [
        "Kinship",
        "Part_piece",
        "Kinship",
        "Cardinal_numbers",
        "Being_obligated",
        "Part_piece",
        "Using",
        "Likelihood"
    ],
    "To nest a fragment in another fragment, first we need a <FrameLayout> or alternatively a ViewPager to contain the dynamic child fragment in the res/layout/fragment_parent.xml layout:": [
        "Kinship",
        "Increment",
        "Required_event",
        "Part_piece",
        "Ordinal_numbers",
        "Inclusion"
    ],
    "Notice that there's a FrameLayout with the id of @ + id/child _ fragment_container in which the child fragment will be inserted.": [
        "Kinship",
        "Part_piece",
        "Existence",
        "Becoming_aware"
    ],
    "Inflation of the ParentFragment view is within the onCreateView method, just as was outlined in earlier sections.": [
        "Execution",
        "Summarizing",
        "Opinion",
        "Part_whole",
        "Relative_time"
    ],
    "In addition, we would also define a ChildFragment that would have its own distinct layout file:": [
        "Communication_response",
        "Similarity",
        "Possession",
        "Communicate_categorization"
    ],
    "Now we can add the child fragment to the parent at runtime using the getChildFragmentManager method:": [
        "Kinship",
        "Kinship",
        "Execution",
        "Temporal_collocation",
        "Part_piece",
        "Capability",
        "Using"
    ],
    "Note that you must always use getChildFragmentManager when interacting with nested fragments instead of using getSupportFragmentManager.": [
        "Temporal_collocation",
        "Part_piece",
        "Using",
        "Frequency",
        "Being_obligated",
        "Using"
    ],
    "Read this stackoverflow post for an explanation of the difference between the two.": [
        "Similarity",
        "Cardinal_numbers",
        "Sending"
    ],
    "In the child fragment, we can use getParentFragment ( ) to get the reference to the parent fragment, similar to a fragment's getActivity ( ) method that gives reference to the parent Activity.": [
        "Kinship",
        "Kinship",
        "Intentionally_act",
        "Part_piece",
        "Capability",
        "Using",
        "Giving",
        "Execution",
        "Similarity",
        "Execution"
    ],
    "See the docs for more information.": [
        "Information",
        "Increment",
        "Grasp"
    ],
    "Managing Configuration Changes When you are working with fragment as with activities, you need to make sure to handle configuration changes such as screen rotation or the activity being closed.": [
        "Temporal_collocation",
        "Part_piece",
        "Intentionally_act",
        "Intentionally_act",
        "Body_movement",
        "Operating_a_system",
        "Required_event",
        "Undergo_change",
        "Undergo_change",
        "Being_employed",
        "Resolve_problem",
        "Verification"
    ],
    "Be sure to review the configuration changes guide for more details on how to save and restore fragment state.": [
        "Part_piece",
        "Political_locales",
        "Rejuvenation",
        "Increment",
        "Undergo_change",
        "Likelihood"
    ],
    "Overview A fragment is a reusable class implementing a portion of an activity.": [
        "Part_piece",
        "Gizmo",
        "Intentionally_act",
        "Part_whole"
    ],
    "Doesn't scroll properly inside ViewPager": [
        "Intentionally_act"
    ],
    "In Android, scrolling is typically achieved by using the ScrollView class.": [
        "Using",
        "Accomplishment"
    ],
    "Any standard layout that might extend beyond the bounds of its container should be nested in a ScrollView to provide a scrollable view that's managed by the framework.": [
        "Containers",
        "Opinion",
        "Quantity",
        "Operating_a_system",
        "Likelihood",
        "Expansion",
        "Being_obligated",
        "Supply"
    ],
    "Implementing a custom scroller should only be necessary for special scenarios.": [
        "Gizmo",
        "Custom",
        "Sole_instance",
        "Being_obligated",
        "Being_necessary"
    ],
    "This lesson describes such a scenario: displaying a scrolling effect in response to touch gestures using scrollers.": [
        "Objective_influence",
        "Response",
        "Gesture",
        "Stimulus_focus",
        "Using"
    ],
    "You can use scrollers ( Scroller or OverScroller ) to collect the data you need to produce a scrolling animation in response to a touch event.": [
        "Gathering_up",
        "Quantity",
        "Event",
        "Capability",
        "Response",
        "Required_event",
        "Intentionally_create",
        "Using"
    ],
    "They are similar, but OverScroller includes methods for indicating to users that they've reached the content edges after a pan or fling gesture.": [
        "Gesture",
        "Cause_motion",
        "Similarity",
        "Self_motion",
        "Execution",
        "Evidence",
        "Execution",
        "Inclusion"
    ],
    "The InteractiveChart sample uses the EdgeEffect class ( actually the EdgeEffectCompat class ) to display a `` glow'' effect when users reach the content edges.": [
        "Temporal_collocation",
        "Self_motion",
        "Objective_influence",
        "Execution",
        "Using"
    ],
    "Note: We recommend that you use OverScroller rather than Scroller for scrolling animations.": [
        "Using",
        "Becoming_aware"
    ],
    "OverScroller provides the best backward compatibility with older devices.": [
        "Compatibility",
        "Gizmo",
        "Age",
        "Desirability",
        "Supply"
    ],
    "Also note that you generally only need to use scrollers when implementing scrolling yourself.": [
        "Sole_instance",
        "Execute_plan",
        "Temporal_collocation",
        "Using",
        "Required_event"
    ],
    "ScrollView and HorizontalScrollView do all of this for you if you nest your layout within them.": [
        "Quantity",
        "Intentionally_act"
    ],
    "A scroller is used to animate scrolling over time, using platform-standard scrolling physics ( friction, velocity, etc. ).": [
        "Measure_duration",
        "Using",
        "Using"
    ],
    "The scroller itself doesn't actually draw anything.": [
        "Cause_motion",
        "Intentionally_act"
    ],
    "Scrollers track scroll offsets for you over time, but they don't automatically apply those positions to your view.": [
        "Measure_duration",
        "Intentionally_act",
        "Opinion",
        "Using"
    ],
    "It's your responsibility to get and apply new coordinates at a rate that will make the scrolling animation look smooth.": [
        "Execution",
        "Frequency",
        "Scrutiny",
        "Age",
        "Using",
        "Causation",
        "Being_obligated"
    ],
    "`` Scrolling'' is a word that can take on different meanings in Android, depending on the context.": [
        "Simple_name",
        "Linguistic_meaning",
        "Similarity",
        "Capability",
        "Have_as_requirement"
    ],
    "Scrolling is the general process of moving the viewport ( that is, the ` window' of content you're looking at ).": [
        "Execution",
        "Connecting_architecture",
        "Execution",
        "Motion",
        "Scrutiny"
    ],
    "When scrolling is in both the x and y axes, it's called panning.": [
        "Temporal_collocation",
        "Quantity",
        "Seeking",
        "Execution"
    ],
    "The sample application provided with this class, InteractiveChart, illustrates two different types of scrolling, dragging and flinging:": [
        "Using",
        "Cause_motion",
        "Cause_motion",
        "Similarity",
        "Cardinal_numbers",
        "Supply",
        "Evidence"
    ],
    "It's common to use scroller objects in conjunction with a fling gesture, but they can be used in pretty much any context where you want the UI to display scrolling in response to a touch event.": [
        "Gesture",
        "Relational_quantity",
        "Locative_relation",
        "Quantity",
        "Likelihood",
        "Quantity",
        "Event",
        "Using",
        "Possession",
        "Collaboration",
        "Response",
        "Using"
    ],
    "For example, you could override onTouchEvent ( ) to process touch events directly, and produce a scrolling effect or a `` snapping to page'' animation in response to those touch events.": [
        "Instance",
        "Quantity",
        "Objective_influence",
        "Cause_to_fragment",
        "Event",
        "Processing_materials",
        "Response",
        "Capability",
        "Manufacturing"
    ],
    "This section describes how to use a scroller.": [
        "Part_whole",
        "Using"
    ],
    "The snippet shown below comes from the InteractiveChart sample provided with this class.": [
        "Part_piece",
        "Evidence",
        "Supply",
        "Execution"
    ],
    "It uses a GestureDetector, and overrides the GestureDetector.SimpleOnGestureListener method onFling ( ).": [
        "Execution",
        "Using"
    ],
    "It uses OverScroller to track the fling gesture.": [
        "Gesture",
        "Using"
    ],
    "If the user reaches the content edges after the fling gesture, the app displays a `` glow'' effect.": [
        "Gesture",
        "Objective_influence",
        "Execution",
        "Self_motion"
    ],
    "Note: The InteractiveChart sample app displays a chart that you can zoom, pan, scroll, and so on.": [
        "Seeking",
        "Capability",
        "Becoming_aware"
    ],
    "In the following snippet, mContentRect represents the rectangle coordinates within the view that the chart will be drawn into.": [
        "Part_piece",
        "Relative_time",
        "Cause_motion",
        "Communicate_categorization",
        "Opinion"
    ],
    "At any given time, a subset of the total chart domain and range are drawn into this rectangular area.": [
        "Quantity",
        "Measure_duration",
        "Taking_time",
        "Natural_features",
        "Locale",
        "Giving",
        "Completeness",
        "Cause_motion"
    ],
    "mCurrentViewport represents the portion of the chart that is currently visible in the screen.": [
        "Temporal_collocation",
        "Obviousness",
        "Communicate_categorization",
        "Part_whole"
    ],
    "Because pixel offsets are generally treated as integers, mContentRect is of the type Rect.": [
        "Communicate_categorization"
    ],
    "Because the graph domain and range are decimal/float values, mCurrentViewport is of the type RectF.": [
        "Natural_features"
    ],
    "The first part of the snippet shows the implementation of onFling ( ):": [
        "Ordinal_numbers",
        "Part_piece",
        "Execute_plan",
        "Membership",
        "Evidence"
    ],
    "When onFling ( ) calls postInvalidateOnAnimation ( ), it triggers computeScroll ( ) to update the values for x and y.": [
        "Temporal_collocation",
        "Contacting"
    ],
    "This is typically be done when a view child is animating a scroll using a scroller object, as in this example.": [
        "Temporal_collocation",
        "Opinion",
        "Instance",
        "Kinship",
        "Using",
        "Intentionally_act"
    ],
    "Most views pass the scroller object's x and y position directly to scrollTo ( ).": [
        "Categorization",
        "Process_end",
        "Relational_quantity"
    ],
    "The following implementation of computeScroll ( ) takes a different approach -- it calls computeScrollOffset ( ) to get the current location of x and y.": [
        "Relative_time",
        "Locale",
        "Execution",
        "Similarity",
        "Temporal_collocation",
        "Execute_plan",
        "Removing",
        "Execution",
        "Execution"
    ],
    "When the criteria for displaying an overscroll `` glow'' edge effect are met ( the display is zoomed in, x or y is out of bounds, and the app isn't already showing an overscroll ), the code sets up the overscroll glow effect and calls postInvalidateOnAnimation ( ) to trigger an invalidate on the view:": [
        "Temporal_collocation",
        "Self_motion",
        "Make_acquaintance",
        "Reasoning",
        "Location_of_light",
        "Objective_influence",
        "Contacting",
        "Opinion",
        "Time_vector",
        "Partitive",
        "Intentionally_create"
    ],
    "Here is the section of the code that performs the actual zoom:": [
        "Locative_relation",
        "Intentionally_act",
        "Actually_occurring_entity",
        "Part_whole"
    ],
    "This is the computeScrollSurfaceSize ( ) method that's called in the above snippet.": [
        "Execution",
        "Part_piece",
        "Execution"
    ],
    "It computes the current scrollable surface size, in pixels.": [
        "Temporal_collocation",
        "Part_inner_outer"
    ],
    "For example, if the entire chart area is visible, this is simply the current size of mContentRect.": [
        "Instance",
        "Locale",
        "Temporal_collocation",
        "Ranked_expectation",
        "Obviousness"
    ],
    "If the chart is zoomed in 200 % in both directions, the returned size will be twice as large horizontally and vertically.": [
        "Cardinal_numbers",
        "Quantity",
        "Dimension",
        "Event_instance",
        "Execution"
    ],
    "For another example of scroller usage, see the source code for the ViewPager class.": [
        "Instance",
        "Source_of_getting",
        "Increment",
        "Grasp"
    ],
    "It scrolls in response to flings, and uses scrolling to implement the `` snapping to page'' animation.": [
        "Gizmo",
        "Cause_to_fragment",
        "Response",
        "Using"
    ],
    "Dragging is the type of scrolling that occurs when a user drags her finger across the touch screen.": [
        "Temporal_collocation",
        "Quantity",
        "Observable_body_parts",
        "Cause_motion",
        "Event"
    ],
    "Simple dragging is often implemented by overriding onScroll ( ) in GestureDetector.OnGestureListener.": [
        "Cause_motion",
        "Execute_plan",
        "Frequency"
    ],
    "For more discussion of dragging, see Dragging and Scaling.": [
        "Cause_motion",
        "Perception_experience",
        "Discussion",
        "Increment",
        "Cause_motion"
    ],
    "Flinging is the type of scrolling that occurs when a user drags and lifts her finger quickly.": [
        "Temporal_collocation",
        "Cause_motion",
        "Building_subparts",
        "Observable_body_parts",
        "Speed",
        "Event"
    ],
    "After the user lifts her finger, you generally want to keep scrolling ( moving the viewport ), but decelerate until the viewport stops moving.": [
        "Observable_body_parts",
        "Activity_ongoing",
        "Motion",
        "Preventing",
        "Body_movement",
        "Desiring"
    ],
    "Flinging can be implemented by overriding onFling ( ) in GestureDetector.OnGestureListener, and by using a scroller object.": [
        "Execute_plan",
        "Likelihood",
        "Using"
    ],
    "This is the use case that is the topic of this lesson.": [
        "Instance",
        "Topic"
    ],
    "So let me do it for you: the correct hierarchy as suggested by google blogspot it is working fine for me: Check this out": [
        "Suitability",
        "Inspecting",
        "Intentionally_act",
        "Being_employed",
        "Desirability",
        "Locative_relation",
        "Grant_permission"
    ],
    "let me know if it helps": [
        "Assistance",
        "Awareness",
        "Grant_permission"
    ],
    "Try adding this piece of code before loading your viewPager": [
        "Part_piece",
        "Attempt"
    ],
    "Let me know if it helped fix the issue.": [
        "Point_of_dispute",
        "Resolve_problem",
        "Assistance",
        "Awareness",
        "Grant_permission"
    ],
    "Use android: fillViewport = `` true'' in ScrollView": [],
    "No need to use ScrollView and NestedScroolview Just use SliderLayout it will work perfectly.": [
        "Quantity",
        "Working_on",
        "Using",
        "Have_as_requirement"
    ],
    "add below dependency inside build.gradle -LRB- app level -RRB-": [
        "Reliance",
        "Rank"
    ],
    "layout": [],
    "Activity code:": [],
    "The accepted answer resulted in my fragments now being visible.": [
        "Part_piece",
        "Communication_response",
        "Temporal_collocation",
        "Obviousness",
        "Causation"
    ],
    "However, it left me with the problem that my NestedScrollView would no longer scroll !": [
        "Concessive",
        "Predicament",
        "Direction",
        "Temporal_collocation"
    ],
    "To overcome this, I have created a custom ViewPager -LRB- based on LINK -RRB- that calculates it's height in the required manner.": [
        "Custom",
        "Conduct",
        "Being_necessary",
        "Dimension",
        "Intentionally_create"
    ],
    "Here is full code for my CustomViewPager:": [
        "Locative_relation",
        "Fullness"
    ],
    "In your layout xml, you'd then just replace android.support.v4.view.ViewPager with org.example.CustomViewPager.": [
        "Temporal_collocation",
        "Take_place_of"
    ],
    "-LRB- I also removed the new android: fillViewport = `` true'' attribute from my NestedScrollView element as it seems this is now no longer needed. -RRB-": [
        "Temporal_collocation",
        "Quantity",
        "Ingredients",
        "Appearance",
        "Age",
        "Removing"
    ],
    "Use nestedScrollview and set the property of nestedscrollenabled as true and I think you will do it.": [
        "Possession",
        "Intentionally_act",
        "Intentionally_create",
        "Awareness"
    ],
    "Android Gallery with pinch zoom": [
        "Locale_by_use"
    ],
    "This lesson describes how to use touch gestures to drag and scale on-screen objects, using onTouchEvent ( ) to intercept touch events.": [
        "Quantity",
        "Cause_motion",
        "Using",
        "Event",
        "Gesture",
        "Using"
    ],
    "If you are targeting Android 3.0 or higher, you can use the built-in drag-and-drop event listeners with View.OnDragListener, as described in Drag and Drop.": [
        "Position_on_a_scale",
        "Cause_motion",
        "Change_position_on_a_scale",
        "Event",
        "Communicate_categorization",
        "Using",
        "Capability"
    ],
    "A common operation for a touch gesture is to use it to drag an object across the screen.": [
        "Quantity",
        "Gesture",
        "Cause_motion",
        "Using",
        "Using"
    ],
    "The following snippet lets the user drag an on-screen image.": [
        "Similarity",
        "Part_piece",
        "Relative_time",
        "Cause_motion",
        "Make_possible_to_do"
    ],
    "The following snippet enables a user to drag an object around on the screen.": [
        "Part_piece",
        "Relative_time",
        "Locative_relation",
        "Cause_motion"
    ],
    "It records the initial position of the active pointer, calculates the distance the pointer traveled, and moves the object to the new position.": [
        "Range",
        "Version_sequence",
        "Being_active",
        "Age",
        "Travel",
        "Motion",
        "Recording"
    ],
    "It correctly manages the possibility of additional pointers, as described above.": [
        "Increment",
        "Communicate_categorization",
        "Likelihood",
        "Operating_a_system"
    ],
    "Notice that the snippet uses the getActionMasked ( ) method.": [
        "Part_piece",
        "Execution",
        "Using",
        "Becoming_aware"
    ],
    "You should always use this method ( or better yet, the compatibility version MotionEventCompat.getActionMasked ( ) ) to retrieve the action of a MotionEvent.": [
        "Execution",
        "Compatibility",
        "Intentionally_act",
        "Desirability",
        "Frequency",
        "Being_obligated",
        "Using"
    ],
    "Unlike the older getAction ( ) method, getActionMasked ( ) is designed to work with multiple pointers.": [
        "Execution",
        "Being_employed",
        "Age",
        "Quantity",
        "Coming_up_with"
    ],
    "It returns the masked action being performed, without including the pointer index bits.": [
        "Wearing",
        "Intentionally_act",
        "Intentionally_act",
        "Inclusion",
        "Execution"
    ],
    "The previous section showed an example of dragging an object around the screen.": [
        "Instance",
        "Part_whole",
        "Time_vector",
        "Cause_motion",
        "Evidence"
    ],
    "Another common scenario is panning, which is when a user's dragging motion causes scrolling in both the x and y axes.": [
        "Seeking",
        "Temporal_collocation",
        "Gesture",
        "Increment",
        "Cause_motion",
        "Causation"
    ],
    "The above snippet directly intercepted the MotionEvent actions to implement dragging.": [
        "Intentionally_act",
        "Gizmo",
        "Part_piece",
        "Intercepting",
        "Cause_motion"
    ],
    "The snippet in this section takes advantage of the platform's built-in support for common gestures.": [
        "Part_piece",
        "Part_whole",
        "Gesture",
        "Removing",
        "Taking_sides"
    ],
    "It overrides onScroll ( ) in GestureDetector.SimpleOnGestureListener.": [],
    "To provide a little more context, onScroll ( ) is called when a user is dragging a finger to pan the content.": [
        "Supply",
        "Temporal_collocation",
        "Observable_body_parts",
        "Seeking",
        "Quantity",
        "Increment",
        "Cause_motion",
        "Execution"
    ],
    "onScroll ( ) is only called when a finger is down ; as soon as the finger is lifted from the screen, the gesture either ends, or a fling gesture is started ( if the finger was moving with some speed just before it was lifted ).": [
        "Sole_instance",
        "Temporal_collocation",
        "Observable_body_parts",
        "Ingestion",
        "Gesture",
        "Intoxicants",
        "Cause_to_end",
        "Relational_quantity",
        "Process_end",
        "Motion",
        "Activity_start",
        "Execution"
    ],
    "For more discussion of scrolling vs. flinging, see Animating a Scroll Gesture.": [
        "Gesture",
        "Perception_experience",
        "Discussion",
        "Increment"
    ],
    "Here is the snippet for onScroll ( ):": [
        "Locative_relation",
        "Part_piece"
    ],
    "The implementation of onScroll ( ) scrolls the viewport in response to the touch gesture:": [
        "Quantity",
        "Gesture",
        "Execute_plan",
        "Response"
    ],
    "As discussed in Detecting Common Gestures, GestureDetector helps you detect common gestures used by Android such as scrolling, flinging, and long press.": [
        "Gesture",
        "Gesture",
        "Duration_attribute",
        "Cause_motion",
        "Becoming_aware",
        "Topic",
        "Assistance",
        "Using",
        "Perception_experience"
    ],
    "For scaling, Android provides ScaleGestureDetector.": [
        "Supply"
    ],
    "GestureDetector and ScaleGestureDetector can be used together when you want a view to recognize additional gestures.": [
        "Collaboration",
        "Temporal_collocation",
        "Perception_active",
        "Gesture",
        "Increment",
        "Likelihood",
        "Becoming_aware",
        "Possession",
        "Using"
    ],
    "To report detected gesture events, gesture detectors use listener objects passed to their constructors.": [
        "Gesture",
        "Event",
        "Traversing",
        "Using",
        "Perception_experience"
    ],
    "Android provides ScaleGestureDetector.SimpleOnScaleGestureListener as a helper class that you can extend if you don't care about all of the reported events.": [
        "Intentionally_act",
        "Event",
        "Supply",
        "Capability",
        "Expansion",
        "Quantity"
    ],
    "Here is a snippet that illustrates the basic ingredients involved in scaling.": [
        "Locative_relation",
        "Part_piece",
        "Ingredients",
        "Being_necessary",
        "Participation",
        "Evidence"
    ],
    "Here is a more complex example from the InteractiveChart sample provided with this class.": [
        "Locative_relation",
        "Instance",
        "Increment",
        "Supply"
    ],
    "The InteractiveChart sample supports both scrolling ( panning ) and scaling with multiple fingers, using the ScaleGestureDetector `` span'' ( getCurrentSpanX/Y ) and `` focus'' ( getFocusX/Y ) features:": [
        "Quantity",
        "Seeking",
        "Observable_body_parts",
        "Quantity",
        "Using",
        "Evidence"
    ],
    "In a drag ( or scroll ) operation, the app has to keep track of the original pointer ( finger ), even if additional fingers get placed on the screen.": [
        "Cause_motion",
        "Using",
        "Observable_body_parts",
        "Observable_body_parts",
        "Increment",
        "Execution",
        "Required_event",
        "Activity_ongoing"
    ],
    "For example, imagine that while dragging the image around, the user places a second finger on the touch screen and lifts the first finger.": [
        "Instance",
        "Similarity",
        "Measure_duration",
        "Quantity",
        "Body_movement",
        "Observable_body_parts",
        "Ordinal_numbers",
        "Cause_motion",
        "Locative_relation",
        "Awareness"
    ],
    "If your app is just tracking individual pointers, it will regard the second pointer as the default and move the image to that location.": [
        "People",
        "Measure_duration",
        "Similarity",
        "Locale",
        "Motion",
        "Cotheme",
        "Categorization"
    ],
    "To prevent this from happening, your app needs to distinguish between the original pointer and any follow-on pointers.": [
        "Preventing",
        "Event",
        "Quantity",
        "Differentiation",
        "Required_event"
    ],
    "To do this, it tracks the ACTION_POINTER_DOWN and ACTION_POINTER_UP events described in Handling Multi-Touch Gestures.": [
        "Gesture",
        "Intentionally_act",
        "Event",
        "Communicate_categorization"
    ],
    "ACTION_POINTER_DOWN and ACTION_POINTER_UP are passed to the onTouchEvent ( ) callback whenever a secondary pointer goes down or up.": [
        "Ingestion",
        "Locative_relation",
        "Traversing",
        "Becoming"
    ],
    "In the ACTION_POINTER_UP case, the example extracts this index and ensures that the active pointer ID is not referring to a pointer that is no longer touching the screen.": [
        "Instance",
        "Instance",
        "Being_active",
        "Temporal_collocation",
        "Stimulus_focus",
        "Removing"
    ],
    "If it is, the app selects a different pointer to be active and saves its current X and Y position.": [
        "Being_active",
        "Similarity",
        "Temporal_collocation",
        "Choosing"
    ],
    "Since this saved position is used in the ACTION_MOVE case to calculate the distance to move the onscreen object, the app will always calculate the distance to move using data from the correct pointer.": [
        "Instance",
        "Range",
        "Motion",
        "Using",
        "Suitability",
        "Frequency",
        "Using"
    ],
    "and dont forget to set scaleType property to matrix of ImageView tag like:": [
        "Remembering_information",
        "Possession",
        "Intentionally_create"
    ],
    "and the variables used are:": [
        "Using"
    ],
    "I made my own custom imageview with pinch to zoom.": [
        "Custom",
        "Possession",
        "Causation"
    ],
    "There is no limits/borders on LINKs code, so user can drag the image off the screen.": [
        "Quantity",
        "Make_cognitive_connection",
        "Capability",
        "Similarity",
        "Existence",
        "Cause_motion"
    ],
    "This will fix it.": [],
    "Here is the CustomImageView class:": [
        "Locative_relation"
    ],
    "This is how you can use it in your activity:": [
        "Intentionally_act",
        "Using",
        "Capability"
    ],
    "And layout:": [],
    "You can use this class: LINK": [
        "Capability",
        "Using"
    ],
    "Add bellow line in build.gradle:": [
        "Shapes"
    ],
    "or": [],
    "In Java file:": [],
    "When learning a new concept I don't like using libraries or code dumps.": [
        "Temporal_collocation",
        "Education_teaching",
        "Buildings",
        "Age",
        "Intentionally_act",
        "Using",
        "Experiencer_focus"
    ],
    "I found a good description LINK and in the LINK of how to resize an image by pinching.": [
        "Communicate_categorization",
        "Similarity",
        "Relational_quantity",
        "Cognitive_connection",
        "Manipulation",
        "Locating"
    ],
    "This answer is a slightly modified summary.": [
        "Communication_response",
        "Cause_change"
    ],
    "You will probably want to add more functionality later, but it will help you get started.": [
        "Activity_start",
        "Increment",
        "Likelihood",
        "Time_vector",
        "Execution",
        "Assistance",
        "Cause_change_of_position_on_a_scale",
        "Desiring"
    ],
    "The ImageView just uses the app logo since it is already available.": [
        "Time_vector",
        "Using"
    ],
    "You can replace it with any image you like, though.": [
        "Concessive",
        "Quantity",
        "Similarity",
        "Experiencer_focus",
        "Capability",
        "Take_place_of"
    ],
    "We use a ScaleGestureDetector on the activity to listen to touch events.": [
        "Event",
        "Stimulus_focus",
        "Perception_active",
        "Intentionally_act",
        "Using"
    ],
    "When a scale -LRB- ie, pinch -RRB- gesture is detected, then the scale factor is used to resize the ImageView.": [
        "Temporal_collocation",
        "Quantity",
        "Gesture",
        "Using",
        "Temporal_collocation",
        "Becoming_aware"
    ],
    "You can limit the size of the scaling with something like": [
        "Capability"
    ],
    "Thanks again to LINK": [],
    "You will probably want to do other things like panning and scaling to some focus point.": [
        "Seeking",
        "Relational_quantity",
        "Place_weight_on",
        "Increment",
        "Locale",
        "Likelihood",
        "Intentionally_act",
        "Desiring"
    ],
    "You can develop these things yourself, but if you would like to use a pre-made custom view, copy LINK into your project and use it like a normal ImageView.": [
        "Custom",
        "Opinion",
        "Project",
        "Mental_property",
        "Capability",
        "Cause_to_make_progress",
        "Using",
        "Duplication",
        "Experiencer_focus"
    ],
    "It worked well for me and I only ran into one LINK.": [
        "Working_on",
        "Sole_instance",
        "Cardinal_numbers",
        "Execution"
    ],
    "I plan to further edit the code to remove the warning and the parts that I don't need.": [
        "Increment",
        "Part_whole",
        "Intentionally_act",
        "Have_as_requirement",
        "Removing"
    ],
    "You can do the same.": [
        "Identicality",
        "Capability",
        "Intentionally_act"
    ],
    "I made code for imageview with pinch to zoom using zoomageview.": [
        "Using",
        "Causation"
    ],
    "so user can drag the image off the screen and zoom-In, zoom-out the image.": [
        "Similarity",
        "Capability",
        "Cause_motion"
    ],
    "You can follow this link to get the Step By Step Code and also given Output Screenshot.": [
        "Intentionally_act",
        "Giving",
        "Capability",
        "Execution",
        "Relative_time"
    ],
    "Custom zoom view in Kotlin": [
        "Custom",
        "Opinion"
    ]
}