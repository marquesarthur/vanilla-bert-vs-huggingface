{
  "session_uid": "Tarcisio",
  "type": "FROM_PARTICIPANT",
  "items": [
    {
      "id": "eye-gazing-tag-17",
      "tag": "SPAN",
      "text": "Call this method, passing in the outer most ViewGroup that you want a screen shot of:",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    },
    {
      "id": "uid-1518",
      "tag": "PRE",
      "text": "public Bitmap screenShot(View view) {\n    Bitmap bitmap = Bitmap.createBitmap(view.getWidth(),\n            view.getHeight(), Config.ARGB_8888);\n    Canvas canvas = new Canvas(bitmap);\n    view.draw(canvas);\n    return bitmap;\n}\n",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    },
    {
      "id": "uid-1519",
      "tag": "CODE",
      "text": "public Bitmap screenShot(View view) {\n    Bitmap bitmap = Bitmap.createBitmap(view.getWidth(),\n            view.getHeight(), Config.ARGB_8888);\n    Canvas canvas = new Canvas(bitmap);\n    view.draw(canvas);\n    return bitmap;\n}\n",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    },
    {
      "id": "eye-gazing-tag-63",
      "tag": "SPAN",
      "text": "Getting a bitmap cache from a layout or a view by doing something like\nFirst you gotta setDrawingCacheEnabled to a layout(a linearlayout or relativelayout, or a view)",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    },
    {
      "id": "eye-gazing-tag-70",
      "tag": "SPAN",
      "text": "Currently the recommended API for making screenshots is the PixelCopy class available from API 24 (but the methods which accept Window parameter are available from API 26 == Android 8.0 Oreo).",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    },
    {
      "id": "eye-gazing-tag-71",
      "tag": "SPAN",
      "text": "Here is a sample Kotlin code for retrieving a Bitmap:",
      "href": "How to programmatically take a screenshot on Android? - Stack Overflow"
    }
  ]
}