{
  "session_uid": "Tarcisio",
  "type": "FROM_PARTICIPANT",
  "items": [
    {
      "id": "eye-gazing-tag-48",
      "tag": "SPAN",
      "text": "A camera preview class is a SurfaceView that can display the live image\ndata coming from a camera, so users can frame and capture a picture or video.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-49",
      "tag": "SPAN",
      "text": "The following example code demonstrates how to create a basic camera preview class that can be\nincluded in a View layout.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-50",
      "tag": "SPAN",
      "text": "This class implements SurfaceHolder.Callback in order to capture the callback events\nfor creating and destroying the view, which are needed for assigning the camera preview input.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-51",
      "tag": "SPAN",
      "text": "If you want to set a specific size for your camera preview, set this in the surfaceChanged() method as noted in the comments above.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-52",
      "tag": "SPAN",
      "text": "When setting preview size, you\nmust use values from getSupportedPreviewSizes().",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-53",
      "tag": "SPAN",
      "text": "Do not set arbitrary values in the setPreviewSize() method.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-54",
      "tag": "SPAN",
      "text": "Note:\n  With the introduction of the \n  Multi-Window feature in Android 7.0 (API level 24) and higher, you can no\n  longer assume the aspect ratio of the preview is the same as your activity\n  even after calling setDisplayOrientation().",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-55",
      "tag": "SPAN",
      "text": "  Depending on the window size and aspect ratio, you may may have to fit a wide\n  camera preview into a portrait-orientated layout, or vice versa, using a\n  letterbox layout.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-67",
      "tag": "SPAN",
      "text": "Starting in Android 2.2 (API Level 8), you can use the setDisplayOrientation() method to set the\nrotation of the preview image.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-68",
      "tag": "SPAN",
      "text": "In order to change preview orientation as the user re-orients the\nphone, within the surfaceChanged() method of your preview class, first stop the preview with Camera.stopPreview() change the orientation and then\nstart the preview again with Camera.startPreview().",
      "href": "Camera API  |  Android Developers"
    }
  ]
}