{
    "session_uid": "Tarcisio",
    "type": "FROM_PARTICIPANT",
    "items": [
        {
            "id": "uid-1488",
            "tag": "H4",
            "text": "filter",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "uid-1489",
            "tag": "PRE",
            "text": "Stream<T>\u00a0filter(Predicate<?\nsuper T>\u00a0predicate)",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-397",
            "tag": "SPAN",
            "text": "\n This is an intermediate\n operation.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-33",
            "tag": "SPAN",
            "text": "This is an intermediate\n operation.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-54",
            "tag": "SPAN",
            "text": " The following example illustrates an aggregate operation using\n Stream and IntStream:\n\n \n     int sum = widgets.stream()\n                      .filter(w -> w.getColor() == RED)\n                      .mapToInt(w -> w.getWeight())\n                      .sum();\n \n\n In this example, widgets is a Collection<Widget>.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-18",
            "tag": "SPAN",
            "text": " The following example illustrates an aggregate operation using\n Stream and IntStream:\n\n \n     int sum = widgets.stream()\n                      .filter(w -> w.getColor() == RED)\n                      .mapToInt(w -> w.getWeight())\n                      .sum();\n \n\n In this example, widgets is a Collection<Widget>.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-78",
            "tag": "SPAN",
            "text": " We create\n a stream of Widget objects via Collection.stream(),\n filter it to produce a stream containing only the red widgets, and then\n transform it into a stream of int values representing the weight of\n each red widget.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-3",
            "tag": "SPAN",
            "text": " We create\n a stream of Widget objects via Collection.stream(),\n filter it to produce a stream containing only the red widgets, and then\n transform it into a stream of int values representing the weight of\n each red widget.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-21",
            "tag": "SPAN",
            "text": " We create\n a stream of Widget objects via Collection.stream(),\n filter it to produce a stream containing only the red widgets, and then\n transform it into a stream of int values representing the weight of\n each red widget.",
            "href": "Stream (Java Platform SE 8 )"
        },
        {
            "id": "eye-gazing-tag-57",
            "tag": "SPAN",
            "text": " We create\n a stream of Widget objects via Collection.stream(),\n filter it to produce a stream containing only the red widgets, and then\n transform it into a stream of int values representing the weight of\n each red widget.",
            "href": "Stream (Java Platform SE 8 )"
        }
    ]
}