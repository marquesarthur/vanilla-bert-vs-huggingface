{
  "session_uid": "katharine",
  "type": "FROM_PARTICIPANT",
  "items": [
    {
      "id": "eye-gazing-tag-3103",
      "tag": "SPAN",
      "text": "For developing a customized camera feature, check\nout the Building a Camera App section.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-3122",
      "tag": "SPAN",
      "text": "Create a Preview Class - Create a camera preview class that extends SurfaceView and implements the SurfaceHolder interface.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-3123",
      "tag": "SPAN",
      "text": "This\nclass previews the live images from the camera.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-3126",
      "tag": "SPAN",
      "text": "Capture and Save Files - Setup the code for capturing pictures or\nvideos and saving the output.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-48",
      "tag": "SPAN",
      "text": "A camera preview class is a SurfaceView that can display the live image\ndata coming from a camera, so users can frame and capture a picture or video.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-50",
      "tag": "SPAN",
      "text": "This class implements SurfaceHolder.Callback in order to capture the callback events\nfor creating and destroying the view, which are needed for assigning the camera preview input.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-64",
      "tag": "SPAN",
      "text": "This example layout\nspecifies a horizontal (landscape) layout and the code below fixes the orientation of the\napplication to landscape.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-65",
      "tag": "SPAN",
      "text": "For simplicity in rendering a camera preview, you should change your\napplication's preview activity orientation to landscape by adding the following to your\nmanifest.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-67",
      "tag": "SPAN",
      "text": "Starting in Android 2.2 (API Level 8), you can use the setDisplayOrientation() method to set the\nrotation of the preview image.",
      "href": "Camera API  |  Android Developers"
    },
    {
      "id": "eye-gazing-tag-68",
      "tag": "SPAN",
      "text": "In order to change preview orientation as the user re-orients the\nphone, within the surfaceChanged() method of your preview class, first stop the preview with Camera.stopPreview() change the orientation and then\nstart the preview again with Camera.startPreview().",
      "href": "Camera API  |  Android Developers"
    }
  ]
}