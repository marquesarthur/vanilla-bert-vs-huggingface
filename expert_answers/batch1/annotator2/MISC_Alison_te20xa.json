{
    "session_uid": "Alison",
    "type": "FROM_PARTICIPANT",
    "items": [
        {
            "id": "eye-gazing-tag-28",
            "tag": "SPAN",
            "text": "When we want to display a series of items from a list using a custom representation of the items, we need to use our own custom XML layout for each item.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-29",
            "tag": "SPAN",
            "text": "To do this, we need to create our own custom ArrayAdapter class.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-33",
            "tag": "SPAN",
            "text": "We can create a custom ListView of User objects by subclassing ArrayAdapter to describe how to translate the object into a view within that class and then using it like any other adapter.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-35",
            "tag": "SPAN",
            "text": "Next, we need to define the adapter to describe the process of converting the Java object to a View (in the getView method).",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-36",
            "tag": "SPAN",
            "text": "The naive approach to this (without any view caching) looks like the following:",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-37",
            "tag": "SPAN",
            "text": "That adapter has a constructor and a getView() method to describe the translation between the data item and the View to display.\ngetView() is the method that returns the actual view used as a row within the ListView at a particular position.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-19",
            "tag": "SPAN",
            "text": "The simplest adapter to use is called an ArrayAdapter because the adapter converts an ArrayList of objects into View items loaded into the ListView container.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-68",
            "tag": "SPAN",
            "text": "In Android development, any time we want to show a vertical list of scrollable items we will use a LisView which has data populated using an Adapter.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        },
        {
            "id": "eye-gazing-tag-21",
            "tag": "SPAN",
            "text": "The simplest adapter to use is called an ArrayAdapter because the adapter converts an ArrayList of objects into View items loaded into the ListView container.",
            "href": "Using an ArrayAdapter with ListView | CodePath Android Cliffnotes"
        }
    ]
}